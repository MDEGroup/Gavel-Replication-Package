id,readme,Dependency management,Support,Testing,Reporting,Mobile CI,Community,Security,Chat,IDEs,Monitoring,Code review,Code quality,Publishing,Project management,API management,Open Source management,Mobile,Code search,GitHub Sponsors,Continuous integration,Deployment,Container CI,Localization,Utilities,Desktop tools,AI Assisted,Time tracking,Code Scanning Ready,Backup Utilities,Learning
actions/checkout,"- uses: actions/checkout@v3
  with:
    repository: \'\'

    ref: \'\'

    token: \'\'

    ssh-key: \'\'

    ssh-known-hosts: \'\'

    ssh-strict: \'\'

    persist-credentials: \'\'

    path: \'\'

    clean: \'\'

    sparse-checkout: \'\'

    sparse-checkout-cone-mode: \'\'

    fetch-depth: \'\'

    lfs: \'\'

    submodules: \'\'

    set-safe-directory: \'\'

    github-server-url: \'\'

- uses: actions/checkout@v3
  with:
    sparse-checkout: .

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      .github
      src

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false

- uses: actions/checkout@v3
  with:
    fetch-depth: 0

- uses: actions/checkout@v3
  with:
    ref: my-branch

- uses: actions/checkout@v3
  with:
    fetch-depth: 2
- run: git checkout HEAD^

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v3
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools

- uses: actions/checkout@v3
  with:
    ref: ${{ github.event.pull_request.head.sha }}

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m ""generated""
          git push
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/setup-python,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4
  with:
    python-version: '3.10' 
- run: python my_script.py

steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4 
  with:
    python-version: 'pypy3.9' 
- run: python my_script.py

steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4
  with:
    python-version: '3.9'
    cache: 'pip' # caching pip dependencies
- run: pip install -r requirements.txt
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
avsm/setup-ocaml,"name: Main workflow

on:
  pull_request:
  push:
  schedule:
    - cron: 0 1 * * MON

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - ""5.0""

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tree
        uses: actions/checkout@v3

      - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      - run: opam exec -- dune build

      - run: opam exec -- dune runtest

- name: Set-up OCaml ${{ matrix.ocaml-compiler }}
  uses: ocaml/setup-ocaml@v2
  with:
    ocaml-compiler: ${{ matrix.ocaml-compiler }}

steps:
  - uses: ocaml/setup-ocaml@v2
  - uses: ocaml/setup-ocaml@<SHA>
  - uses: ocaml/setup-ocaml@v2.0.0
  - uses: ocaml/setup-ocaml@master

version: 2
updates:
  - package-ecosystem: github-actions
    directory: /
    schedule:
      interval: weekly
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions/upload-artifact,"steps:
- uses: actions/checkout@v3

- run: mkdir -p path/to/artifact

- run: echo hello > path/to/artifact/world.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/world.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/ # or path/to/artifact

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/**/[abc]rtifac?/*

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: |
      path/output/bin/
      path/output/test-results
      !path/**/*.tmp

path/to/*/directory/foo?.txt =>
    \xe2\x88\x9f path/to/some/directory/foo1.txt
    \xe2\x88\x9f path/to/some/directory/foo2.txt
    \xe2\x88\x9f path/to/other/directory/foo1.txt

would be flattened and uploaded as =>
    \xe2\x88\x9f some/directory/foo1.txt
    \xe2\x88\x9f some/directory/foo2.txt
    \xe2\x88\x9f other/directory/foo1.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/
    if-no-files-found: error # \'warn\' or \'ignore\' are also available, defaults to `warn`

- uses: actions/upload-artifact@v3
  if: failure()
  with:
    name: my-artifact
    path: path/to/artifact/

- uses: actions/upload-artifact@v3
  with:
    path: path/to/artifact/world.txt

- run: echo hi > world.txt
- uses: actions/upload-artifact@v3
  with:
    path: world.txt

- run: echo howdy > extra-file.txt
- uses: actions/upload-artifact@v3
  with:
    path: extra-file.txt

- run: echo hello > world.txt
- uses: actions/upload-artifact@v3
  with:
    path: world.txt

    strategy:
      matrix:
          node-version: [8.x, 10.x, 12.x, 13.x]
    steps:
        - name: Create a file
          run: echo ${{ matrix.node-version }} > my_file.txt
        - name: Accidentally upload to the same artifact via multiple jobs
          uses: actions/upload-artifact@v3
          with:
              name: my-artifact
              path: ${{ github.workspace }}

          uses: actions/upload-artifact@v3
          with:
              name: my-artifact ${{ matrix.node-version }}
              path: ${{ github.workspace }}

  - run: |
      mkdir -p ~/new/artifact
      echo hello > ~/new/artifact/world.txt
  - uses: actions/upload-artifact@v3
    with:
      name: Artifacts-V3
      path: ~/new/**/*

    env:
      name: my-artifact
    steps:
    - run: |
        mkdir -p ${{ github.workspace }}/artifact
        echo hello > ${{ github.workspace }}/artifact/world.txt
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.name }}-name
        path: ${{ github.workspace }}/artifact/**/*

    steps:
    - run: | 
        mkdir testing
        echo ""This is a file to upload"" > testing/file.txt
        echo ""artifactPath=testing/file.txt"" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ${{ env.artifactPath }} # this will resolve to testing/file.txt at runtime

  - name: Create a file
    run: echo ""I won\'t live long"" > my_file.txt

  - name: Upload Artifact
    uses: actions/upload-artifact@v3
    with:
      name: my-artifact
      path: my_file.txt
      retention-days: 5

  - name: Tar files
    run: tar -cvf my_files.tar /path/to/my/directory

  - name: Upload Artifact
    uses: actions/upload-artifact@v3
    with:
      name: my-artifact
      path: my_files.tar
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peaceiris/actions-gh-pages,"- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch name to trigger deployment
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

      - name: Build
        run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    personal_token: ${{ secrets.PERSONAL_TOKEN }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_branch: your-branch  # default: gh-pages

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./out  # default: public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    destination_dir: subdir

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    exclude_assets: \'.github,exclude-file1,exclude-file2\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}   # Recommended for this usage
    exclude_assets: \'\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    exclude_assets: \'.github,exclude-file.txt,exclude-dir/**.txt\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    cname: github.com

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    enable_jekyll: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    allow_empty_commit: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    keep_files: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    external_repository: username/external-repository
    publish_branch: your-branch  # default: gh-pages
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    force_orphan: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    user_name: \'github-actions[bot]\'
    user_email: \'github-actions[bot]@users.noreply.github.com\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    commit_message: ${{ github.event.head_commit.message }}

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    full_commit_message: ${{ github.event.head_commit.message }}

name: GitHub Pages

on:
  push:
    branches:
      - main
    tags:
      - \'v*.*.*\'

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Some build

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, \'refs/tags/\')
        run: |
          echo ""DEPLOY_TAG_NAME=deploy-${TAG_NAME}"" >> ""${GITHUB_OUTPUT}""

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: \'Deployment ${{ github.ref_name }}\'

$ # On a main branch
$ git tag -a ""v1.2.3"" -m ""Release v1.2.3""
$ git push origin ""v1.2.3""

$ # After deployment
$ git fetch origin
$ git tag
deploy-v1.2.3  # Tag on the gh-pages branch
v1.2.3         # Tag on the main branch

ssh-keygen -t rsa -b 4096 -C ""$(git config user.email)"" -f gh-pages -N """"

/usr/bin/git push origin gh-pages
remote: Write access to repository not granted.
fatal: unable to access \'https://github.com/username/repository.git/\': The requested URL returned error: 403
Error: Action failed with ""The process \'/usr/bin/git\' failed with exit code 128""

permissions:
  contents: write

version: 2
updates:
- package-ecosystem: ""github-actions""
  directory: ""/""
  schedule:
    interval: ""daily""
  labels:
  - ""CI/CD""
  commit-message:
    prefix: ci

name: GitHub Pages

on:
  push:
    branches:
      - main
  schedule:
    - cron: ""22 22 * * *""
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
    ...

- uses: peaceiris/actions-gh-pages@main # Bad example!
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- uses: peaceiris/actions-gh-pages@v3.9.3 # tag: Better
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # commit hash of v3.9.3: Best!
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

git clone https://github.com/peaceiris/actions-gh-pages.git
cd ./actions-gh-pages
git checkout v3.9.3
nvm install
nvm use
npm i -g npm
npm ci
npm run build
git diff ./lib/index.js # We will get zero exit code

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run format
      - run: npm run test
      - run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Get yarn cache
        id: yarn-cache
        run: echo ""YARN_CACHE_DIR=$(yarn cache dir)"" >> ""${GITHUB_OUTPUT}""

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(\'**/yarn.lock\') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn export

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm test
      - run: npm run generate

      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist


name: GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - \'.github/workflows/deploy.yml\'
      - \'website/**\'
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Get yarn cache
        id: yarn-cache
        run: echo ""YARN_CACHE_DIR=$(yarn cache dir)"" >> ""${GITHUB_OUTPUT}""

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-website-${{ hashFiles(\'**/yarn.lock\') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: \'3.8\'

      - name: Upgrade pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo ""dir=$(pip cache dir)"" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles(\'**/requirements.txt\') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - run: mkdocs build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: \'0.4.8\'

      - run: mdbook build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 -b beta _flutter
          echo ""${GITHUB_WORKSPACE}/_flutter/bin"" >> ${GITHUB_PATH}

      - name: Install
        run: |
          flutter config --enable-web
          flutter pub get

      - name: Build
        run: flutter build web

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Setup Elm
        run: npm install elm --global

      - name: Make
        run: elm make --optimize src/Main.elm

      - name: Move files
        run: |
          mkdir ./public
          mv ./index.html ./public/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: macos-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/Publish_build
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles(\'**/Package.resolved\') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Setup JohnSundell/Publish
        run: |
          cd ${HOME}
          export PUBLISH_VERSION=""0.7.0""
          git clone https://github.com/JohnSundell/Publish.git
          cd ./Publish && git checkout ${PUBLISH_VERSION}
          mv ~/Publish_build .build || true
          swift build -c release
          cp -r .build ~/Publish_build || true
          echo ""${HOME}/Publish/.build/release"" >> ${GITHUB_PATH}

      - run: publish-cli generate

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Output
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
appleboy/ssh-action,"name: remote ssh command
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: whoami

======CMD======
whoami
======END======
out: ***
==============================================
\xe2\x9c\x85 Successfully executed commands to all host.
==============================================

ssh-keygen -t rsa -b 4096 -C ""your_email@example.com""

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

cat .ssh/id_rsa.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

cat .ssh/id_ed25519.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

clip < ~/.ssh/id_rsa

clip < ~/.ssh/id_ed25519

ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey]

CASignatureAlgorithms +ssh-rsa

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

- name: executing remote ssh commands using password
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    port: ${{ secrets.PORT }}
    script: whoami

- name: executing remote ssh commands using ssh key
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    script: whoami

- name: multiple command
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    script: |
      whoami
      ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
-     host: ""foo.com""
+     host: ""foo.com,bar.com""
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
      script: |
        whoami
        ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
-     host: ""foo.com""
+     host: ""foo.com:1234,bar.com:5678""
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      script: |
        whoami
        ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ""foo.com,bar.com""
+     sync: true
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
      script: |
        whoami
        ls -al

  - name: pass environment
    uses: appleboy/ssh-action@v1.0.0
+   env:
+     FOO: ""BAR""
+     BAR: ""FOO""
+     SHA: ${{ github.sha }}
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     envs: FOO,BAR,SHA
      script: |
        echo ""I am $FOO""
        echo ""I am $BAR""
        echo ""sha: $SHA""

  - name: stop script if command error
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     script_stop: true
      script: |
        mkdir abc/def
        ls -al

======CMD======
mkdir abc/def
ls -al

======END======
2019/11/21 01:16:21 Process exited with status 1
err: mkdir: cannot create directory \xe2\x80\x98abc/def\xe2\x80\x99: No such file or directory

+--------+       +----------+      +-----------+
| Laptop | <-->  | Jumphost | <--> | FooServer |
+--------+       +----------+      +-----------+

Host Jumphost
  HostName Jumphost
  User ubuntu
  Port 22
  IdentityFile ~/.ssh/keys/jump_host.pem

Host FooServer
  HostName FooServer
  User ubuntu
  Port 22
  ProxyCommand ssh -q -W %h:%p Jumphost

  - name: ssh proxy command
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     proxy_host: ${{ secrets.PROXY_HOST }}
+     proxy_username: ${{ secrets.PROXY_USERNAME }}
+     proxy_key: ${{ secrets.PROXY_KEY }}
+     proxy_port: ${{ secrets.PROXY_PORT }}
      script: |
        mkdir abc/def
        ls -al

  - name: ssh key passphrase
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     passphrase: ${{ secrets.PASSPHRASE }}
      script: |
        whoami
        ls -al

ssh example.com ssh-keygen -l -f /etc/ssh/ssh_host_ed25519_key.pub | cut -d \' \' -f2

  - name: ssh key passphrase
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     fingerprint: ${{ secrets.FINGERPRINT }}
      script: |
        whoami
        ls -al
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
sobolevn/misspell-fixer-action,"- uses: actions/checkout@v2
- uses: sobolevn/misspell-fixer-action@master
- uses: peter-evans/create-pull-request@v2.4.4
  with:
    token: ${{ secrets.GITHUB_TOKEN }}

- uses: sobolevn/misspell-fixer-action@master
  with:
    options: '-rsvn src/'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0
peter-evans/create-pull-request,"      - uses: actions/checkout@v3


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        env:
          https_proxy: http://<proxy_address>:<port>

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo ""Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}""
          echo ""Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}""

      - run: |
          rm -rf temp-dir
          rm temp-file.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          add-paths: |
            *.java
            docs/*.md

    steps:
      - uses: actions/checkout@v3
      - name: Create commits
        run: |
          git config user.name \'Peter Evans\'
          git config user.email \'peter-evans@users.noreply.github.com\'
          date +%s > report.txt
          git commit -am ""Modify tracked file during workflow""
          date +%s > new-report.txt
          git add -A
          git commit -m ""Add untracked file during workflow""
      - name: Uncommitted change
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5

      - name: Create or Update Project Card
        if: ${{ steps.cpr.outputs.pull-request-number }}
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}

jobs:
  createPullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make changes to pull request
        run: date +%s > report.txt

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: Update report
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: example-patches
          delete-branch: true
          title: \'[Example] Update report\'
          body: |
            Update report
            - Updated with *today\'s* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: peter-evans
          reviewers: peter-evans
          team-reviewers: |
            developers
            qa-team
          milestone: 1
          draft: false
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/cache,"name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache Primes
      id: cache-primes
      uses: actions/cache@v3
      with:
        path: prime-numbers
        key: ${{ runner.os }}-primes

    - name: Generate Prime Numbers
      if: steps.cache-primes.outputs.cache-hit != \'true\'
      run: /generate-primes.sh -d prime-numbers

    - name: Use Prime Numbers
      run: /primes.sh -d prime-numbers

name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Restore cached Primes
      id: cache-primes-restore
      uses: actions/cache/restore@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ runner.os }}-primes
    .
    . //intermediate workflow steps
    .
    - name: Save Primes
      id: cache-primes-save
      uses: actions/cache/save@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}

  - uses: actions/cache@v3
    with:
      path: |
        path/to/dependencies
        some/other/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Get Date
    id: get-date
    run: |
      echo ""date=$(/bin/date -u ""+%Y%m%d"")"" >> $GITHUB_OUTPUT
    shell: bash

  - uses: actions/cache@v3
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles(\'**/lockfiles\') }}

steps:
  - uses: actions/checkout@v3

  - uses: actions/cache@v3
    id: cache
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Install Dependencies
    if: steps.cache.outputs.cache-hit != \'true\'
    run: /install.sh

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d prime-numbers

      - name: Cache Numbers
        id: cache-numbers
        uses: actions/cache@v3
        with:
          path: numbers
          key: primes

      - name: Generate Numbers
        if: steps.cache-numbers.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d numbers

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes -d prime-numbers
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
codecov/codecov-action,"steps:
- uses: actions/checkout@master
- uses: codecov/codecov-action@v3
  with:
    token: ${{ secrets.CODECOV_TOKEN }}
    files: ./coverage1.xml,./coverage2.xml # optional
    flags: unittests # optional
    name: codecov-umbrella # optional
    fail_ci_if_error: true # optional (default = false)
    verbose: true # optional (default = false)

name: Example workflow for Codecov
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.10'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.10
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml,!./cache
        flags: unittests
        name: codecov-umbrella
        verbose: true
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
10up/action-wordpress-plugin-deploy,"/.wordpress-org
/.git
/.github
/node_modules

.distignore
.gitignore

/.wordpress-org export-ignore
/.github export-ignore

/.gitattributes export-ignore
/.gitignore export-ignore

name: Deploy to WordPress.org
on:
  push:
    tags:
    - ""*""
jobs:
  tag:
    name: New tag
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build # Remove or modify this step as needed
      run: |
        npm install
        npm run build
    - name: WordPress Plugin Deploy
      uses: 10up/action-wordpress-plugin-deploy@stable
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
        SLUG: my-super-cool-plugin # optional, remove if GitHub repo name matches SVN slug, including capitalization

name: Deploy to WordPress.org
on:
  release:
    types: [published]
jobs:
  tag:
    name: New release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build
      run: |
        npm install
        npm run build
    - name: WordPress Plugin Deploy
      id: deploy
      uses: 10up/action-wordpress-plugin-deploy@stable
      with:
        generate-zip: true
      env:
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.deploy.outputs.zip-path }}
        asset_name: ${{ github.event.repository.name }}.zip
        asset_content_type: application/zip
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
10up/action-wordpress-plugin-asset-update,"name: Plugin asset/readme update
on:
  push:
    branches:
    - trunk
jobs:
  trunk:
    name: Push to trunk
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: WordPress.org plugin asset/readme update
      uses: 10up/action-wordpress-plugin-asset-update@stable
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
actions/setup-java,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\' # See \'Supported distributions\' for available options
    java-version: \'17\'
- run: java HelloWorldApp.java

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'zulu\' # See \'Supported distributions\' for available options
    java-version: \'17\'
- run: java HelloWorldApp.java

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'gradle\'
- run: ./gradlew build --no-daemon

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'maven\'
- name: Build with Maven
  run: mvn -B package --file pom.xml

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'sbt\'
- name: Build with SBT
  run: sbt package

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    check-latest: true
- run: java HelloWorldApp.java

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ \'8\', \'11\', \'17\' ]
    name: Java ${{ matrix.Java }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: \'<distribution>\'
          java-version: ${{ matrix.java }}
      - run: java HelloWorldApp.java

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: \'<distribution>\'
          java-version: |
            8
            11
            15
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
eskatos/gradle-command-action,"name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build
      run: ./gradlew build

 - uses: gradle/gradle-build-action@v2
   with:
     gradle-version: 6.5

name: Test latest Gradle RC
on:
  schedule:
    - cron: 0 0 * * * # daily
jobs:
  gradle-rc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: release-candidate
    - run: gradle build --dry-run # just test build configuration

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    
    - name: Setup and execute Gradle \'test\' task
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test

- uses: gradle/gradle-build-action@v2
  with:
    arguments: assemble
- uses: gradle/gradle-build-action@v2
  with:
    arguments: check

arguments: build
arguments: check --scan
arguments: some arbitrary tasks
arguments: build -PgradleProperty=foo
arguments: |
    build
    --scan
    -PgradleProperty=foo
    -DsystemProperty=bar

- uses: gradle/gradle-build-action@v2
  env:
    CI: true
  with:
    arguments: build

- uses: gradle/gradle-build-action@v2
  with:
    arguments: build
    build-root-directory: some/subdirectory

 - uses: gradle/gradle-build-action@v2
   with:
     arguments: build
     gradle-executable: /path/to/installed/gradle

cache-disabled: true

cache-read-only: ${{ github.ref != \'refs/heads/main\' && github.ref != \'refs/heads/release\' }}

gradle-home-cache-includes: |
    caches
    notifications
    jdks
gradle-home-cache-excludes: |
    caches/build-cache-1
    caches/keyrings

env:
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

gradle-home-cache-cleanup: true

generate-job-summary: false

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      id: gradle
      run: ./gradlew build --scan
    - name: ""Add Build Scan URL as PR comment""
      uses: actions/github-script@v5
      if: github.event_name == \'pull_request\' && failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: \'\xe2\x9d\x8c ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}\'
          })

jobs:   
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      run: ./gradlew build --scan
    - name: Upload build reports
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports/

name: Submit dependency graph
on:
  push:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

name: Submit dependency graph
on:
  push:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph from \'RuntimeClasspath\' configurations
      run: ./gradlew build -DDEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS=RuntimeClasspath

name: run-build-and-generate-dependency-snapshot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate # Only generate in this job
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

name: submit-dependency-snapshot

on:
  workflow_run:
    workflows: [\'run-build-and-generate-dependency-snapshot\']
    types: [completed]

jobs:
  submit-snapshots:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve dependency graph artifact and submit
        uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: download-and-submit
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
microsoft/setup-msbuild,"- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
\r
- name: Build app for release\r
  run: msbuild src\\YourProjectFile.csproj -t:rebuild -verbosity:diag -property:Configuration=Release\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vs-version: \'[16.4,16.5)\'\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vs-prerelease: true\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    msbuild-architecture: x64\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vswhere-path: \'C:\\path\\to\\your\\tools\\\'\r

npm install\r
npm run build\r
npm run pack\r
",0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
joncloud/makensis-action,"- name: Create installer
  uses: joncloud/makensis-action@v4
  with:
    arguments: ""/V3""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0
ruby/setup-ruby,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
shivammathur/setup-php,"- name: Setup PHP with PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: imagick, swoole

- name: Setup PHP with specific version of PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'5.4\'
    extensions: swoole-1.9.3

- name: Setup PHP with pre-release PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: xdebug-beta

- name: Setup PHP and disable opcache
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: :opcache

- name: Setup PHP without any shared extensions except mbstring
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: none, mbstring

- name: Setup PHP with intl
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: intl-70.1

- name: Setup PHP with fail-fast
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: oci8
  env:
    fail-fast: true

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: php-cs-fixer, phpunit

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: vimeo/psalm

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: php-cs-fixer:3.5, phpunit:9.5
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Setup PHP with composer v2
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: composer:v2

- name: Setup PHP without composer
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: none

- name: Setup PHP with fail-fast
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: deployer
  env:
    fail-fast: true

- name: Setup PHP with Xdebug
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: xdebug

- name: Setup PHP with Xdebug 2.x
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'7.4\'
    coverage: xdebug2

- name: Setup PHP with PCOV
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    ini-values: pcov.directory=api #optional, see above for usage.
    coverage: pcov

- name: Setup PCOV
  run: |
    composer require pcov/clobber
    vendor/bin/pcov clobber

- name: Setup PHP with no coverage driver
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: none

- name: Setup PHP
  id: setup-php
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'

- name: Print PHP version
  run: echo ${{ steps.setup-php.outputs.php-version }}

steps:
- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: mbstring, intl
    ini-values: post_max_size=256M, max_execution_time=180
    coverage: xdebug
    tools: php-cs-fixer, phpunit

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [\'ubuntu-latest\', \'windows-latest\', \'macos-latest\']
        php-versions: [\'8.1\', \'8.2\', \'8.3\']
        phpunit-versions: [\'latest\']
        include:
          - operating-system: \'ubuntu-latest\'
            php-versions: \'8.0\'
            phpunit-versions: 9
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, intl
        ini-values: post_max_size=256M, max_execution_time=180
        coverage: xdebug
        tools: php-cs-fixer, phpunit:${{ matrix.phpunit-versions }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
- name: Setup nightly PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.3\'
    extensions: mbstring
    ini-values: post_max_size=256M, max_execution_time=180
    coverage: xdebug
    tools: php-cs-fixer, phpunit

steps:
- name: Setup PHP with debugging symbols
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    debug: true # specify true or false

jobs:
  run:
    runs-on: [ubuntu-latest, windows-latest]
    name: Setup PHP TS
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: \'8.2\'
      env:
        phpts: ts # specify ts or nts

- name: Setup PHP with latest versions
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    update: true # specify true or false

- name: Setup PHP with logs
  uses: shivammathur/setup-php@verbose
  with:
    php-version: \'8.2\'

jobs:
  run:
    runs-on: ubuntu-latest
    container: shivammathur/node:latest-${{ matrix.arch }}
    strategy:
      matrix:
        arch: [""amd64"", ""i386""]
    steps:
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: \'8.2\'

jobs:
  run:
    runs-on: self-hosted
    strategy:
      matrix:
        php-versions: [\'5.6\', \'7.0\', \'7.1\', \'7.2\', \'7.3\', \'7.4\', \'8.0\', \'8.1\', \'8.2\']
    name: PHP ${{ matrix.php-versions }}
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
      env:
        runner: self-hosted

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: \'8.2\'

act -P ubuntu-latest=shivammathur/node:latest

act -P ubuntu-22.04=shivammathur/node:2204

act -P ubuntu-20.04=shivammathur/node:2004

- name: Setup PHP with JIT in tracing mode
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: none
    ini-values: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M

- name: Get composer cache directory
  id: composer-cache
  run: echo ""dir=$(composer config cache-files-dir)"" >> $GITHUB_OUTPUT

- name: Cache dependencies
  uses: actions/cache@v3
  with:
    path: ${{ steps.composer-cache.outputs.dir }}
    key: ${{ runner.os }}-composer-${{ hashFiles(\'**/composer.lock\') }}
    restore-keys: ${{ runner.os }}-composer-

- name: Install dependencies
  run: composer install --prefer-dist

key: ${{ runner.os }}-composer-${{ hashFiles(\'**/composer.json\') }}

key: ${{ runner.os }}-composer-${{ matrix.prefer }}-${{ hashFiles(\'**/composer.lock\') }}
restore-keys: ${{ runner.os }}-composer-${{ matrix.prefer }}-

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    PACKAGIST_TOKEN: ${{ secrets.PACKAGIST_TOKEN }}

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    COMPOSER_AUTH_JSON: |
      {
        ""http-basic"": {
          ""example.org"": {
            ""username"": ""${{ secrets.EXAMPLE_ORG_USERNAME }}"",
            ""password"": ""${{ secrets.EXAMPLE_ORG_PASSWORD }}""
          }
        }
      }

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'

- name: Run PHP code
  shell: php {0}
  run: |
    <?php
    $welcome = ""Hello, world"";
    echo $welcome;

- name: Setup problem matchers for PHP
  run: echo ""::add-matcher::${{ runner.tool_cache }}/php.json""

- name: Setup problem matchers for PHPUnit
  run: echo ""::add-matcher::${{ runner.tool_cache }}/phpunit.json""

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: phpstan

- name: Run PHPStan
  run: phpstan analyse src

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: psalm

- name: Run Psalm
  run: psalm --output-format=github

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: cs2pr, phpcs

- name: Run phpcs
  run: phpcs -q --report=checkstyle src | cs2pr
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions-rs/cargo,"on: [push]

name: CI

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release --all-features

on: [push]

name: ARMv7 build

jobs:
  linux_arm7:
    name: Linux ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-gnueabihf
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions/setup-dotnet,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'3.1.x\'
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- name: Setup dotnet
  uses: actions/setup-dotnet@v3
  with:
    dotnet-version: | 
      3.1.x
      5.0.x
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'6.0.x\'
    dotnet-quality: \'preview\'
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    global-json-file: csharp/global.json
- run: dotnet build <my project>
  working-directory: csharp

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
- run: dotnet restore --locked-mode

<PropertyGroup>
  <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
</PropertyGroup>

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
- run: dotnet restore --locked-mode

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
    cache-dependency-path: subdir/packages.lock.json
- run: dotnet restore --locked-mode

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ \'2.1.x\', \'3.1.x\', \'5.0.x\' ]
    name: Dotnet ${{ matrix.dotnet }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Execute dotnet
        run: dotnet build <my project>

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ \'2.1.x\', \'3.1.x\', \'5.0.x\' ]
    name: Dotnet ${{ matrix.dotnet }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        id: stepid
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Create temporary global.json
        run: echo \'{""sdk"":{""version"": ""${{ steps.stepid.outputs.dotnet-version }}""}}\' > ./global.json
      - name: Execute dotnet
        run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'3.1.x\'
    source-url: https://nuget.pkg.github.com/<owner>/index.json
  env:
    NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
- run: dotnet build <my project>
- name: Create the package
  run: dotnet pack --configuration Release <my project>
- name: Publish the package to GPR
  run: dotnet nuget push <my project>/bin/Release/*.nupkg

- uses: actions/setup-dotnet@v3
  with:
    source-url: https://pkgs.dev.azure.com/<your-organization>/_packaging/<your-feed-name>/nuget/v3/index.json
  env:
    NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}} # Note, create a secret with this name in Settings
- name: Publish the package to Azure Artifacts
  run: dotnet nuget push <my project>/bin/Release/*.nupkg

- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 3.1.x
- name: Publish the package to nuget.org
  run: dotnet nuget push */bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
  env:
    NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: 3.1.422
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 3.1.422

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: | 
          3.1.422
          5.0.408
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 5.0.408

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: | 
          3.1.422
          5.0.408
        global-json-file: ""./global.json"" # contains version 2.2.207
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 2.2.207

build:
  runs-on: ubuntu-latest
  env:
    DOTNET_INSTALL_DIR: ""path/to/directory""
    NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  steps:
    - uses: actions/checkout@main
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: \'3.1.x\'
        cache: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
rtCamp/action-slack-notify,"on: push
name: Slack Notification Demo
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} # or a specific color like \'good\' or \'#ff00ff\'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: \'Post Content :rocket:\'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

on: push
name: Slack Notification Demo
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions/create-release,"on:
  push:
    tags:
      - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
rohith/publish-nuget,"name: publish to nuget\r
on:\r
  push:\r
    branches:\r
      - main # Default release branch, may also be named 'master' or 'develop'\r
jobs:\r
  publish:\r
    name: build, pack & publish\r
    runs-on: ubuntu-latest\r
    steps:\r
      - uses: actions/checkout@v2\r
\r
\r
      - name: publish on version change\r
        id: publish_nuget\r
        uses: brandedoutcast/publish-nuget@v2\r
        with:\r
          PROJECT_FILE_PATH: Core/Core.csproj\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
goanpeca/setup-miniconda,"- uses: conda-incubator/setup-miniconda@v2
  with:
    activate-environment: whatever

- uses: conda-incubator/setup-miniconda@v2
  with:
    auto-activate-base: true
    activate-environment: """"

jobs:
  example-1:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu-latest"", ""macos-latest"", ""windows-latest""]
        python-version: [""3.7"", ""2.7""]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

jobs:
  example-2-linux:
    name: Ex2 Linux
    runs-on: ""ubuntu-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-mac:
    name: Ex2 Mac
    runs-on: ""macos-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Sh
        shell: sh -l {0}
        run: |
          conda info
          conda list
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-win:
    name: Ex2 Windows
    runs-on: ""windows-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell
        shell: powershell
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
      - name: Cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          conda info && conda list

jobs:
  example-3:
    name: Ex3 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
          python-version: 3.5
          condarc-file: etc/example-condarc.yml
          auto-activate-base: false
      - run: |
          conda info
          conda list

jobs:
  example-4:
    name: Ex4 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: foo
          python-version: 3.6
          channels: conda-forge,spyder-ide
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-5:
    name: Ex5 Miniforge for PyPy
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-6:
    name: Ex6 Mamba
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6
          mamba-version: ""*""
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
      - shell: bash -el {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash -el {0}
        run: mamba install jupyterlab

jobs:
  example-7:
    name: Ex7 Explicit
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: etc/example-explicit.conda.lock
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

jobs:
  example-10-miniforge:
    name: Ex10 (${{ matrix.os }}, Miniforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: etc/example-environment.yml
          miniforge-version: latest

jobs:
  example-10-mambaforge:
    name: Ex10 (${{ matrix.os }}, Mambaforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
        include:
          - os: ubuntu
            environment-file: etc/example-environment-no-name.yml
            miniforge-variant: Mambaforge
            miniforge-version: 4.9.2-4
          - os: macos
            environment-file: etc/example-empty-channels-environment.yml
            miniforge-variant: Mambaforge-pypy3
          - os: windows
            environment-file: etc/example-explicit.Windows.conda.lock
            condarc-file: etc/example-condarc.yml
            miniforge-variant: Mambaforge
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file: ${{ matrix.condarc-file }}
          environment-file: ${{ matrix.environment-file }}
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: ${{ matrix.miniforge-version }}
          use-mamba: true

jobs:
  example-11:
    name:
      Ex11 (os=${{ matrix.os }} architecture=${{ matrix.architecture }}
      miniconda-version=${{ matrix.miniconda-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""windows-latest""]
        architecture: [""x86""]
        miniconda-version: [""latest""]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          architecture: ${{ matrix.architecture }}
          miniconda-version: $${{ matrix.miniconda-version }}
          auto-update-conda: true
          python-version: ""3.8""

jobs:
  caching-example:
    name: Caching
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles(\'etc/example-environment.yml\') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          channel-priority: strict
          environment-file: etc/example-environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

- name: Setup Mambaforge
  uses: conda-incubator/setup-miniconda@v2
  with:
    miniforge-variant: Mambaforge
    miniforge-version: latest
    activate-environment: anaconda-client-env
    use-mamba: true

- name: Get Date
  id: get-date
  run: echo ""today=$(/bin/date -u \'+%Y%m%d\')"" >> $GITHUB_OUTPUT
  shell: bash

- name: Cache Conda env
  uses: actions/cache@v2
  with:
    path: ${{ env.CONDA }}/envs
    key:
      conda-${{ runner.os }}--${{ runner.arch }}--${{
      steps.get-date.outputs.today }}-${{
      hashFiles(\'etc/example-environment-caching.yml\') }}-${{ env.CACHE_NUMBER
      }}
  env:
    CACHE_NUMBER: 0
  id: cache

- name: Update environment
  run:
    mamba env update -n anaconda-client-env -f
    etc/example-environment-caching.yml
  if: steps.cache.outputs.cache-hit != \'true\'

jobs:
  default-shell:
    name: Default shell
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment-caching.yml
      - run: conda info
      - run: conda list
      - run: conda config --show
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions/download-artifact,"steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    name: my-artifact
    
- name: Display structure of downloaded files
  run: ls -R

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact
    
- name: Display structure of downloaded files
  run: ls -R
  working-directory: path/to/artifact

  - uses: actions/download-artifact@v3
    with:
      name: my-artifact
      path: ~/download/path

   current/working/directory/
      my-artifact/
          ... contents of my-artifact

   current/working/directory/
      ... contents of my-artifact

- uses: actions/download-artifact@v2
  with:
    name: my-artifact
    path: my-artifact

  etc/usr/artifacts/
      Artifact-A/
          ... contents of Artifact-A
      Artifact-B/
          ... contents of Artifact-B

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    path: path/to/artifacts
    
- name: Display structure of downloaded files
  run: ls -R
  working-directory: path/to/artifacts

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3

- name: Display structure of downloaded files
  run: ls -R

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  id: download
  with:
    name: 'my-artifact'
    path: path/to/artifacts

- name: 'Echo download path'
  run: echo ${{steps.download.outputs.download-path}}

  - name: 'Tar files'
    run: tar -cvf my_files.tar /path/to/my/directory

  - name: 'Upload Artifact'
    uses: actions/upload-artifact@v2
    with:
      name: my-artifact
      path: my_files.tar    
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
pypa/gh-action-pypi-publish,"jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/<your-pypi-project-name>
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

- name: Publish package distributions to TestPyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    repository-url: https://test.pypi.org/legacy/

    if: github.event_name == \'push\' && startsWith(github.ref, \'refs/tags\')

- name: Publish package to TestPyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    repository-url: https://test.pypi.org/legacy/

- name: Publish package to PyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    packages-dir: custom-dir/

   with:
     verify-metadata: false

   with:
     skip-existing: true

   with:
     verbose: true

  with:
    print-hash: true

  with:
    user: guido
    password: ${{ secrets.DEVPI_PASSWORD }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
wagoid/commitlint-github-action,"name: Lint Commit Messages
on: [pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: wagoid/commitlint-github-action@v5

You have commit messages with errors

\xe2\xa7\x97   input: wrong message
\xe2\x9c\x96   subject may not be empty [subject-empty]
\xe2\x9c\x96   type may not be empty [type-empty]

\xe2\x9c\x96   found 2 problems, 0 warnings
\xe2\x93\x98   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

\xe2\xa7\x97   input: chore: my message
\xe2\x9a\xa0   body must have leading blank line [body-leading-blank]

\xe2\x9a\xa0   found 0 problems, 1 warnings
\xe2\x93\x98   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

[
  {
    ""hash"": ""cb0f846f13b490c2fd17bd5ed0b6f65ba9b86c75"",
    ""message"": ""wrong message"",
    ""valid"": false,
    ""errors"": [""subject may not be empty"", ""type may not be empty""],
    ""warnings"": [],
  },
  {
    ""hash"": ""cb14483cbde23b61322ffb8d3fcdc87f514a3141"",
    ""message"": ""chore: my message\
\
some context without leading blank line"",
    ""valid"": true,
    ""errors"": [],
    ""warnings"": [""body must have leading blank line""],
  },
]

name: Lint Commit Messages
on: [pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: \'14\'
      - run: npm install
      - uses: wagoid/commitlint-github-action@v5
        env:
          NODE_PATH: ${{ github.workspace }}/node_modules
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
whelk-io/maven-settings-xml-action,"repositories: |
  [
    {
      ""id"": ""central"",
      ""name"": ""Maven Central"",
      ""url"": ""https://repo1.maven.org/maven2"",
      ""releases"": {
        ""enabled"": ""true""
      },
      ""snapshots"": {
        ""enabled"": ""false""
      }
    }
  ]

- uses: whelk-io/maven-settings-xml-action@v20
  with:
    output_file: foo/custom.xml

- name: maven-settings-xml-action
  uses: whelk-io/maven-settings-xml-action@v20
  with:
    repositories: \'[{ ""id"": ""some-repository"", ""url"": ""http://some.repository.url"" }]\'
    plugin_repositories: \'[{ ""id"": ""some-plugin-repository"", ""url"": ""http://some.plugin.repository.url"" }]\'
    servers: \'[{ ""id"": ""some-server"", ""username"": ""some.user"", ""password"": ""some.password"" }]\'

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" 
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
          xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0
                              http://maven.apache.org/xsd/settings-1.0.0.xsd"">
  
    <activeProfiles>
        <activeProfile>github</activeProfile>
    </activeProfiles>
  
    <profiles>
        <profile>
            <id>github</id>
            <repositories>
                <repository>
                    <id>some-repository</id>
                    <url>http://some.repository.url</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>some-plugin-repository</id>
                    <url>http://some.plugin.repository.url</url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
  
    <servers>
        <server>
            <id>foo</id>
            <username>fu</username>
            <password>bar</password>
        </server>
    </servers>
  
</settings>

- name: maven-settings-xml-action
  uses: whelk-io/maven-settings-xml-action@v20
  with:
    repositories: >
      [
        {
          ""id"": ""some-repository"",
          ""name"": ""some-repository-name"",
          ""url"": ""http://some.repository.url"",
          ""releases"": {
            ""enabled"": ""true"",
            ""updatePolicy"": ""always"",
            ""checksumPolicy"": ""fail""
          },
          ""snapshots"": {
            ""enabled"": ""false"",
            ""updatePolicy"": ""always"",
            ""checksumPolicy"": ""fail""
          }
        }
      ]
    plugin_repositories: >
      [
        {
          ""id"": ""some-plugin-repository"",
          ""name"": ""some-plugin-repository-name"",
          ""url"": ""http://some.plugin.repository.url"",
          ""releases"": {
            ""enabled"": ""true""
          },
          ""snapshots"": {
            ""enabled"": ""false""
          }
        }
      ]
    servers: >
      [
        {
          ""id"": ""some-id"",
          ""username"": ""${env.USER}"",
          ""password"": ""${env.PASS}"",
          ""configuration"": {
            ""httpConfiguration"": {
              ""all"": {
                ""usePreemptive"": ""true""
              }
            }
          }
        }
      ]
    mirrors: >
      [
        {
          ""id"": ""nexus"",
          ""mirrorOf"": ""!my-org-snapshots,*"",
          ""url"": ""http://redacted/nexus/content/groups/public""
        }
      ]
    profiles: >
      [
        {
          ""id"": ""foo.profile"",
          ""name"": ""foo.profile"",
          ""url"": ""http://foo.bar.profile"",
          ""properties"": {
            ""foo"": ""property-1"",
            ""bar"": ""property-2""
          }
        }
      ]
    plugin_groups: >
      [
        ""some.plugin.group.id"",
        ""some.other.plugin.group.id""
      ]
    proxies: >
      [
        {
          ""id"": ""foo-proxy"",
          ""active"": ""true"",
          ""protocol"": ""http"",
          ""host"": ""https://proxy.example.com"",
          ""port"": ""443"",
          ""username"": ""foo"",
          ""password"": ""bar"",
          ""nonProxyHosts"": ""noproxy1.example.com|noproxy2.example.com""
        }
      ]
    active_profiles: >
      [
        ""some-profile""
      ]
    output_file: .m2/settings.xml

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" 
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
          xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0
                              http://maven.apache.org/xsd/settings-1.0.0.xsd"">
  
    <activeProfiles>
        <activeProfile>some-profile</activeProfile>
    </activeProfiles>
  
    <profiles>
        <profile>
            <id>github</id>
            <repositories>
                <repository>
                    <id>some-repository</id>
                    <name>some-repository-name</name>
                    <url>http://some.repository.url</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                        <checksumPolicy>fail</checksumPolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                        <updatePolicy>always</updatePolicy>
                        <checksumPolicy>fail</checksumPolicy>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>some-plugin-repository</id>
                    <name>some-plugin-repository-name</name>
                    <url>http://some.plugin.repository.url</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>foo.profile</id>
            <name>foo.profile</name>
            <url>http://foo.bar.profile</url>
            <properties>
                <foo>property-1</foo>
                <bar>property-2</bar>
            </properties>
        </profile>
    </profiles>
  
    <servers>
        <server>
            <id>foo</id>
            <username>fu</username>
            <password>bar</password>
            <privateKey>${user.home}/.ssh/id_dsa</privateKey>
            <passphrase>some_passphrase</passphrase>
            <filePermissions>664</filePermissions>
            <directoryPermissions>775</directoryPermissions>
            <configuration>
                <httpConfiguration>
                    <all>
                        <usePreemptive>true</usePreemptive>
                    </all>
                </httpConfiguration>
            </configuration>
        </server>
    </servers>
  
    <mirrors>
        <mirror>
            <id>nexus</id>
            <mirrorOf>!my-org-snapshots,*</mirrorOf>
            <url>http://redacted/nexus/content/groups/public</url>
        </mirror>
    </mirrors>
  
    <pluginGroups>
        <pluginGroup>some.plugin.group.id</pluginGroup>
        <pluginGroup>some.other.plugin.group.id</pluginGroup>
    </pluginGroups>

    <proxies>
        <proxy>
            <id>foo-proxy</id>
            <active>true</active>
            <protocol>http</protocol>
            <host>https://proxy.example.com</host>
            <port>443</port>
            <username>foo</username>
            <password>bar</password>
            <nonProxyHosts>noproxy1.example.com|noproxy2.example.com</nonProxyHosts>
        </proxy>
    </proxies>
  
</settings>
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actionshub/chef-delivery,"name: delivery

on: [push, pull_request]

jobs:
  delivery:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Run Chef Delivery
      uses: actionshub/chef-delivery@main
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actionshub/yamllint,"---
name: yamllint
""on"": [push, pull_request]
jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: Run yamllint
      uses: actionshub/yamllint@main
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actionshub/markdownlint,"name: markdownlint

on: [push, pull_request]

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Run mdl
      uses: actionshub/markdownlint@main

name: markdownlint

on: [push, pull_request]

jobs:
  mdl:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run Markdown Lint
        uses: actionshub/markdownlint@main
        with:
          filesToIgnoreRegex: ""node_modules\\\\/.*""

style \'.mdl.rb\'

all

rule \'MD013\', :line_length => 99999

exclude_rule \'MD033\'

rule \'MD007\', :indent => 4
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actionshub/chef-install,"name: delivery

on: [push, pull_request]

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: install chef
      uses: actionshub/chef-install@main


jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: install chef
      uses: actionshub/chef-install@main
      with:
        channel: current
        project: inspec
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actionshub/kitchen-dokken,"name: kitchen

on: [pull_request]

jobs:
  dokken:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['debian-8', 'debian-9', 'centos-7', 'fedora-latest', 'ubuntu-1604', 'ubuntu-1804']
        suite: ['default']
      fail-fast: false

    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: Install Chef
      uses: actionshub/chef-install@master
    - name: Dokken
      uses: actionshub/kitchen-dokken@creation
      env:
        suite: ${{ matrix.suite }}
        os: ${{ matrix.os }}
        CHEF_LICENSE: accept-no-persist
        KITCHEN_LOCAL_YAML: kitchen.dokken.yml
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
actionshub/test-kitchen,"name: kitchen

on: [pull_request]

jobs:
  dokken:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - centos-7
          - centos-8
        suite: [\'default\']
      fail-fast: false
    steps:
    - name: Check out code
      uses: actions/checkout@main
    - name: Install Chef
      uses: actionshub/chef-install@main
    - name: Test-Kitchen
      uses: actionshub/test-kitchen@main
      with:
        suite: ${{ matrix.suite }}
        os: ${{ matrix.os }}
      env:
        CHEF_LICENSE: accept-no-persist
        KITCHEN_LOCAL_YAML: kitchen.dokken.yml

name: kitchen
on: [pull_request]
jobs:
  macos:
    needs: [mdl, yamllint, delivery]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main
      - name: Install Chef
        uses: actionshub/chef-install@main
      - name: Kitchen Converge
        uses: actionshub/test-kitchen@main
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: kitchen.macos.yml
          TERM: xterm-256color
        with:
          suite: adoptopenjdk-14
          os: macos
          action: converge
      - name: Source Profile for JAVA_HOME
        run: |
          source /etc/profile
          echo ""sourced profile for JAVA_HOME""
          echo ""New JAVA home after Chef run is: ${JAVA_HOME}""
      - name: Kitchen Verify
        uses: actionshub/test-kitchen@master
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: kitchen.macos.yml
          TERM: xterm-256color
        with:
          suite: adoptopenjdk-14
          os: macos
          action: verify
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gaurav-nelson/github-action-markdown-link-check,"name: Check Markdown links
on: push
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1

name: Check Markdown links

on: push

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        config-file: \'mlc_config.json\'
        folder-path: \'docs/markdown_files\'
        max-depth: 2

name: Check Markdown links

on:
  push:
    branches:
    - master
  schedule:
  - cron: ""0 9 * * *""

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        config-file: \'mlc_config.json\'
        folder-path: \'docs/markdown_files\'

<!-- markdown-link-check-disable -->
Disbale link checking in this section. Ignore this [Bad Link](https://exampleexample.cox)
<!-- markdown-link-check-enable -->

on: [pull_request]
name: Check links for modified files
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        check-modified-files-only: \'yes\'


on: [pull_request]
name: Check links for modified files
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        folder-path: \'md/dir1, md/dir2\'
        file-path: \'./README.md, ./LICENSE, ./md/file4.markdown\'

{
  ""aliveStatusCodes"": [429, 200]
}

{
  ""httpHeaders"": [
    {
      ""urls"": [""https://github.com/"", ""https://guides.github.com/"", ""https://help.github.com/"", ""https://docs.github.com/""],
      ""headers"": {
        ""Accept-Encoding"": ""zstd, br, gzip, deflate""
      }
    }
  ]
}

name: Check .md links

on:
  push: [master]

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Check links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-verbose-mode: \'yes\'

- uses: gaurav-nelson/github-action-markdown-link-check@1.0.1

- uses: gaurav-nelson/github-action-markdown-link-check@v1

- uses: gaurav-nelson/github-action-markdown-link-check@44a942b2f7ed0dc101d556f281e906fb79f1f478
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actions/setup-ruby,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-ruby@v1
  with:
    ruby-version: \'2.6\' # Version range or exact version of a Ruby version to use, using semvers version range syntax.
- run: ruby hello.rb

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        ruby: [ \'2.5\', \'2.6\' ]
    name: Ruby ${{ matrix.ruby }} sample
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - run: ruby hello.rb

name: Rails Unit Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: [\'5432:5432\']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Build and test with Rake
      env:
        PGHOST: 127.0.0.1
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle exec rails db:create
        bundle exec rails db:migrate
        bundle exec rails test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions/setup-node,"- uses: actions/setup-node@v3
  with:
    node-version: \'\'

    node-version-file: \'\'

    check-latest: false

    architecture: \'\'

    token: \'\'

    cache: \'\'

    cache-dependency-path: \'\'

    registry-url: \'\'

    scope: \'\'

    always-auth: \'\'

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 18
- run: npm ci
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 16
    cache: \'npm\'
- run: npm ci
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 16
    cache: \'npm\'
    cache-dependency-path: subdir/package-lock.json
- run: npm ci
- run: npm test

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14, 16, 18 ]
    name: Node ${{ matrix.node }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm test

uses: actions/setup-node@v3
with:
  token: ${{ secrets.GH_DOTCOM_TOKEN }}
  node-version: 16
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peaceiris/actions-hugo,"name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

      - name: Build
        run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

- name: Setup Hugo
  uses: peaceiris/actions-hugo@v2
  with:
    hugo-version: \'0.110.0\'
    extended: true

- name: Setup Hugo
  uses: peaceiris/actions-hugo@v2
  with:
    hugo-version: \'latest\'

- uses: actions/cache@v2
  with:
    path: /tmp/hugo_cache
    key: ${{ runner.os }}-hugomod-${{ hashFiles(\'**/go.sum\') }}
    restore-keys: |
      ${{ runner.os }}-hugomod-

- name: Build
  run: hugo --minify

HUGO_VERSION=0.110.0

    - name: Read .env
      id: hugo-version
      run: |
        . ./.env
        echo ""HUGO_VERSION=${HUGO_VERSION}"" >> ""${GITHUB_OUTPUT}""

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: \'${{ steps.hugo-version.outputs.HUGO_VERSION }}\'
        extended: true

version: \'3\'

services:
  hugo:
    container_name: hugo
    image: ""peaceiris/hugo:v${HUGO_VERSION}""
    ports:
      - 1313:1313
    volumes:
      - ${PWD}:/src
    command:
      - server
      - --bind=0.0.0.0
      - --buildDrafts

name: GitHub Pages

on:
  push:
    branches:
      - master  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'
          extended: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'18\'
          cache: \'npm\'
          cache-dependency-path: \'**/package-lock.json\'

      - run: npm ci
      - run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/master\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'
          extended: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - run: gem install asciidoctor

      - name: Run Hugo
        run: |
          alias asciidoctor=""asciidoctor --attribute=experimental=true --attribute=icons=font""
          hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Disable quotePath
        run: git config core.quotePath false

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

make build
make all

./release.sh
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
actions/first-interaction,"steps:
- uses: actions/first-interaction@v1
  with:
    repo-token: ${{ secrets.GITHUB_TOKEN }}
    issue-message: '# Message with markdown.\
This is the message that will be displayed on users' first issue.'
    pr-message: 'Message that will be displayed on users' first pr. Look, a `code block` for markdown.'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/stale,"permissions:
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'Message to comment on stale issues. If none provided, will not mark issues stale\'
          stale-pr-message: \'Message to comment on stale PRs. If none provided, will not mark PRs stale\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          days-before-stale: 30
          days-before-close: 5

name: \'Close stale issues and PR\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          stale-pr-message: \'This PR is stale because it has been open 45 days with no activity. Remove stale label or comment or this will be closed in 10 days.\'
          close-issue-message: \'This issue was closed because it has been stalled for 5 days with no activity.\'
          days-before-stale: 30
          days-before-close: 5
          days-before-pr-close: -1

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          stale-pr-message: \'This PR is stale because it has been open 45 days with no activity. Remove stale label or comment or this will be closed in 10 days.\'
          close-issue-message: \'This issue was closed because it has been stalled for 5 days with no activity.\'
          close-pr-message: \'This PR was closed because it has been stalled for 10 days with no activity.\'
          days-before-issue-stale: 30
          days-before-pr-stale: 45
          days-before-issue-close: 5
          days-before-pr-close: 10

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'Stale issue message\'
          stale-pr-message: \'Stale pull request message\'
          stale-issue-label: \'no-issue-activity\'
          exempt-issue-labels: \'awaiting-approval,work-in-progress\'
          stale-pr-label: \'no-pr-activity\'
          exempt-pr-labels: \'awaiting-approval,work-in-progress\'
          only-labels: \'awaiting-feedback,awaiting-answers\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          start-date: \'2020-04-18T00:00:00Z\' # ISO 8601 or RFC 2822

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-issue-milestones: \'future,alpha,beta\'
          exempt-pr-milestones: \'bugfix,improvement\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-all-pr-milestones: true

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          any-of-labels: \'needs-more-info,needs-demo\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-issue-assignees: \'marco,polo\'
          exempt-pr-assignees: \'marco\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-all-pr-assignees: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
act10ns/slack,"username: GitHub-CI
icon_url: https://octodex.github.com/images/mona-the-rivetertocat.png

pretext: Triggered via {{eventName}} by {{actor}} {{or action ""action""}} {{ref}} `{{diffRef}}`
title: GitHub Actions
title_link: https://support.github.com

text: |
  *<{{workflowRunUrl}}|Workflow _{{workflow}}_ job _{{jobName}}_ triggered by _{{eventName}}_ is _{{jobStatus}}_>* for <{{refUrl}}|`{{ref}}`>
  {{#if description}}<{{diffUrl}}|`{{diffRef}}`> - {{description}}{{/if}}
  {{#if payload.commits}}
  *Commits*
  {{#each payload.commits}}
  <{{this.url}}|`{{truncate this.id 8}}`> - {{this.message}}
  {{/each}}
  {{/if}}

fallback: |-
  [GitHub] {{workflow}} #{{runNumber}} {{jobName}} is {{jobStatus}}

fields:
  - title: Job Steps
    value: ""{{#each jobSteps}}{{icon this.outcome}} {{@key}}\
{{/each}}""
    short: false
  - title: Workflow
    value: ""<{{workflowUrl}}|{{workflow}}>""
    short: true
  - title: Git Ref
    value: ""{{ref}} ({{refType}})""
    short: true
  - title: Run ID
    value: |-
      <{{workflowRunUrl}}|{{runId}}>
    short: true
  - title: Run Number
    value: ""{{runNumber}}""
    short: true
  - title: Actor
    value: ""{{actor}}""
    short: true
  - title: Job Status
    value: ""{{jobStatus}}""
    short: true

footer: >-
  <{{repositoryUrl}}|{{repositoryName}}> {{workflow}} #{{runNumber}}

colors:
  success: \'#5DADE2\'
  failure: \'#884EA0\'
  cancelled: \'#A569BD\'
  default: \'#7D3C98\'

icons:
  success: \':white_check_mark:\'
  failure: \':grimacing:\'
  cancelled: \':x:\'
  skipped: \':heavy_minus_sign:\'
  default: \':interrobang:\'
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
crazy-max/ghaction-chocolatey,"on: push

jobs:
  test:
    runs-on: windows-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Choco help
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: -h
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
octokit/graphql-action,"name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  logLatestRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_release
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo \'latest release: ${{ steps.get_latest_release.outputs.data }}\'""

- uses: octokit/graphql-action@v2.x
  with:
    query: |
      query release($owner:String!,$repo:String!) {
        repository(owner:$owner,name:$repo) {
          releases(first:1) {
            nodes {
              name
              createdAt
              tagName
              description
            }
          }
        }
      }
    variables: |
      owner: ${{ github.event.repository.owner.name }}
      repo: ${{ github.event.repository.name }}
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: octokit/graphql-action@v2.x
    with:
      query: |
        query  pullRequest(
          $repo:String!
          $owner:String!) {
          repository(name:$repo, owner:$owner) { 
            pullRequests(last:1) {
              nodes {
                number
                mergeStateStatus
              }
            }
          }
        }
      owner: ${{ github.event.repository.owner.name }}
      repo: ${{ github.event.repository.name }}
      mediaType: |
        previews:
        - merge-info

query release($itemId: String!) {
  ...

itemId: ""randomId""

query release($itemid: String!) {
  ...

itemid: ""randomId""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
JamesIves/github-pages-deploy-action,"name: Build and Deploy
on: [push]
permissions:
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy.

on:
  push:
    branches:
      - main

permissions:
  contents: write

ssh-keygen -t rsa -m pem -b 4096 -C ""youremailhere@example.com"" -N """"

- name: Deploy \xf0\x9f\x9a\x80
  uses: JamesIves/github-pages-deploy-action@v4
  with:
    folder: site
    ssh-key: ${{ secrets.DEPLOY_KEY }}

name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          clean: true
          clean-exclude: |
            special-file.txt
            some/*.txt
          ssh-key: ${{ secrets.DEPLOY_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

name: Build and Deploy
on: [push]
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest # The first job utilizes windows-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Upload Artifacts \xf0\x9f\x94\xba # The project is then uploaded as an artifact named \'site\'.
        uses: actions/upload-artifact@v1
        with:
          name: site
          path: build

  deploy:
    concurrency: ci-${{ github.ref }}
    needs: [build] # The second job must depend on the first one to complete before running and uses ubuntu-latest instead of windows.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Download Artifacts \xf0\x9f\x94\xbb # The built project is downloaded into the \'site\' folder.
        uses: actions/download-artifact@v1
        with:
          name: site

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: \'site\' # The deployment folder should match the name of the artifact. Even though our project builds into the \'build\' folder the artifact name of \'site\' must be placed here.

- name: Install rsync \xf0\x9f\x93\x9a
  run: |
    apt-get update && apt-get install -y rsync

- name: Deploy \xf0\x9f\x9a\x80
  uses: JamesIves/github-pages-deploy-action@v4

name: Build and Deploy
permissions:
  contents: write
on:
  push:
    branches:
      - main
jobs:
  deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          clean: true
          clean-exclude: |
            special-file.txt
            some/*.txt
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
actions/setup-go,"steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'^1.13.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'>=1.17.0\'
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.18.0-rc.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.16.0-beta.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.16.1\' # The Go version to download (if necessary) and use.
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.14\'
      check-latest: true
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'stable\'
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'oldstable\'
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.17\'
      check-latest: true
      cache-dependency-path: subdir/go.sum
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version-file: \'path/to/go.mod\'
  - run: go version

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ \'1.14\', \'1.13\' ]
    name: Go ${{ matrix.go }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - run: go run hello.go

uses: actions/setup-go@v4
with:
  token: ${{ secrets.GH_DOTCOM_TOKEN }}
  go-version: \'1.18\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
coverallsapp/github-action,"on: [""push"", ""pull_request""]

name: Test Coveralls

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: npm install, make test-coverage
      run: |
        npm install
        make test-coverage

    - name: Coveralls
      uses: coverallsapp/github-action@v2

on: [""push"", ""pull_request""]

name: Test Coveralls Parallel

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_number:
          - 1
          - 2
    steps:
    - uses: actions/checkout@3
    - name: Use Node.js 16.x
      uses: actions/setup-node@3
      with:
        node-version: 16.x

    - name: npm install
      run: npm install

    - name: Test ${{ matrix.test_number }}
      run: make test-coverage-${{ matrix.test_number }}
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@v2
      with:
        flag-name: run-${{ join(matrix.*, \'-\') }}
        parallel: true

  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
        carryforward: ""run-1,run-2""

on: [""push"", ""pull_request""]

github-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
dschep/install-poetry-action,"steps:
- uses: actions/checkout@master
- uses: actions/setup-python@v1
- uses: dschep/install-poetry-action@v1.3
- run: poetry run my_script.py

- uses: dschep/install-poetry-action@v1.3
  with:
    version: 1.0.0a1

- uses: dschep/install-poetry-action@v1.3
  with:
    preview: true

- uses: dschep/install-poetry-action@v1.3
  with:
    create_virtualenvs: true
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
paambaati/codeclimate-action,"steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>
    with:
      coverageCommand: npm run coverage
      debug: true

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>
    with:
      coverageCommand: yarn run coverage
      coverageLocations: |
        ${{github.workspace}}/*.lcov:lcov

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
      JACOCO_SOURCE_PATH: ""${{github.workspace}}/src/main/java""
    with:
      coverageCommand: mvn test
      coverageLocations: ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco

""scripts"": {
  ""coverage"": ""yarn client coverage && yarn server coverage""
}

SF:src/server.ts

// server/jest.config.js
module.exports = {
  ...
  coverageReporters: [[\'lcov\', { projectRoot: \'..\' }]]
  ...
};

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
    with:
      coverageCommand: yarn run coverage
      coverageLocations: |
        ${{github.workspace}}/client/coverage/lcov.info:lcov
        ${{github.workspace}}/server/coverage/lcov.info:lcov
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pre-commit/action,"name: pre-commit

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.0

    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: flake8 --all-files
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
TimonVS/pr-labeler-action,"name: PR Labeler
on:
  pull_request:
    types: [opened]

permissions:
  contents: read

jobs:
  pr-labeler:
    permissions:
      contents: read # for TimonVS/pr-labeler-action to read config file
      pull-requests: write # for TimonVS/pr-labeler-action to add labels in PR
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/pr-labeler.yml # optional, .github/pr-labeler.yml is the default value

feature: [\'feature/*\', \'feat/*\']
fix: fix/*
chore :hammer:: chore/*

feature: [\'feature/*\', \'feat/*\']
fix: \'fix/*\'
chore: \'chore/*\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
toolmantim/release-drafter,"name: Release Drafter

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$RESOLVED_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$RESOLVED_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
change-title-escapes: \'\\<*_&\' # You can add # and @ to disable mentions, and add ` to disable code blocks.
version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch
template: |

  $CHANGES

version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch

references:
  - master
  - v.+

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

categories:
  - title: \'\xe2\xac\x86\xef\xb8\x8f Dependencies\'
    collapse-after: 3
    labels:
      - \'dependencies\'

exclude-labels:
  - \'skip-changelog\'

include-labels:
  - \'app-foo\'

exclude-contributors:
  - \'myusername\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

autolabeler:
  - label: \'chore\'
    files:
      - \'*.md\'
    branch:
      - \'/docs{0,1}\\/.+/\'
  - label: \'bug\'
    branch:
      - \'/fix\\/.+/\'
    title:
      - \'/fix/i\'
  - label: \'enhancement\'
    branch:
      - \'/feature\\/.+/\'
    body:
      - \'/JIRA-[0-9]{1,4}/\'

yarn install

yarn test

yarn test:watch

docker compose run --rm app

git checkout master && git pull && npm version [major | minor | patch]
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
kolpav/purge-artifacts-action,"name: 'Delete old artifacts'
on:
  schedule:
    - cron: '0 * * * *' # every hour

jobs:
  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 7days # Setting this to 0 will delete all artifacts

with:
  onlyPrefix: tmp_  

with:
  exceptPrefix: prod_
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
thefringeninja/action-minver,"- uses: thefringeninja/action-minver
  with:
    auto-increment: patch
    build-metadata: ${{ github.sha }}
    default-pre-release-phase: preview
    minimum-major-minor: 2.0.0
    tag-prefix: v
    verbosity: trace

name: Build

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: run minver
      id: version
      uses: thefringeninja/action-minver
    - name: output
      run: |
        echo ${{ steps.version.outputs.version }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions/upload-release-asset,"on:
  push:
    tags:
    - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths my-artifact README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it\'s ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dawidd6/action-download-artifact,"- name: Download artifact
  id: download-artifact
  uses: dawidd6/action-download-artifact@v2
  with:
    github_token: ${{secrets.GITHUB_TOKEN}}
    workflow: workflow_name.yml
    workflow_conclusion: success
    pr: ${{github.event.pull_request.number}}
    commit: ${{github.event.pull_request.head.sha}}
    branch: master
    event: push
    run_id: 1122334455
    run_number: 34
    name: artifact_name
    name_is_regexp: true
    path: extract_here
    repo: ${{ github.repository }}
    check_artifacts: false
    search_artifacts: false
    skip_unpack: false
    if_no_artifact_found: fail
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
ncipollo/release-action,"name: Releases

on: 
  push:
    tags:
    - \'*\'

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - uses: ncipollo/release-action@v1
      with:
        artifacts: ""release.tar.gz,foo/*.txt""
        bodyFile: ""body.md""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
DamianReeves/write-file-action,"uses: DamianReeves/write-file-action@master
with:
  path: ${{ env.home}}/.bashrc
  contents: |
    Hello World!
  write-mode: append

name: Overwrite some file

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Overwrite file
        uses: ""DamianReeves/write-file-action@master""
        with:
          path: path/to/file.js
          write-mode: overwrite
          contents: |
            console.log(\'some contents\')
            
      - name: Commit & Push
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          force: true
          message: \'Overwritten by Github Actions - ${date}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
zymap/bot,"on:
  issue_comment:
    types: [created]

jobs:
  bot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Bot actions
        uses: zymap/bot@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # replace here to your token
        with:
          repo_owner: zymap  # replace here to your repo owner
          repo_name: bot     # replace here to your repo name
          rerun_cmd: rerun failure checks
          comment: ${{ github.event.comment.body }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/github-script,"- uses: actions/github-script@v6
  id: set-result
  with:
    script: return ""Hello!""
    result-encoding: string
- name: Get result
  run: echo ""${{steps.set-result.outputs.result}}""

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    script: return ""I will be string (not JSON) encoded!""

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    retries: 3
    script: |
      github.rest.issues.get({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
      })

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    retries: 3
    retry-exempt-status-codes: 400,401
    script: |
      github.rest.issues.get({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
      })

- name: View context attributes
  uses: actions/github-script@v6
  with:
    script: console.log(context)

on:
  issues:
    types: [opened]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: \'\xf0\x9f\x91\x8b Thanks for reporting!\'
            })

on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\'Triage\']
            })

on: pull_request_target

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            // Get a list of all issues created by the PR opener
            // See: https://octokit.github.io/rest.js/#pagination
            const creator = context.payload.sender.login
            const opts = github.rest.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: \'all\'
            })
            const issues = await github.paginate(opts)

            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }

              if (issue.pull_request) {
                return // Creator is already a contributor.
              }
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Welcome**, new contributor!

                Please make sure you\'ve read our [contributing guide](CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly \xe2\x9c\xa8`
            })

on: pull_request

jobs:
  diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const diff_url = context.payload.pull_request.diff_url
            const result = await github.request(diff_url)
            console.log(result)

jobs:
  list-issues:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const query = `query($owner:String!, $name:String!, $label:String!) {
              repository(owner:$owner, name:$name){
                issues(first:100, labels: [$label]) {
                  nodes {
                    id
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              label: \'wontfix\'
            }
            const result = await github.graphql(query, variables)
            console.log(result)

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        with:
          script: |
            const script = require(\'./path/to/script.js\')
            console.log(script({github, context}))

module.exports = ({github, context}) => {
  return context.payload.client_payload.value
}

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        env:
          SHA: \'${{env.parentSHA}}\'
        with:
          script: |
            const script = require(\'./path/to/script.js\')
            await script({github, context, core})

module.exports = async ({github, context, core}) => {
  const {SHA} = process.env
  const commit = await github.rest.repos.getCommit({
    owner: context.repo.owner,
    repo: context.repo.repo,
    ref: `${SHA}`
  })
  core.exportVariable(\'author\', commit.data.commit.author.email)
}

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm install execa
      - uses: actions/github-script@v6
        with:
          script: |
            const execa = require(\'execa\')

            const { stdout } = await execa(\'echo\', [\'hello\', \'world\'])

            console.log(stdout)

export default function printStuff() {
  console.log(\'stuff\')
}

on: push

jobs:
  print-stuff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        with:
          script: |
            const { default: printStuff } = await import(\'${{ github.workspace }}/src/print-stuff.js\')

            await printStuff()

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        env:
          FIRST_NAME: Mona
          LAST_NAME: Octocat
        with:
          script: |
            const { FIRST_NAME, LAST_NAME } = process.env

            console.log(`Hello ${FIRST_NAME} ${LAST_NAME}`)

on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_PAT }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\'Triage\']
            })
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
gradle/wrapper-validation-action,"uses: gradle/wrapper-validation-action@v1

name: ""Validate Gradle Wrapper""
on: [push, pull_request]

jobs:
  validation:
    name: ""Validation""
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
burrunan/gradle-cache-action,"- uses: burrunan/gradle-cache-action@v1
  name: Build PROJECT_NAME
  env:
    VARIABLE: VALUE
  with:
    job-id: jdk8
    arguments: build
    gradle-version: wrapper
    properties: |
      kotlin.js.compiler=ir
      kotlin.parallel.tasks.in.project=true

// settings.gradle.kts
val isCiServer = System.getenv().containsKey(""CI"")
// Cache build artifacts, so expensive operations do not need to be re-computed
buildCache {
   local {
       isEnabled = !isCiServer
   }
}

- uses: burrunan/gradle-cache-action@v1
  name: Cache .gradle
  env:
    VARIABLE: VALUE
  with:
    job-id: jdk8


    save-generated-gradle-jars: false

    remote-build-cache-proxy-enabled: false

    gradle-version: 6.5.1-custom

    read-only: ${{ github.ref != \'refs/heads/main\' }}

    arguments: build jacocoReport

    properties: |
      kotlin.js.compiler=ir
      kotlin.parallel.tasks.in.project=true

    build-root-directory: sub/directory

    execution-only-caches: true

    save-local-build-cache: false

    save-gradle-dependencies-cache: false

    gradle-dependencies-cache-key: |
      gradle/dependencies.kt
      buildSrc/**/Version.kt

    save-maven-dependencies-cache: false

    maven-local-ignore-paths: |
      org/example/
      com/example/

    concurrent: true

    gradle-build-scan-report: false

    gradle-distribution-sha-256-sum-warning: false

plugins {
    `gradle-enterprise`
}

val isCiServer = System.getenv().containsKey(""CI"")

if (isCiServer) {
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = ""https://gradle.com/terms-of-service""
            termsOfServiceAgree = ""yes""
            tag(""CI"")
        }
    }
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
reviewdog/action-shellcheck,"path: |
  tools
  src

pattern: |
  *.bash
  *.sh

exclude: |
  */.git/*
  ./.cache/*

name: reviewdog
on: [pull_request]
jobs:
  shellcheck:
    name: runner / shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Change reporter.
          path: ""."" # Optional.
          pattern: ""*.sh"" # Optional.
          exclude: ""./.git/*"" # Optional.
          check_all_files_with_shebangs: ""false"" # Optional.

*.sh text eol=lf
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
scacap/action-surefire-report,"name: build
on:
  pull_request:

jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn test --batch-mode --fail-at-end
      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1

    report_paths: '**/build/test-results/test/TEST-*.xml'

test {
  reports {
    junitXml.enabled = true
  }
}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
stCarolas/setup-maven,"    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
srvaroa/labeler,"name: Label PRs

on:
- pull_request
- issues

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: srvaroa/labeler@master
      env:
        GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

version: 1
issues: True
labels:
- label: ""WIP""
  title: ""^WIP:.*""

<label>: ""MyLabel""
<condition_name>: <condition_parameters>
<condition_name>: <condition_parameters>

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""
  mergeable: false

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""
- label: ""WIP""
  mergeable: false

version: 1
labels:
- label: ""unknown""
  negate: True
  branch: ""(master|hotfix)""

version: 1
labels:
- label: ""unknown""
  negate: True
  branch: ""master""
  title: ""(feat).*""

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""

version: 1
appendOnly: true
labels:
- label: ""WIP""
  title: ""^WIP:.*""

author-can-merge: True

authors: [""serubin""]

base-branch: ""master""

body: ""^patch.*""

branch: ""^feature/.*""

draft: True

draft: False

files: 
- ""cmd/.*_tests.go""

mergeable: True

mergeable: False

- label: ""S""
  size:
      below: 10
- label: ""M""
  size:
      above: 9
      below: 100
- label: ""L""
  size:
      above: 100

- label: ""L""
    size:
        exclude-files: [""yarn.lock""]
        above: 100

title: ""^WIP:.*""
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
release-drafter/release-drafter,"name: Release Drafter

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$RESOLVED_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$RESOLVED_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
change-title-escapes: \'\\<*_&\' # You can add # and @ to disable mentions, and add ` to disable code blocks.
version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch
template: |

  $CHANGES

version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch

references:
  - master
  - v.+

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

categories:
  - title: \'\xe2\xac\x86\xef\xb8\x8f Dependencies\'
    collapse-after: 3
    labels:
      - \'dependencies\'

exclude-labels:
  - \'skip-changelog\'

include-labels:
  - \'app-foo\'

exclude-contributors:
  - \'myusername\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

autolabeler:
  - label: \'chore\'
    files:
      - \'*.md\'
    branch:
      - \'/docs{0,1}\\/.+/\'
  - label: \'bug\'
    branch:
      - \'/fix\\/.+/\'
    title:
      - \'/fix/i\'
  - label: \'enhancement\'
    branch:
      - \'/feature\\/.+/\'
    body:
      - \'/JIRA-[0-9]{1,4}/\'

yarn install

yarn test

yarn test:watch

docker compose run --rm app

git checkout master && git pull && npm version [major | minor | patch]
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
GabrielBB/xvfb-action,"on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test
          working-directory: ./ #optional
          options: #optional
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
dessant/lock-threads,"name: \'Lock Threads\'

on:
  schedule:
    - cron: \'0 * * * *\'
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

concurrency:
  group: lock

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/lock-threads@v4

on:
  schedule:
    - cron: \'0 0 * * *\'

name: \'Lock Threads\'

on:
  schedule:
    - cron: \'0 0 * * *\'
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

concurrency:
  group: lock

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/lock-threads@v4
        with:
          github-token: ${{ github.token }}
          issue-inactive-days: \'365\'
          exclude-issue-created-before: \'\'
          exclude-issue-created-after: \'\'
          exclude-issue-created-between: \'\'
          exclude-issue-closed-before: \'\'
          exclude-issue-closed-after: \'\'
          exclude-issue-closed-between: \'\'
          include-any-issue-labels: \'\'
          include-all-issue-labels: \'\'
          exclude-any-issue-labels: \'\'
          add-issue-labels: \'\'
          remove-issue-labels: \'\'
          issue-comment: \'\'
          issue-lock-reason: \'resolved\'
          pr-inactive-days: \'365\'
          exclude-pr-created-before: \'\'
          exclude-pr-created-after: \'\'
          exclude-pr-created-between: \'\'
          exclude-pr-closed-before: \'\'
          exclude-pr-closed-after: \'\'
          exclude-pr-closed-between: \'\'
          include-any-pr-labels: \'\'
          include-all-pr-labels: \'\'
          exclude-any-pr-labels: \'\'
          add-pr-labels: \'\'
          remove-pr-labels: \'\'
          pr-comment: \'\'
          pr-lock-reason: \'resolved\'
          process-only: \'\'
          log-output: false

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-issue-created-before: \'2018-01-01T00:00:00Z\'
          exclude-any-issue-labels: \'upstream, help-wanted\'
          process-only: \'issues\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-any-pr-labels: \'wip\'
          process-only: \'prs\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-issue-created-between: \'2018-01-01T00:00:00Z/2019-12-31T23:59:59.999Z\'
          exclude-issue-closed-before: \'2018-01-01T00:00:00Z\'
          process-only: \'issues\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          include-any-issue-labels: \'incomplete, invalid\'
          include-all-pr-labels: \'qa: done, published\'


    steps:
      - uses: dessant/lock-threads@v4
        with:
          issue-inactive-days: \'180\'
          process-only: \'issues\'


    steps:
      - uses: dessant/lock-threads@v4
        with:
          add-issue-labels: \'outdated\'
          issue-comment: >
            This issue has been automatically locked since there
            has not been any recent activity after it was closed.
            Please open a new issue for related bugs.
          pr-comment: >
            This pull request has been automatically locked since there
            has not been any recent activity after it was closed.
            Please open a new issue for related bugs.

    steps:
      - uses: dessant/lock-threads@v4
        with:
          add-issue-labels: \'qa: done, archived\'
          remove-issue-labels: \'qa: primary, needs: user feedback\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ilammy/msvc-dev-cmd,"jobs:
  test:
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build something requiring CL.EXE
        run: |
          cmake -G ""NMake Makefiles"" .
          nmake

jobs:
  test:
    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86
          - amd64_arm64
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Build something requiring CL.EXE
        run: |
          cmake -G ""NMake Makefiles"" .
          nmake

jobs:
  release:
    steps:
      - name: Configure build for amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - run: build # (for amd64)

      - name: Configure build for x86
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - run: build # (for x86)

      - name: Configure build for ARM64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64

      - run: build # (for ARM64)

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
octokit/request-action,"name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  logLatestRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo latest release: \'${{ steps.get_latest_release.outputs.data }}\'""

name: Check run
on:
  push:
    branches:
      - main

jobs:
  create-file:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: create_check_run
        with:
          route: POST /repos/{owner}/{repo}/check-runs
          owner: octokit
          repo: request-action
          name: ""Test check run""
          head_sha: ${{ github.sha }}
          output: | # The | is significant!
            title: Test check run title
            summary: A summary of the test check run
            images:
              - alt: Test image
                image_url: https://octodex.github.com/images/jetpacktocat.png
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: octokit/request-action@v2.x
        id: download_file
        with:
          route: GET /repos/OWNER/REPO/contents/README.md
          owner: octokit
          repo: request-action
          mediaType: | # The | is significant!
            format: raw
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: octokit/request-action@v2.x
        id: update_check_run
        with:
          route: PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}
          owner: octokit
          repo: request-action
          check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
          conclusion: ""success""
          status: ""completed""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  handleError:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/{owner}/{repo}/releases/v0.9.9
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo Release found: \'${{ steps.get_release.outputs.data }}\'""
      - run: ""echo Release could not be found. Request failed with status \'${{ steps.get_release.outputs.status }}\'""
        if: ${{ failure() }}

env:
  REQUEST_BODY: |
    Multi-line string with *special* characters:
    - ""\'`
with:
  body: ${{ toJSON(env.REQUEST_BODY) }}

  body: |
    |
    ${{ env.REQUEST_BODY }}


< 200 451ms
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
DoozyX/clang-format-lint-action,"./src/third_party/*
./src/ignored/*

name: Run clang-format Linter

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.16.2
      with:
        source: '.'
        exclude: './lib'
        extensions: 'h,cpp,c'
        clangFormatVersion: 16
        inplace: True
    - uses: EndBug/add-and-commit@v9
      with:
        author_name: Clang Robot
        author_email: robot@example.com
        message: 'Committing clang-format changes'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: test-clang-format

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.14
      with:
        source: '.'
        exclude: './third_party ./external'
        extensions: 'h,cpp'
        clangFormatVersion: 14
        style: chromium

docker build -t clang-format-lint github.com/DoozyX/clang-format-lint-action

docker run -it --rm --workdir /src -v $(pwd):/src clang-format-lint \\
    --clang-format-executable /clang-format/clang-format9 -r --exclude .git .
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
charmixer/auto-changelog-action,"user:
  description: \'Username of the owner of target GitHub repo (default: extracted from $GITHUB_REPOSITORY)\'
  required: false
project:
  description: \'Name of project on GitHub (default: extracted from $GITHUB_REPOSITORY)\'
  required: false
release_branch:
  description: \'Limit pull requests to the release branch, such as master or release (required, default: master)\'
  required: false
  default: \'master\'
output:
  description: \'Output file. To print to STDOUT instead, use blank as path. (required, default: CHANGELOG.md)\'
  required: false
  default: \'CHANGELOG.md\'
base:
  description: \'Optional base file to append generated changes to (default: HISTORY.md)\'
  required: false
token:
  description: \'To make more than 50 requests per hour your GitHub token is required. You can generate it at: https://github.com/settings/tokens/new<Paste>\'
  required: false
since_tag:
  description: \'Changelog will start after specified tag.\'
  required: false
due_tag:
  description: \'Changelog will end before specified tag.\'
  required: false
exclude_tags:
  description: \'Changelog will exclude specified tags (comma seperated)\'
  required: false
exclude_labels:
  description: \'Issues with the specified labels will be excluded from changelog. Default is ""duplicate,question,invalid,wontfix"".\'
  required: false
date_format:
  description: \'Date format. Default is %Y-%m-%d\'
  required: false
future_release:
  description: \'Put the unreleased changes in the specified release number.\'
  required: false
issue_line_labels:
  description: \'The specified labels will be shown in brackets next to each matching issue. Use ""ALL"" to show all labels. Default is [].\'
  required: false
github_site:
  description: \'The Enterprise GitHub site where your project is hosted if using GitHub Enterprise.\'
  required: false
github_api:
  description: \'The enterprise endpoint to use for your GitHub API if using GitHub Enterprise.\'
  required: false
exclude_tags_regex:
  description: \'Apply a regular expression on tag names so that they can be excluded, for example: --exclude-tags-regex "".*+d{1,}"".\'
  required: false

name: Changelog

on:
  pull_request:
    types: [closed]

  release:
    types: [published]

  issues:
    types: [closed, edited]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    name: Generate changelog for master branch
    steps:
      - uses: actions/checkout@v1

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.YOUR_GITHUB_TOKEN or GITHUB_TOKEN }}

      - name: Commit files
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_EMAIL: ${{ secrets.YOUR_GITHUB_EMAIL }}
        run: |
          git config --local user.email ""$CI_EMAIL""
          git config --local user.name ""$CI_USER""
          git add CHANGELOG.md && git commit -m \'Updated CHANGELOG.md\' && echo ""push=true"" >> $GITHUB_ENV || echo ""No changes to CHANGELOG.md""

      - name: Push changes
        if: env.push == \'true\'
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN or GITHUB_TOKEN }}
        run: |
          git push ""https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git"" HEAD:master

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
actions/setup-elixir,"on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: \'22.2\'
          elixir-version: \'1.9.4\'
      - run: mix deps.get
      - run: mix test

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [\'20.3\', \'21.3\', \'22.2\']
        elixir: [\'1.8.2\', \'1.9.4\']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - run: mix deps.get
      - run: mix test

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: [\'5432:5432\']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: \'22.2\'
          elixir-version: \'1.9.4\'
      - run: mix deps.get
      - run: mix test


use Mix.Config

config :app, App.Repo,
  database: ""my_app_test"",
  hostname: ""localhost"",
  pool: Ecto.Adapters.SQL.Sandbox

if System.get_env(""GITHUB_ACTIONS"") do
  config :app, App.Repo,
    username: ""postgres"",
    password: ""postgres""
end
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
eregon/use-ruby-action,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
cadwallion/publish-rubygems-action,"name: Publish Gem

on:
  push:
    branches:
      - ""*""
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Release Gem
        if: contains(github.ref, \'refs/tags/v\')
        uses: cadwallion/publish-rubygems-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RUBYGEMS_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}
          RELEASE_COMMAND: rake release
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
textbook/git-checkout-submodule-action,"steps:
- name: Checkout repository
  uses: actions/checkout@master
- name: Checkout submodules
  uses: textbook/git-checkout-submodule-action@master

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  uses: textbook/git-checkout-submodule-action@master
  with:
    remote: true

steps:
- name: Checkout repository and submodules
  uses: actions/checkout@v2
  with:
    submodules: recursive

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  run: git submodule update --init --recursive

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  uses: srt32/git-actions@v0.0.3
  with:
    args: git submodule update --init --recursive
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
burnett01/rsync-deployments,"name: DEPLOY
on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: /var/www/html/
        remote_host: example.com
        remote_user: debian
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete --exclude="""" --include="""" --filter=""""
        path: src/
        remote_path: /var/www/html/
        remote_host: example.com
        remote_port: 5555
        remote_user: debian
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_HOST }}
        remote_port: ${{ secrets.DEPLOY_PORT }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_HOST }}
        remote_port: ${{ secrets.DEPLOY_PORT }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}
        remote_key_pass: ${{ secrets.DEPLOY_KEY_PASS }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
at-wat/bloom-release-action,"name: bloom-release
on:
  push:
    tags:
      - \'[0-9]+.[0-9]+.[0-9]+\'

jobs:
  bloom-release:
    runs-on: ubuntu-latest
    steps:
      - name: bloom release
        uses: at-wat/bloom-release-action@v0
        with:
          ros_distro: kinetic melodic
          github_token_bloom: ${{ secrets.GITHUB_TOKEN_BLOOM }}
          github_user: @@MAINTAINER_LOGIN@@
          git_user: @@MAINTAINER_NAME@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          release_repository_push_url: https://github.com/${{ github.repository }}-release.git

name: bloom-release
on:
  push:
    paths:
      - package.xml
      - \'*/package.xml\'
    branches:
      - master

jobs:
  bloom-release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bloom release
        uses: at-wat/bloom-release-action@v0
        with:
          ros_distro: kinetic melodic
          github_token_bloom: ${{ secrets.GITHUB_TOKEN_BLOOM }}
          github_user: @@MAINTAINER_LOGIN@@
          git_user: @@MAINTAINER_NAME@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          release_repository_push_url: https://github.com/${{ github.repository }}-release.git
          tag_and_release: true

      - name: create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bloom_release.outputs.version }}
          release_name: ${{ steps.bloom_release.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
at-wat/catkin-release-action,"name: release-candidate
on:
  issues:
    types: [opened]

jobs:
  release-candidate:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release ')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create release
        id: create_release
        uses: at-wat/catkin-release-action@v1
        with:
          issue_title: ${{ github.event.issue.title }}
          git_user: @@MAINTAINER_LOGIN@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: open pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.create_release.outputs.created_branch }}
          destination_branch: master
          pr_title: Release ${{ steps.create_release.outputs.version}}
          pr_body: close \\#${{ github.event.issue.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
repo-sync/pull-request,"
on:
  push:
    branches:
      - feature-1

permissions:
  pull-requests: write

jobs:
  pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: pull-request
        run: |
          gh_pr_up() { gh pr create $* || gh pr edit $* }
          gh_pr_up --title ""My pull request"" --body ""Description""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
emgre/setup-java,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'9.0.4\' # The JDK version to make available on the path.
    java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
    architecture: x64 # (x64 or x86) - defaults to x64
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'4.0.0\'
    architecture: x64
    jdkFile: <path to jdkFile> # Optional - jdkFile to install java from. Useful for versions not found on Zulu Community CDN
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

    - name: Publish to Apache Maven Central
      run: mvn deploy 
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}

<servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
</servers>

<servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
</servers>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
nuget/setup-nuget,"steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-api-key: ${{ secrets.NuGetAPIKey }}
    nuget-version: \'5.x\'
- run: nuget restore MyProject.sln

name: NuGet Restore
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        nuget: [latest, preview, 4.x, 5.3.1]
    name: NuGet@${{ matrix.nuget }} sample
    steps:
      - uses: actions/checkout@master
      - name: Setup NuGet.exe
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ matrix.nuget }}
      - run: nuget restore MyProject.sln

steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-version: \'5.x\'
- uses: actions/cache@v1
  id: cache
  with:
    path: ~/.nuget/packages
    key: ${{ runner.os }}-nuget-${{ hashFiles(\'**/packages.lock.json\') }}
- name: NuGet Restore
  if: steps.cache.outputs.cache-hit != \'true\'
  run: nuget restore MyProject.sln

$ npm install

$ npm run build && npm run package

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

$ npm run package
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
automattic/action-jetpack-build-to-branch,"- name: Build production version of Master
  uses: Automattic/action-jetpack-build-to-branch@master
  with:
    pull_branch: \'master\'
    push_branch: \'master-built\'
    commit_message: \'Build master\'
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jwalton/gh-find-current-pr,"    steps:
      - uses: actions/checkout@v1
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open
      - run: echo ""Your PR is ${PR}""
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/labeler,"- any: [\'list\', \'of\', \'globs\']
  all: [\'list\', \'of\', \'globs\']

label1:
- example1/*

label1:
- any: [\'example1/*\']

label1:
- example/**

label2: example2/*

label3:
- \'**/*.txt\'


repo:
- \'*\'

\'@domain/core\':
- package/core/**

test:
- src/**/*.spec.js

source:
- any: [\'src/**\', \'!src/docs/*\']

frontend:
- any: [\'src/**/*.js\']
  all: [\'!src/main.js\']

AnyChange:
- \'**\'
- \'**/.*\'
- \'**/.*/**\'
- \'**/.*/**/.*\'

AnyChange:
- \'**\'

name: ""Pull Request Labeler""
on:
- pull_request_target

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@v4

    steps:
    - uses: actions/checkout@v3 # Uploads repository content to the runner
      with:
        repository: ""owner/repositoryName"" # The one of the available inputs, visit https://github.com/actions/checkout#readme to find more
    - uses: actions/labeler@v4

label1:
- path/to/folder/**/*
- path/to/folder/**/.*

label1:
- path/to/folder/**

name: ""Label Previous Pull Requests""
on:
  schedule:
    - cron: ""0 1 * * 1""

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/labeler@v4
      with:        
        pr-number: |
          1
          2
          3

name: ""My workflow""
on:
- pull_request_target

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - id: label-the-PR
      uses: actions/labeler@v4
      
    - id: run-frontend-tests
      if: contains(steps.label-the-PR.outputs.all-labels, \'frontend\')
      run: |
        echo ""Running frontend tests...""
  
    - id: run-backend-tests
      if: contains(steps.label-the-PR.outputs.all-labels, \'backend\')
      run: |
        echo ""Running backend tests...""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
automattic/action-required-review,"name: Required review check
on:
  pull_request_review:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  check:
    name: Checking required reviews
    runs-on: ubuntu-latest

    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
      - uses: Automattic/action-required-review@v3
        with:
          token: ${{ secrets.REQUIRED_REVIEWS_TOKEN }}
          requirements: |
            - paths: unmatched
              teams:
                - maintenance

- uses: Automattic/action-required-review
  with:
    requirements: |
      - name: Docs
        paths:
         - \'docs/\'
        teams:
          - documentation

      - name: Everything else
        paths: unmatched
        teams:
          - maintenance

    requirements-file: .github/required-review.yaml

    status: Required review

    fail: true

    request-reviews: true

    token: ${{ secrets.SOME_TOKEN }}

- name: Docs
  paths:
   - \'docs/**\'
  teams:
   - documentation

- name: Lockfiles
  paths:
   - \'packages/*/composer.lock\'
   - \'**.css\'
  consume: true
  teams:
   - everyone

- name: Some package
  paths:
   - \'packages/some-package/**\'
  teams:
   - some-package-team

- name: Front end
  paths:
   - \'**.jsx\'
   - \'**.css\'
  teams:
   - all-of:
      - front-end
      - design
   - maintenance

- name: Misc
  paths: unmatched
  teams:
    - maintenance
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
numworks/setup-msys2,"  - uses: numworks/setup-msys2@v1
  - run: msys2do uname -a

  - uses: numworks/setup-msys2@v1
    with:
      msystem: MSYS

  - uses: numworks/setup-msys2@v1
    with:
      msystem: MSYS
  - run: msys2do makepkg-mingw -sCLfc --noconfirm --noprogressbar
  - run: msys2do pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
  - run: |
      set MSYSTEM=MINGW64
      msys2do <command to test the package>

  - uses: numworks/setup-msys2@v1
    with:
      path-type: inherit
  - run: msys2do <command>

  - uses: numworks/setup-msys2@v1
  - run: msys2do <command>
    env:
      MSYS2_PATH_TYPE: inherit

  - uses: numworks/setup-msys2@v1
    with:
      update: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zendesk/checkout,"- uses: actions/checkout@v3
  with:
    repository: \'\'

    ref: \'\'

    token: \'\'

    ssh-key: \'\'

    ssh-known-hosts: \'\'

    ssh-strict: \'\'

    persist-credentials: \'\'

    path: \'\'

    clean: \'\'

    sparse-checkout: \'\'

    sparse-checkout-cone-mode: \'\'

    fetch-depth: \'\'

    lfs: \'\'

    submodules: \'\'

    set-safe-directory: \'\'

    github-server-url: \'\'

- uses: actions/checkout@v3
  with:
    sparse-checkout: .

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      .github
      src

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false

- uses: actions/checkout@v3
  with:
    fetch-depth: 0

- uses: actions/checkout@v3
  with:
    ref: my-branch

- uses: actions/checkout@v3
  with:
    fetch-depth: 2
- run: git checkout HEAD^

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v3
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools

- uses: actions/checkout@v3
  with:
    ref: ${{ github.event.pull_request.head.sha }}

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m ""generated""
          git push
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zendesk/setup-ruby,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jurplel/install-qt-action,"    - name: Install Qt
      uses: jurplel/install-qt-action@v3

    tools: \'tools_ifw tools_qtcreator,qt.tools.qtcreator\'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: \'5.15.2\'
        host: \'windows\'
        target: \'desktop\'
        arch: \'win64_msvc2019_64\'
        dir: \'${{ github.workspace }}/example/\'
        install-deps: \'true\'
        modules: \'qtcharts qtwebengine\'
        archives: \'qtbase qtsvg\'
        cache: \'false\'
        cache-key-prefix: \'install-qt-action\'
        setup-python: \'true\'
        tools: \'tools_ifw tools_qtcreator,qt.tools.qtcreator\'
        set-env: \'true\'
        tools-only: \'false\'
        aqtversion: \'==3.1.*\'
        py7zrversion: \'==0.20.*\'
        extra: \'--external 7z\'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ouuan/install-qt-action,"    - name: Install Qt
      uses: jurplel/install-qt-action@v2

- name: Cache Qt
  id: cache-qt
  uses: actions/cache@v1
  with:
    path: ../Qt
    key: QtCache

- name: Install Qt
  uses: jurplel/install-qt-action@v2
  with:
    cached: ${{ steps.cache-qt.outputs.cache-hit }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
baztian/coveralls-python-action,"name: push
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1

    - name: Unit tests
      run: make test

    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true

- uses: AndreMiras/coveralls-python-action@develop
  with:
    github-token: \'\'
    parallel: \'\'
    parallel-finished: \'\'
    debug: \'\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
skx/github-action-publish-binaries,"on:
  release:
    types: [created]
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Generate the artifacts
        uses: skx/github-action-build@master
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: \'example-*\'

  upload_artifacts:
    name: Upload Artifacts
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@release-1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create_release.outputs.id }}
          args: \'*.bin\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
actions-rs/toolchain,"on: [push]

name: build

jobs:
  check:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy


      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

- name: Install minimal nightly
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: nightly

- name: Install minimal stable with clippy and rustfmt
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: stable
    components: rustfmt, clippy

- name: Install minimal nightly with clippy and rustfmt
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: nightly
    components: rustfmt, clippy
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
samuelmeuli/action-maven-publish,"name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
artob/gitstamp-action,"---
name: Gitstamp
on: [push]
jobs:
  gitstamp:
    runs-on: ubuntu-latest
    name: Timestamp commit with Gitstamp
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Submit Gitstamp transaction
        uses: weavery/gitstamp-action@v1
        with:
          wallet-key: ${{ secrets.GITSTAMP_KEYFILE }}
          commit-link: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pact-foundation/release-gem,"name: Release gem

on:
  repository_dispatch:
    types:
      - release-triggered

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: pact-foundation/release-gem@v0.0.11
      env:
        GEM_HOST_API_KEY: '${{ secrets.RUBYGEMS_API_KEY }}'
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        INCREMENT: '${{ github.event.client_payload.increment }}'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peter-evans/repository-dispatch,"      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: my-event

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: username/my-repo
          event-type: my-event

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: username/my-repo
          event-type: my-event
          client-payload: \'{""ref"": ""${{ github.ref }}"", ""sha"": ""${{ github.sha }}""}\'

name: Repository Dispatch
on:
  repository_dispatch:
    types: [my-event]
jobs:
  myEvent:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - run: echo ${{ github.event.client_payload.sha }}

jobs:
  build:

  dispatch:
    needs: build
    strategy:
      matrix:
        repo: [\'my-org/repo1\', \'my-org/repo2\', \'my-org/repo3\']
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ matrix.repo }}
          event-type: my-event

No more than 10 properties are allowed; 14 were supplied.

client-payload: ${{ toJson(github) }}

client-payload: \'{""github"": ${{ toJson(github) }}}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jessfraz/branch-cleanup-action,"workflow ""on pull request merge, delete the branch"" {
  on = ""pull_request""
  resolves = [""branch cleanup""]
}

action ""branch cleanup"" {
  uses = ""jessfraz/branch-cleanup-action@master""
  secrets = [""GITHUB_TOKEN""]
}

action ""branch cleanup"" {
  uses = ""jessfraz/branch-cleanup-action@master""
  secrets = [""GITHUB_TOKEN""]

  env = {
    NO_BRANCH_DELETED_EXIT_CODE = ""0""
  }
}

$ make test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
crazy-max/ghaction-docker-buildx,"      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

name: buildx

on:
  pull_request:
    branches: master
  push:
    branches: master
    tags:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx
        run: |
          docker buildx build \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=false"" \\
            --file ./test/Dockerfile ./test

name: buildx

on:
  schedule:
    - cron: \'0 10 * * *\' # everyday at 10am
  pull_request:
    branches: master
  push:
    branches: master
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=crazymax/diun
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ ""${{ github.event_name }}"" = ""schedule"" ]; then
            VERSION=nightly
          fi

          TAGS=""--tag ${DOCKER_IMAGE}:${VERSION}""
          if [[ $VERSION =~ ^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$ ]]; then
            TAGS=""$TAGS --tag ${DOCKER_IMAGE}:latest""
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \\
            --build-arg VERSION=${VERSION} \\
            --build-arg BUILD_DATE=$(date -u +\'%Y-%m-%dT%H:%M:%SZ\') \\
            --build-arg VCS_REF=${GITHUB_SHA::8} \\
            ${TAGS} --file ./test/Dockerfile ./test
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build --output ""type=image,push=false"" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Login to DockerHub
        if: success() && github.event_name != \'pull_request\'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Docker Buildx (push)
        if: success() && github.event_name != \'pull_request\'
        run: |
          docker buildx build --output ""type=image,push=true"" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Inspect image
        if: always() && github.event_name != \'pull_request\'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

name: buildx

on:
  pull_request:
    branches: master
  push:
    branches: master

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build \\
            --cache-from ""type=local,src=/tmp/.buildx-cache"" \\
            --cache-to ""type=local,dest=/tmp/.buildx-cache"" \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=false"" \\
            --tag crazymax/diun:latest \\
            --file ./Dockerfile-diun ./
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Docker Buildx (push)
        run: |
          docker buildx build \\
            --cache-from ""type=local,src=/tmp/.buildx-cache"" \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=true"" \\
            --tag crazymax/diun:latest \\
            --file ./Dockerfile-diun ./
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect crazymax/diun:latest

version: 2
updates:
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
reviewdog/action-hadolint,"with:
  hadolint_flags: --trusted-registry docker.io

with:
  hadolint_ignore: DL3009 DL3008

with:
  exclude: |
    /vendor/*
    Dockerfile.*

name: reviewdog
on: [pull_request]
jobs:
  hadolint:
    name: runner / hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          reporter: github-pr-review # Default is github-pr-check
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions-hub/docker,"- name: Login to docker hub
  uses: actions-hub/docker/login@master
  env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

- name: Build :latest
  run: docker build -t ${GITHUB_REPOSITORY}:latest .

- name: Push to docker hub :latest
  uses: actions-hub/docker@master
  with:
    args: push ${GITHUB_REPOSITORY}:latest

name: Docker registry

on: [push]

jobs:
  github:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v1

      - name: Login to github registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY_URL: docker.pkg.github.com

      - name: Build :latest
        if: success()
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/app:latest .
        
      - name: Push to docker hub :latest
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push docker.pkg.github.com/${{ github.repository }}:latest

name: Docker registry

on: 
   push:
     tags:
       - 'v*'

jobs:
  github:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v1

      - name: Login to github registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY_URL: docker.pkg.github.com

      - name: Build :tag
        if: success()
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/app:${IMAGE_TAG} .

      - name: Push to docker hub :tag
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push docker.pkg.github.com/${{ github.repository }}:${IMAGE_TAG}

name: Deploy to docker hub

on:
   push:
     branches:    
      - master
     tags:
       - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@master

      - name: Login to docker hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        if: success()
        run: docker build -t ${GITHUB_REPOSITORY}:${IMAGE_TAG} .

      - name: Push to docker registry
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:${IMAGE_TAG}

name: Run docker CLI

on:
   push:
     branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Use Docker
        uses: actions-hub/docker/cli@master
        env:
          SKIP_LOGIN: true

      - run: docker --version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
softprops/action-gh-release,"name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')

name: Main

on:
  push:
    tags:
      - ""v*.*.*""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: echo ${{ github.sha }} > Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          files: Release.txt

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: echo ${{ github.sha }} > Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          files: |
            Release.txt
            LICENSE

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate Changelog
        run: echo ""# Good things have arrived"" > ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: my_gh_org/my_gh_repo

permissions:
  contents: write

permissions:
  contents: write
  discussions: write
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
dschep/install-pipenv-action,"steps:
- uses: actions/checkout@master
- uses: actions/setup-python@v1
- uses: dschep/install-pipenv-action@v1
- run: pipenv run my_script.py

- uses: dschep/install-pipenv-action@v1
  with:
    version: 2018.11.26
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
BSFishy/pip-action,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-python@v1
- uses: BSFishy/pip-action@v1
  with:
    packages: |
      package1
      package2
- run: python main.py

- uses: BSFishy/pip-action@v1
  with:
    packages: package
    requirements: requirements.txt
    constraints: constraints.txt
    no-deps: true
    pre: true
    editable: editable
    platform: ':all:'
    upgrade: true
    extra: extra options

packages: package1         # python -m pip install package1
packages: package1==1.0.0  # python -m pip install package1==1.0.0

packages: package1 package2                # python -m pip install package1 package2
packages: package1==1.0.0 package2         # python -m pip install package1==1.0.0 package2
packages: package1==1.0.0 package2==1.2.3  # python -m pip install package1==1.0.0 package2==1.2.3

packages: |
  package1
packages: |
  package1==1.0.0
packages: |
  package1
  package2
packages: |
  package1==1.0.0
  package2
packages: |
  package1==1.0.0
  package2==1.2.3

packages: package1 == 1.0.0

packages: |
  package1 == 1.0.0

requirements: ''                    # python -m pip install package1
requirements: requirements.txt      # python -m pip install --requirement requirements.txt
requirements: src/requirements.txt  # python -m pip install --requirement src/requirements.txt

constraints: ''                   # python -m pip install package1
constraints: constraints.txt      # python -m pip install --constraint constraints.txt package1
constraints: src/constraints.txt  # python -m pip install --constraint src/constraints.txt package1

no-deps: true   # python -m pip install --no-deps package1
no-deps: false  # python -m pip install package1

pre: true   # python -m pip install --pre package1
pre: false  # python -m pip install package1

editable: ''                                              # python -m pip install package1
editable: path/to/SomeProject                             # python -m pip install --editable path/to/SomeProject
editable: git+http://repo/my_project.git#egg=SomeProject  # python -m pip install --editable git+http://repo/my_project.git#egg=SomeProject

platform: ''                         # python -m pip install package1
platform: linux_x86_64               # python -m pip install --platform linux_x86_64 package1
platform: linux_ubuntu_18_04_x86_64  # python -m pip install --platform linux_ubuntu_18_04_x86_64 package1

upgrade: true   # python -m pip install --upgrade package1
upgrade: false  # python -m pip install package1

extra: ''      # python -m pip install package1
extra: --user  # python -m pip install --user package1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
gsactions/commit-message-checker,"name: \'Commit Message Check\'
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  pull_request_target:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  push:
    branches:
      - main
      - \'releases/*\'

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Check Commit Type
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'\\[[^]]+\\] .+$\'
          flags: \'gm\'
          error: \'Your first line has to contain a commit type like ""[BUGFIX]"".\'
      - name: Check Line Length
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'^[^#].{74}\'
          error: \'The maximum line length of 74 characters is exceeded.\'
          excludeDescription: \'true\' # optional: this excludes the description body of a pull request
          excludeTitle: \'true\' # optional: this excludes the title of a pull request
          checkAllCommitMessages: \'true\' # optional: this checks all commits associated with a pull request
          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true
      - name: Check for Resolves / Fixes
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'^.+(Resolves|Fixes): \\#[0-9]+$\'
          error: \'You need at least one ""Resolves|Fixes: #<issue number>"" line.\'

git clone https://github.com/gsactions/commit-message-checker.git
npm install
npm run build
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
scottbrenner/generate-changelog-action,"- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    package-dir: \'root/to/my/package.json\'

- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    from-tag: v1.0
    to-tag: HEAD
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
xbmc/action-kodi-addon-checker,"name: Kodi Addon-Check

on: [push, pull_request]

jobs:
  kodi-addon-checker:
    runs-on: ubuntu-latest
    name: Kodi addon checker
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Kodi addon checker validation
      id: kodi-addon-checker
      uses: xbmc/action-kodi-addon-checker@v1.1
      with:
        kodi-version: leia
        is-pr: false
        addon-id: ${{ github.event.repository.name }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
xbmc/action-kodi-addon-submitter,"name: Kodi Addon-Submitter

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-submitter:
    runs-on: ubuntu-latest
    name: Kodi addon submitter
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Generate distribution zip and submit to official kodi repository
      id: kodi-addon-submitter
      uses: xbmc/action-kodi-addon-submitter@v1.3
      with: # Replace all the below variables
        kodi-repository: repo-plugins
        kodi-version: leia
        addon-id: plugin.video.example
        kodi-matrix: false # Submit a Python 2/3 compatible addon to matrix branch in addition to the target branch
        sub-directory: false
      env: # Make sure you create the below secrets (GH_TOKEN and EMAIL)
        GH_USERNAME: ${{ github.actor }}
        GH_TOKEN: ${{secrets.GH_TOKEN}}
        EMAIL: ${{secrets.EMAIL}}

name: Kodi Addon-Submitter

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-submitter:
    runs-on: ubuntu-latest
    name: Kodi addon submitter
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Generate distribution zip and submit to official kodi repository
      id: kodi-addon-submitter
      uses: xbmc/action-kodi-addon-submitter@v1.3
      with: # Replace all the below values
        kodi-repository: repo-plugins
        kodi-version: leia
        addon-id: plugin.video.example
        kodi-matrix: false # Submit a Python 2/3 compatible addon to matrix branch in addition to the target branch
        sub-directory: false
      env: # Make sure you create the below secrets (GH_TOKEN and EMAIL)
        GH_USERNAME: ${{ github.actor }}
        GH_TOKEN: ${{secrets.GH_TOKEN}}
        EMAIL: ${{secrets.EMAIL}}
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Addon zip to github release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.kodi-addon-submitter.outputs.addon-zip }}
        asset_name: ${{ steps.kodi-addon-submitter.outputs.addon-zip }}
        asset_content_type: application/zip


.gitignore export-ignore
.gitattributes export-ignore
.github export-ignore
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
aws-actions/stale-issue-cleanup,"$ yarn install

$ yarn test

$ docker build -t stale-issue-cleanup .
$ docker run --label stale-issue-cleanup --env-file test/local-docker.env stale-issue-cleanup

steps:
- uses: aws-actions/stale-issue-cleanup@v3
  with:
    issue-types: issues,pull_requests

    stale-issue-message: Stale issue message
    stale-pr-message: Stale pr message
    ancient-issue-message: Ancient issue message
    ancient-pr-message: Ancient pr message


    stale-issue-label: closing-soon
    exempt-issue-labels: awaiting-approval
    stale-pr-label: no-pr-activity
    exempt-pr-labels: awaiting-approval
    response-requested-label: response-requested
    closed-for-staleness-label: closed-for-staleness

    days-before-stale: 4
    days-before-close: 7
    days-before-ancient: 365
    minimum-upvotes-to-exempt: 10

    loglevel: DEBUG
    dry-run: true

    repo-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zeek/ci-email-action,"name: CI Email Notification
on:
  check_suite:
    types: [completed]
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send CI Email Notification
        uses: jsiwek/ci-email-action@master
        env:
          CI_APP_NAME: ""Cirrus CI""
          BRANCH_REGEX: ""master|release/.*""
          SKIP_CONCLUSIONS: ""neutral,cancelled""
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_REPLY_TO: ${{ secrets.MAIL_REPLY_TO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
heinrichreimer/action-github-changelog-generator,"name: Changelog
on:
  release:
    types:
      - created
jobs:
  changelog:
    runs-on: ubuntu-20.04
    steps:
      - name: ""\xe2\x9c\x8f\xef\xb8\x8f Generate release changelog""
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ad-m/github-push-action,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
    - name: Create local changes
      run: |
        ...
    - name: Commit files
      run: |
        git config --local user.email ""41898282+github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

name: Example
on: [pull_request, pull_request_target]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.head_ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        force_with_lease: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    - name: Commit files
      run: |
        git config --local user.email ""test@test.com""
        git config --local user.name ""Test""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PAT_TOKEN }}
        repository: Test/test
        force: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git tag -d $GITHUB_REF_NAME
        git tag $GITHUB_REF_NAME
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        force: true
        tags: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        persist-credentials: true
    - name: Create local changes
      run: |
        ...
    - name: Commit files
      run: |
        git config --local user.email ""41898282+github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        ssh: true
        branch: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      - name: Commit files
        run: |
          git config --local user.email ""test@test.com""
          git config --local user.name ""Test""
          git commit -a -m ""Add changes""
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          repository: Test/test
          force_with_lease: true

Push to branch ***************
fatal: unsafe repository (\'/github/workspace\' is owned by someone else)
To add an exception for this directory, call:

\tgit config --global --add safe.directory /github/workspace

To https://github.com/Test/test_repository
 ! [rejected]        0.0.9 -> 0.0.9 (stale info)
error: failed to push some refs to \'https://github.com/Test/test_repository\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
browniebroke/action-github-changelog-generator,"uses: heinrichreimer/github-changelog-generator-action@v2.1.1
with:
  token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
stefanzweifel/git-auto-commit-action,"- uses: stefanzweifel/git-auto-commit-action@v4

name: Format

on: push

jobs:
  format-code:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3


      - uses: stefanzweifel/git-auto-commit-action@v4

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    commit_message: Automated Change

    branch: feature-123

    commit_options: \'--no-verify --signoff\'

    file_pattern: \'*.php src/*.js tests/*.js\'

    repository: .

    commit_user_name: My GitHub Actions Bot # defaults to ""github-actions[bot]""
    commit_user_email: my-github-actions-bot@example.org # defaults to ""41898282+github-actions[bot]@users.noreply.github.com""
    commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

    tagging_message: \'v1.0.0\'

    status_options: \'--untracked-files=no\'

    add_options: \'-u\'

    push_options: \'--force\'
    
    skip_dirty_check: true    
    
    skip_fetch: true    
    
    skip_checkout: true

    disable_globbing: true

    create_branch: true

name: php-cs-fixer

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes

  - name: ""Run if changes have been detected""
    if: steps.auto-commit-action.outputs.changes_detected == \'true\'
    run: echo ""Changes!""

  - name: ""Run if no changes have been detected""
    if: steps.auto-commit-action.outputs.changes_detected == \'false\'
    run: echo ""No Changes!""

- uses: actions/checkout@v3
  with:
    ref: ${{ github.head_ref }}

- uses: actions/checkout@v3
  with:
    token: ${{ secrets.PAT }}

    - run: echo ""Commit Message 1"" >> commitmessage.txt
    - run: echo ""Commit Message 2"" >> commitmessage.txt
    - run: echo ""Commit Message 3"" >> commitmessage.txt

    - name: Set commit message
      id: commit_message_step
      run: |
        echo \'commit_message<<EOF\' >> $GITHUB_OUTPUT
        cat commitmessage.txt >> $GITHUB_OUTPUT
        echo \'EOF\' >> $GITHUB_OUTPUT

    - run: rm -rf commitmessage.txt

    - uses: stefanzweifel/git-auto-commit-action@v4
      id: commit
      with:
        commit_message: ${{ steps.commit_message_step.outputs.commit_message }}

name: Format PHP

on:
  push:
    branches:
      - main
  pull_request_target:

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}

        ref: ${{ github.head_ref }}

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4

name: Format PHP

on: [push, pull_request, pull_request_target]

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes

- uses: actions/checkout@master
  with:
    fetch-depth: 2


- name: Get last commit message
  id: last-commit-message
  run: |
    echo ""msg=$(git log -1 --pretty=%s)"" >> $GITHUB_OUTPUT

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    commit_message: ${{ steps.last-commit-message.outputs.msg }}
    commit_options: \'--amend --no-edit\'
    push_options: \'--force\'
    skip_fetch: true

- uses: actions/checkout@v3
  with:
    token: ${{ secrets.PAT }}

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes
        push_options: --force

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    file_pattern: \'*.md\'
    disable_globbing: true

npm install
yarn

npm run test
yarn test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
tiangolo/issue-manager,"name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: \'{""answered"": {}}\'

Assuming the original need was handled, this will be automatically closed now.

{""answered"": {}}

\'{""answered"": {}}\'

{
    ""answered"": {
        ""delay"": ""P3DT12H30M5S"",
        ""message"": ""It seems the issue was answered, closing this now.""
    },
    ""validated"": {
        ""delay"": 300,
        ""message"": ""The issue could not be validated after 5 minutes. Closing now.""
    },
    ""waiting"": {
        ""delay"": 691200,
        ""message"": ""Closing after 8 days of waiting for the additional info requested.""
    },
    ""needs-tests"": {
      ""delay"": 691200,
      ""message"": ""This PR will be closed after waiting 8 days for tests to be added. Please create a new one with tests.""
    }
}

It seems the issue was answered, closing this now.

The issue could not be validated after 5 minutes. Closing now.

Closing after 10 days of waiting for the additional info requested.

This PR will be closed after waiting 8 days for tests to be added. Please create a new one with tests.

Assuming the original issue was solved, it will be automatically closed now.

name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: >
            {
                ""answered"": {
                    ""delay"": ""P3DT12H30M5S"",
                    ""message"": ""It seems the issue was answered, closing this now.""
                },
                ""validated"": {
                    ""delay"": 300,
                    ""message"": ""The issue could not be validated after 5 minutes. Closing now.""
                },
                ""waiting"": {
                    ""delay"": 691200,
                    ""message"": ""Closing after 8 days of waiting for the additional info requested.""
                }
            }

{
    ""$schema"": ""https://raw.githubusercontent.com/tiangolo/issue-manager/master/schema.json""
}

name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: >
            {
                ""$schema"": ""https://raw.githubusercontent.com/tiangolo/issue-manager/master/schema.json"",
                ""answered"": {
                    ""delay"": ""P3DT12H30M5S"",
                    ""message"": ""It seems the issue was answered, closing this now."",
                    ""remove_label_on_comment"": false,
                    ""remove_label_on_close"": false
                },
                ""validated"": {
                    ""delay"": 300,
                    ""message"": ""The issue could not be validated after 5 minutes. Closing now."",
                    ""remove_label_on_comment"": true,
                    ""remove_label_on_close"": false
                },
                ""waiting"": {
                    ""delay"": 691200,
                    ""message"": ""Closing after 8 days of waiting for the additional info requested."",
                    ""remove_label_on_comment"": true,
                    ""remove_label_on_close"": true
                }
            }

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
brunoborges/justextract,"uses: brunoborges/justextract@v1
with:
  file: fileName
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
sonarsource/sonarcloud-github-action,"sonar.organization=<replace with your SonarCloud organization key>
sonar.projectKey=<replace with the key generated when setting up the project on SonarCloud>

sonar.sources=.

on:
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

uses: sonarsource/sonarcloud-github-action@master
with:
  projectBaseDir: my-custom-directory

- name: Analyze with SonarCloud
  uses: sonarsource/sonarcloud-github-action@master
  with:
    projectBaseDir: my-custom-directory
    args: >
      -Dsonar.organization=my-organization
      -Dsonar.projectKey=my-projectkey
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.sources=lib/
      -Dsonar.test.exclusions=tests/**
      -Dsonar.tests=tests/
      -Dsonar.verbose=true
",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
canastro/copy-file-action,"name: copy files
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: copy file
      uses: canastro/copy-file-action@master
      with:
        source: ""tests/a.txt""
        target: ""test-a.txt""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Roang-zero1/github-create-release-action,"name: Release

on:
  push:
    tags:
      - ""v[0-9]+.[0-9]+.[0-9]+""

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: Roang-zero1/github-create-release-action@v3
        with:
          version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Create GitHub release
  uses: Roang-zero1/github-create-release-action@v3
  with:
    version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
    prerelease_regex: ""^v2\\\\.[[:digit:]]+\\\\.[[:digit:]]+""
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  pull_request:
    types: closed

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && startsWith(github.head_ref, \'RC\')
    steps:
      - uses: actions/checkout@v3
      - name: Tag and prepare release
        id: tag_and_prepare_release
        uses: K-Phoen/semver-release-action@v1.3.1
        with:
          release_branch: master
          release_strategy: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release notes
        if: steps.tag_and_prepare_release.outputs.tag
        uses: Roang-zero1/github-create-release-action@v3
        with:
          created_tag: ${{ steps.tag_and_prepare_release.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- uses: actions/checkout@v3
- name: ""Refresh tags""
  id: tag
  run: git fetch --tags --force # Is currently required for v3 due to https://github.com/actions/checkout/issues/290
- uses: ericcornelissen/git-tag-annotation-action@v3
  id: tag-data
- name: Create GitHub release
  uses: Roang-zero1/github-create-release-action@v3
  with:
    version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
    release_text: ${{ steps.tag-data.outputs.git-tag-annotation }}
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



Initial Release
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Roang-zero1/github-upload-release-artifacts-action,"on: push
name: Build & Release
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: build
      run: |
        ./build.sh
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
    - name: Create release
      uses: Roang-zero1/github-create-release-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@v2
      with:
        args: ""dist/bin/ dist/shell/compiled.sh""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
fnkr/github-action-ghr,"on: push
name: Build and release on push
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
ecampidoglio/cake-action,"steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      script-path: path/to/script.cake

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      target: Task-To-Run

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      verbosity: Diagnostic

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      dry-run: true

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      arguments: |
        name: value
        configuration: Release

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: 0.30.0

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: tool-manifest

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: explicit
      cake-version: 0.38.5

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: skip

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    steps:
      - name: Get the sources
        uses: actions/checkout@v1
      - name: Run the build script
        uses: cake-build/cake-action@v1
        with:
          target: Build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
andrewmcodes/rubocop-linter-action,"- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


versions:
  - rubocop-rails
  - rubocop-performance: ""1.5.1""
  - rubocop-minitest: ""latest""
  - rubocop-rspec: ""1.37.0""


check_name: ""RuboCop Results""

versions:
  - rubocop
  - rubocop-rails
  - rubocop-minitest
  - rubocop-performance: ""1.5.1""
  - rubocop-rspec: ""1.37.0""

rubocop_config_path: "".rubocop.yml""

rubocop_excluded_cops:
  - ""Style/FrozenStringLiteralComment""

rubocop_fail_level: ""warning""

rubocop_force_exclusion: true

bundle: false

check_scope: ""modified""

base_branch: ""origin/master""

uses: andrewmcodes/rubocop-linter-action@master

uses: andrewmcodes/rubocop-linter-action@v2.0.0

action_config_path:
  description: ""Define a path to your optional action config file.""
  required: false
  default: "".github/config/rubocop_linter_action.yml""

with:
  action_config_path: "".github/actions/config/rubocop.yml""

name: Linters

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: RuboCop Linter
        uses: andrewmcodes/rubocop-linter-action@v3.3.0
        with:
          action_config_path: "".github/config/rubocop_linter_action.yml"" # Note: this is the default location
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

check_scope: ""modified""

versions:
  - rubocop: ""0.88.0""

- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  with:
    exit_on_failure: true
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
elgohr/Publish-Docker-Github-Action,"name: Publish Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

with:
  name: owner/repository/image
  username: ${{ github.actor }}
  password: ${{ secrets.GITHUB_TOKEN }}
  registry: ghcr.io

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  snapshot: true

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  default_branch: trunk

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  dockerfile: MyDockerFileName

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  workdir: mySubDirectory

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  context: myContextDirectory

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  env:
    MY_FIRST: variableContent
    MY_SECOND: variableContent
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildargs: MY_FIRST,MY_SECOND

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildoptions: ""--compress --force-rm""

- name: Set up Docker Buildx
  uses: docker/setup-buildx-action@v2
- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    platforms: linux/amd64,linux/arm64

name: Publish to Registry
on:
  push:
    branches:
      - master
  schedule:
    - cron: \'0 2 * * 0\' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        cache: ${{ github.event_name != \'schedule\' }}

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  no_push: ${{ github.event_name == \'push\' }}

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    tags: ""latest,another""

name: Publish to Registry
on:    
  release:
      types: [published]
  push:
    branches:
      - master
  schedule:
    - cron: \'0 2 * * 0\' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: pre-step
      shell: bash
      run: echo ""release-version=$(echo ${GITHUB_REF:10})"" >> $GITHUB_OUTPUT
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: ""latest,${{ steps.pre-step.outputs.release-version }}""

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  tag_names: true

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  tag_semver: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
camunda/camunda-comment-action,"on: 
  pull_request:
    types: [opened]

jobs:
  comment_job:
    runs-on: ubuntu-latest
    name: Label Pull requests
    steps:
      - name: Comment
        uses: camunda/camunda-comment-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
RichiCoder1/vault-action,"jobs:
    build:
        steps:
            - name: Import Secrets
              id: import-secrets
              uses: hashicorp/vault-action@v2
              with:
                url: https://vault.mycompany.com:8200
                token: ${{ secrets.VAULT_TOKEN }}
                caCertificate: ${{ secrets.VAULT_CA_CERT }}
                secrets: |
                    secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
                    secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
                    secret/data/ci npm_token

            - name: Step following \'Import Secrets\'
              run: |
                ACCESS_KEY_ID = ""${{ env.AWS_ACCESS_KEY_ID }}""
                SECRET_ACCESS_KEY = ""${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }}""

            - name: Step following \'Import Secrets\'
              run: |
                touch secrets.json
                echo ""${{ toJson(steps.import-secrets.outputs) }}"" >> secrets.json

{
  ""ACCESS_KEY_ID"": ""MY_KEY_ID"",
  ""SECRET_ACCESS_KEY"": ""MY_SECRET_KEY"",
  ""NPM_TOKEN"": ""MY_NPM_TOKEN""
}

{""sub"": ""repo:<orgName>/*""}

repo:<orgName/repoName>:ref:refs/heads/branchName

jobs:
    retrieve-secret:
        permissions:
            contents: read
            id-token: write

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  role: <Vault JWT Auth Role Name>
  method: jwt
  jwtGithubAudience: sigstore # set the GitHub token\'s aud claim

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: approle
  roleId: ${{ secrets.VAULT_ROLE_ID }}
  secretId: ${{ secrets.VAULT_SECRET_ID }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  token: ${{ secrets.VAULT_TOKEN }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: github
  githubToken: ${{ secrets.GITHUB_TOKEN }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: jwt
  role: <Vault JWT Auth Role Name>
  jwtPrivateKey: ${{ secrets.JWT_PRIVATE_KEY }}
  jwtKeyPassword: ${{ secrets.JWT_KEY_PASS }}
  jwtTtl: 3600 # 1 hour, default value

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: kubernetes
  role: <Vault Kubernetes Auth Role Name>
  kubernetesTokenPath: /var/run/secrets/kubernetes.io/serviceaccount/token # default token path

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: userpass
  username: ${{ secrets.VAULT_USERNAME }}
  password: ${{ secrets.VAULT_PASSWORD }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: ldap
  username: ${{ secrets.VAULT_USERNAME }}
  password: ${{ secrets.VAULT_PASSWORD }}

{{ Secret Path }} {{ Secret Key or Selector }} | {{ Env/Output Variable Name }}

with:
    secrets: secret/data/ci npmToken

NPMTOKEN=somelongtoken

steps:
    - name: Import Secrets
      id: secrets
    - name: Sensitive Operation
      run: ""my-cli --token \'${{ steps.secrets.outputs.npmToken }}\'""

with:
    secrets: secret/data/ci npmToken | NPM_TOKEN

NPM_TOKEN=somelongtoken

steps:
  - name: Import Secrets
    id: secrets
  - name: Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.NPM_TOKEN }}\'""


with:
    secrets: |
        secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
        secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY

with:
    secrets: |
        /cubbyhole/foo foo ;
        /cubbyhole/foo zip | MY_KEY ;

FOO=bar
MY_KEY=zap

steps:
  - name: Import Secrets
    id: secrets
  - name: Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.foo }}\'""
  - name: Another Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.MY_KEY }}\'""

with:
    secrets: |
        secret/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
        secret/ci/aws secretKey | AWS_SECRET_ACCESS_KEY
    extraHeaders: |
      X-Secure-Id: ${{ secrets.SECURE_ID }}
      X-Secure-Secret: ${{ secrets.SECURE_SECRET }}

steps:
    - name: Import Secrets
      uses: hashicorp/vault-action
      with:
        url: https://vault-enterprise.mycompany.com:8200
        caCertificate: ${{ secrets.VAULT_CA_CERT }}
        method: token
        token: ${{ secrets.VAULT_TOKEN }}
        namespace: admin
        secrets: |
            secret/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
            secret/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
            secret/ci npm_token

$ npm install && npm run build

$ docker-compose up -d vault # Choose one of: vault, vault-enterprise, vault-tls depending on which tests you would like to run

$ export VAULT_HOST=<YOUR VAULT CLUSTER LOCATION> # localhost if undefined
$ export VAULT_PORT=<YOUR VAULT PORT> # 8200 if undefined
$ export VAULT_TOKEN=<YOUR VAULT TOKEN> # testtoken if undefined

$ npm test

$ npm run test:integration:basic # Choose one of: basic, enterprise, e2e, e2e-tls

act workflow_dispatch -j local-test

make local-test
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
technote-space/toc-generator,"<!-- START doctoc -->
<!-- END doctoc -->

on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

<!-- START doctoc -->
<!-- param::isNotitle::true:: -->
<!-- param::isCustomMode::true:: -->

<!-- END doctoc -->

...


on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

on: pull_request
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          CREATE_PR: true

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          CREATE_PR: true
          TARGET_BRANCH_PREFIX: release/

on:
  schedule:
    - cron: ""0 23 * * *""
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          CHECK_ONLY_DEFAULT_BRANCH: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
shimataro/ssh-key-action,"runs-on: ubuntu-latest
steps:
- name: Install SSH key
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY }}
    name: id_rsa # optional
    known_hosts: ${{ secrets.KNOWN_HOSTS }}
    config: ${{ secrets.CONFIG }} # ssh_config; optional
    if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
- name: rsync over SSH
  run: rsync -r ./foo/ user@remote:bar/

runs-on: ubuntu-latest
steps:
- name: Install SSH key of bastion
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY_OF_BASTION }}
    name: id_rsa-bastion
    known_hosts: ${{ secrets.KNOWN_HOSTS_OF_BASTION }}
    config: |
      Host bastion
        HostName xxx.xxx.xxx.xxx
        User user-of-bastion
        IdentityFile ~/.ssh/id_rsa-bastion
- name: Install SSH key of target
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY_OF_TARGET }}
    name: id_rsa-target
    known_hosts: ${{ secrets.KNOWN_HOSTS_OF_TARGET }} # will be appended to existing .ssh/known_hosts
    config: |                                         # will be appended to existing .ssh/config
      Host target
        HostName yyy.yyy.yyy.yyy
        User user-of-target
        IdentityFile ~/.ssh/id_rsa-target
        ProxyCommand ssh -W %h:%p bastion
- name: SCP via port-forwarding
  run: scp ./foo/ target:bar/

rsync -r -e ""ssh bastion ssh"" ./foo/ target:bar/
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
reitermarkus/automerge,"name: Automerge

on:
  push:

  schedule:
    - cron: 0 * * * *

  pull_request_review:
    types:
      - submitted

  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - edited
      - labeled
      - unlabeled
      - ready_for_review

  workflow_dispatch:
    inputs:
      pull-request:
        description: Pull Request Number
        required: false
      review:
        description: Review ID
        required: false

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - uses: reitermarkus/automerge@v2
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          merge-method: rebase
          do-not-merge-labels: never-merge
          required-labels: automerge
          pull-request: ${{ github.event.inputs.pull-request }}
          review: ${{ github.event.inputs.review }}
          dry-run: true
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cirrus-actions/rebase,"name: Automatic Rebase
on:
  issue_comment:
    types: [created]
jobs:
  rebase:
    name: Rebase
    runs-on: ubuntu-latest
    if: >-
      github.event.issue.pull_request != '' && 
      (
        contains(github.event.comment.body, '/rebase') || 
        contains(github.event.comment.body, '/autosquash')
      )
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - name: Automatic Rebase
        uses: cirrus-actions/rebase@1.8
        with:
          autosquash: ${{ contains(github.event.comment.body, '/autosquash') || contains(github.event.comment.body, '/rebase-autosquash') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


... 
    - name: Checkout the latest code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
    - name: Automatic Rebase
      uses: cirrus-actions/rebase@1.8
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Automatic Rebase
      uses: cirrus-actions/rebase@1.8
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_NUMBER: 1245
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peter-evans/rebase,"      - uses: peter-evans/rebase@v2

name: Rebase
on:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2

name: Rebase
on:
  push:
    branches: [main]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        with:
          base: main

      - uses: peter-evans/rebase@v2
        with:
          exclude-labels: |
            no-rebase
            dependencies

      - uses: peter-evans/rebase@v2
        with:
          head: 'my-org:*'

name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]
jobs:
  slashCommandDispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          commands: rebase
          permission: write
          issue-type: pull-request

name: rebase-command
on:
  repository_dispatch:
    types: [rebase-command]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        id: rebase
        with:
          head: ${{ github.event.client_payload.pull_request.head.label }}
      - name: Add reaction
        if: steps.rebase.outputs.rebased-count == 1
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray

name: Rebase
on:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  rebase:
    strategy:
      matrix:
        repo: ['my-org/repo1', 'my-org/repo2', 'my-org/repo3']
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ matrix.repo }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peter-evans/create-or-update-comment,"      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: \'+1\'

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: 557858210
          body: |
            **Edit:** Some additional info
          reactions: eyes

      - name: Add reactions
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: 557858210
          reactions: |
            heart
            hooray
            laugh

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        id: couc
        with:
          issue-number: 1
          body: |
            My comment
      - name: Check outputs
        run: |
          echo ""Comment ID - ${{ steps.couc.outputs.comment-id }}""

on:
  issue_comment:
    types: [created]
jobs:
  commentCreated:
    runs-on: ubuntu-latest
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: \'github-actions[bot]\'
        body-includes: Build output

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Build output
          ${{ steps.build.outputs.build-log }}
        edit-mode: replace

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: \'github-actions[bot]\'
        body-includes: This comment was written by a bot!

    - name: Create comment
      if: steps.fc.outputs.comment-id == \'\'
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          This comment was written by a bot!
        reactions: rocket

    - name: Update comment
      if: steps.fc.outputs.comment-id != \'\'
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          This comment has been updated!
        reactions: hooray

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body-path: \'comment-body.md\'

This is a test comment template
Render template variables such as {{ .foo }} and {{ .bar }}.

      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.4
        with:
          template: .github/comment-template.md
          vars: |
            foo: this
            bar: that

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body: ${{ steps.template.outputs.result }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
reitermarkus/rerun-workflow,"name: Re-run Workflow

on:
  push:

  schedule:
    - cron: \'*/30 * * * *\'

  pull_request_target:
    types:
      - closed
      - labeled
      - unlabeled

  workflow_dispatch:

  workflow_run:
    workflows:
      - CI
    types:
      - completed

jobs:
  rerun-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Re-run pull request workflows
        uses: reitermarkus/rerun-workflow@v1
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          once-label: ci-requeue
          continuous-label: ci-retry
          trigger-labels: ci-trigger-1,ci-trigger-2
          workflow: ci.yml
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
andrewmusgrave/automatic-pull-request-review,"name: Automatic pull request review
on: [pull_request]
jobs:
  automate-pullrequest-review:
    runs-on: ubuntu-latest
    steps:
      - name: Approve pull request
        if: github.actor == 'dependabot[bot]'
        uses: andrewmusgrave/automatic-pull-request-review@0.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: APPROVE
          body: 'Thank you dependabot \xf0\x9f\x8e\x8a'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
StephaneBour/actions-php-cpd,"- name: PHP Copy Paste Detector
  uses: StephaneBour/actions-php-cpd@8.2
  with:
    args: \'./src\'
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
crowdin/github-action,"name: Crowdin Action

on:
  push:
    branches: [ main ]

jobs:
  synchronize-with-crowdin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: crowdin action
        uses: crowdin/github-action@v1
        with:
          upload_sources: true
          upload_translations: true
          download_translations: true
          localization_branch_name: l10n_crowdin_translations
          create_pull_request: true
          pull_request_title: \'New Crowdin Translations\'
          pull_request_body: \'New Crowdin translations by [Crowdin GH Action](https://github.com/crowdin/github-action)\'
          pull_request_base_branch_name: \'main\'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

- name: crowdin action
  uses: crowdin/github-action@v1
  with:
    upload_sources: true
    upload_sources_args: \'--no-auto-update label=web\'

    upload_translations: true
    upload_language: \'uk\'
    auto_approve_imported: true
    import_eq_suggestions: true
    upload_translations_args: \'--auto-approve-imported --translate-hidden\'

    download_sources: true
    push_sources: true
    download_sources_args: \'--reviewed\'

    download_translations: true
    download_language: \'uk\'
    skip_untranslated_strings: true
    skip_untranslated_files: true
    export_only_approved: true
    push_translations: true
    commit_message: \'New Crowdin translations by GitHub Action\'
    download_translations_args: \'--all --skip-untranslated-strings\'

    localization_branch_name: l10n_crowdin_action
    create_pull_request: true
    pull_request_title: \'New Crowdin translations\'
    pull_request_body: \'New Crowdin pull request with translations\'
    pull_request_labels: \'enhancement, good first issue\'
    pull_request_assignees: \'crowdin-bot\'
    pull_request_reviewers: \'crowdin-user-reviewer\'
    pull_request_team_reviewers: \'crowdin-team-reviewer\'

    pull_request_base_branch_name: not_default_branch


    crowdin_branch_name: l10n_branch
    identity: \'path/to/your/credentials/file\'
    config: \'path/to/your/crowdin.yml\'
    dryrun_action: true

    github_base_url: github.com
    github_api_base_url: api.[github_base_url]
    github_user_name: Crowdin Bot
    github_user_email: support+bot@crowdin.com
    
    gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
    gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}

    token: ${{ secrets.CROWDIN_PERSONAL_TOKEN }} # A Personal Access Token (see https://crowdin.com/settings#api-key)
    project_id: ${{ secrets.CROWDIN_PROJECT_ID }} # The numeric project ID. Visit the Tools > API section in your Crowdin project
    source: \'path/to/your/file\'
    translation: \'file/export/pattern\'
    base_url: \'https://api.crowdin.com\'
    base_path: \'project-base-path\' # Default: \'.\'

- name: crowdin action
  uses: crowdin/github-action@v1
  with:
    command: \'pre-translate\'
    command_args: \'-l uk --method tm --branch main\'

project_id_env: CROWDIN_PROJECT_ID
api_token_env: CROWDIN_PERSONAL_TOKEN
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
warrenbuckley/Setup-Nuget,"steps:
name: ASP.NET CI
on: [push]
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@master

    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1

    - name: Nuget Push
      run: nuget push *.nupkg
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
warrenbuckley/Setup-MSBuild,"steps:
name: ASP.NET CI
on: [push]
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@master

    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: MSBuild
      working-directory: src
      run: msbuild MyProject.csproj
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
K-Phoen/semver-release-action,"name: Release

on:
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged
    
    steps:
      - name: Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
cbrwizard/semver-release-action,"name: Release

on:
  pull_request:
    types: closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cbrwizard/sentry-release-github-action,"$ npm install

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

const core = require(\'@actions/core\');
...

async function run() {
  try { 
      ...
  } 
  catch (error) {
    core.setFailed(error.message);
  }
}

run()

npm run package

git add dist

$ git checkout -b v1
$ git commit -a -m ""v1 release""

$ git push origin v1

uses: actions/javascript-action@v1
with:
  milliseconds: 1000
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ioquatix/setup-ruby,"name: My workflow
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
    - run: bundle install
    - run: bundle exec rake

name: My workflow
on: [push]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos]
        ruby: [2.5, 2.6, 2.7, head, debug, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - run: bundle install
    - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-
    - name: bundle install
      run: |
        bundle config deployment true
        bundle config path vendor/bundle
        bundle install --jobs 4
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
aws-actions/configure-aws-credentials,"    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        aws-region: us-east-2

jobs:
  deploy:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role-test
        aws-region: us-east-1
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-test-website-bucket
    - name: Configure AWS credentials from Production account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod
        aws-region: us-west-2
    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-prod-website-bucket

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName
    - name: Configure other AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::987654321000:role/my-second-role
        role-session-name: MySessionName
        role-chaining: true

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        role-duration-seconds: 1200
        role-session-name: MySessionName

    - name: Configure AWS Credentials for Beta Customers
      uses: aws-actions/configure-aws-credentials@v2
      with:
        audience: beta-customers
        aws-region: us-east-3
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName
        mask-aws-account-id: false

Parameters:
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: """"
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: ""sts.amazonaws.com""
    Type: String

Conditions:
  CreateOIDCProvider: !Equals 
    - !Ref OIDCProviderArn
    - """"

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If 
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList: 
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  Role:
    Value: !GetAtt Role.Arn 

      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-skip-session-tagging: true

      uses: aws-actions/configure-aws-credentials@v2
      with:
         inline-session-policy: \'{""Version"":""2012-10-17"",""Statement"":[{""Sid"":""Stmt1"",""Effect"":""Allow"",""Action"":""s3:List*"",""Resource"":""*""}]}\'

      uses: aws-actions/configure-aws-credentials@v2
      with:
         inline-session-policy: >-
          {
           ""Version"": ""2012-10-17"",
           ""Statement"": [
            {
             ""Sid"":""Stmt1"",
             ""Effect"":""Allow"",
             ""Action"":""s3:List*"",
             ""Resource"":""*""
            }
           ]
          }

      uses: aws-actions/configure-aws-credentials@v2
      with:
         managed-session-policies: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

      uses: aws-actions/configure-aws-credentials@v2
      with:
         managed-session-policies: |
          arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
          arn:aws:iam::aws:policy/AmazonS3OutpostsReadOnlyAccess

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2
  role-to-assume: my-github-actions-role

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2
  role-to-assume: my-github-actions-role
  http-proxy: ""http://companydomain.com:3128""

HTTP_PROXY=""http://companydomain.com:3128""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
chevah/auto-cancel-redundant-job,"on:
  repository_dispatch:
    types: [test]

name: Broken Link Check
jobs:
  check:
    name: Broken Link Check
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/auto-cancel-redundant-job@v1
      - name: Broken Link Check
        uses: technote-space/broken-link-checker-action@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mxschmitt/action-tmate,"name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: \'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)\'
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == \'workflow_dispatch\' && inputs.debug_enabled }}

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        sudo: false

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 15

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        tmate-server-host: ssh.tmate.io
        tmate-server-port: 22
        tmate-server-rsa-fingerprint: SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs
        tmate-server-ed25519-fingerprint: SHA256:jfttvoypkHiQYUqUCwKeqd9d1fJj/ZiQlFOHVl6E9sI

name: CI
on: [push]
jobs:
  build:
    runs-on: [self-hosted, linux]
    steps:
    - uses: mxschmitt/action-tmate@v3
      with:
        install-dependencies: false
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
docker/build-push-action,"name: ci

on:
  push:
    branches:
      - \'main\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: user/app:latest

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ""{{defaultContext}}:mysubdir""
          push: true
          tags: user/app:latest

      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: user/app:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}

name: ci

on:
  push:
    branches:
      - \'main\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
Ilshidur/action-discord,"- name: Discord notification
  env:
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  uses: Ilshidur/action-discord@master
  with:
    args: \'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.\'
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
jakejarvis/s3-sync-action,"name: Upload Website

on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-1'   # optional: defaults to us-east-1
        SOURCE_DIR: 'public'      # optional: defaults to entire repository
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
chetan/invalidate-cloudfront-action,"- name: Invalidate CloudFront
  uses: chetan/invalidate-cloudfront-action@v2
  env:
    DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
    PATHS: ""/index.html""
    AWS_REGION: ""us-east-1""
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

PATHS=/index.html
PATHS=/ /index.html /foo/bar/baz

- name: checkout dist
  uses: actions/checkout@master
  with:
    ref: dist
    fetch-depth: 2

- name: get updated files
  run: |
    set +e
    FILES=$(git log --stat=""1000"" -1 | grep \'|\' | awk \'{print ""/""$1}\' | grep -e \'\\.html$\')
    set -e
    [ -z ""$FILES"" ] && touch .updated_files && exit 0
    for file in $FILES; do
      echo $file
      [[ ""$file"" == *""/index.html"" ]] && echo $file | sed -e \'s/\\/index.html$/\\//\'
    done | sort | uniq | tr \'\
\' \' \' > .updated_files

- name: invalidate
  uses: chetan/invalidate-cloudfront-action@v2
  env:
    PATHS_FROM: .updated_files
    AWS_REGION: \'us-east-1\'
    DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""cloudfront:CreateInvalidation"",
            ""Resource"": ""arn:aws:cloudfront::<account id>:distribution/<distribution ID>""
        }
    ]
}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
meeDamian/github-release,"steps:
- uses: actions/checkout@v2

- uses: meeDamian/github-release@2.0
  with:
    token: ${{ secrets.GITHUB_TOKEN }}

steps:
    ...
    - name: Set enviroment for github-release
      run: |
        echo ::set-env name=RELEASE_TAG::""v1.0.0""
        echo ::set-env name=RELEASE_NAME::""$GITHUB_WORKFLOW""

    - uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        name: ${{ env.RELEASE_NAME }}
    ...

with:
  \xe2\x80\xa6
  files: release/

with:
  \xe2\x80\xa6
  files: release-v1.0.0:release/

with:
  \xe2\x80\xa6
  files: >
    release-v1.0.0-linux:release/linux/
    release-v1.0.0-mac:release/darwin/
    release-v1.0.0-windows:release/not-supported-notice
    checksums.txt      

steps:
- uses: actions/checkout@v2

- uses: meeDamian/github-release@2.0
  with:
    token: ${{ secrets.GITHUB_TOKEN }}
    tag: ${{ env.MY_CUSTOM_TAG }}
    name: My Creative Name
    body: >
      This release actually changes the fabric of the reality, so be careful 
      while applying, as error in database migration, can irrecoverably wipe 
      some laws of physics.  
    gzip: folders
    files: >
      Dockerfile
      action.yml
     .github/
      license:LICENSE
      work-flows:.github/

steps:
  uses: meeDamian/github-release@v2.0.2

steps:
  uses: meeDamian/github-release@2.0
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
JasonEtco/is-sponsor-label-action,"name: Label sponsors
on:
  pull_request:
    types: [opened]
  issues:
    types: [opened]
jobs:
  build:
    name: is-sponsor-label
    runs-on: ubuntu-latest
    steps:
      - uses: JasonEtco/is-sponsor-label-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: JasonEtco/is-sponsor-label-action@v1
        with:
          label: Sponsor Request \xe2\x9d\xa4\xef\xb8\x8f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

query ($owner: String!) { 
  user (login: $owner) {
    sponsorshipsAsMaintainer (first: 100) {
      nodes {
        sponsor {
          id
        }
      }
    }
  }
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0
chrislennon/action-aws-cli,"name: List S3 Contents - Multi OS

on:
  push
jobs:
  listS3:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-10.14, windows-2016, ubuntu-18.04]
    steps:
      - uses: chrislennon/action-aws-cli@v1.1
      - run: aws s3 ls
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
clementine-player/clang-format-lint-action,"src/third_party/*
src/ignored/*

name: test-clang-format

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.5
      with:
        source: '.'
        exclude: './third_party ./external'
        extensions: 'h,cpp'
        clangFormatVersion: 9
        style: chromium
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
webfactory/ssh-agent,"jobs:
    my_job:
        ...
        steps:
            - uses: actions/checkout@v3
            - uses: webfactory/ssh-agent@v0.7.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - uses: webfactory/ssh-agent@v0.7.0
              with:
                  ssh-private-key: |
                        ${{ secrets.FIRST_KEY }}
                        ${{ secrets.NEXT_KEY }}
                        ${{ secrets.ANOTHER_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}

      - name: ssh-agent setup
        ...

      - name: Collect Git and SSH config files in a directory that is part of the Docker build context
        run: |
          mkdir root-config
          cp -r ~/.gitconfig  ~/.ssh root-config/
  
      - name: Docker build 
        ...

COPY root-config /root/
RUN sed \'s|/home/runner|/root|g\' -i.bak /root/.ssh/config

stuff = { git = ""ssh://git@github.com/myorg/stuff.git"", branch = ""main"" }

      - name: Update cargo config to use Git CLI
        run: Set-Content -Path $env:USERPROFILE\\.cargo\\config.toml ""[net]`ngit-fetch-with-cli = true""

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true

env ""INPUT_SSH-PRIVATE-KEY=\\`cat file\\`"" node index.js

set /P INPUT_SSH-PRIVATE-KEY=< file
node index.js

${env:INPUT_SSH-PRIVATE-KEY} = (Get-Content .\\test-keys -Raw); node index.js
node index.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
einaregilsson/build-number,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}        
    - name: Print new build number
      run: echo ""Build number is $BUILD_NUMBER""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}        
    
    - name: Another step as an example
      uses: actions/hello-world-docker-action@v1
      with:
        who-to-greet: ${{ steps.buildnumber.outputs.build_number }}

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}
          
  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
    - name: Another step as an example
      uses: actions/hello-world-docker-action@v1
      with:
        who-to-greet: ${{needs.job1.outputs.build_number}}

git tag build-number-500
git push origin build-number-500

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{ secrets.github_token }}
        prefix: client
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
samuelmeuli/lint-action,"name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: write

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2


      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: phpcs

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true
          php_codesniffer_args: ""-n""

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: composer

      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --no-progress --no-ansi --no-interaction
          echo ""${PWD}/vendor/bin"" >> $GITHUB_PATH

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install ClangFormat
        run: sudo apt-get install -y clang-format

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          clang_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ""6.0.x""

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          dotnet_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          black: true
          black_auto_fix: true
          flake8: true
          flake8_auto_fix: false
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
codevise/sassdoc-action,"name: sassdoc
on:
 push:
   branches:
     - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Build
      uses: codevise/sassdoc-action@v1
      with:
        input: ./src
        output: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
codevise/documentation-js-action,"name: jsdoc
on:
 push:
   branches:
     - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Build
      uses: codevise/documentation-js-action@v1
      with:
        input: ./src
        output: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cognisant/code-review-checklist,"workflow ""PR Checklist"" {
  on = ""pull_request""
  resolves = [""Create PR Comment""]
}

action ""Create PR Comment"" {
  uses = ""cognisant/code-review-checklist@master""
  secrets = [""GITHUB_TOKEN""]
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
s0/git-publish-subdir-action,"jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@github.com:owner/repo.git
        BRANCH: gh-pages
        FOLDER: build
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        KNOWN_HOSTS_FILE: resources/known_hosts # Needed if target repo is not on github.com

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: public/site
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: public/site
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TARGET_DIR: www

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@main
      with:
        node-version: 16.x
    - name: npm install and build
      run: |
        npm install
        npm run build

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@github.com:owner/repo.git
        BRANCH: gh-pages
        FOLDER: build
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@main
      with:
        node-version: 16.x
    - name: npm install and build
      run: |
        npm install
        npm run build

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@mydomain.com:path/to/repo.git
        BRANCH: artifacts
        FOLDER: dist
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        KNOWN_HOSTS_FILE: resources/known_hosts # Path relative to the root of the repository

> ssh-keyscan github.com
github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==

jobs:
  deploy:
    - uses: s0/git-publish-subdir-action@develop
      env:
        MESSAGE: ""This updates the content to the commit {sha} that had the message:\
{msg}""

**/*
!.git

target_dir/**/*
!.git

**/*
!.git
!foobar/**/*

folder/*
!folder/a
ini*al2

folder/*
!folder/a
ini*al2

jobs:
  deploy:
    - uses: s0/git-publish-subdir-action@develop
      env:
        CLEAR_GLOBS_FILE: "".clear-target-files""

initial1
initial2
folder/a
folder/b

folder/a
initial1

> cd /tmp
> ssh-keygen -t ed25519
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/sam/.ssh/id_ed25519): temp-deploy-key
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in temp-deploy-key.
Your public key has been saved in temp-deploy-key.pub.
The key fingerprint is:
SHA256:tQBSeWjZ4Er4YYjK4XQ4npfiK2xJPJLbGjTsYJq/9JI sam@optimus
The key\'s randomart image is:
+--[ED25519 256]--+
|    ..+*         |
| ..o o=.o        |
|.=o.+.... .      |
|B =+.o   o .     |
|+% oo   S .      |
|X=+              |
|B=+.             |
|oBE.             |
|+ooo.            |
+----[SHA256]-----+
> cat temp-deploy-key.pub
ssh-ed25519 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX user@localhost
> cat temp-deploy-key
-----BEGIN OPENSSH PRIVATE KEY-----
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=
-----END OPENSSH PRIVATE KEY-----
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
appleboy/scp-action,"name: scp files
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: copy file via ssh password
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: ""tests/a.txt,tests/b.txt""
        target: your_server_target_folder_path

ssh-keygen -t rsa -b 4096 -C ""your_email@example.com""

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

cat .ssh/id_rsa.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

cat .ssh/id_ed25519.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

clip < ~/.ssh/id_rsa

clip < ~/.ssh/id_ed25519

ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey]

CASignatureAlgorithms +ssh-rsa

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

- name: copy file via ssh password
  uses: appleboy/scp-action@v0.1.4
  with:
    host: example.com
    username: foo
    password: bar
    port: 22
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

- name: copy file via ssh key
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    port: ${{ secrets.PORT }}
    key: ${{ secrets.KEY }}
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

- name: copy file via ssh key
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    port: ${{ secrets.PORT }}
    key: ${{ secrets.KEY }}
    source: ""tests/*.txt,!tests/a.txt""
    target: your_server_target_folder_path

  uses: appleboy/scp-action@v0.1.4
  with:
-   host: ""example.com""
+   host: ""foo.com,bar.com""
    username: foo
    password: bar
    port: 22
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

  uses: appleboy/scp-action@v0.1.4
  with:
    host: ""example.com""
    username: foo
    password: bar
    port: 22
-   source: ""tests/*.txt""
+   source: ""tests/*.txt,!tests/a.txt,!tests/b.txt""
    target: your_server_target_folder_path

  deploy:
    name: deploy artifact
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - run: echo hello > world.txt

    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: world.txt

    - uses: actions/download-artifact@v3
      with:
        name: my-artifact
        path: distfiles

    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: distfiles/*
        target: your_server_target_folder_path

- name: remove the specified number of leading path elements
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path
    strip_components: 1

foobar
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 tests
    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 a.txt
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 b.txt

foobar
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 a.txt
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 b.txt

  changes:
    name: test changed-files
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        since_last_remote_commit: true
        separator: "",""

    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: ${{ steps.changed-files.outputs.all_changed_files }}
        target: your_server_target_folder_path

  - name: ssh key with passphrase
    uses: appleboy/scp-action@v0.1.4
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.SSH2 }}
+     passphrase: ${{ secrets.PASSPHRASE }}
      port: ${{ secrets.PORT }}
      source: ""tests/a.txt,tests/b.txt""
      target: your_server_target_folder_path

New-ItemProperty -Path ""HKLM:\\SOFTWARE\\OpenSSH"" -Name DefaultShell -Value ""$env:Programfiles\\Git\\bin\\bash.exe"" -PropertyType String -Force

  - name: Copy to Windows
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: \'your_source_path\'
-       target: \'C:\\path\\to\\target\'
+       target: \'/c/path/to/target/\'
+       tar_dereference: true
+       rm: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
paulfantom/periodic-labeler,"---
name: Pull request labeler
on:
  schedule:
    - cron: '*/5 * * * *'
jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      - uses: paulfantom/periodic-labeler@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          LABEL_MAPPINGS_FILE: .github/labeler.yml
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peter-evans/link-checker,"    - name: Link Checker
      uses: peter-evans/link-checker@v1

    - name: Link Checker
      uses: peter-evans/link-checker@v1
      with:
        args: -v -r *

on:
  schedule:
  - cron: '0 0 1 * *'
name: Check markdown links
jobs:
  linkChecker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Link Checker
        uses: peter-evans/link-checker@v1
      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v2
        with:
          title: Link Checker Report
          content-filepath: ./link-checker/out.md
          labels: report, automated issue

on: push
jobs:
  linkChecker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Link Checker
      id: lc
      uses: peter-evans/link-checker@v1
    - name: Fail if there were link errors
      run: exit ${{ steps.lc.outputs.exit_code }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peter-evans/create-issue-from-file,"      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: An example issue
          content-filepath: ./example-content/output.md
          labels: |
            report
            automated issue

      - name: Create Issue From File
        id: ciff
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: An example issue
          content-filepath: ./example-content/output.md

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ steps.ciff.outputs.issue-number }}
",0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
darenm/Setup-VSTest,"name: CI UWP

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2

    - name: Restore packages
      run: msbuild .\\dev\\CustomMayd.Services.Serialization\\CustomMayd.Services.Serialization.sln -t:restore

    - name: Debug Build UWP app
      run: msbuild .\\dev\\CustomMayd.Services.Serialization\\CustomMayd.Services.Serialization.sln /p:Configuration=Debug /p:AppxBundlePlatforms=""x86|x64|ARM"" /p:AppxPackageDir="".\\AppxPackages"" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload
      
    - name: VSTest
      run: vstest.console.exe /Platform:x64 .\\test\\CustomMayd.Services.Serialization.Tests\\AppxPackages\\CustomMayd.Services.Serialization.Tests_1.0.0.0_Debug_Test\\CustomMayd.Services.Serialization.Tests_1.0.0.0_x86_Debug.appx



",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
NuGet/setup-nuget,"steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-api-key: ${{ secrets.NuGetAPIKey }}
    nuget-version: \'5.x\'
- run: nuget restore MyProject.sln

name: NuGet Restore
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        nuget: [latest, preview, 4.x, 5.3.1]
    name: NuGet@${{ matrix.nuget }} sample
    steps:
      - uses: actions/checkout@master
      - name: Setup NuGet.exe
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ matrix.nuget }}
      - run: nuget restore MyProject.sln

steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-version: \'5.x\'
- uses: actions/cache@v1
  id: cache
  with:
    path: ~/.nuget/packages
    key: ${{ runner.os }}-nuget-${{ hashFiles(\'**/packages.lock.json\') }}
- name: NuGet Restore
  if: steps.cache.outputs.cache-hit != \'true\'
  run: nuget restore MyProject.sln

$ npm install

$ npm run build && npm run package

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

$ npm run package
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nikeee/docfx-action,"jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
    - uses: actions/checkout@v3
    - uses: nikeee/docfx-action@v1.0.0
      name: Build Documentation
      with:
        args: path/to/your/docfx.json

    - uses: maxheld83/ghpages@master
      name: Publish Documentation on GitHub Pages
      env:
        BUILD_DIR: _site # docfx's default output directory is _site
        GH_PAT: ${{ secrets.GH_PAT }} # See https://github.com/maxheld83/ghpages

    - uses: nikeee/docfx-action@v1.0.0
      with:
        args: <something>
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
maxheld83/ghpages,"name: Deployment

""on"":
  - push
  - pull_request

jobs:
  deploy_ghpages:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: echo $GITHUB_SHA >> public/index.html
      - uses: maxheld83/ghpages@v0.3.0
        env:
          BUILD_DIR: public/
          GH_PAT: ${{ secrets.GH_PAT }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
uraimo/run-on-arch-action,"on: [push, pull_request]

jobs:
  armv7_job:
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          githubToken: ${{ github.token }}

          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        run: |
          echo ""The uname output was ${{ steps.runcmd.outputs.uname }}""

on: [push, pull_request]

jobs:
  build_job:
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: ppc64le
            distro: alpine_latest
          - arch: s390x
            distro: fedora_latest
          - arch: none
            distro: none
            base_image: riscv64/busybox
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          githubToken: ${{ github.token }}

          setup: |
            mkdir -p ""${PWD}/artifacts""

          dockerRunArgs: |
            --volume ""${PWD}/artifacts:/artifacts""

          env: | # YAML, but pipe character is necessary
            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}

          shell: /bin/sh

          install: |
            case ""${{ matrix.distro }}"" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y git
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          run: |
            cp $(which git) ""/artifacts/${artifact_name}""
            echo ""Produced artifact at /artifacts/${artifact_name}""

      - name: Show the artifact
        run: |
          ls -al ""${PWD}/artifacts""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
rectalogic/notify-irc,"name: ""Push Notification""
on: [push, pull_request, create]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: irc push
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'push\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}
            ${{ join(github.event.commits.*.message) }}
      - name: irc pull request
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'pull_request\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} opened PR ${{ github.event.pull_request.html_url }}
      - name: irc tag created
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'create\' && github.event.ref_type == \'tag\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""          
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} tagged ${{ github.repository }} ${{ github.event.ref }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
alexjurkiewicz/setup-ccache,"      - name: Cache compilation
        uses: actions/cache@v1
        with:
          path: ~/.ccache
          key: ccache
      - name: Setup ccache
        uses: alexjurkiewicz/setup-ccache@master
        with:
          max-size: 150M
          extra-config: |
            keep_comments_cpp = true
      - name: Compile program
        run: make all

compression = true
compression_level = 9
log_file = /tmp/ccache.log
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
svenstaro/upload-release-action,"name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/mything
        asset_name: mything
        tag: ${{ github.ref }}
        overwrite: true
        body: ""This is my release text""

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: mything
            asset_name: mything-linux-amd64
          - os: windows-latest
            artifact_name: mything.exe
            asset_name: mything-windows-amd64
          - os: macos-latest
            artifact_name: mything
            asset_name: mything-macos-amd64

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --locked
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}

name: Publish
on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/my*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_name: owner/repository-name
        repo_token: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN }}
        file: target/release/mything
        asset_name: mything
        tag: ${{ github.ref }}
        overwrite: true
        body: ""This is my release text""

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:

  build:
    name: Publish binaries
    runs-on: ubuntu-latest
         
    steps:
      - uses: actions/checkout@v3

      - name: Read release.md and use it as a body of new release
        id: read_release
        shell: bash
        run: |
          r=$(cat path/to/release.md)                       # <--- Read release.md (Provide correct path as per your repo)
          r=""${r//\'%\'/\'%25\'}""                               # Multiline escape sequences for %
          r=""${r//$\'\
\'/\'%0A\'}""                             # Multiline escape sequences for \'\
\'
          r=""${r//$\'\\r\'/\'%0D\'}""                             # Multiline escape sequences for \'\\r\'
          echo ""RELEASE_BODY=$r"" >> $GITHUB_OUTPUT          # <--- Set environment variable

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}  # <--- Use environment variables that was created earlier


permissions:
  contents: write
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
crazy-max/ghaction-github-labeler,"- name: ""bug""
  color: ""d73a4a""
  description: ""Something isn\'t working""
- name: ""documentation""
  color: ""0075ca""
  description: ""Improvements or additions to documentation""
- name: ""duplicate""
  color: ""cfd8d7""
  description: ""This issue or pull request already exists""
- name: ""enhancement""
  color: ""a22eef""
- name: ""wontfix_it""
  color: ""000000""
  description: ""This will not be worked on""
  from_name: ""wontfix""

name: github

on:
  push:
    branches:
      - \'main\'
    paths:
      - \'.github/labels.yml\'
      - \'.github/workflows/labels.yml\'

jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run Labeler
        uses: crazy-max/ghaction-github-labeler@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          yaml-file: .github/labels.yml
          exclude: |
            help*
            *issue
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
superbrothers/close-pull-request,"name: Close Pull Request\r
\r
on:\r
  pull_request_target:\r
    types: [opened]\r
\r
jobs:\r
  run:\r
    runs-on: ubuntu-latest\r
    steps:\r
    - uses: superbrothers/close-pull-request@v3\r
      with:\r
        comment: ""We do not accept PRs. If you have any questions, please feel free to contact us.""\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
crondaemon/close-pr,"name: Close All Pull Requests

on:
  push:
  pull_request:
  schedule:
    - cron: \'0 0 * * *\'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - uses: crondaemon/close-pr@v1
      with:
        comment: ""We do not accept PRs. If you have any questions, please feel free to contact us.""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
styfle/cancel-workflow-action,"jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action

uses: styfle/cancel-workflow-action@0.9.1

name: Cancel
on: [push]
jobs:
  cancel:
    name: \'Cancel Previous Runs\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action
        with:
          workflow_id: 479426

name: Cancel
on:
  workflow_run:
    workflows: [""CI""]
    types:
      - requested
jobs:
  cancel:
    runs-on: ubuntu-latest
    steps:
    - uses: styfle/cancel-workflow-action
      with:
        workflow_id: ${{ github.event.workflow.id }}

on:
  pull_request:
    types: [closed]
jobs:
  cleanup:
    name: \'Cleanup After PR Closed\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Cancel build runs
        uses: styfle/cancel-workflow-action
        with:
          ignore_sha: true
          workflow_id: 479426

name: Cancel
on: [push]
jobs:
  cancel:
    name: \'Cancel Previous Runs\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action
        with:
          all_but_latest: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action
        with:
          access_token: ${{ github.token }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
antoinealb/clang-format-action,"on: push
name: clang-format Code Formatter
jobs:
  lint:
    name: clang-format Code Formatter
    runs-on: ubuntu-latest
    steps:
    - name: Clang Code Formatter
      uses: antoinealb/clang-format-action@clang9
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jsmrcaga/action-netlify-deploy,"name: \'My Workflow\'

on:
  release:
    types: [published]

jobs:
  deploy:
    name: \'Deploy to Netlify\'
    steps:
      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.MY_TOKEN_SECRET }}
          NETLIFY_DEPLOY_TO_PROD: true

name: \'Netlify Deploy\'

on:
  release:
    types: [\'published\']

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: ""Prod deploy v${{ github.ref }}""
          NETLIFY_DEPLOY_TO_PROD: true

name: \'Netlify Preview Deploy\'

on:
  pull_request:
    types: [\'opened\', \'edited\', \'synchronize\']

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


name: \'Netlify Previews\'

on:
  push:
    branches-ignore: 
      - master

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: nelonoel/branch-name@v1.0.1
      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          deploy_alias: ${{ env.BRANCH_NAME }}
      
      - name: Status check
        uses: Sibz/github-status-action@v1.1.1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: ${{ env.NETLIFY_PREVIEW_URL }}

- name: Deploy to Netlify
  uses: jsmrcaga/action-netlify-deploy@v2.0.0
  with:
    NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    NETLIFY_DEPLOY_MESSAGE: ""Deployed from GitHub action""
    NETLIFY_DEPLOY_TO_PROD: true
    install_command: ""echo Skipping installing the dependencies""
    build_command: ""echo Skipping building the web files""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
danielpalme/ReportGenerator-GitHub-Action,"- name: Setup .NET Core # Required to execute ReportGenerator
  uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    dotnet-quality: 'ga'

- name: ReportGenerator
  uses: danielpalme/ReportGenerator-GitHub-Action@5.1.23
  with:
    reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
    targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
    reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
    sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
    historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
    plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
    assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
    title: '' # Optional title.
    tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
    license: '' # Optional license for PRO version. Get your license here: https://reportgenerator.io/pro
    customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
    toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.

- name: Upload coverage report artifact
  uses: actions/upload-artifact@v2.2.3
  with:
    name: CoverageReport # Artifact name        
    path: coveragereport # Directory containing files to upload
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
RalfG/python-wheels-manylinux-build,"uses: RalfG/python-wheels-manylinux-build@v0.7.1
with:
  python-versions: 'cp310-cp310 cp311-cp311'

uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2010_x86_64
with:
  python-versions: 'cp310-cp310 cp311-cp311'
  build-requirements: 'cython numpy'
  system-packages: 'lrzip-devel zlib-devel'
  pre-build-command: 'sh pre-build-script.sh'
  package-path: 'my_project'
  pip-wheel-args: '-w ./dist --no-deps'
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
DataDog/labeler,"label1:
  - example/**/*

label2: example2/*

repo:
  - ./*
  
@domain/core:
  - package/core/*
  - package/core/**/*

test:
  - src/**/*.spec.js

name: ""Pull Request Labeler""
on:
- pull_request

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@v2
      with:
        repo-token: ""${{ secrets.GITHUB_TOKEN }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
datamade/python-wheels-manylinux-build,"uses: actions/python-wheels-manylinux-build@v0.1
with:
  python-versions: 'cp36-cp36m cp37-cp37m'
  build-requirements: 'cython numpy'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
lgeiger/black-action,"workflow ""Example Workflow"" {
  on = ""push""
  resolves = [""Lint""]
}

action ""Lint"" {
  uses = ""lgeiger/black-action@master""
  args = "". --check""
}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
wbari/start-mongoDB,"...
...
strategy:
      matrix:
        mongodb-version: [""4.0"", ""4.2""]
...
...
- name: Launch MongoDB
  uses: wbari/start-mongoDB@v0.2
  with:
    mongoDBVersion: ${{ matrix.mongodb-version }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
papeloto/action-zip,"name: Zip Files

on:
  release:
    types: [published]

jobs:
  zip-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: vimtor/action-zip@v1
        with:
          files: dist/ manifest.json
          dest: result.zip

- uses: vimtor/action-zip@v1
  with:
    files: dist/ manifest.json
    recursive: false
    dest: result.zip

- uses: actions/upload-artifact@v1
  with:
    name: my-artifact
    path: ${{ github.workspace }}/result.zip
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
digipost/action-maven-publish,"<parent>
    <groupId>no.digipost</groupId>
    <artifactId>digipost-open-super-pom</artifactId>
    <version>12</version>
</parent>

name: Release

on:
  push:
    tags:
    - '*'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Set release version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - name: Release to Central Repository
        uses: digipost/action-maven-publish@1.1.0
        with:
          sonatype_secrets: ${{ secrets.sonatype_secrets }}
          release_version: ${{ env.RELEASE_VERSION }}
          perform_release: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
unsplash/comment-on-pr,"name: comment-on-pr example
on: pull_request
jobs:
  example:
    name: sample comment
    runs-on: ubuntu-latest
    steps:
      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ""Check out this message!""
          check_for_duplicate_msg: false  # OPTIONAL
          delete_prev_regex_msg: ""[0-9]""  # OPTIONAL
          duplicate_msg_pattern: ""[A-Z]""  # OPTIONAL
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
reactivecircus/android-emulator-runner,"jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
        target: [default, google_apis]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          ndk: 21.0.6113669
          cmake: 3.10.2.4988404
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != \'true\'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo ""Generated AVD snapshot for caching.""

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
",0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
CvX/publish-rubygems-action,"name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps: (your tests go here)

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Release Gem
        uses: discourse/publish-rubygems-action@v2
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
          RELEASE_COMMAND: rake release
          GIT_EMAIL: ci@example.com
          GIT_NAME: Your CI
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
djordon/git-autotag-action,"name: Tagging main using pyproject.toml
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Tag main using pyproject.toml
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout main
      uses: actions/checkout@v3
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat pyproject.toml \\
          | grep --extended-regexp ""^version ="" \\
          | grep --extended-regexp --only-matching ""[0-9]+\\.[0-9]+.[0-9]+[-\\.\\+a-zA-Z0-9]*"" \\
          | head --lines=1)
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tag main depending on the value in pyproject.toml
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}

...
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat Cargo.toml \\
          | grep --extended-regexp ""^version ="" \\
          | grep --extended-regexp --only-matching ""[0-9]+\\.[0-9]+.[0-9]+[-\\.\\+a-zA-Z0-9]*"" \\
          | head --lines=1)
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tagging repo using version specified in Cargo.toml
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}

...
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat mix.exs \\
          | grep --line-buffer ""version: "" \\
          | grep --extended-regexp --only-matching ""\\""[-0-9\\.\\+a-zA-Z]+\\"""" \\
          | grep --extended-regexp --only-matching ""[-0-9\\.\\+a-zA-Z]+"")
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tagging repo using version specified in mix.exs
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
anothrNick/github-tag-action,"name: Bump version
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: \'0\'

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0 # Don\'t use @master or @v1 unless you\'re happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don\'t want to set write permissions use a PAT token
        WITH_V: false

name: Bump version
on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: \'0\'

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0 # Don\'t use @master or @v1 unless you\'re happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don\'t want to set write permissions use a PAT token
        WITH_V: true
        PRERELEASE: true

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
juliangruber/read-file-action,"steps:
  - name: Checkout repository
    uses: actions/checkout@v3
  - name: Read package.json
    id: package
    uses: juliangruber/read-file-action@v1
    with:
      path: ./package.json
  - name: Echo package.json
    run: echo ""${{ steps.package.outputs.content }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nick-invision/retry,"uses: nick-fields/retry@v2
with:
  timeout_minutes: 10
  max_attempts: 3
  shell: pwsh
  command: dir

uses: nick-fields/retry@v2
with:
  timeout_minutes: 10
  max_attempts: 3
  command: npm run some-typically-slow-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npm run some-typically-fast-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  retry_on: timeout
  command: npm run some-typically-fast-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  retry_on: error
  command: npm run some-typically-fast-script

- uses: nick-fields/retry@v2
  id: retry
  with:
    timeout_seconds: 15
    max_attempts: 3
    continue_on_error: true
    command: node -e \'process.exit(99);\'
- name: Assert that step succeeded (despite failing command)
  uses: nick-fields/assert-action@v1
  with:
    expected: success
    actual: ${{ steps.retry.outcome }}
- name: Assert that action exited with expected exit code
  uses: nick-fields/assert-action@v1
  with:
    expected: 99
    actual: ${{ steps.retry.outputs.exit_code }}

- uses: nick-fields/retry@v2
  id: retry
  continue-on-error: true
  with:
    timeout_seconds: 15
    max_attempts: 3
    retry_on: error
    command: node -e \'process.exit(99);\'
- name: Assert that action failed
  uses: nick-fields/assert-action@v1
  with:
    expected: failure
    actual: ${{ steps.retry.outcome }}
- name: Assert that action exited with expected exit code
  uses: nick-fields/assert-action@v1
  with:
    expected: 99
    actual: ${{ steps.retry.outputs.exit_code }}
- name: Assert that action made expected number of attempts
  uses: nick-fields/assert-action@v1
  with:
    expected: 3
    actual: ${{ steps.retry.outputs.total_attempts }}

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npm run some-flaky-script-that-outputs-something
  on_retry_command: npm run cleanup-flaky-script-output

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npx jest
  new_command_on_retry: npx jest --onlyFailures

name: Multi-line multi-command Test
uses: ./
with:
  timeout_minutes: 1
  max_attempts: 2
  command: |
    Get-ComputerInfo
    Get-Date

name: Multi-line single-command Test
uses: ./
with:
  timeout_minutes: 1
  max_attempts: 2
  shell: cmd
  command: >-
    echo ""this is
 a test""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
c-hive/gha-remove-artifacts,"name: Remove old artifacts

on:
  schedule:
    - cron: '0 1 * * *'

jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 month' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
calibreapp/image-actions,"name: Compress Images\r
on:\r
  pull_request:\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
jobs:\r
  build:\r
    if: github.event.pull_request.head.repo.full_name == github.repository\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
\r
      - name: Compress Images\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r

with:\r
  jpegQuality: \'80\'\r
  jpegProgressive: false\r
  pngQuality: \'80\'\r
  webpQuality: \'80\'\r

with:\r
  ignorePaths: \'node_modules/**,build\'\r

with:\r
  compressOnly: true\r

name: Compress Images\r
on:\r
  workflow_dispatch:\r
  schedule:\r
    - cron: \'00 23 * * 0\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: true\r
      - name: Create New Pull Request If Needed\r
        if: steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Compressed Images Nightly\r
          branch-suffix: timestamp\r
          commit-message: Compressed Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

if: github.event.pull_request.head.repo.full_name == github.repository\r

name: Compress Images on Push to main branch\r
on:\r
  push:\r
    branches:\r
      - main\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: true\r
      - name: Create New Pull Request If Needed\r
        if: steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Compressed Images\r
          branch-suffix: timestamp\r
          commit-message: Compressed Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

name: Compress images\r
on:\r
  pull_request:\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
  push:\r
    branches:\r
      - main\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
  workflow_dispatch:\r
  schedule:\r
    - cron: \'00 23 * * 0\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    if: |\r
      github.repository == \'example/example_repo\' &&\r
      (github.event_name != \'pull_request\' ||\r
       github.event.pull_request.head.repo.full_name == github.repository)\r
    steps:\r
      - name: Checkout Branch\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: ${{ github.event_name != \'pull_request\' }}\r
      - name: Create Pull Request\r
        if: |\r
          github.event_name != \'pull_request\' &&\r
          steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Auto Compress Images\r
          branch-suffix: timestamp\r
          commit-message: Compress Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

- name: calibreapp/image-actions\r
    uses: docker://calibreapp/github-image-actions\r
    env:\r
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r

- name: Compress Images\r
  uses: calibreapp/image-actions@main\r
  with:\r
    githubToken: ${{ secrets.GITHUB_TOKEN }}\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
valadas/get-release-branch-version,"name: Get release branch
on: create

jobs:
  get-release:
    name: Get the release branch version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: valadas/get-release-branch-version@v1
        id: branchVersion
      - name: Dump the version info
        env:
          MAJOR: ${{ steps.branchVersion.major }}
          MINOR: ${{ steps.branchVersion.minor }}
          PATCH: ${{ steps.branchVersion.patch }}
          MANIFEST_SAFE_VERSION_STRING: ${{ steps.branchVersion.manifestSafeVersionString }}
        run: ""echo major: $MAJOR minor: $MINOR patch: $PATCH manifestSafeVersionString: $MANIFEST_SAFE_VERSION_STRING""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
valadas/set-dnn-manifest-versions,"name: Set manifest versions
on: [push] # You can act on other events depending on your needs

jobs:
  setManifestVersions:
    name: Set Manifest Versions
    runs-on: ubuntu-latest # The action is javascript based so can be used in any environment that has node.js
    
    steps:
      - uses: valadas/set-dnn-manifest-versions@v1
        with:
          version: 01.02.03 # Must be a nn.nn.nn formatted string, can be takin from other actions outputs such as https://github.com/valadas/get-release-branch-version or https://github.com/valadas/dnn-platform-get-version

...

- uses: valadas/set-dnn-manifest-versions@v1
  with:
    version: 02.03.04
    glob: |-
      ./my-mono-repo/modules/**/*.dnn
      \\!somemodule/*.dnn

...

- uses: valadas/set-dnn-manifest-versions@v1
  with:
    version: 04.05.06
    skipFile: './build/unversionedManifests.txt' # Will version all manifests except the ones listed in the glob patterns in the lines of the provided text file.
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lukka/run-vcpkg,"jobs:
  build:
    steps:

      - uses: lukka/get-cmake@latest

      - name: Setup vcpkg (it does not install any package yet)
        uses: lukka/run-vcpkg@v11




      - name: Run CMake consuming CMakePreset.json and run vcpkg to build dependencies
        uses: lukka/run-cmake@v10
        with:

          configurePreset: \'ninja-multi-vcpkg\'

          buildPreset: \'ninja-multi-vcpkg\'


\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
|  If running in GH Runner,|   Environment variables:
|  set the env vars:       |   - If any env var is
|  - VCPKG_BINARY_SOURCES  |     already defined
|  - ACTIONS_CACHE_URL     |     it will not be overridden.
|  - ACTIONS_RUNTIME_TOKEN |
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
|  Skipped by default.     |
\xe2\x94\x82  Compute cache key from: \xe2\x94\x82   Inputs:
\xe2\x94\x82  - vcpkg Git commit      \xe2\x94\x82   - `vcpkgGitCommitId`
\xe2\x94\x82  - platform and OS       \xe2\x94\x82   - `doNotCache`: set to false
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98     to run this block.
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 \xe2\x94\x82 Locate vcpkg.json.      \xe2\x94\x82   - `vcpkgJsonGlob`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98   - `vcpkgJsonIgnores`
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 | Skipped by default.     |   - `vcpkgDirectory`
 \xe2\x94\x82 Restore vcpkg           \xe2\x94\x82   - `doNotCache`: set to false
 \xe2\x94\x82 from the GH cache.      \xe2\x94\x82     to run this block.
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 \xe2\x94\x82 If vcpkg is not a       \xe2\x94\x82   - `vcpkgDirectory`
 \xe2\x94\x82 submodule, fetch it     \xe2\x94\x82   - `vcpkgGitCommitId`
 \xe2\x94\x82                         \xe2\x94\x82   - `vcpkgGitURL`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98   - `doNotUpdateVcpkg`
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
 \xe2\x94\x82 Rebuild vcpkg executable\xe2\x94\x82   Inputs:
 \xe2\x94\x82 if not in sync with     \xe2\x94\x82   - `vcpkgGitCommitId`
 \xe2\x94\x82 sources.                \xe2\x94\x82   - `vcpkgGitURL`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
  <Is `runVcpkgInstall:true`>\xe2\x94\x90    Inputs:
          \xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80        No\xe2\x94\x82   - `runVcpkgInstall`
              \xe2\x94\x82 Yes          \xe2\x94\x82
              \xe2\x96\xbc              \xe2\x94\x82
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90 \xe2\x94\x82
 \xe2\x94\x82 Launch `vcpkg install`  \xe2\x94\x82 \xe2\x94\x82   Inputs:
 \xe2\x94\x82 where vcpkg.json has    \xe2\x94\x82 \xe2\x94\x82   - `runVcpkgFormatString`
 \xe2\x94\x82 been located.           \xe2\x94\x82 \xe2\x94\x82   Environment variables:
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98 \xe2\x94\x82   - `VCPKG_DEFAULT_TRIPLET` is used. If not yet
              \xe2\x94\x82              \xe2\x94\x82     set, it is set to the current platform.
              \xe2\x94\x82              \xe2\x94\x82   - `VCPKG_INSTALLED_DIR` is used as value for
              \xe2\x94\x82              \xe2\x94\x82     `--x-install-root` when running `vcpkg install`.
              \xe2\x94\x82              \xe2\x94\x82     Check out the `runVcpkgFormatString` input.
              \xe2\x96\xbc              \xe2\x94\x82   - `VCPKG_BINARY_SOURCES` is used. If not yet 
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90 \xe2\x94\x82      set, it is set to leverage the GitHub Action
 \xe2\x94\x82 Set `VCPKG_ROOT` and    \xe2\x94\x82 \xe2\x94\x82      cache storage for Binary Caching artifacts.
 \xe2\x94\x82 `VCPKG_DEFAULT_TRIPLET` \xe2\x94\x82 \xe2\x94\x82
 \xe2\x94\x82 workflow-wide env vars. \xe2\x94\x82 \xe2\x94\x82
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98 \xe2\x94\x82
              \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80 \xe2\x94\x98
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
 | Skipped by default.     |
 \xe2\x94\x82 If no cache-hit,        \xe2\x94\x82  Inputs:
 \xe2\x94\x82 store vcpkg onto        \xe2\x94\x82  - `doNotCache`: set to false to
 \xe2\x94\x82 GH cache.               \xe2\x94\x82    run this block.
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              |
              \xe2\x96\xbc
              \xe2\xac\xac
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
lots0logs/gh-action-get-changed-files,"- uses: lots0logs/gh-action-get-changed-files@2.2.2
  with:
    token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
maxkomarychev/oction-create-issue,"- uses: maxkomarychev/oction-create-issue@v0.7.1
  id: my_step_id
  with:
    token: <token value>
    title: <title value>
- name: Print outputs
  run: |
    echo ${{ steps.my_step_id.outputs.id }}
    echo ${{ steps.my_step_id.outputs.number }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
subosito/flutter-action,"steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '3.7.7'
    channel: 'stable'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable' # or: 'beta', 'dev' or 'master'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '1.22.x'
    channel: 'dev'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '2.x'
    channel: 'any'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v2
  with:
    distribution: 'zulu'
    java-version: '11'
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '3.7.7'
- run: flutter pub get
- run: flutter test
- run: flutter build apk
- run: flutter build appbundle

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
    - run: flutter build ios --release --no-codesign

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
- run: flutter pub get
- run: flutter test
- run: flutter build web

jobs:
 build:
   runs-on: windows-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'beta'
     - run: flutter config --enable-windows-desktop
     - run: flutter build windows

jobs:
 build:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'stable'
     - run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
     - run: flutter config --enable-linux-desktop
     - run: flutter build linux

jobs:
 build:
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'stable'
         architecture: x64
     - run: flutter config --enable-macos-desktop
     - run: flutter build macos

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
    cache: true
    cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
    cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
    architecture: x64 # optional, x64 or arm64
- run: flutter --version

steps:
- uses: actions/checkout@v3
- id: flutter-action
  uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
- run: |
    echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
    echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
    echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
    echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
    echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
  shell: bash
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
maierj/fastlane-action,"- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'

fastlane beta option1:value1 option2:value2

- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'
    options: \'{ ""option1"": ""value1"", ""option2"": ""value2"" }\'

- uses: actions/checkout@v2
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
    working-directory: \'ios\'
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'
    subdirectory: \'ios\'

- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: beta
    env: staging
",0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
kiegroup/github-action-build-chain,"- name: Build Chain ${{ matrix.java-version }}
  id: build-chain
  uses: ginxo/github-action-build-chain@BXMSPROD-1025
  with:
    definition-file: https://raw.githubusercontent.com/${GROUP}/droolsjbpm-build-bootstrap/${BRANCH}/.ci/pull-request-config.yaml
  env:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

pre: string | multiline string

pre: export VARIABLE_NAME=value

pre: |
  export VARIABLE_NAME=value
  echo $VARIABLE_NAME

post:
  success: string | multiline string
  failure: string | multiline string
  always: string | multiline string

post:
  success: echo \'final message in case of no errors\'
  failure: echo \'final message in case of any error\'
  always: echo \'final message always printed\'

post:
  success: |
    echo \'final message in case of no errors 1\'
    echo \'final message in case of no errors 2\'
  failure: |
    echo \'final message in case of any error\'
    echo \'final message in case of any error 2\'
  always: |
    echo \'final message always printed\'
    echo \'final message always printed 2\'

archive-artifacts:
  path: **/dashbuilder-runtime.war

archive-artifacts:
  path: path/to/artifact-folder/

archive-artifacts:
  path: path/**/[abc]rtifac?/*

archive-artifacts:
  path: |
    path/output/bin/
    path/output/test-results
    !path/**/*.tmp

archive-artifacts:
  path: |
    path/output/bin/
    path2/output2/bin2/@success
    path/output/test-results@failure
    !path/**/*.tmp@always

    path/to/*/directory/foo?.txt =>
        \xe2\x88\x9f path/to/some/directory/foo1.txt
        \xe2\x88\x9f path/to/some/directory/foo2.txt
        \xe2\x88\x9f path/to/other/directory/foo1.txt

    would be flattened and uploaded as =>
        \xe2\x88\x9f some/directory/foo1.txt
        \xe2\x88\x9f some/directory/foo2.txt
        \xe2\x88\x9f other/directory/foo1.txt

archive-artifacts:
  path: path/to/artifact/
  if-no-files-found: error # \'warn\' or \'ignore\' are also available, defaults to `warn`

archive-artifacts:
  name: my-artifacts
  path: **/dashbuilder-runtime.war

archive-artifacts:
  path: world.txt

archive-artifacts:
  path: extra-file.txt

archive-artifacts:
  path: world.txt

archive-artifacts:
  path: ""~/new/**/*""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: ""none""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: ""all""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: |
    projectX
    projectY

  - project: kiegroup/appformer
    clone:
      - appformer-integration-test
      - folderx/appformer-unit-test

  - project: group/projectx
    clone: another-folder

- project: E
  dependencies:
    - project: D
  mapping:
    dependencies:
      default:
        - source: 7.x
          target: main
      C:
        - source: main
          target: 7.x
        - source: 7.x
          target: 7.x
      D:
        - source: main
          target: 7.x
        - source: 7.x
          target: 7.x
    dependant:
      default:
        - source: main
          target: 7.x
    exclude:
      - A
      - B

docker build .

docker build --build-arg OPENJDK_VERSION=11 .

$ npm install -g @kie/build-chain-action
$ build-chain help
Usage: build-chain [options] [command]

A CLI tool to perform the build chain github actions

Options:
  -h, --help      display help for command

Commands:
  build           Execute different flows
  tools           A bunch of utility tools
  help [command]  display help for command

$ build-chain build help
Usage: build-chain build [options] [command]

Execute different flows

Options:
  -h, --help                 display help for command

Commands:
  cross_pr [options]         Execute cross pull request build chain workflow
  full_downstream [options]  Execute full downstream build chain workflow
  single_pr [options]        Execute single pull request build chain workflow
  branch [options]           Execute branch build chain workflow
  help [command]             display help for command

$ build-chain build cross_pr --help
Usage: build-chain build cross_pr [options]

Execute cross pull request build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_202211229567"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build cross_pr -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build full_downstream --help
Usage: build-chain build full_downstream [options]

Execute full downstream build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_2022112295741"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build full_downstream -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build single_pr --help
Usage: build-chain build single_pr [options]

Execute single pull request build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_2022112295912"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build single_pr -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build branch --help
Usage: build-chain build branch [options]

Execute branch build chain workflow

Options:
  -p, --startProject <project>           The project to start the build from
  -b, --branch <branch>                  The branch to get the project from
  --fullProjectDependencyTree            Checks out and execute the whole tree instead of the upstream build (default: false)
  -c, --command <commands...>            The command(s) to execute for every project. This will override definition file configuration (just
                                         dependency tree will be taken into account)
  -g, --group <group>                    The group to execute flow. It will take it from project argument in case it\'s not specified
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_202211221013"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build branch -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -p=kiegroup/lienzo-tests -b=main

$ build-chain build resume

$ build-chain build resume -w bc

$ build-chain tools help
Usage: build-chain tools [options] [command]

A bunch of utility tools

Options:
  -h, --help              display help for command

Commands:
  project-list [options]  Prints the projects that will be built given a starting project ordered by precedence
  plan                    Execute build chain without actually cloning or executing projects (like a dry run)
  resume [options]        Resume execution from first point of failure
  help [command]          display help for command

$ build-chain build cross_pr -f definition_file -u event_url

$ build-chain tools plan cross_pr -f definition_file -u event_url

-ghi, --defaultGithubId <id>                default github id
-ghti, --defaultGithubTokenId <token id>    default github token id used to get token from env
-gha, --defaultGithubApiUrl <api url>       default github api url to use
-ghs, --defaultGithubServeUrl <server url>  default github server url to use
-gli, --defaultGitlabId <id>                default gitlab id
-glti, --defaultGitlabTokenId <token id>    default gitlab token id used to get token from env
-gla, --defaultGitlabApiUrl <api url>       default gitlab api url to use
-gls, --defaultGitlabServeUrl <server url>  default gitlab server url to use

version: 2.3

dependencies:
  - project: middleware/build-configurations
    platform: rh-gitlab
    mapping:
      dependencies:
        default:
          - source: master
            target: main
      dependant:
        default:
          - source: main
            target: master
  - project: business-automation/eng-jenkins-scripts
    platform: rh-gerrit
    dependencies:
      - project: middleware/build-configurations
      - project: kiegroup/drools
  
  - project: kiegroup/drools
    platform: github-public

default:
  build-command:
    current: echo ""default current""

build:
  - project: business-automation/eng-jenkins-scripts
    build-command:
      current: echo ""business-automation/eng-jenkins-scripts""

platforms:
  - id: rh-gitlab
    type: gitlab
    tokenId: RH_GITLAB_TOKEN
    serverUrl: https://gitlab.xxxx.com
    apiUrl: https://gitlab.xxxx.com/api/v4

  - id: rh-gerrit
    type: gerrit
    tokenId: RH_GERRIT_TOKEN
    serverUrl: https://gerrit.xxxx.com
    apiUrl: https://gerrit.xxxx.com/r/a

{
  name: string; // name of the test case. typically you can name it corresponding to the issue
  cmd: string; // the build-chain cli command used to reproduce the issue
  description?: string; // further description of the issue
  env?: Record<string, string>; // any env setup needed
  shouldFail?: boolean; // whether the expected result after execution of build-chain is success or failure. by default it expects success
  matchOutput?: string[] // any particular strings to match in the output
  dontMatchOutput?: string[] // any particular strings we want to make sure aren\'t there in the output
}

{
  name: string; // name of the test case. typically you can name it corresponding to the issue
  event: string | PullRequestPayload; // it can either be a link to a PR or a JSON object similar to a pull request event payload
  description?: string; // further description of the issue
  env?: Record<string, string>; // any env setup needed
  shouldFail?: boolean; // whether the expected result after execution of build-chain is success or failure. by default it expects success
  matchOutput?: string[] // any particular strings to match in the output
  dontMatchOutput?: string[] // any particular strings we want to make sure aren\'t there in the output
  
  // it accepts all the inputs that are needed to run build-chain as a github action
  ""definition-file"": string;
  ""flow-type"": string;
  ""starting-project?"": string;
  ""skip-execution""?: string;
  ""skip-project-execution""?: string;
  ""skip-checkout""?: string;
  ""skip-project-checkout""?: string;
  ""skip-parallel-checkout""?: string;
  ""custom-command-treatment""?: string;
  ""additional-flags""?: string;
  ""logger-level""?: string;
  ""annotations-prefix""?: string;
}

      - name: ""Run build-chain""
        id: build-chain
        uses: kiegroup/github-action-build-chain@main
        with:
          definition-file: whatever-the-file-url/path
        env:
          GITHUB_TOKEN_GOOD_BAD: ""${{ secrets.MY_GH_TOKEN }}""
          GITHUB_TOKEN_GOOD: ""${{ secrets.GITHUB_TOKEN }}""
          CIFS_ZID_USER: ""${{ secrets.CIFS_ZID_USER }}""
          CIFS_ZID_KEY: ""${{ secrets.CIFS_ZID_KEY }}""

npm install
npm run build:cli
./build/index.js build ...

npm test

npm run test:report

npm run test:e2e

ACT_LOG=true npm run test:e2e
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
joschi/setup-jdk,"steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'11\' # The OpenJDK version to make available on the path
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\' # See \'Supported distributions\' for available options
    java-version: \'11\'
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'11\' # The OpenJDK version to make available on the path
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'4.0.0\'
    architecture: x64
    jdkFile: <path to jdkFile> # Optional - jdkFile to install java from. Useful for versions not found on Zulu Community CDN
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ \'8\', \'11\', \'13\' ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: joschi/setup-jdk@v2
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: joschi/setup-jdk@v2
      with:
        java-version: \'8\'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: joschi/setup-jdk@v2
      with: # running setup-jdk again overwrites the settings.xml
        java-version: \'8\'
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.MAVEN_GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: joschi/setup-jdk@v2

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: joschi/setup-jdk@v2
      with:
        java-version: \'8\'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
technote-space/create-project-card-action,"on:
  issues:
    types: [opened]
name: Issue opened
jobs:
  assign:
    name: Assign issues to project
    runs-on: ubuntu-latest
    steps:
      - name: Assign issues to project
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: Backlog
          COLUMN: To do

on:
  pull_request:
    types: [opened]
name: Pull Request opened
jobs:
  assignToProject:
    name: Assign PullRequest to Project
    runs-on: ubuntu-latest
    steps:
      - name: Assign PullRequest to Project
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: Backlog
          COLUMN: To do
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
mschilde/auto-label-merge-conflicts,"on:
  push:
    branches:
      - master
jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: mschilde/auto-label-merge-conflicts@master
        with:
          CONFLICT_LABEL_NAME: ""has conflicts""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAX_RETRIES: 5
          WAIT_MS: 5000
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
aws-actions/amazon-ecr-login,"      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the \'AWS Credentials\' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Package and push helm chart to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
        run: |
          helm package $REPOSITORY
          helm push $REPOSITORY-0.1.0.tgz oci://$REGISTRY

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Package and push helm chart to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
        run: |
          helm package $REPOSITORY
          helm push $REPOSITORY-0.1.0.tgz oci://$REGISTRY/$REGISTRY_ALIAS

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ""123456789012,998877665544""

jobs:
  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: us-east-1
          mask-aws-account-id: \'false\'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_123456789012_dkr_ecr_us_east_1_amazonaws_com }} # More information on these outputs can be found below in the \'Docker Credentials\' section
      docker_password: ${{ steps.login-ecr.outputs.docker_password_123456789012_dkr_ecr_us_east_1_amazonaws_com }}

  run-with-internal-service:
    name: Run something with an internal image as a service
    needs: login-to-amazon-ecr
    runs-on: ubuntu-latest
    services:
      internal-service:
        image: ${{ needs.login-to-amazon-ecr.outputs.registry }}/my-ecr-repo:latest
        credentials:
          username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
          password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
        ports:
          - \'80:80\'
    steps:
      - name: Run steps in container
        run: echo ""run steps in container""

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

uses: aws-actions/amazon-ecr-login@v1.6.0
with:
  http-proxy: ""http://companydomain.com:3128""

HTTP_PROXY=""http://companydomain.com:3128""

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""GetAuthorizationToken"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:GetAuthorizationToken""
      ],
      ""Resource"": ""*""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPull"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:BatchGetImage"",
        ""ecr:GetDownloadUrlForLayer""
      ],
      ""Resource"": ""arn:aws:ecr:us-east-1:123456789012:repository/my-ecr-repo""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPushPull"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:BatchGetImage"",
        ""ecr:BatchCheckLayerAvailability"",
        ""ecr:CompleteLayerUpload"",
        ""ecr:GetDownloadUrlForLayer"",
        ""ecr:InitiateLayerUpload"",
        ""ecr:PutImage"",
        ""ecr:UploadLayerPart""
      ],
      ""Resource"": ""arn:aws:ecr:us-east-1:123456789012:repository/my-ecr-repo""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""GetAuthorizationToken"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr-public:GetAuthorizationToken"",
        ""sts:GetServiceBearerToken""
      ],
      ""Resource"": ""*""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPush"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr-public:BatchCheckLayerAvailability"",
        ""ecr-public:CompleteLayerUpload"",
        ""ecr-public:InitiateLayerUpload"",
        ""ecr-public:PutImage"",
        ""ecr-public:UploadLayerPart""
      ],
      ""Resource"": ""arn:aws:ecr-public::123456789012:repository/my-ecr-public-repo""
    }
  ]
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
aws-actions/amazon-ecs-render-task-definition,"    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: web
        image: amazon/amazon-ecs-sample:latest
        environment-variables: ""LOG_LEVEL=info""

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: my-service
        cluster: my-cluster

    - name: Render Amazon ECS task definition for first container
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: web
        image: amazon/amazon-ecs-sample-1:latest
        environment-variables: |
            LOG_LEVEL=info
            ENVIRONMENT=prod

    - name: Modify Amazon ECS task definition with second container
      id: render-app-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        container-name: app
        image: amazon/amazon-ecs-sample-2:latest

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-app-container.outputs.task-definition }}
        service: my-service
        cluster: my-cluster
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
aws-actions/amazon-ecs-deploy-task-definition,"    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true

aws ecs describe-task-definition \\
   --task-definition my-task-definition-family \\
   --query taskDefinition > task-definition.json

aws ecs register-task-definition \\
   --generate-cli-skeleton > task-definition.json

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition my-task-definition-family --query taskDefinition > task-definition.json

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo ""image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: my-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true

{
   ""Version"":""2012-10-17"",
   ""Statement"":[
      {
         ""Sid"":""RegisterTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:RegisterTaskDefinition""
         ],
         ""Resource"":""*""
      },
      {
         ""Sid"":""PassRolesInTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""iam:PassRole""
         ],
         ""Resource"":[
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_role_name>"",
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_execution_role_name>""
         ]
      },
      {
         ""Sid"":""DeployService"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:UpdateService"",
            ""ecs:DescribeServices""
         ],
         ""Resource"":[
            ""arn:aws:ecs:<region>:<aws_account_id>:service/<cluster_name>/<service_name>""
         ]
      }
   ]
}

    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true
        codedeploy-appspec: appspec.json
        codedeploy-application: my-codedeploy-application
        codedeploy-deployment-group: my-codedeploy-deployment-group

{
   ""Version"":""2012-10-17"",
   ""Statement"":[
      {
         ""Sid"":""RegisterTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:RegisterTaskDefinition""
         ],
         ""Resource"":""*""
      },
      {
         ""Sid"":""PassRolesInTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""iam:PassRole""
         ],
         ""Resource"":[
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_role_name>"",
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_execution_role_name>""
         ]
      },
      {
         ""Sid"":""DeployService"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:DescribeServices"",
            ""codedeploy:GetDeploymentGroup"",
            ""codedeploy:CreateDeployment"",
            ""codedeploy:GetDeployment"",
            ""codedeploy:GetDeploymentConfig"",
            ""codedeploy:RegisterApplicationRevision""
         ],
         ""Resource"":[
            ""arn:aws:ecs:<region>:<aws_account_id>:service/<cluster_name>/<service_name>"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:deploymentgroup:<application_name>/<deployment_group_name>"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:deploymentconfig:*"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:application:<application_name>""
         ]
      }
   ]
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
jaroldwong/composite-action,"on:
  push:
    branches:
      - master

name: Push image to ECR and force new ECS deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and redeploy
        uses: jaroldwong/ecr-push-and-ecs-deploy@v1.1
        with:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
          ecr-repository: 'Repository name'
          ecs-cluster: 'ECS Cluster name'
          ecs-service: 'Service name'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
jaroldwong/ecr-push-and-ecs-deploy,"on:
  push:
    branches:
      - master

name: Push image to ECR and force new ECS deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and redeploy
        uses: jaroldwong/ecr-push-and-ecs-deploy@v1.1
        with:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
          ecr-repository: 'Repository name'
          ecs-cluster: 'ECS Cluster name'
          ecs-service: 'Service name'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
seanmiddleditch/gha-setup-vsdevenv,"jobs:
  build:
    - uses: actions/checkout@master
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=cl.exe ..
    - run: cmake --build build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
BSFishy/meson-build,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-python@v1
- uses: BSFishy/meson-build@v1.0.3
  with:
    action: test

- uses: BSFishy/meson-build@v1.0.3
  with:
    action: test
    directory: build
    setup-options: -Db_coverage=true
    options: --verbose
    meson-version: 0.53.2
    ninja-version: 1.9.0.post1
    gcovr-version: 4.2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
msys2/setup-msys2,"  - uses: msys2/setup-msys2@v2

  - shell: msys2 {0}
    run: |
      uname -a

  - shell: powershell
    run: msys2 -c \'uname -a\'

  - shell: cmd
    run: msys2 -c \'uname -a\'

  defaults:
    run:
      shell: msys2 {0}
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        curl
        git
  - uses: actions/checkout@v3

  strategy:
    matrix:
      include:
        - { sys: mingw64, env: x86_64 }
        - { sys: mingw32, env: i686 }
        - { sys: ucrt64,  env: ucrt-x86_64 }
        - { sys: clang64, env: clang-x86_64 }
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: mingw-w64-${{matrix.env}}-openssl

  strategy:
    matrix:
      sys:
        - mingw64
        - mingw32
        - ucrt64
        - clang64
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        pacboy: openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      msystem: UCRT64

  - uses: msys2/setup-msys2@v2
    with:
      msystem: MSYS
  - shell: msys2 {0}
    run: |
      makepkg-mingw -sCLfc --noconfirm --noprogressbar
      pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
  - run: |
      set MSYSTEM=UCRT64
      msys2 -c \'<command to test the package>\'

  - uses: msys2/setup-msys2@v2
    with:
      update: true

  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        git
        curl

  strategy:
    fail-fast: false
    matrix:
      sys: [ MINGW64, MINGW32, UCRT64, CLANG64 ]
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      msystem: ${{matrix.sys}}
      install: >-
        git
        curl
      pacboy: >-
        openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      platform-check-severity: warn

  - uses: msys2/setup-msys2@v2
    with:
      path-type: minimal

  - uses: msys2/setup-msys2@v2
    with:
      cache: false

  - uses: msys2/setup-msys2@v2
    with:
      location: D:\\

  - uses: msys2/setup-msys2@v2
    with:
      release: false

  steps:
  - run: git config --global core.autocrlf input
  - uses: actions/checkout@v3
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
Lukasss93/telegram-action,"name: Notify
on:
  push:
  release:
    types: [published]

jobs:
  notify:
    name: Notify via Telegram
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Telegram
        uses: Lukasss93/telegram-action@v2
        env:
          TELEGRAM_TOKEN: ${{ secrets.telegram_token }}
          TELEGRAM_CHAT: ${{ secrets.telegram_chat }}


// ./templates/commit.mustache

{{#commits}}
<a href=""{{{repo_url}}}"">{{repo_name}}</a> \xe2\x80\xa2 <a href=""https://github.com/{{actor}}"">{{actor}}</a> \xe2\x80\xa2 <a href=""{{commit_url}}"">{{commit_sha}}</a>
{{commit_message}}

{{/commits}}

{{status}}

// ./templates/release.mustache

<a href=""{{{tag_url}}}"">New {{repo_name}} release</a>: <code>{{tag_name}}</code> ({{tag_type}})
{{{body}}}
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
nanasess/setup-php,"steps:
- uses: actions/checkout@v3
- uses: nanasess/setup-php@v4
  with:
    php-version: \'8.2\'
- run: php my_script.php

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest ]
        php: [ \'5.4\', \'5.5\', \'5.6\', \'7.1\', \'7.2\', \'7.3\', \'7.4\', \'7.3.3\' ]
    name: PHP ${{ matrix.php }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: nanasess/setup-php@v4
        with:
          php-version: ${{ matrix.php }}
      - run: php my_script.php
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
harmon758/postgresql-action,"steps:
- uses: harmon758/postgresql-action@v1
  with:
    postgresql version: '11'  # See https://hub.docker.com/_/postgres for available versions
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
nanasess/setup-chromedriver,"steps:
- uses: actions/checkout@v2
- uses: nanasess/setup-chromedriver@v2
  with:
    chromedriver-version: '88.0.4324.96'
- run: |
    export DISPLAY=:99
    chromedriver --url-base=/wd/hub &
    sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

steps:
- uses: actions/checkout@v2
- uses: nanasess/setup-chromedriver@v2
  with:
    chromedriver-version: '88.0.4324.96'
- run: chromedriver --url-base=/wd/hub &
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
nanasess/composer-installer-action,"steps:
- uses: actions/checkout@master
- uses: nanasess/composer-installer-action@master
- run: composer install
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Gr1N/setup-poetry,"steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
    with:
      poetry-version: ""1.2.2""
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
    with:
      poetry-preview: true
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - uses: actions/cache@v2
    with:
      path: ~/.cache/pypoetry/virtualenvs
      key: ${{ runner.os }}-poetry-${{ hashFiles(\'poetry.lock\') }}
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - run: poetry --version
    env:
      POETRY_VIRTUALENVS_PATH: /path/to/virtualenvs/directory
      POETRY_HTTP_BASIC_MY_REPOSITORY_PASSWORD: secret
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mhausenblas/mkdocs-deploy-gh-pages,"name: Publish docs via GitHub Pages
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_DOMAIN: optionaldomain.com
          CONFIG_FILE: folder/mkdocs.yml
          EXTRA_PACKAGES: build-base
          REQUIREMENTS: folder/requirements.txt
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
banyan/auto-label,"name: Auto Label
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-label:
    name: Auto Label
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: banyan/auto-label@1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

{ [key: string]: string | string[] }

{
  ""rules"": {
    ""frontend"": [""*.js"", ""*.css"", ""*.html""],
    ""backend"": [""app/"", ""*.rb""],
    ""ci"": "".circleci""
  }
}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
mstksg/get-package,"use: mstksg/get-package@v1
with:
  brew: brewdep1 brewdep2
  apt-get: aptdep1 aptdep2
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
TrinityCore/GitHub-Actions,"$ npm install

$ npm run build && npm run pack

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

import * as core from \'@actions/core\';
...

async function run() {
  try { 
      ...
  } 
  catch (error) {
    core.setFailed(error.message);
  }
}

run()

$ npm run pack
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1

uses: ./
with:
  milliseconds: 1000
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
codacy/codacy-coverage-reporter-action,"name: Codacy Coverage Reporter
on: [""push""]
jobs:
  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@v2
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: <PATH_TO_REPORT>
",0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
EndBug/add-and-commit,"- uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
  with:
    add: \'src\'

    author_name: Author Name

    author_email: mail@example.com

    commit: --signoff

    committer_name: Committer Name

    committer_email: mail@example.com

    cwd: \'./path/to/the/repo\'

    default_author: github_actor

    fetch: false

    message: \'Your commit message\'

    new_branch: custom-new-branch

    pathspec_error_handling: ignore

    pull: \'--rebase --autostash ...\'

    push: false

    remove: \'./dir/old_file.js\'

    tag: \'v1.0.0 --force\'

    tag_push: \'--force\'

- uses: actions/checkout@v3
  with:
    repository: ${{ github.event.pull_request.head.repo.full_name }}
    ref: ${{ github.event.pull_request.head.ref }}

> fatal: could not read Username for \'https://github.com\': No such device or address

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions

- uses: EndBug/add-and-commit@v9
  with:
    message: Show GitHub Actions logo
    committer_name: GitHub Actions
    committer_email: actions@github.com

- uses: EndBug/add-and-commit@v9
  with:
    message: Show GitHub logo
    committer_name: GitHub Actions
    committer_email: 41898282+github-actions[bot]@users.noreply.github.com

name: Lint source code
on: push

jobs:
  run:
    name: Lint with ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Update source code
        run: eslint ""src/**"" --fix

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Your Name
          author_email: mail@example.com
          message: \'Your commit message\'
          add: \'*.js\'

name: Use a different repository directory
on: push

jobs:
  run:
    name: Add a text file
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: \'./pathToRepo/\'

      - run: echo ""123"" > ./pathToRepo/file.txt

      - uses: EndBug/add-and-commit@v9
        with:
          message: \'Add the very useful text file\'
          add: \'*.txt --force\'
          cwd: \'./pathToRepo/\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jstastny/publish-gem-to-github,"name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build and publish gem
      uses: jstastny/publish-gem-to-github@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        owner: jstastny

continue-on-error: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
dawidd6/action-publish-gem,"on:
  push:
    tags:
      - '*'

---

- name: Publish gem
  uses: dawidd6/action-publish-gem@v1
  with:
    api_key: ${{secrets.RUBYGEMS_API_KEY}}
    github_token: ${{secrets.GITHUB_TOKEN}}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
mirromutth/mysql-action,"steps:
- uses: mirromutth/mysql-action@v1.1
  with:
    host port: 3800 # Optional, default value is 3306. The port of host
    container port: 3307 # Optional, default value is 3306. The port of container
    character set server: \'utf8\' # Optional, default value is \'utf8mb4\'. The \'--character-set-server\' option for mysqld
    collation server: \'utf8_general_ci\' # Optional, default value is \'utf8mb4_general_ci\'. The \'--collation-server\' option for mysqld
    mysql version: \'8.0\' # Optional, default value is ""latest"". The version of the MySQL
    mysql database: \'some_test\' # Optional, default value is ""test"". The specified database which will be create
    mysql root password: ${{ secrets.RootPassword }} # Required if ""mysql user"" is empty, default is empty. The root superuser password
    mysql user: \'developer\' # Required if ""mysql root password"" is empty, default is empty. The superuser for the specified database. Can use secrets, too
    mysql password: ${{ secrets.DatabasePassword }} # Required if ""mysql user"" exists. The password for the ""mysql user""

jobs:
  build:
    runs-on: ubuntu-${{ ubuntu-version }} # is Ubuntu environment


    steps:
    - # ... some prepare steps, like action/checkout, run some script without MySQL, etc.

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, ""sudo"" is necessary, please not remove it

    - # ... some steps before set-up MySQL ...
    - name: Set up MySQL
      uses: mirromutth/mysql-action@v1.1
      with:

    - # ... some steps after set-up MySQL ...

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
jakejarvis/wait-action,"- name: Sleep for 30 seconds
  run: sleep 30s
  shell: bash

- name: Sleep for 30 seconds
  run: Start-Sleep -s 30
  shell: powershell

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Sleep for 30 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '30s'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jwalton/gh-docker-logs,"- name: Dump docker logs on failure
  if: failure()
  uses: jwalton/gh-docker-logs@v2

- name: Dump redis logs
  uses: jwalton/gh-docker-logs@v2
  with:
    images: \'redis,mongo\'
    tail: \'100\'

- name: Collect docker logs on failure
  if: failure()
  uses: jwalton/gh-docker-logs@v2
  with:
    dest: \'./logs\'
- name: Tar logs
  if: failure()
  run: tar cvzf ./logs.tgz ./logs
- name: Upload logs to GitHub
  if: failure()
  uses: actions/upload-artifact@master
  with:
    name: logs.tgz
    path: ./logs.tgz

- name: Dump docker logs on failure using different shell
  if: failure()
  uses: jwalton/gh-docker-logs@v2
  with:
    shell: \'/bin/sh\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jen20/action-docker-build,"- uses: jen20/action-docker-build@v1
  with:
      repository: jen20/test-action-docker-build
      username: jen20
      password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      dockerfile: Dockerfile
      registry: https://customregistry.example.com/v2
      tag-latest: true
      tag-snapshot: true
      additional-tags: firstadditionaltag, secondadditionaltag
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
innocarpe/actions-slack,"steps:
  - name: Action 1
    uses: ...

  - name: Action 2
    run: ...

  - name: Notify
    uses: innocarpe/actions-slack@v1
    with:
      status: ${{ jobs.<job_id>.status }} # Required
      success_text: \'Step Succeeded \xf0\x9f\x9a\x80\' # Optional
      failure_text: \'Step Failed \xf0\x9f\x98\xb1\' # Optional
      cancelled_text: \'Step Cancelled \xe2\x9a\xa0\xef\xb8\x8f\' # Optional
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required

steps:
  - name: Notify the start
    uses: innocarpe/actions-slack@v1
    with:
      status: ${{ jobs.<job_id>.status }} # Required
      success_text: \'<!subteam^S1ABC2DEF> @${{ github.actor }} just started the workflow for `${{ github.ref }}`\'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required

  - name: Action 1
    uses: ...

  - name: Action 2
    run: ...
    
  - name: Notify to Slack
    uses: innocarpe/actions-slack@v1
    with:
      status: ${{ jobs.<job_id>.status }} # Required
      success_text: \'<!subteam^S1ABC2DEF> The awesome workflow just finished \xe2\x9c\x85\'
      failure_text: \'<!subteam^S1ABC2DEF> The bad workflow failed. Please check the issue below \xf0\x9f\x91\x87\'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
azure/docker-login,"- uses: azure/docker-login@v1\r
  with:\r
    login-server: '<login server>' # default: index.docker.io\r
    username: '<username>'\r
    password: '<password>'\r

- uses: azure/docker-login@v1\r
  with:\r
    login-server: contoso.azurecr.io\r
    username: ${{ secrets.ACR_USERNAME }}\r
    password: ${{ secrets.ACR_PASSWORD }}\r
- uses: azure/docker-login@v1\r
  with:\r
    login-server: index.docker.io\r
    username: ${{ secrets.DOCKERIO_USERNAME }}\r
    password: ${{ secrets.DOCKERIO_PASSWORD }}\r
- run: |\r
    docker pull contoso.azurecr.io/private/image:latest\r
    docker pull private/image:latest\r

- uses: azure/docker-login@v1\r
  with:\r
    login-server: contoso.azurecr.io\r
    username: ${{ secrets.REGISTRY_USERNAME }}\r
    password: ${{ secrets.REGISTRY_PASSWORD }}\r
\r
- run: |\r
    docker build . -t contoso.azurecr.io/k8sdemo:${{ github.sha }}\r
    docker push contoso.azurecr.io/k8sdemo:${{ github.sha }}\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
azure/setup-helm,"- uses: azure/setup-helm@v3
  with:
     version: '<version>' # default is latest (stable)
     token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
  id: install
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
trilom/file-changes-action,"name: changes
on: push
jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3

name: changes
on: [push, pull_request] # push or pull, or any event with custom pr number or before/after commit sha
jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          githubRepo: trilom/file-changes-action
          githubToken: ${{ secrets.BOT_TOKEN }}
          output: 'json'
          fileOutput: 'csv'
          pushBefore: 79eeec74aebc3deb0a2f6234c5ac13142e9224e5
          pushAfter: 1c5a2bfde79e2c9cffb75b9a455391350fe69a40
          prNumber: 36

name: push-develop
on: [push]
jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
      - name: test
        run: |
          cat $HOME/files.json
          cat $HOME/files_modified.json
          cat $HOME/files_added.json
          cat $HOME/files_removed.json
          echo '${{ steps.file_changes.outputs.files}}'
          echo '${{ steps.file_changes.outputs.files_modified}}'
          echo '${{ steps.file_changes.outputs.files_added}}'
          echo '${{ steps.file_changes.outputs.files_removed}}'

name: push-develop
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ','
          fileOutput: ','
      - name: test
        run: |
          cat $HOME/files.csv

name: push-develop
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.6.0
        id: pr
        with:
          github-token: ${{env.BOT_USER_TOKEN}}
          result-encoding: string
          script: |
            const result = await github.repos.listPullRequestsAssociatedWithCommit({
              owner: context.payload.repository.owner.name,
              repo: context.payload.repository.name,
              commit_sha: context.payload.head_commit.id
            })
            return result.data[0].number;
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          githubToken: ${{ env.BOT_USER_TOKEN }}
          prNumber: ${{ steps.pr.outputs.results }}
          output: ' '
          fileOutput: ' '
      - name: test
        run: |
          cat $HOME/files.txt
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
deadsnakes/action,"on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9-dev, 3.10-dev]
    name: main
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        if: ""!endsWith(matrix.python-version, \'-dev\')""
        with:
          python-version: ${{ matrix.python-version }}
      - uses: deadsnakes/action@v3.0.1
        if: endsWith(matrix.python-version, \'-dev\')
        with:
          python-version: ${{ matrix.python-version }}
      - run: python --version --version && which python
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
localheinz/composer-normalize-action,"$ composer normalize

name: ""Integrate""

on: ""push""

jobs:
  composer-normalize:
    name: ""composer-normalize""

    runs-on: ""ubuntu-latest""

    steps:
      - name: ""Checkout""
        uses: ""actions/checkout@v2""

      - name: ""Run composer normalize""
        uses: ""docker://ergebnis/composer-normalize-action:latest""

 name: ""Integrate""

 on: ""push""

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2.0.0""

       - name: ""Run composer normalize""
         uses: ""docker://ergebnis/composer-normalize-action:latest""
+        with:
+          args: ""--diff --dry-run --indent-size=2 --indent-style=space""

$ docker run --interactive --rm --tty --workdir=/app --volume ${PWD}:/app ergebnis/composer-normalize-action:latest

 name: Integrate

 on: push

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2""

       - name: ""Run composer normalize""
-        uses: ""docker://ergebnis/composer-normalize-action:latest""
+        uses: ""docker://ergebnis/composer-normalize-action:0.7.0""
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
eine/setup-msys2,"  - uses: msys2/setup-msys2@v2

  - shell: msys2 {0}
    run: |
      uname -a

  - shell: powershell
    run: msys2 -c \'uname -a\'

  - shell: cmd
    run: msys2 -c \'uname -a\'

  defaults:
    run:
      shell: msys2 {0}
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        curl
        git
  - uses: actions/checkout@v3

  strategy:
    matrix:
      include:
        - { sys: mingw64, env: x86_64 }
        - { sys: mingw32, env: i686 }
        - { sys: ucrt64,  env: ucrt-x86_64 }
        - { sys: clang64, env: clang-x86_64 }
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: mingw-w64-${{matrix.env}}-openssl

  strategy:
    matrix:
      sys:
        - mingw64
        - mingw32
        - ucrt64
        - clang64
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        pacboy: openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      msystem: UCRT64

  - uses: msys2/setup-msys2@v2
    with:
      msystem: MSYS
  - shell: msys2 {0}
    run: |
      makepkg-mingw -sCLfc --noconfirm --noprogressbar
      pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
  - run: |
      set MSYSTEM=UCRT64
      msys2 -c \'<command to test the package>\'

  - uses: msys2/setup-msys2@v2
    with:
      update: true

  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        git
        curl

  strategy:
    fail-fast: false
    matrix:
      sys: [ MINGW64, MINGW32, UCRT64, CLANG64 ]
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      msystem: ${{matrix.sys}}
      install: >-
        git
        curl
      pacboy: >-
        openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      platform-check-severity: warn

  - uses: msys2/setup-msys2@v2
    with:
      path-type: minimal

  - uses: msys2/setup-msys2@v2
    with:
      cache: false

  - uses: msys2/setup-msys2@v2
    with:
      location: D:\\

  - uses: msys2/setup-msys2@v2
    with:
      release: false

  steps:
  - run: git config --global core.autocrlf input
  - uses: actions/checkout@v3
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jesusvasquez333/verify-pr-label-action,"uses: jesusvasquez333/verify-pr-label-action@v1.4.0
with:
    github-token: '${{ secrets.GITHUB_TOKEN }}'
    valid-labels: 'bug, enhancement'
    invalid-labels: 'help wanted, invalid'
    pull-request-number: '${{ github.event.pull_request.number }}'

on:
  pull_request_target:
   types: [opened, labeled, unlabeled, synchronize]

uses: jesusvasquez333/verify-pr-label-action@v1.4.0
with:
    github-token: '${{ secrets.GITHUB_TOKEN }}'
    valid-labels: 'bug, enhancement'
    invalid-labels: 'help wanted, invalid'

on:
  pull_request:
   types: [opened, labeled, unlabeled, synchronize]
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mheap/github-action-required-labels,"name: Pull Request Labels
on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: mheap/github-action-required-labels@v5
        with:
          mode: exactly
          count: 1
          labels: ""semver:patch, semver:minor, semver:major""

- uses: mheap/github-action-required-labels@v5
  with:
    mode: exactly
    count: 0
    labels: ""do not merge""

- uses: mheap/github-action-required-labels@v5
  with:
    mode: exactly
    count: 1
    labels: ""semver:patch, semver:minor, semver:major""
    add_comment: true

- uses: mheap/github-action-required-labels@v5
  with:
    mode: exactly
    count: 1
    labels: ""semver:patch, semver:minor, semver:major""
    add_comment: true
    message: ""This PR is being prevented from merging because you have added one of our blocking labels: {{ provided }}. You\'ll need to remove it before this PR can be merged.""

- uses: mheap/github-action-required-labels@v5
  with:
    mode: minimum
    count: 2
    labels: ""community-reviewed, team-reviewed, codeowner-reviewed""

- uses: mheap/github-action-required-labels@v5
  with:
    mode: minimum
    count: 2
    labels: ""community-reviewed, team-reviewed, codeowner-reviewed""
    exit_type: success # Can be: success or failure (default: failure)

name: Pull Request Labels
on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    outputs:
      status: ${{ steps.check-labels.outputs.status }}
    steps:
      - id: check-labels
        uses: mheap/github-action-required-labels@v5
        with:
          mode: exactly
          count: 1
          labels: ""semver:patch, semver:minor, semver:major""
          exit_type: success
  do-other:
    runs-on: ubuntu-latest
    needs: label
    steps:
      - run: echo SUCCESS
        if: needs.label.outputs.status == \'success\'
      - run: echo FAILURE && exit 1
        if: needs.label.outputs.status == \'failure\'

name: Pull Request Labels
on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - id: check-labels
        uses: mheap/github-action-required-labels@v5
        with:
          mode: minimum
          count: 1
          labels: ""feature-1, feature-2, feature-3""
      - run: |
          echo ""Enabled Features:""
          for f in $(echo ""{{steps.check-labels.outputs.labels}}"" | sed ""s/,/ /g"")
          do
            echo ""$f""
          done
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flarum/action-build,"name: Flarum Build

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: flarum/action-build@2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_script: build # npm run build
          build_typings_script: build-typings # npm run build-typings
          test_script: test # npm run test
          package_manager: npm # Use NPM, not Yarn
          js_path: ./js # JS located in `./js`
          do_not_commit: false # Commit built JS by default
          commit_all_dirty: false

on:
  push:
    branches:
      - master
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
seanmiddleditch/gha-setup-ninja,"jobs:
  publish:
    - uses: actions/checkout@master
    - uses: seanmiddleditch/gha-setup-ninja@master
    - run: |
      mkdir build
      cd build
      cmake -G Ninja ..
    - run: cmake --build build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
deliverybot/deployment-status,"name: Deploy

on: ['deployment']

jobs:
  deployment:

    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v1
    - name: 'use node 8.x'
      uses: actions/setup-node@v1
      with:
        node-version: 8.x

    - name: 'deployment pending'
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'pending'
        token: '${{ github.token }}'

    - name: 'deploy'
      run: |
        npm run deploy

    - name: 'deployment success'
      if: success()
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'success'
        token: '${{ github.token }}'

    - name: 'deployment failure'
      if: failure()
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'failure'
        token: '${{ github.token }}'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
flux-framework/pr-validator,"on: pull_request
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin master
    - uses: flux-framework/pr-validator@master
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
crazy-max/ghaction-github-pages,"name: website

on: push

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Gen dummy page
        run: |
          mkdir public
          cat > public/index.html <<EOL
          <!doctype html>
          <html>
            <head>
              <title>GitHub Pages deployed!</title>
            </head>
            <body>
              <p>GitHub Pages with <strong>${{ github.sha }}</strong> commit ID has been deployed through <a href=""https://github.com/marketplace/actions/github-pages"">GitHub Pages action</a> successfully.</p>
            </body>
          </html>
          EOL
      -
        name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      -
        name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Check GitHub Pages status
        uses: crazy-max/ghaction-github-status@v3
        with:
          pages_threshold: major_outage
      -
        name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
goreleaser/goreleaser-action,"name: goreleaser

on:
  pull_request:
  push:

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v4
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    tags:
      - \'*\'

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

signs:
  - artifacts: checksum
    args: [""--batch"", ""-u"", ""{{ .Env.GPG_FINGERPRINT }}"", ""--output"", ""${signature}"", ""--detach-sign"", ""${artifact}""]

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
          workdir: myfolder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: myapp
          path: myfolder/dist/*

steps:
  -
    name: Install GoReleaser
    uses: goreleaser/goreleaser-action@v4
    with:
      install-only: true
  -
    name: Show GoReleaser version
    run: goreleaser -v

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

docker buildx bake pre-checkin

docker buildx bake validate

docker buildx bake test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
8398a7/action-slack,"steps:
  - uses: 8398a7/action-slack@v3
    with:
      status: ${{ job.status }}
      fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    if: always() # Pick up events even if the job fails or is canceled.

steps:
  - uses: 8398a7/action-slack@v3
  with:
    status: custom
    fields: workflow,job,commit,repo,ref,author,took
    custom_payload: |
      {
        attachments: [{
          color: \'${{ job.status }}\' === \'success\' ? \'good\' : \'${{ job.status }}\' === \'failure\' ? \'danger\' : \'warning\',
          text: `${process.env.AS_WORKFLOW}\
${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
        }]
      }
  env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  if: always() # Pick up events even if the job fails or is canceled.

steps:
  - uses: 8398a7/action-slack@v3
    with:
      github_base_url: https://your.ghe.com # Specify your GHE
      status: ${{ job.status }}
      fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    if: always()

permissions:
  contents: read
  actions: read
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
tclindner/sentry-releases-action,"name: Create a Sentry.io release
uses: tclindner/sentry-releases-action@v1.2.0
env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: myAwesomeOrg
  SENTRY_PROJECT: myAwesomeProject
with:
  tagName: ${{ github.ref }}
  environment: qa

name: ReleaseWorkflow

on:
  release:
    types: [published, prereleased]


jobs:
  createSentryRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: myAwesomeOrg
          SENTRY_PROJECT: myAwesomeProject
        with:
          tagName: ${{ github.ref }}
          environment: qa

name: ReleaseWorkflow

on:
  release:
    types: [published, prereleased]


jobs:
  createSentryRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: myAwesomeOrg
          SENTRY_PROJECT: myAwesomeProject
        with:
          tagName: ${{ github.ref }}
          environment: qa
          releaseNamePrefix: myAwesomeProject-

name: ReleaseWorkflow

on:
  release:
    types: [published, prereleased]


jobs:
  createSentryRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: myAwesomeOrg
          SENTRY_PROJECT: myAwesomeProject
        with:
          tagName: ${{ github.ref }}
          environment: qa
          releaseNamePrefix: myAwesomeProject-
          sourceMapOptions: \'{""include"": [""build""]}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
olegtarasov/get-tag,"    steps:
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: ""foobar-(.*)""  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.
      - name: Some other step # Output usage example
        with:
          tagname: ${{ steps.tagName.outputs.tag }}
      - name: Yet another step # Environment variabl usage example
        run: |
          docker build . --file Dockerfile --tag docker.pkg.github.com/someimage:$GIT_TAG_NAME


    steps:
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: ""(?<package>.*)-(?<version>.*)"" 
      - name: Some other step # Output usage example
        with:
          dirname: ${{ steps.tagName.outputs.package }}
          tagname: ${{ steps.tagName.outputs.version }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions/setup-haskell,"on: [push]
name: build
jobs:
  runhaskell:
    name: Hello World
    runs-on: ubuntu-latest # or macOS-latest, or windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1.1
      - run: runhaskell Hello.hs

on: [push]
name: build
jobs:
  runhaskell:
    name: Hello World
    runs-on: ubuntu-latest # or macOS-latest, or windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1.1
        with:
          ghc-version: \'8.8\' # Resolves to the latest point release of GHC 8.8
          cabal-version: \'3.0.0.0\' # Exact version of Cabal
      - run: runhaskell Hello.hs

on: [push]
name: build
jobs:
  runhaskell:
    name: Hello World
    runs-on: ubuntu-latest # or macOS-latest, or windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1.1
        with:
          ghc-version: \'8.8.3\' # Exact version of ghc to use
          enable-stack: true
          stack-version: \'latest\'
      - run: runhaskell Hello.hs

on: [push]
name: build
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: [\'8.6.5\', \'8.8.3\']
        cabal: [\'2.4.1.0\', \'3.0.0.0\']
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
          - ghc: 8.8.3
            cabal: 2.4.1.0
    name: Haskell GHC ${{ matrix.ghc }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup Haskell
        uses: actions/setup-haskell@v1.1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - run: runhaskell Hello.hs
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
julia-actions/setup-julia,"- uses: julia-actions/setup-julia@v1
  with:
    version: \'\'

    arch: \'\'

    show-versioninfo: \'\'

outputs:

  julia-version: \'\'
  julia-bindir: \'\'

steps:
- uses: actions/checkout@v1.0.0
- uses: julia-actions/setup-julia@v1
  with:
    version: 1.0.4
- run: julia -e \'println(""Hello, World!"")\'

- uses: julia-actions/setup-julia@v1
  with:
    version: \'1\'
    include-all-prereleases: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [\'1.0\', \'1.2.0\', \'^1.3.0-rc1\']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1.0.0
      - name: ""Set up Julia""
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      - run: julia -e \'println(""Hello, World!"")\'
        shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [\'1.0\', \'1.2.0\', \'^1.3.0-rc1\']
        julia-arch: [x64, x86]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@v1.0.0
      - name: ""Set up Julia""
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - run: julia -e \'println(""Hello, World!"")\'
        shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [\'1.0\', \'1.2.0\', \'^1.3.0-rc1\']
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: windows-latest
            julia-version: [\'1.0.4\']
            julia-arch: x86

    steps:
      - uses: actions/checkout@v1.0.0
      - name: ""Set up Julia""
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      - run: julia -e \'println(""Hello, World!"")\'
        shell: bash

steps:
  - uses: julia-actions/setup-julia@d3ce119a16594ea9e5d7974813970c73b6ab9e94 # commit SHA of the tagged 1.4.1 commit
  - uses: julia-actions/setup-julia@latest  # latest version tag (may break existing workflows)
  - uses: julia-actions/setup-julia@v1      # major version tag
  - uses: julia-actions/setup-julia@v1.4    # minor version tag
  - uses: julia-actions/setup-julia@v1.4.1  # specific version tag
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
julia-actions/julia-buildpkg,"name: Run tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [stable, lts]
        julia-arch: [x64, x86]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
julia-actions/julia-runtest,"name: Run tests

on: 
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [\'1.0\', \'1\', \'nightly\']
        julia-arch: [x64, x86]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        exclude:
          - os: macOS-latest
            julia-arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

      - uses: julia-actions/julia-runtest@v1
        with:
          prefix: xvfb-run

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        version: [\'1.0\', \'1\', \'nightly\']
        arch: [x64]
        include:
          - os: ubuntu-latest
            prefix: xvfb-run
    steps:
      - uses: julia-actions/julia-runtest@v1
        with:
          prefix: ${{ matrix.prefix }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
julia-actions/julia-processcoverage,"
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info


      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,ext,examples
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info

      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: path/to/subdir/package/src
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
julia-actions/julia-codeformat,"$ npm install

$ npm run build

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

import * as core from \'@actions/core\';
...

async function run() {
  try { 
      ...
  } 
  catch (error) {
    core.setFailed(error.message);
  }
}

run()


$ git checkout -b releases/v1
$ git commit -a -m ""prod dependencies""

$ npm prune --production
$ git add node_modules
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1

uses: actions/typescript-action@releases/v1
with:
  milliseconds: 1000

uses: actions/typescript-action@v1
with:
  milliseconds: 1000
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
julia-actions/julia-docdeploy,"name: Documenter
on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:

jobs:
  Documenter:
    permissions:
      contents: write
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: julia-actions/setup-julia@v1
        with:
          version: nightly               # replace this with whatever version you need
          show-versioninfo: true         # this causes versioninfo to be printed to the action log

      - uses: julia-actions/julia-docdeploy@v1
        with:
          prefix: xvfb-run

      - uses: julia-actions/julia-docdeploy@v1
        with:
          install-package: false

      - uses: julia-actions/julia-docdeploy@v1
        env:
          COLUMNS: '200'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
JuliaRegistries/TagBot,"name: TagBot
on:
  issue_comment:
    types:
      - created
  workflow_dispatch:
    inputs:
      lookback:
        default: 3
permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
jobs:
  TagBot:
    if: github.event_name == \'workflow_dispatch\' || github.actor == \'JuliaTagBot\'
    runs-on: ubuntu-latest
    steps:
      - uses: JuliaRegistries/TagBot@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ssh: ${{ secrets.DOCUMENTER_KEY }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  ssh: ${{ secrets.SSH_KEY }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  ssh: ${{ secrets.SSH_KEY }}
  ssh_password: ${{ secrets.SSH_PASSWORD }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  changelog: |
    This is release {{ version }} of {{ package }}.
    {% if custom %}
    Here are my release notes!
    {{ custom }}
    {% endif %}

{
  ""compare_url"": ""https://github.com/Owner/Repo/compare/previous_version...current_version (or null for first release)"",
  ""custom"": ""your custom release notes"",
  ""issues"": [
    {
      ""author"": {
        ""name"": ""Real Name"",
        ""url"": ""https://github.com/username"",
        ""username"": ""their login""
      },
      ""body"": ""issue body"",
      ""labels"": [""label1"", ""label2""],
      ""closer"": {""same format as"": ""issue author but sometimes null""},
      ""number"": 123,
      ""title"": ""issue title"",
      ""url"": ""https://github.com/Owner/Repo/issues/123""
    }
  ],
  ""package"": ""PackageName"",
  ""previous_release"": ""v1.1.2 (or null for first release)"",
  ""pulls"": [
    {
      ""author"": {""same format as"": ""issue author""},
      ""body"": ""pull request body"",
      ""labels"": [""label1"", ""label2""],
      ""merger"": {""same format as"": ""issue author""},
      ""number"": 123,
      ""title"": ""pull request title"",
      ""url"": ""https://github.com/Owner/Repo/pull/123""
    }
  ],
  ""sha"": ""commit SHA"",
  ""version"": ""v1.2.3"",
  ""version_url"": ""https://github.com/Owner/Repo/tree/v1.2.3""
}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  changelog_ignore: ignore this label, ignore this label too

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  registry: MyOrg/MyRegistry

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  registry: MyOrg/MyRegistry
  registry_ssh: ${{ secrets.REGISTRY_SSH_KEY }}

with:
  github: git.corp.com
  github_api: api.git.corp.com

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  user: My Name
  email: my.email@web.site

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  draft: true

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  gpg: ${{ secrets.GPG_KEY }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  gpg: ${{ secrets.GPG_KEY }}
  gpg_password: ${{ secrets.GPG_PASSWORD }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  lookback: 14

with:
  token: ${{ secrets.TAGBOT_PAT }}

with:
  token: ${{ secrets.TAGBOT_PAT }}
  dispatch: true

{
  ""v1.2.3"": ""abcdef0123456789abcdef0123456789abcdef01""
}

with:
  token: ${{ secrets.TAGBOT_PAT }}
  dispatch: true
  dispatch_delay: 30

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  branch: release

with:
  token: ${{ secrets.GITHUB_TOKEN }}
  branches: true

$ docker run --rm ghcr.io/juliaregistries/tagbot python -m tagbot.local --help
Usage: __main__.py [OPTIONS]

Options:
  --repo TEXT        Repo to tag
  --version TEXT     Version to tag
  --token TEXT       GitHub API token
  --github TEXT      GitHub URL
  --github-api TEXT  GitHub API URL
  --changelog TEXT   Changelog template
  --registry TEXT    Registry to search
  --help             Show this message and exit.

$ docker run --rm ghcr.io/juliaregistries/tagbot python -m tagbot.local \\
    --repo Owner/Name \\
    --token <TOKEN> \\
    --version v1.2.3

$ git clone https://github.com/JuliaRegistries/TagBot  # Consider --branch vA.B.C
$ cd TagBot
$ poetry install
$ poetry run python -m tagbot.local --help
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
returntocorp/bento-action,"name: Bento
on: [pull_request]
jobs:
  bento:
    runs-on: ubuntu-latest
    name: Check
    steps:
    - uses: actions/checkout@v1
    - name: Bento
      id: bento
      uses: returntocorp/bento-action@v1
      with:
        acceptTermsWithEmail: <add your email here>
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
srt32/uptime,"  
on:
  schedule:
    - cron: \'*/5 * * * *\'

jobs:
  ping_site:
    runs-on: ubuntu-latest
    name: Ping the site
    steps:
    - name: Check the site
      id: hello
      uses: srt32/uptime@master
      with:
        url-to-hit: ""https://example.com""
        expected-statuses: ""200,301""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
axel-op/googlejavaformat-action,"name: Format

on:
  push:
    branches: [ master ]

jobs:

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v2 minimum required
      - uses: axel-op/googlejavaformat-action@v3
        with:
          args: ""--skip-sorting-imports --replace""

name: Format

on: [ push, pull_request ]

jobs:

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v2 minimum required
      - uses: axel-op/googlejavaformat-action@v3
        with:
          args: ""--set-exit-if-changed""

name: Format

on: [ push, pull_request ]

jobs:

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v2 minimum required
      - uses: axel-op/googlejavaformat-action@v3
        with:
          args: ""--replace""
          skip-commit: true
      - name: Print diffs
        run: git --no-pager diff --exit-code

Options:
  -i, -r, -replace, --replace
    Send formatted output back to files, not stdout.
  --aosp, -aosp, -a
    Use AOSP style instead of Google Style (4-space indentation).
  --fix-imports-only
    Fix import order and remove any unused imports, but do no other formatting.
  --skip-sorting-imports
    Do not fix the import order. Unused imports will still be removed.
  --skip-removing-unused-imports
    Do not remove unused imports. Imports will still be sorted.
  --skip-reflowing-long-strings
    Do not reflow string literals that exceed the column limit.
  --skip-javadoc-formatting
    Do not reformat javadoc.
  --dry-run, -n
    Prints the paths of the files whose contents would change if the formatter were run normally.
  --set-exit-if-changed
    Return exit code 1 if there are any formatting changes.
  --lines, -lines, --line, -line
    Line range(s) to format, like 5:10 (1-based; default is all).
  --offset, -offset
    Character offset to format (0-based; default is all).
  --length, -length
    Character length to format.
  --help, -help, -h
    Print this usage statement.
  --version, -version, -v
    Print the version.
  @<filename>
    Read options and filenames from file.

The --lines, --offset, and --length flags may be given more than once.
The --offset and --length flags must be given an equal number of times.
If --lines, --offset, or --length are given, only one file may be given.
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
CyberZHG/github-action-python-lint,"workflow ""Python Lint"" {
  on = ""push""
  resolves = [""python-lint""]
}

action ""python-lint"" {
  uses = ""CyberZHG@github-action-python-lint@master""
}

workflow ""Python Lint"" {
  on = ""push""
  resolves = [""python-lint""]
}

action ""python-lint"" {
  uses = ""CyberZHG/github-action-python-lint@master""
  args = ""--max-line-length=120 source_folder_1_name source_folder_2_name ...""
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
golangci/golangci-lint-action,"name: golangci-lint
on:
  push:
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: \'1.20\'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53








name: golangci-lint
on:
  push:
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read

jobs:
  golangci:
    strategy:
      matrix:
        go: [\'1.20\']
        os: [macos-latest, windows-latest]
    name: lint
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53





*.go text eol=lf
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
geertvdc/setup-hub,"steps:\r
- uses: actions/checkout@latest\r
- uses: geertvdc/setup-hub@master\r
\r
- run: hub --version\r

steps:\r
- uses: actions/checkout@v1\r
\r
- name: Install hub\r
    uses: geertvdc/setup-hub@master\r
    \r
- name: run hub commands\r
    env:\r
      GITHUB_USER: ${{ secrets.GITHUB_USER }}\r
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r
    run: |\r
         hub release\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
bugdiver/setup-gauge,"uses: getgauge/setup-gauge@master


uses: getgauge/setup-gauge@master
with:
    gauge-version: '1.0.7'

uses: getgauge/setup-gauge@master
with:
    gauge-version: '1.0.7'
    gauge-plugins: java, html-report

uses: getgauge/setup-gauge@master
with:
    gauge-version: master
    gauge-plugins: java, html-report
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
deliverybot/status,"name: Deploy

on: ['deployment']

jobs:
  deployment:

    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v1
    - name: 'use node 8.x'
      uses: actions/setup-node@v1
      with:
        node-version: 8.x

    - name: 'deployment pending'
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'pending'
        token: '${{ github.token }}'

    - name: 'deploy'
      run: |
        npm run deploy

    - name: 'deployment success'
      if: success()
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'success'
        token: '${{ github.token }}'

    - name: 'deployment failure'
      if: failure()
      uses: 'deliverybot/deployment-status@v1'
      with:
        state: 'failure'
        token: '${{ github.token }}'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
supercharge/redis-github-action,"name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        node-version: [18.x, 20.x]\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Git checkout\r
      uses: actions/checkout@v2\r
\r
    - name: Use Node.js ${{ matrix.node-version }}\r
      uses: actions/setup-node@v1\r
      with:\r
        node-version: ${{ matrix.node-version }}\r
\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
\r
    - run: npm install\r
\r
    - run: npm test\r
      env:\r
        CI: true\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6.2.4-v4, 6.2.6-v3]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-image: redis/redis-stack-server\r
        redis-version: ${{ matrix.redis-version }}\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-port: 12345\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-container-name: redis-auth-token-cache\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-remove-container: true # false by default\r
\r
    - name: \xe2\x80\xa6\r
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
percy/exec-action,"name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install
        run: yarn
      - name: Percy Test
        uses: percy/exec-action@v0.3.1
        with:
          command: ""[your-test-command]""
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install
        run: yarn
      - name: Percy Test
        run: npx percy exec -- [your-test-command]
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install
        run: yarn
      - name: Percy Test
        uses: percy/exec-action@v0.3.1
        with:
          command: ""cypress run""
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
volta-cli/action,"steps:
- uses: actions/checkout@v3
- uses: volta-cli/action@v4
- run: npm install
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: volta-cli/action@v4
  with:
    node-version: 18.x
    yarn-version: 1.19.1

- run: yarn install
- run: yarn test

strategy:
  matrix:
    node-version: [\'^14.10\', \'16\', \'18\']

steps:
- uses: actions/checkout@v3
- uses: volta-cli/action@v4
  with:
    node-version: ${{ matrix.node-version }}

- run: npm install
- run: npm test

strategy:
  matrix:
    node-version: [\'^8.12\', \'10\', \'12\']

steps:
- uses: actions/checkout@v3
- uses: volta-cli/action@v4
  with:
    node-version: ${{ matrix.node-version }}
    npm-version: \'7\'

- run: npm install
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: volta-cli/action@v4
  with:
    variant: \'linux-openssl-rhel\'

- run: yarn install
- run: yarn test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
getsentry/action-visual-snapshot,"  - name: Save snapshots
    if: always()
    uses: actions/upload-artifact@v2
    with:
      save-only: true
      path: .artifacts/visual-snapshots

    visual-diff:
      if: ${{ github.ref != \'refs/heads/master\' }}
      needs: acceptance
      runs-on: ubuntu-16.04

      steps:
        - name: Diff snapshots
          id: visual-snapshots-diff
          uses: getsentry/action-visual-snapshot@v1
          with:
            gcs-bucket: \'sentry-visual-snapshots\'
            gcp-service-account-key: ${{ secrets.SNAPSHOT_GOOGLE_SERVICE_ACCOUNT_KEY }}

  - name: Diff snapshots
    id: visual-snapshots-diff
    uses: getsentry/action-visual-snapshot@v1
    with:
      snapshot-path: .artifacts/visual-snapshots-jest
      action-name: Jest Snapshots
      artifact-name: visual-snapshots-jest

yarn dev:gallery && open example_gallery/index.html

$ yarn dist
$ git add dist
$ git commit -a -m ""prod dependencies""

set -e

rm -rf /tmp/visual-snapshots-*
rm -rf .tmp/snaps
rm -rf ""<< Results Path >>""

yarn dist

GITHUB_REPOSITORY=""getsentry/sentry"" \\
GITHUB_HEAD_SHA=""<< Commit >>"" \\
GITHUB_HEAD_REF=""getsentry/sentry/master"" \\
GITHUB_WORKFLOW=""visual-snapshots"" \\
GITHUB_WORKSPACE=""."" \\
ACTION_SAVE_ONLY=""false"" \\
ACTION_GITHUB_TOKEN=""<< GitHub Token >>"" \\
ACTION_ARTIFACT_NAME=""visual-snapshots"" \\
ACTION_BASE_ARTIFACT_NAME=""visual-snapshots-base"" \\
ACTION_THRESHOLD=""0.05"" \\
ACTION_SNAPSHOT_PATH=""<< Snapshot Path >>"" \\
ACTION_LOCAL_RUN=""true"" \\
ACTION_RESULTS_PATH=""<< Results Path >>"" \\
node ./dist/index.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/action-html-to-image,"docker build -t action-html-to-image .
docker run \\
     -ti \\
    --rm \\
    -v ""$PWD/html/:/html:rw"" \\
    -e GITHUB_WORKSPACE=/html \\
    -e INPUT_BASE-PATH=/html \\
    -e INPUT_CSS-PATH=t.css \\
    -e DEBUG=""puppeteer:*"" \\
    action-html-to-image

       - name: Create Images from HTML
-        uses: getsentry/action-html-to-image@main
+        uses: docker://ghcr.io/getsentry/action-html-to-image:0de1c39c28d4d8f8f42c49761313237840958927
         with:
           base-path: .artifacts/visual-snapshots/jest
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/action-github-app-token,"$ yarn

$ yarn dist

  - name: my-app-install token
    id: my-app
    uses: getsentry/action-github-app-token@v2
    with:
      app_id: ${{ secrets.APP_ID }}
      private_key: ${{ secrets.APP_PRIVATE_KEY }}

  - name: Checkout private repo
    uses: actions/checkout@v2
    with:
      repository: getsentry/my-private-repo
      token: ${{ steps.my-app.outputs.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/action-eslint-fix,"    - name: Use current action
      uses: getsentry/action-eslint-fix@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Use current action
      uses: getsentry/action-eslint-fix@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        dry: true
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/size-limit-action,"""scripts"": {
  ""postinstall"": ""lerna bootstrap"",
  ""build"": ""lerna run build""
},

""size-limit"": [
  {
    ""path"": ""dist/index.js"",
    ""limit"": ""4500 ms""
  }
]

name: ""size""
on:
  pull_request:
    branches:
      - master
jobs:
  size:
    runs-on: ubuntu-latest
    env:
      CI_JOB_NUMBER: 1
    steps:
      - uses: actions/checkout@v1
      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  build_script: custom-build
  skip_step: install

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  clean_script: cleanup

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  build_script: custom-build
  skip_step: install
  directory: client/
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/action-migrations,"$ yarn

$ yarn build

$ yarn test
...

$ yarn build
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin main

  - name: Generate SQL for migration
    uses: getsentry/action-migrations@v1.0.7
    env:
      SENTRY_LOG_LEVEL: ERROR
      PGPASSWORD: postgres
    with:
      githubToken: ${{ secrets.GITHUB_TOKEN }}
      migration: ""./path/to/migration""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/craft,"yarn global add @sentry/craft

npm install -g @sentry/craft

$ craft -h
craft <command>

Commands:
  craft prepare NEW-VERSION  \xf0\x9f\x9a\xa2 Prepare a new release branch
                          [aliases: p, prerelease, prepublish, prepare, release]
  craft publish NEW-VERSION  \xf0\x9f\x9b\xab Publish artifacts         [aliases: pp, publish]
  craft targets              List defined targets as JSON array
  craft config               Print the parsed, processed, and validated Craft
                             config for the current project in pretty-JSON.
  craft artifacts <command>  \xf0\x9f\x93\xa6 Manage artifacts          [aliases: a, artifact]

Options:
  --no-input     Suppresses all user prompts                    [default: false]
  --dry-run      Dry run mode: do not perform any real actions
  --log-level    Logging level
          [choices: ""Fatal"", ""Error"", ""Warn"", ""Log"", ""Info"", ""Success"", ""Debug"",
                                 ""Trace"", ""Silent"", ""Verbose""] [default: ""Info""]
  -v, --version  Show version number                                   [boolean]
  -h, --help     Show help                                             [boolean]

CRAFT_LOG_LEVEL=Debug
CRAFT_DRY_RUN=1
CRAFT_NO_INPUT=0

GITHUB_TOKEN=token123
export NUGET_API_TOKEN=abcdefgh

craft prepare NEW-VERSION

\xf0\x9f\x9a\xa2 Prepare a new release branch

Positionals:
  NEW-VERSION  The new version you want to release           [string] [required]

Options:
  --no-input       Suppresses all user prompts                  [default: false]
  --dry-run        Dry run mode: do not perform any real actions
  --log-level      Logging level
          [choices: ""Fatal"", ""Error"", ""Warn"", ""Log"", ""Info"", ""Success"", ""Debug"",
                                 ""Trace"", ""Silent"", ""Verbose""] [default: ""Info""]
  --rev, -r        Source revision (git SHA or tag) to prepare from (if not
                   branch head)                                         [string]
  --no-push        Do not push the release branch     [boolean] [default: false]
  --no-git-checks  Ignore local git changes and unsynchronized remotes
                                                      [boolean] [default: false]
  --no-changelog   Do not check for changelog entries [boolean] [default: false]
  --publish        Run ""publish"" right after ""release""[boolean] [default: false]
  --remote         The git remote to use when pushing
                                                    [string] [default: ""origin""]
  -v, --version    Show version number                                 [boolean]
  -h, --help       Show help                                           [boolean]

craft publish NEW-VERSION

\xf0\x9f\x9b\xab Publish artifacts

Positionals:
  NEW-VERSION  Version to publish                            [string] [required]

Options:
  --no-input         Suppresses all user prompts                [default: false]
  --dry-run          Dry run mode: do not perform any real actions
  --log-level        Logging level
          [choices: ""Fatal"", ""Error"", ""Warn"", ""Log"", ""Info"", ""Success"", ""Debug"",
                                 ""Trace"", ""Silent"", ""Verbose""] [default: ""Info""]
  --target, -t       Publish to this target
    [string] [choices: ""npm"", ""gcs"", ""registry"", ""docker"", ""github"", ""gh-pages"",
                                                 ""all"", ""none""] [default: ""all""]
  --rev, -r          Source revision (git SHA or tag) to publish (if not release
                     branch head)                                       [string]
  --no-merge         Do not merge the release branch after publishing
                                                      [boolean] [default: false]
  --keep-branch      Do not remove release branch after merging it
                                                      [boolean] [default: false]
  --keep-downloads   Keep all downloaded files        [boolean] [default: false]
  --no-status-check  Do not check for build status    [boolean] [default: false]
  -v, --version      Show version number                               [boolean]
  -h, --help         Show help                                         [boolean]

github:
  owner: getsentry
  repo: sentry-javascript

preReleaseCommand: bash scripts/bump-version.sh

postReleaseCommand: bash scripts/post-release.sh

releaseBranchPrefix: publish

changelog: CHANGES
changelogPolicy: simple


* Removed something


* Added something

changelog: CHANGES
changelogPolicy: auto


* Removed something


* Added something

minVersion: \'0.5.0\'

requireNames:
  - /^sentry-craft.*\\.tgz$/
  - /^gh-pages.zip$/

statusProvider:
  name: github
  config:
    contexts:
      - Travis CI - Branch

artifactProvider:
  name: none

targets:
  - name: npm
  - name: github
  - name: registry
    id: browser
    type: sdk
    onlyIfPresent: /^sentry-browser-.*\\.tgz$/
    includeNames: /\\.js$/
    checksums:
      - algorithm: sha384
        format: base64
    config:
      canonical: \'npm:@sentry/browser\'
  - name: registry
    id: node
    type: sdk
    onlyIfPresent: /^sentry-node-.*\\.tgz$/
    config:
      canonical: \'npm:@sentry/node\'

targets:
  - name: github
    includeNames: /^.*\\.exe$/
    excludeNames: /^test.exe$/

targets:
  - name: github
    tagPrefix: v
    previewReleases: false

targets:
  - name: npm
    access: public

targets:
  - name: pypi

targets:
  - name: pypi
  - name: sentry-pypi
    internalPypiRepo: getsentry/pypi

targets:
  - name: brew
    tap: octocat/tools # Expands to github.com:octocat/homebrew-tools
    formula: myproject # Creates the file myproject.rb
    path: HomebrewFormula # Creates the file in HomebrewFormula/
    template: >
      class MyProject < Formula
        desc ""This is a test for homebrew formulae""
        homepage ""https://github.com/octocat/my-project""
        url ""https://github.com/octocat/my-project/releases/download/{{version}}/binary-darwin""
        version ""{{version}}""
        sha256 ""{{checksums.binary-darwin}}""

        def install
          mv ""binary-darwin"", ""myproject""
          bin.install ""myproject""
        end
      end

targets:
  - name: nuget

targets:
  - name: crates
    noDevDeps: false

targets:
  - name: gcs
    bucket: bucket-name
    paths:
      - path: release/{{version}}/download
        metadata:
          cacheControl: `public, max-age=3600`
      - path: release/{{revision}}/platform/package

targets:
  - name: gh-pages
    branch: gh-pages

targets:
  - name: registry
    sdks:
      \'npm:@sentry/browser\':
    apps:
      \'npm:@sentry/browser\':
        urlTemplate: \'https://example.com/{{version}}/{{file}}\'
        checksums:
          - algorithm: sha256
            format: hex

targets:
  - name: cocoapods
    specPath: MyProject.podspec

targets:
  - name: docker
    source: us.gcr.io/sentryio/craft
    target: getsentry/craft
statusProvider:
  name: github
  config:
    contexts:
      - Travis CI - Branch # or whatever builds and pushes your source image

targets:
  - name: gem

targets:
  - name: aws-lambda-layer
    includeNames: /^sentry-node-serverless-\\d+(\\.\\d+)*\\.zip$/
    layerName: SentryNodeServerlessSDK
    compatibleRuntimes:
      - name: node
        versions:
          - nodejs10.x
          - nodejs12.x
    license: MIT

targets:
  - name: upm
    releaseRepoOwner: \'getsentry\'
    releaseRepoName: \'unity\'

targets:
  - name: maven
    mavenCliPath: scripts/mvnw.cmd
    mavenSettingsPath: scripts/settings.xml
    mavenRepoId: ossrh
    mavenRepoUrl: https://oss.sonatype.org/service/local/staging/deploy/maven2/
    android: false

targets:
  - name: maven
    mavenCliPath: scripts/mvnw.cmd
    mavenSettingsPath: scripts/settings.xml
    mavenRepoId: ossrh
    mavenRepoUrl: https://oss.sonatype.org/service/local/staging/deploy/maven2/
    android:
      distDirRegex: /^sentry-android-.*$/
      fileReplaceeRegex: /\\d\\.\\d\\.\\d(-SNAPSHOT)?/
      fileReplacerStr: release.aar

targets:
  - name: maven
    mavenCliPath: scripts/mvnw.cmd
    mavenSettingsPath: scripts/settings.xml
    mavenRepoId: ossrh
    mavenRepoUrl: https://oss.sonatype.org/service/local/staging/deploy/maven2/
    android:
      distDirRegex: /^sentry-android-.*$/
      fileReplaceeRegex: /\\d\\.\\d\\.\\d(-SNAPSHOT)?/
      fileReplacerStr: release.aar
    kmp:
      rootDistDirRegex: /sentry-kotlin-multiplatform-[0-9]+.*$/
      appleDistDirRegex: /sentry-kotlin-multiplatform-(macos|ios|tvos|watchos).*/

targets:
  - name: symbol-collector
    includeNames: /libsentry(-android)?\\.so/
    batchType: Android
    bundleIdPrefix: android-ndk-

targets:
  - name: pub-dev
    packages:
      uno:
      dos:
      tres:

targets:
  - name: hex

on:
  push:
    branches:
      - \'release/**\'

- name: Archive Artifacts
  uses: actions/upload-artifact@v2
  with:
    name: ${{ github.sha }}
    path: |
      ${{ github.workspace }}/*.tgz
      ${{ github.workspace }}/packages/tracing/build/**
      ${{ github.workspace }}/packages/**/*.tgz

set -eux
OLD_VERSION=""${1}""
NEW_VERSION=""${2}""

export npm_config_git_tag_version=false
npm version ""${NEW_VERSION}""

set -eux
OLD_VERSION=""${1}""
NEW_VERSION=""${2}""

git checkout master
./scripts/bump-version.sh \'\' $(date -d ""$(echo $NEW_VERSION | sed -e \'s/^\\([0-9]\\{2\\}\\)\\.\\([0-9]\\{1,2\\}\\)\\.[0-9]\\+$/20\\1-\\2-1/\') 1 month"" +%y.%-m.0.dev0)
git diff --quiet || git commit -anm \'meta: Bump new development version\' && git pull --rebase && git push

export CRAFT_SENTRY_DSN=\'https://1234@sentry.io/2345\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mislav/bump-homebrew-formula-action,"on:
  push:
    tags: \'v*\'

jobs:
  homebrew:
    name: Bump Homebrew formula
    runs-on: ubuntu-latest
    steps:
      - uses: mislav/bump-homebrew-formula-action@v2
        with:
          formula-name: my_formula
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

on:
  push:
    tags: \'v*\'

jobs:
  homebrew:
    name: Bump Homebrew formula
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        id: extract-version
        run: |
          printf ""::set-output name=%s::%s\
"" tag-name ""${GITHUB_REF#refs/tags/}""
      - uses: mislav/bump-homebrew-formula-action@v2
        if: ${{ !contains(github.ref, \'-\') }} # skip prereleases
        with:
          formula-name: my_formula
          formula-path: Formula/my_formula.rb
          homebrew-tap: Homebrew/homebrew-core
          base-branch: master
          download-url: https://example.com/foo/${{ steps.extract-version.outputs.tag-name }}.tar.gz
          commit-message: |
            {{formulaName}} {{version}}

            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

{{formulaName}} {{version}}
Created by https://github.com/mislav/bump-homebrew-formula-action

class MyFormula < Formula
  url ""https://github.com/me/myproject/archive/v1.2.3.tar.gz""
  sha256 ""<OLDSHA>""
end

class MyFormula < Formula
  url ""https://github.com/me/myproject/archive/v2.0.0.tar.gz""
  sha256 ""<NEWSHA>""
end

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: \'The git tag name to bump the formula to\'
        required: true

jobs:
  homebrew:
    name: Bump Homebrew formula
    runs-on: ubuntu-latest
    steps:
      - uses: mislav/bump-homebrew-formula-action@v2
        with:
          formula-name: my_formula
          tag-name: ${{ github.event.inputs.tag-name }}
          download-url: https://example.com/foo/${{ github.event.inputs.tag-name }}.tar.gz
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hecrj/setup-rust-action,"name: Test Rust project
on: [push]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: cargo test --verbose
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gnuradio/clang-format-lint-action,"name: test-clang-format

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: DoozyX/clang-format-lint-action@v0.5
      with:
        source: '.'
        exclude: './third_party'
        extensions: 'h,cpp'
        clangFormatVersion: 9
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gocom/action-textpattern-package-plugin,"name: Example Workflow

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Build
      id: build
      uses: gocom/action-textpattern-package-plugin@master

    - name: Print Built Installers
      run: |
        cat ${{ github.workspace }}/${{ steps.build.outputs.compressed }}
        cat ${{ github.workspace }}/${{ steps.build.outputs.uncompressed }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jwlawson/actions-setup-bazel,"jobs:
  example:
    runs-on: ubuntu-latest
    steps:
    - name: Setup bazel
      uses: jwlawson/actions-setup-bazel@v1
      with:
        bazel-version: '2.0.0'
    - name: Use bazel
      run: bazel --version
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
hmarr/auto-approve-action,"name: Auto approve
on: pull_request_target

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: hmarr/auto-approve-action@v3

name: Auto approve

on: pull_request_target

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: github.actor == \'dependabot[bot]\'
    steps:
      - uses: hmarr/auto-approve-action@v3

name: Auto approve

on:
  workflow_dispatch:
    inputs: 
      pullRequestNumber:
        description: Pull request number to auto-approve
        required: false

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - uses: hmarr/auto-approve-action@v3
      with:
        pull-request-number: ${{ github.event.inputs.pullRequestNumber }}

name: Auto approve

on: pull_request_target

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: github.actor == \'dependabot[bot]\'
    steps:
      - uses: hmarr/auto-approve-action@v3
        with:
          review-message: ""Auto approved automated PR""

name: Auto approve

on: pull_request_target

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.SOME_USERS_PAT }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
cycjimmy/semantic-release-action,"steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

{
  ""publishConfig"": {
    ""registry"": ""https://npm.pkg.github.com""
  }
}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      semantic_version: 19.0.5  # It is recommended to specify a version range
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      semantic_version: 16
      branches: |
        [
          \'+([0-9])?(.{+([0-9]),x}).x\',
          \'master\',
          \'next\',
          \'next-major\',
          {
            name: \'beta\',
            prerelease: true
          },
          {
            name: \'alpha\',
            prerelease: true
          }
        ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

[
  \'+([0-9])?(.{+([0-9]),x}).x\',
  \'master\',
  \'next\',
  \'next-major\',
  {name: \'beta\', prerelease: true},
  {name: \'alpha\', prerelease: true}
]

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      semantic_version: 15.13.28
      branch: your-branch
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      extra_plugins: |
        @semantic-release/changelog@6.0.0
        @semantic-release/git
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  plugins: [
    .
+   ""@semantic-release/changelog""
+   ""@semantic-release/git"",
  ]

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      dry_run: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      ci: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      extends: |
        @semantic-release/apm-config@^9.0.0
        @mycompany/override-config
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      working_directory: ./code
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    with:
      tag_format: custom-v${version}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - name: Checkout
    uses: actions/checkout@v3
  - name: Semantic Release
    uses: cycjimmy/semantic-release-action@v3
    id: semantic   # Need an `id` for output variables
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  - name: Do something when a new release published
    if: steps.semantic.outputs.new_release_published == \'true\'
    run: |
      echo ${{ steps.semantic.outputs.new_release_version }}
      echo ${{ steps.semantic.outputs.new_release_major_version }}
      echo ${{ steps.semantic.outputs.new_release_minor_version }}
      echo ${{ steps.semantic.outputs.new_release_patch_version }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
OskarStark/phpstan-ga,"
on:
  push:
    branches:
      - master
  pull_request:

name: Test

jobs:
  phpstan:
    name: PHPStan

    runs-on: ubuntu-latest

    steps:
    - name: ""Checkout""
      uses: actions/checkout@v2

    - name: PHPStan
      uses: docker://oskarstark/phpstan-ga
      with:
        args: analyse src/

      uses: docker://oskarstark/phpstan-ga
      with:
-        args: analyse src/
+        args: analyse src/ --level=5

      uses: docker://oskarstark/phpstan-ga
+     env:
+       REQUIRE_DEV: true
      with:
        args: analyse src/

      uses: docker://oskarstark/phpstan-ga
+     env:
+        CHECK_PLATFORM_REQUIREMENTS: false
      with:
        args: analyse src/
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
srt32/git-actions,"workflow ""My build"" {
  resolves = [
    ""git command"",
  ]
  on = ""push""
}

action ""git command"" {
  uses = ""srt32/git-actions@v0.0.3""
  args = ""git status""
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
SamKirkland/FTP-Deploy-Action,"on: push
name: \xf0\x9f\x9a\x80 Deploy website on push
jobs:
  web-deploy:
    name: \xf0\x9f\x8e\x89 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: \xf0\x9f\x9a\x9a Get latest code
      uses: actions/checkout@v3
    
    - name: \xf0\x9f\x93\x82 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.samkirkland.com
        username: myFtpUserName
        password: ${{ secrets.ftp_password }}

on: push
name: \xf0\x9f\x9a\x80 Deploy website on push
jobs:
  web-deploy:
    name: \xf0\x9f\x8e\x89 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: \xf0\x9f\x9a\x9a Get latest code
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: \'16\'
      
    - name: \xf0\x9f\x94\xa8 Build Project
      run: |
        npm install
        npm run build
    
    - name: \xf0\x9f\x93\x82 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.samkirkland.com
        username: myFtpUserName
        password: ${{ secrets.password }}

on: push
name: \xf0\x9f\x9a\x80 Deploy website on push
jobs:
  web-deploy:
    name: \xf0\x9f\x8e\x89 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: \xf0\x9f\x9a\x9a Get latest code
      uses: actions/checkout@v3

    - name: \xf0\x9f\x93\x82 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.samkirkland.com
        username: myFtpUserName
        password: ${{ secrets.password }}
        protocol: ftps
        port: 1234 # todo replace with your web hosts ftps port

on: push
name: \xf0\x9f\x9a\x80 Deploy website on push
jobs:
  web-deploy:
    name: \xf0\x9f\x8e\x89 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: \xf0\x9f\x9a\x9a Get latest code
      uses: actions/checkout@v3

    - name: \xf0\x9f\x93\x82 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.samkirkland.com
        username: myFtpUserName
        password: ${{ secrets.password }}
        dry-run: true

on: push
name: \xf0\x9f\x9a\x80 Deploy website on push
jobs:
  web-deploy:
    name: \xf0\x9f\x8e\x89 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: \xf0\x9f\x9a\x9a Get latest code
      uses: actions/checkout@v3

    - name: \xf0\x9f\x93\x82 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ftp.samkirkland.com
        username: myFtpUserName
        password: ${{ secrets.password }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          fileToExclude.txt

exclude: |
  **/.git*
  **/.git*/**
  **/node_modules/**

[<img alt=""Deployed with FTP Deploy Action"" src=""https://img.shields.io/badge/Deployed With-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=0077b6"">](https://github.com/SamKirkland/FTP-Deploy-Action)

[<img alt=""Deployed with FTP Deploy Action"" src=""https://img.shields.io/badge/Deployed With-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=2b9348"">](https://github.com/SamKirkland/FTP-Deploy-Action)

[<img alt=""Deployed with FTP Deploy Action"" src=""https://img.shields.io/badge/Deployed With-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=d00000"">](https://github.com/SamKirkland/FTP-Deploy-Action)

[<img alt=""Website Deployed for Free with FTP Deploy Action"" src=""https://img.shields.io/badge/Website deployed for free with-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=297FA9"">](https://github.com/SamKirkland/FTP-Deploy-Action)

[<img alt=""Website Deployed for Free with FTP Deploy Action"" src=""https://img.shields.io/badge/Website deployed for free with-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=2b9348"">](https://github.com/SamKirkland/FTP-Deploy-Action)

[<img alt=""Website Deployed for Free with FTP Deploy Action"" src=""https://img.shields.io/badge/Website deployed for free with-FTP DEPLOY ACTION-%3CCOLOR%3E?style=for-the-badge&color=d00000"">](https://github.com/SamKirkland/FTP-Deploy-Action)

exclude:
 - *.txt

on: push
name: Publish Website
jobs:
  web-deploy:
    name: web-deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15 # time out after 15 minutes (default is 360 minutes)
    steps:
      ....
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
WebFreak001/deploy-nightly,"
name: Deploy Nightly
on:
  schedule:
    - cron: \'0 2 * * *\' # run at 2 AM UTC

jobs:
  nightly:
    name: Deploy nightly
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      ... # build your asset first

      - name: Deploy Windows release
        if: matrix.os == \'windows-latest\'
        uses: WebFreak001/deploy-nightly@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/Pure-D/serve-d/releases/20717582/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full ""upload_url"" value including the {?name,label} part
          release_id: 20717582 # same as above (id can just be taken out the upload_url, it\'s used to find old releases)
          asset_path: ./myapp.zip # path to archive to upload
          asset_name: myapp_windows-nightly-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip # required by GitHub API
          max_releases: 7 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
sebastianpopp/ftp-action,"name: Deploy via ftp
on: push
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Upload ftp
      uses: sebastianpopp/ftp-action@releases/v2
      with:
        host: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        localDir: ""dist""
        remoteDir: ""www""
        options: ""--delete --asci""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
carlosperate/download-file-action,"- name: Download a file
  uses: carlosperate/download-file-action@v2
  with:
    file-url: \'https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py\'
- name: Check the file is there
  run: ls -l get-poetry.py

- name: Download a file
  uses: carlosperate/download-file-action@v2
  id: download-file
  with:
    file-url: \'https://github.com/carlosperate/download-file-action/archive/refs/tags/v1.0.3.tar.gz\'
    file-name: \'new_filename.tar.gz\'
    location: \'./new-folder-to-be-created\'
    md5: \'e3b51204dedc75588ca164a26b51610d\'
    sha256: \'76ef5cf6e910a4955f713fb36cca6f90ffeee6ffafe743754716e149d68136de\'
- name: Print the file path (new-folder-to-be-created/new_filename.tar.gz)
  run: echo ""The file was downloaded to ${{ steps.download-file.outputs.file-path }}""
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lukka/get-cmake,"    - uses: lukka/get-cmake@latest  # <--= Just this one-liner suffices.

    - uses: lukka/get-cmake@latest  
      with:
        useLocalCache: true         # <--= Use the local cache (default is \'false\').
        useCloudCache: false        # <--= Ditch the cloud cache (default is \'true\').

    - name: Get latest CMake and Ninja
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: latestrc      # <--= optional, use the latest release candidate (notice the \'rc\' suffix).
        ninjaVersion: latest        # <--= optional, use the latest release (non candidate).

  - uses: lukka/get-cmake@latest
    with:
      cmakeVersion: ""~3.25.0""  # <--= optional, use most recent 3.25.x version
      ninjaVersion: ""^1.11.1""  # <--= optional, use most recent 1.x version

  - uses: lukka/get-cmake@latest
    with:
      cmakeVersion: 3.25.2     # <--= optional, stick to exactly 3.25.2 version
      ninjaVersion: 1.11.1     # <--= optional, stick to exactly 1.11.1 version

  - name: Get specific version CMake, v3.26.0
    uses: lukka/get-cmake@v3.26.0     # <- this one-liner is all you need.
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
lukka/run-cmake,"jobs:
  build:
    steps:

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10 # Always specify the specific _version_ of the 




      - name: Run CMake consuming CMakePresets.json and vcpkg.json by mean of vcpkg.
        uses: lukka/run-cmake@v10
        with:


          configurePreset: \'ninja-multi-vcpkg\'
          configurePresetAdditionalArgs: ""[\'-DENABLE_YOUR_FEATURE=1\']""

          buildPreset: \'ninja-multi-vcpkg\'
          buildPresetAdditionalArgs: ""[\'--config Release\']""
    
          testPreset: \'ninja-multi-vcpkg\'
          testPresetAdditionalArgs: ""[\'--config Release\']""


\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90      \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
\xe2\x94\x82 <if workflowPreset        \xe2\x94\x82  Yes \xe2\x94\x82 Run the workflow       `*`\xe2\x94\x82  Inputs:
\xe2\x94\x82 provided>                 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x96\xba\xe2\x94\x82 and then exit             \xe2\x94\x82   - `cmakeListsTxtPath`
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98      \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98   - `workflowPreset`
              \xe2\x94\x82 No                               \xe2\xac\xac                 - `workflowPresetCmdString`
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90 
\xe2\x94\x82 <if configurePreset           `*`\xe2\x94\x82     Inputs:
\xe2\x94\x82 provided>                        |      - `cmakeListsTxtPath`
|                                  |      - `configurePreset`
\xe2\x94\x82 $CONFIGURE_PRESET_NAME =         \xe2\x94\x82      - `configurePresetCmdString`
\xe2\x94\x82 configurePreset\'s value          \xe2\x94\x82
| runs: `cmake --preset`           \xe2\x94\x82   
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98 
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
\xe2\x94\x82 <if buildPreset provided>      `*`\xe2\x94\x82     Inputs:
\xe2\x94\x82                                   \xe2\x94\x82     - `buildPreset`
\xe2\x94\x82 $BUILD_PRESET_NAME=buildPreset    \xe2\x94\x82     - `cmakeListsTxtPath`
\xe2\x94\x82 runs: `cmake --build --preset`    \xe2\x94\x82     - `buildPresetCmdString`
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98     - `buildPresetAdditionalArgs`
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
\xe2\x94\x82 <if testPreset provided>       `*`\xe2\x94\x82    Inputs:
\xe2\x94\x82                                   \xe2\x94\x82     - `testPreset`
\xe2\x94\x82 $TEST_PRESET_NAME=testPreset      \xe2\x94\x82     - `cmakeListsTxtPath`
\xe2\x94\x82 runs: `ctest --preset`            \xe2\x94\x82     - `testPresetCmdString`
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98     - `testPresetAdditionalArgs`
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
\xe2\x94\x82 <if packagePreset provided>    `*`\xe2\x94\x82    Inputs:
\xe2\x94\x82                                   \xe2\x94\x82     - `packagePreset`
\xe2\x94\x82 $PACKAGE_PRESET_NAME=packagePreset\xe2\x94\x82     - `cmakeListsTxtPath`
\xe2\x94\x82 runs: `cpack --preset`            \xe2\x94\x82     - `packagePresetCmdString`
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98     - `packagePresetAdditionalArgs`
              \xe2\x96\xbc
              \xe2\xac\xac END


  `*` On Windows runners, the MSVC environment is setup for each block
   with the `*` on the top right corner. Note that VCPKG_ROOT will not be 
   overridden by the value defined in the VS Developer Command Prompt 
   environment, but the original value will be kept.
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
 \xe2\x94\x82 <if VCPKG_ROOT defined    \xe2\x94\x82  Inputs:
 \xe2\x94\x82 and CC and CXX undefined> \xe2\x94\x82   - `runVcpkgEnvFormatString`
 \xe2\x94\x82 run `vcpkg env` to set    \xe2\x94\x82   - `configurePresetAdditionalArgs`
 \xe2\x94\x82 the environment for MSVC  \xe2\x94\x82
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
shogo82148/actions-setup-perl,"steps:
- uses: actions/checkout@v3
- uses: shogo82148/actions-setup-perl@v1
  with:
    perl-version: \'5.34\'
- run: cpanm --installdeps .
- run: prove -lv t

steps:
- uses: actions/checkout@v3
- uses: shogo82148/actions-setup-perl@v1
  with:
    perl-version: \'5.34\'
    install-modules-with: cpanm
    install-modules-args: --with-develop --with-configure
- run: prove -lv t

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [\'ubuntu-latest\', \'macos-latest\', \'windows-latest\']
        perl: [ \'5.34\', \'5.32\', \'5.30\' ]
    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
      - run: perl -V
      - run: cpanm --installdeps .
      - run: prove -lv t

steps:
- uses: actions/checkout@v3
- uses: shogo82148/actions-setup-perl@v1
  with:
    perl-version: \'5.32\'
    distribution: strawberry
- run: cpanm --installdeps .
- run: prove -lv t

use Actions::Core;

my $input = get_input(\'inputName\', { required: true });
my $boolean_input = get_boolean_input(\'boolean-input\'); # accepts YAML 1.2 boolean values.
set_output(\'outputKey\', \'outputVal\');

export_variable(\'envVar\', \'Val\');

set_secret(\'myPassword\');

add_path(\'/path/to/mytool\');

set_failed(`Action failed with error ${err}`);

debug(\'debug message\');
if (is_debug()) {
}
info(\'Output to the actions build log\');

error(\'error\')
warning(\'warning\');
notice(\'notice\');
notice(\'add an annotation to files\', {
  title => \'Title\',
  file => \'filename.txt\',
  start_line   => 1,
  end_line     => 1,
  start_column => 1,
  end_column   => 10,
});

start_group(\'Do some function\');
do_some_function();
end_group();

use Actions::Core::Summary;
Actions::Core::Summary->new()
  ->add_raw(""some text"")
  ->add_code_block(""print \'Hello\';"", ""perl"")
  ->add_list([\'item1\', \'item2\', \'item3\'])
  ->add_table([[\'1\', \'2\', \'3\'], [\'one\', \'two\', \'three\']])
  ->add_separator()
  ->add_heading(\'heading\')
  ->add_details(\'label\', \'content\')
  ->add_image(\'https://github.com/actions.png\', \'alt\', { width => ""32"", height => ""32"" })
  ->add_quote(\'text\', \'cite\')
  ->add_link(""Example"", ""http://example.com"")
  ->write();

my $result = group \'Do something async\' => sub {
  return \'some results\';
};

my @available_perls_on_current_platform = perl_versions(); # (\'5.34.0\', \'5.32.1\', \'5.30.3\', \'5.28.3\', ...)
my @available_perls_on_linux   = perl_versions(platform => \'linux\');
my @available_perls_on_darwin  = perl_versions(platform => \'darwin\');
my @available_perls_on_win32   = perl_versions(platform => \'win32\');
my @available_strawberry_perls = perl_versions(platform => \'win32\', distribution => \'strawberry\');
my @including_patch_versions   = perl_versions(patch => 1); # (\'5.34.0\', \'5.32.1\', \'5.32.0\', \'5.30.3\', \'5.30.2\', ...)

jobs:
  list:
    name: list available perl versions
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-setup-perl@v1
      - id: set-matrix
        name: list available perl versions
        shell: perl {0}
        run: |
          use Actions::Core;
          set_output(matrix => {perl => [perl_versions()]});
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  run:
    runs-on: ubuntu-latest
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list.outputs.matrix)}}
    steps:
      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jwgmeligmeyling/spotbugs-github-action,"name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B verify spotbugs:spotbugs
    - uses: jwgmeligmeyling/spotbugs-github-action@master
      with:
        path: '**/spotbugsXml.xml'

<build>
  <plugins>
    <plugin>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-maven-plugin</artifactId>
      <version>4.0.0</version>
      <configuration>
        <xmlOutput>true</xmlOutput>
        <failOnError>false</failOnError>
      </configuration>
    </plugin>
  </plugins>
</build>

- uses: actions/checkout@v2
  with:
    ref: ${{ github.event.pull_request.head.sha }}

$ npm install

$ npm run build && npm run package

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...
",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zing-actions/setup-java,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'8.0.252\' # The JDK version to make available on the path.
    java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
    architecture: x64 # (x64 or x86) - defaults to x64
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        java: [ 7, 7.0.262, 8, 8.0.252, 11.0.x, 11.0.7 ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.MAVEN_GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sgsaenger/create-release,"on:
  push:
    tags:
      - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mymindstorm/setup-emsdk,"name: ""emsdk""
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: mymindstorm/setup-emsdk@v11

      - name: Verify
        run: emcc -v

- name: Setup emsdk
  uses: mymindstorm/setup-emsdk@v11
  with:
    version: 1.38.40
    actions-cache-folder: \'emsdk-cache\'

- name: Verify
  run: emcc -v

env:
  EM_VERSION: 1.39.18
  EM_CACHE_FOLDER: \'emsdk-cache\'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      - name: Build library
        run: make -j2
      - name: Run unit tests
        run: make check

version:
  description: \'Version to install\'
  default: \'latest\'
no-install:
  description: ""If true will not download any version of Emscripten. emsdk will still be added to PATH.""
  default: false
no-cache:
  description: ""If true will not cache any downloads with tc.cacheDir.""
  default: false
actions-cache-folder:
  description: ""Directory to cache emsdk in. This folder will go under $GITHUB_HOME (I.e. build dir) and be cached using @actions/cache.""
  default: \'\'
update:
  description: ""Fetch package information for all the new tools and SDK versions""
  default: false
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
alex-page/blazing-fast-gh-pages-deploy,"name: Blazing fast GitHub Pages deploy

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: npm install, test and build
        run: |
          npm install
          npm run test
          npm run build
      - name: Deploy site to gh-pages branch
        uses: alex-page/blazing-fast-gh-pages-deploy@v1.1.0
        with:
          repo-token: ${{ secrets.GH_PAT }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
kamiazya/setup-graphviz,"uses: kamiazya/setup-graphviz@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
HorstBaerbel/action-cmake,"name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      uses: HorstBaerbel/action-cmake@1.1
      with:
        sourcedir: \'.\'
        builddir: \'build\'
        cmakeoptions: \'\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
HorstBaerbel/action-clang-format,"name: Clang-format

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  checkout-and-check-formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run clang-format
      uses: HorstBaerbel/action-clang-format@1.5
      with:
        scandir: \'.\'
        excludedirs: \'build\'
        extensions: \'c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx\'
        style: \'file\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
HorstBaerbel/action-clang-tidy,"name: Clang-tidy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  checkout-and-check-formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run clang-tidy
      uses: HorstBaerbel/action-clang-tidy@1.2
      with:
        scandir: \'.\'
        builddir: \'build\'
        excludedirs: \'\'
        extensions: \'c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx\'
        cmakeoptions: \'\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
HorstBaerbel/action-ctest,"name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  checkout-and-check-formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run unit tests
      uses: HorstBaerbel/action-ctest@1.1
      with:
        sourcedir: \'.\'
        builddir: \'build\'
        cmakeoptions: \'--config Release\'
        ctestoptions: \'\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
alex-page/github-project-automation-plus,"name: Move new issues into Triage

on:
  issues:
    types: [opened]

jobs:
  automate-project-columns:
    runs-on: ubuntu-latest
    steps:
      - uses: alex-page/github-project-automation-plus@v0.8.3
        with:
          project: Backlog
          column: Triage
          repo-token: ${{ secrets.GITHUB_TOKEN }}

name: Move assigned pull requests into To do

on:
  pull_request:
    types: [assigned]

jobs:
  automate-project-columns:
    runs-on: ubuntu-latest
    steps:
      - uses: alex-page/github-project-automation-plus@v0.8.3
        with:
          project: Backlog
          column: To do
          repo-token: ${{ secrets.GITHUB_TOKEN }}

repo-token: ${{ secrets.GHPROJECT_TOKEN }}

GraphqlError: Resource protected by organization SAML enforcement. You must grant your personal token access to this organization
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
technote-space/assign-author,"on:
  pull_request:
    types: [opened]
name: Pull Request
jobs:
  assignAuthor:
    name: Assign author to PR
    runs-on: ubuntu-latest
    steps:
      - name: Assign author to PR
        uses: technote-space/assign-author@v1

on:
  issues:
    types: [opened]
name: Issues
jobs:
  assignAuthor:
    name: Assign author to issue
    runs-on: ubuntu-latest
    steps:
      - name: Assign author to issue
        uses: technote-space/assign-author@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nick-zh/composer,"steps:
  - name: Run composer
    uses: nick-zh/composer-php@master
    with:
      action: 'install -oa'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
montudor/action-zip,"- uses: montudor/action-zip@v1
  with:
    args: zip -qq -r dir.zip dir

- uses: montudor/action-zip@v1
  with:
    args: unzip -qq dir.zip -d dir

- name: Install zip
  uses: montudor/action-zip@v1

- name: Zip output
  run: zip -qq -r function.zip dist node_modules package.json
  working-directory: path/to/work-dir

name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  composer-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: composer install --ansi --no-progress --no-interaction --prefer-dist
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r vendor.zip vendor
      - uses: actions/upload-artifact@v2
        with:
          name: vendor.zip
  tests:
    needs: composer-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          name: vendor.zip
      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq vendor.zip -d vendor
      - run: ./vendor/bin/phpunit
  mutation:
    needs: composer-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          name: vendor.zip
      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq vendor.zip -d vendor
      - run: ./vendor/bin/infection
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
AButler/upload-release-assets,"jobs:
  build:
    steps:
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: \'artifacts/*;packages/*.nupkg\'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
robotology/gh-action-nightly-merge,"name: 'Nightly Merge'

on:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  nightly-merge:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Nightly Merge
      uses: robotology/gh-action-nightly-merge@v1.4.0
      with:
        stable_branch: 'master'
        development_branch: 'devel'
        allow_ff: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - master

on:
  workflow_dispatch:

      with:
        push_token: 'FOO_TOKEN'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FOO_TOKEN: ${{ secrets.FOO_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
Icinga/docker-icinga2,"docker network create icinga

docker run --rm \\
\t-h icinga-master \\
\t-v icinga-master:/data \\
\t-e ICINGA_MASTER=1 \\
\ticinga/icinga2 \\
\tcat /var/lib/icinga2/certs/ca.crt > icinga-ca.crt

docker run --rm \\
\t-h icinga-master \\
\t-v icinga-master:/data \\
\t-e ICINGA_MASTER=1 \\
\ticinga/icinga2 \\
\ticinga2 daemon -C
docker run --rm \\
\t-h icinga-master \\
\t-v icinga-master:/data \\
\t-e ICINGA_MASTER=1 \\
\ticinga/icinga2 \\
\ticinga2 pki ticket --cn icinga-agent > icinga-agent.ticket

docker run --rm -d \\
\t--network icinga \\
\t--name icinga-master \\
\t-h icinga-master \\
\t-p 5665:5665 \\
\t-v icinga-master:/data \\
\t-e ICINGA_MASTER=1 \\
\ticinga/icinga2

docker run --rm -d \\
\t--network icinga \\
\t-h icinga-agent \\
\t-v icinga-agent:/data \\
\t-e ICINGA_ZONE=icinga-agent \\
\t-e ICINGA_ENDPOINT=icinga-master,icinga-master,5665 \\
\t-e ICINGA_CACERT=""$(< icinga-ca.crt)"" \\
\t-e ICINGA_TICKET=""$(< icinga-agent.ticket)"" \\
\ticinga/icinga2

git clone https://github.com/Icinga/icinga2.git

./build.bash ./icinga2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Icinga/docker-icingaweb2,"docker run --rm -d \\
\t-p 8080:8080 \\
\t-v icingaweb:/data \\
\t-e icingaweb.enabledModules=icingadb \\
\t-e icingaweb.passwords.icingaweb2.icingaadmin=123456 \\
\t-e icingaweb.authentication.icingaweb2.backend=db \\
\t-e icingaweb.authentication.icingaweb2.resource=icingaweb_db \\
\t-e icingaweb.config.global.config_backend=db \\
\t-e icingaweb.config.global.config_resource=icingaweb_db \\
\t-e icingaweb.config.logging.log=php \\
\t-e icingaweb.groups.icingaweb2.backend=db \\
\t-e icingaweb.groups.icingaweb2.resource=icingaweb_db \\
\t-e icingaweb.modules.icingadb.config.icingadb.resource=icingadb \\
\t-e icingaweb.modules.icingadb.redis.redis1.host=2001:db8::192.0.2.18 \\
\t-e icingaweb.modules.icingadb.redis.redis1.port=6379 \\
\t-e icingaweb.modules.icingadb.commandtransports.icinga2.transport=api \\
\t-e icingaweb.modules.icingadb.commandtransports.icinga2.host=2001:db8::192.0.2.9 \\
\t-e icingaweb.modules.icingadb.commandtransports.icinga2.username=root \\
\t-e icingaweb.modules.icingadb.commandtransports.icinga2.password=123456 \\
\t-e icingaweb.resources.icingaweb_db.type=db \\
\t-e icingaweb.resources.icingaweb_db.db=mysql \\
\t-e icingaweb.resources.icingaweb_db.host=2001:db8::192.0.2.13 \\
\t-e icingaweb.resources.icingaweb_db.dbname=icingaweb \\
\t-e icingaweb.resources.icingaweb_db.username=icingaweb \\
\t-e icingaweb.resources.icingaweb_db.password=123456 \\
\t-e icingaweb.resources.icingaweb_db.charset=utf8mb4 \\
\t-e icingaweb.resources.icingadb.type=db \\
\t-e icingaweb.resources.icingadb.db=mysql \\
\t-e icingaweb.resources.icingadb.host=2001:db8::192.0.2.113 \\
\t-e icingaweb.resources.icingadb.dbname=icingadb \\
\t-e icingaweb.resources.icingadb.username=icingaweb \\
\t-e icingaweb.resources.icingadb.password=123456 \\
\t-e icingaweb.resources.icingadb.charset=utf8mb4 \\
\t-e icingaweb.roles.Administrators.users=icingaadmin \\
\t-e icingaweb.roles.Administrators.permissions=\'*\' \\
\t-e icingaweb.roles.Administrators.groups=Administrators \\
\ticinga/icingaweb2

[section]
option = value

git clone https://github.com/Icinga/icingaweb2.git

./build.bash ./icingaweb2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
aws-actions/aws-codebuild-run-project,"- name: Run CodeBuild
  uses: aws-actions/aws-codebuild-run-build@v1
  with:
    project-name: my-codebuild-job
    disable-source-override: true
    buildspec-override:   |
      version: 0.2
      phases:
        install:
          runtime-versions:
            nodejs: 16
          commands:
            - npm install -g typescript
            - npm install
        pre_build:
          commands:
            - echo Installing source NPM dependencies...
        build:
          commands:
            - echo Build started on `date`
            - tsc
            - npm prune --production
          post_build:
            commands:
              - echo Build completed on `date`  
      artifacts:
        type: zip
        files:
          - package.json
          - package-lock.json

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Effect"": ""Allow"",
      ""Action"": [""codebuild:StartBuild"", ""codebuild:BatchGetBuilds""],
      ""Resource"": [""arn:aws:codebuild:REGION:ACCOUNT_ID:project/PROJECT_NAME""]
    },
    {
      ""Effect"": ""Allow"",
      ""Action"": [""logs:GetLogEvents""],
      ""Resource"": [
        ""arn:aws:logs:REGION:ACCOUNT_ID:log-group:/aws/codebuild/PROJECT_NAME:*""
      ]
    }
  ]
}

- name: Configure AWS Credentials
  uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: us-east-2
- name: Run CodeBuild
  uses: aws-actions/aws-codebuild-run-build@v1
  with:
    project-name: CodeBuildProjectName

- name: Configure AWS Credentials
  uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: us-east-2
- name: Run CodeBuild
  uses: aws-actions/aws-codebuild-run-build@v1
  with:
    project-name: CodeBuildProjectName
    buildspec-override: path/to/buildspec.yaml or inline buildspec definition
    compute-type-override: compute-type
    environment-type-override: environment-type
    image-override: ecr-image-uri
    env-vars-for-codebuild: |
      custom,
      requester,
      event-name
  env:
    custom: my environment variable
    requester: ${{ github.actor }}
    event-name: ${{ github.event_name }}

npx @aws-actions/codebuild-run-build -p ProjectName -r remoteName
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
ThiefMaster/changed-files-action,"- name: Changed Files Exporter
  uses: futuratrepadeira/changed-files@v3.1.0
  with:
    repo-token: ${{ github.token }}
    pattern: \'^.*\\.(md|markdown)$\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
InsightSoftwareConsortium/ITKApplyClangFormatAction,"name: Apply clang-format to PR

on:
  pull_request:
    types: [labeled]

jobs:
  clang-format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: InsightSoftwareConsortium/ITKApplyClangFormatAction@testing
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: InsightSoftwareConsortium/ITKApplyClangFormatAction@testing
      with:
        label-name: 'action:MakeItStylish'
        github-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
InsightSoftwareConsortium/ITKClangFormatLinterAction,"on: [push,pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: InsightSoftwareConsortium/ITKClangFormatLinterAction@master

    - uses: InsightSoftwareConsortium/ITKClangFormatLinterAction@master
      with:
        error-message: 'Code is inconsistent with ITK Coding Style. Add the *action:ApplyClangFormat* PR label to correct.'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
brpaz/hadolint-action,"steps:
  - uses: actions/checkout@v2 
  - uses: hadolint/hadolint-action@v1.5.0
    with:
      dockerfile: Dockerfile
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
ReactiveCircus/android-emulator-runner,"jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
        target: [default, google_apis]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          ndk: 21.0.6113669
          cmake: 3.10.2.4988404
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != \'true\'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo ""Generated AVD snapshot for caching.""

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
",0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
olafurpg/setup-gpg,"+++ .github/workflows/ci.yml
  name: CI
  on:
    push:
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v1
+     - uses: olafurpg/setup-gpg@v3
      - run: sbt publishSigned
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
kevinpainchaud/simple-ftp-deploy-action,"uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
with:
  ftp_host: ${{ secrets.FTP_HOST }}
  ftp_username: ${{ secrets.FTP_USERNAME }}
  ftp_password: ${{ secrets.FTP_PASSWORD }}
  local_source_dir: ""dist""
  dist_target_dir: ""www/my-app""
  delete: ""true""
  exclude: ""\'^logs/\' \'^README.md\'""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
technote-space/auto-cancel-redundant-job,"on: push
jobs:
  test:
    steps:
      - uses: technote-space/auto-cancel-redundant-workflow@v1
      - run: echo step1
      - run: echo step2

on: push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  test:
    steps:
      - run: echo step1
      - run: echo step2

on:
  repository_dispatch:
    types: [test]

name: Example
jobs:
  firstJob:
    name: First Job
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/auto-cancel-redundant-workflow@v1
      - name: any steps
        run: echo test

  secondJob:
    name: Second Job
    needs: firstJob
    runs-on: ubuntu-latest
    steps:
      - run: echo test

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jacobtomlinson/gha-find-replace,"name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ""hello""
          replace: ""world""
          regex: false

name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ""hello""
          replace: ""world""
          include: ""justthisdirectory/**""
          regex: true

name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ""hello""
          replace: ""world""
          include: ""**README.md"" # Will match all README.md files in any nested directory

name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ""hello""
          replace: ""world""
          exclude: ""**/*.py"" # Do not modify Python files

name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ""hello""
          replace: ""world""
          regex: false
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.MY_PAT }}
          branch: ${{ github.ref }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
isthatcentered/dist-to-ftp,"name: Deploy app
on: [push]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Deploy app
        uses: isthatcentered/dist-to-ftp@master
        with:
          user: ${{ secrets.FTP_USER }} # Ftp user Ex:
          password: ${{ secrets.FTP_PASSWORD }} # Ftp password Ex:
          host: ${{ secrets.FTP_HOST }} # Ftp host Ex:
          port: ${{ secrets.FTP_PORT }} # (optional) FTP port, defaults to 21
          path: dist # Folder to deploy Ex: apps/frontend/dist or dist
          into: web # Where to place the files in your ftp
          cleanupExisting: true # (Optional), Remove already existing files inside FTP destination folder (`into` parameter)

name: Deploy app
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build App
    runs-on: [ubuntu-latest]
    steps:
      - name: Import commit files
        uses: actions/checkout@master
      - name: Get yarn cache # https://github.com/actions/cache/blob/master/examples.md#node---yarn
        id: yarn-cache
        run: echo ""::set-output name=dir::$(yarn cache dir)""
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(\'**/yarn.lock\') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload bundle
        uses: actions/upload-artifact@master
        with:
          name: my_artifact_name # Upload artifact with name `dist`
          path: dist # Upload content of `dist` folder
      - name: Debug Files
        run: ls
  deploy:
    name: Deploy App
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: my_artifact_name # Download artifact named `my_artifact_name` (matches build step: Upload bundle)
          path: dist # Optional, downloads to current working directory under folder {artifact_name} if not specified
      - name: Debug Files
        run: ls
      - name: Upload to FTP
        uses: isthatcentered/dist-to-ftp@master
        with:
          user: ${{ secrets.FTP_USER }} # Ftp user Ex:
          password: ${{ secrets.FTP_PASSWORD }} # Ftp password Ex:
          host: ${{ secrets.FTP_HOST }} # Ftp host Ex:
          port: ${{ secrets.FTP_PORT }} # (optional) FTP port, defaults to 21
          path: dist # Folder to deploy Ex: apps/frontend/dist or dist
          into: web # Where to place the files in your ftp
          cleanupExisting: true # (Optional), Remove already existing files inside FTP destination folder (`into` parameter)

inputs:
  user:
    required: true
    description: Ftp user
  password:
    required: true
    description: Ftp password
  host:
    description: FTP host url
    required: true
  into:
    description: Where to place the files in your ftp
    required: true
  path:
    description: Path to your build folder (usually ""./public"" or ""./dist"")
    default: dist
    required: true

  port:
    description: FTP port
    required: false
    default: ""21""
  cleanupExisting:
    required: false
    default: true
    description: Remove existing file inside FTP destination folder
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
brandedoutcast/publish-nuget,"name: publish to nuget\r
on:\r
  push:\r
    branches:\r
      - main # Default release branch, may also be named 'master' or 'develop'\r
jobs:\r
  publish:\r
    name: build, pack & publish\r
    runs-on: ubuntu-latest\r
    steps:\r
      - uses: actions/checkout@v2\r
\r
\r
      - name: publish on version change\r
        id: publish_nuget\r
        uses: brandedoutcast/publish-nuget@v2\r
        with:\r
          PROJECT_FILE_PATH: Core/Core.csproj\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
snickerbockers/submodules-init,"uses: snickerbockers/submodules-init@v4
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
AdoptOpenJDK/install-jdk,"steps:
- uses: actions/checkout@v1
- uses: AdoptOpenJDK/install-jdk@v1
  with:
    version: \'13\'
    architecture: x64

- uses: AdoptOpenJDK/install-jdk@v1
  with:
    version: \'8\'
    architecture: x64
- uses: AdoptOpenJDK/install-jdk@v1
  with:
    version: \'13\'
    architecture: x64
    targets: \'JDK_13\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
php-actions/phpunit,"name: CI

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: php-actions/composer@v6 # or alternative dependency management
    - uses: php-actions/phpunit@v3

...

jobs:
  unit-tests:

    ...

    - name: PHPUnit tests
      uses: php-actions/phpunit@v3
      with:
        configuration: ""custom/path/to/phpunit.xml""
        memory_limit: ""256M""

jobs:
  unit-tests:

    ...

    - name: PHPUnit tests
      uses: php-actions/phpunit@v3
      with:
        php_extensions: ""xdebug""
        coverage_clover: ""coverage/clover.xml""
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ShiftLeftSecurity/scan-action,"\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x97
\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91
\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91
\xe2\x95\x9a\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91     \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91
\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91
\xe2\x95\x9a\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d

- name: Perform Scan
  uses: ShiftLeftSecurity/scan-action@master

- name: Perform Scan
  uses: ShiftLeftSecurity/scan-action@master
  with:
    type: ""credscan,java,depscan""

- name: Perform Scan
  uses: ShiftLeftSecurity/scan-action@master
  with:
    type: ""credscan,python""
  env:
    WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- uses: actions/upload-artifact@v1
  with:
    name: reports
    path: reports

- name: Perform Scan
  uses: ShiftLeftSecurity/scan-action@master
  with:
    type: ""credscan,python""
  env:
    WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SCAN_AUTO_BUILD: true
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
oleg-nenashev/jenkins-release-drafter,"name: Release Management

on:
  push:
    branches:
      - master

jobs:
  update_draft_release:
    runs-on: ubuntu-latest
    steps:
      - uses: toolmantim/release-drafter@v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$NEXT_PATCH_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$NEXT_PATCH_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
template: |

  $CHANGES

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

exclude-labels:
  - \'skip-changelog\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

yarn

npm test

npm run dev

docker-compose run --rm app npm test

git checkout master && git pull && npm version [major | minor | patch]
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
JeremySkinner/global-json-dotnet-install,"{
    ""sdk"": {
      ""version"": ""5.0.100-preview.7.20366.6"",
      ""rollForward"": ""latestFeature""
    },
    ""others"": [""3.1.201"", ""2.2.105""]
}

jobs:
  build:
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get SDKs to install
      shell: pwsh
      run: |
        $json = ConvertFrom-Json (Get-Content global.json -Raw)
        $sdks = ($json.others + $json.sdk.version) -join "",""
        Write-Output ""::set-env name=REQUIRED_SDKS::$sdks""

    - name: Install .NET SDKs
      uses: JeremySkinner/global-json-dotnet-install@master
      with:
        versions: ${{ env.REQUIRED_SDKS }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cypress-io/github-action,"name: End-to-end tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5

name: End-to-end tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          component: true

- name: Cypress run
  uses: cypress-io/github-action@v5

- name: Cypress run
  uses: cypress-io/github-action@v5.1.0

name: Chrome
on: push
jobs:
  chrome:
    runs-on: ubuntu-22.04
    name: E2E on Chrome
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          browser: chrome

name: Firefox
on: push
jobs:
  firefox:
    runs-on: ubuntu-22.04
    name: E2E on Firefox
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          browser: firefox

name: Edge
on: push
jobs:
  edge:
    runs-on: ubuntu-22.04
    name: E2E on Edge
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          browser: edge

name: Chrome headed
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          browser: chrome
          headed: true

name: E2E in custom container
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    container: cypress/browsers:node18.12.0-chrome106-ff106
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          browser: chrome

name: Cypress tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run with env
        uses: cypress-io/github-action@v5
        with:
          env: host=api.dev.local,port=4222

name: Cypress tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run with env
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_host: api.dev.local
          CYPRESS_port: 4222

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          spec: cypress/e2e/spec1.cy.js

spec: |
  cypress/e2e/spec-a.cy.js
  cypress/**/*-b.cy.js

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          project: ./some/nested/folder

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}

name: tags
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: [16, 18, 20]
    name: E2E on Node v${{ matrix.node }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: node -v

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
          tag: node-${{ matrix.node }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Cypress E2E Tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    name: E2E
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
          auto-cancel-after-failures: 2
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Artifacts
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    name: Artifacts
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
      - uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # \'warn\' or \'error\' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v3
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore # \'warn\' or \'error\' are also available, defaults to `warn`

name: example-quiet
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: ./
        with:
          working-directory: examples/quiet
          quiet: true

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          config: pageLoadTimeout=100000,baseUrl=http://localhost:3000

name: Cypress tests
on: push
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          config-file: tests/cypress-config.json

name: Parallel Cypress Tests
on: push
jobs:
  test:
    name: Cypress run
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
          parallel: true
          group: \'Actions example\'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Run E2E tests
  uses: cypress-io/github-action@v5

- name: Run Component Testing
  uses: cypress-io/github-action@v5
  with:
    install: false
    component: true

name: Build
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: npm run build

name: With server
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start

name: With server
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          start-windows: npm run start:windows:server

name: With servers
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm run api, npm run web

with:
  start: |
    npm run api
    npm run web

name: After server responds
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          wait-on: \'http://localhost:8080\'

- uses: cypress-io/github-action@v5
  with:
    start: npm start
    wait-on: \'http://localhost:8080/status\'
    wait-on-timeout: 120

- uses: cypress-io/github-action@v5
  with:
    start: npm run api, npm run web
    wait-on: \'http://localhost:3050, http://localhost:8080\'

- uses: cypress-io/github-action@v5
  with:
    start: npm start
    wait-on: \'npx wait-on --timeout 60000 http://localhost:3000\'

- uses: cypress-io/github-action@v5
  with:
    install-command: yarn --frozen-lockfile --silent

name: Visual
on: push
jobs:
  e2e:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          wait-on: \'http://localhost:8080\'
          command-prefix: \'percy exec -- npx\'

steps:
  - name: Checkout \xf0\x9f\x9b\x8e
    uses: actions/checkout@v3

  - name: Custom tests \xf0\x9f\xa7\xaa
    uses: cypress-io/github-action@v5
    with:
      command: npm run e2e:ci

name: Parallel
on: push
jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          record: true
          parallel: true
          group: \'Actions example\'
          ci-build-id: \'${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}\'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  prepare:
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
    steps:
      - name: Generate unique ID \xf0\x9f\x92\x8e
        id: uuid
        run: echo ""value=sha-$GITHUB_SHA-time-$(date +""%s"")"" >> $GITHUB_OUTPUT
  smoke-tests:
    needs: [\'prepare\']
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          record: true
          parallel: true
          ci-build-id: ${{ needs.prepare.outputs.uuid }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.EXAMPLE_RECORDING_KEY }}

repo/
  app/
  app-test/
    cypress/
      fixtures/
      integration/
      plugins/
      support/
    cypress.json
  package.json

repo/
  app/
  app-test/
    cypress/
      e2e/
      fixtures/
      support/
    cypress.config.js
  package.json

repo/
  app/
  app-test/
    cypress/
      component/
      fixtures/
      support/
    cypress.config.js
  package.json

on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          start: npm start
          working-directory: app-test

root/
  e2e/
    (code for installing and running Cypress tests)
    package.json
    package-lock.json
    cypress.json
    cypress

  (code for running the ""app"" with ""npm start"")
  package.json
  yarn.lock

name: E2E
on: push
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Start server in the background
        run: npm start &

      - name: Install Cypress and run tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e

name: example-basic-pnpm
on: push
jobs:
  basic-pnpm:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: examples/basic-pnpm

name: example-yarn-classic
on: push
jobs:
  yarn-classic:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: examples/yarn-classic

name: example-yarn-modern
on: push
jobs:
  yarn-modern:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: examples/yarn-modern
          install-command: yarn install

name: example-yarn-modern-pnp
on: push
jobs:
  yarn-classic:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: examples/yarn-modern-pnp
          install-command: yarn install
          command: yarn run --binaries-only cypress run

name: example-start-and-yarn-workspaces
on: push
jobs:
  single:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        with:
          working-directory: examples/start-and-yarn-workspaces/workspace-1
          build: yarn run build
          start: yarn start
          wait-on: \'http://localhost:5000\'

name: End-to-end tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: [16, 18, 20]
    name: E2E on Node v${{ matrix.node }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          record: true
          group: Tests on Node v${{ matrix.node }}
          cache-key: node-v${{ matrix.node }}-on-${{ runner.os }}-hash-${{ hashFiles(\'yarn.lock\') }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Node versions
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: [16, 18, 20]
    name: E2E on Node v${{ matrix.node }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5

name: E2E
on: push
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      - name: Install dependencies
        uses: cypress-io/github-action@v5
        with:
          runTests: false
      - run: yarn lint
      - name: Run e2e tests
        uses: cypress-io/github-action@v5
        with:
          install: false
          working-directory: e2e

- uses: actions/checkout@v3
- uses: actions/cache@v2
  with:
    path: |
      ~/.cache/Cypress
      node_modules
    key: my-cache-${{ runner.os }}-${{ hashFiles(\'package-lock.json\') }}
- run: npm i cypress
- uses: cypress-io/github-action@v5
  with:
    install: false

jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v5
        timeout-minutes: 5

DEBUG: @cypress/github-action

- name: Cypress tests with debug logs
  uses: cypress-io/github-action@v5
  env:
    DEBUG: \'@cypress/github-action\'

- name: Cypress tests with debug logs
  uses: cypress-io/github-action@v5
  env:
    DEBUG: \'cypress:*\'

$ node src/ping-cli.js <url>

$ node src/ping-cli.js https://example.cypress.io
pinging url https://example.cypress.io for 30 seconds
::debug::pinging https://example.cypress.io has finished ok

- name: Cypress tests
  uses: cypress-io/github-action@v5
  id: cypress
  continue-on-error: true
  with:
    record: true
  env:
    CYPRESS_RECORD_KEY: ${{ secrets.RECORDING_KEY }}
- name: Print Cypress Cloud URL
  run: |
    echo Cypress finished with: ${{ steps.cypress.outcome }}
    echo See results at ${{ steps.cypress.outputs.resultsUrl }}

name: info
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: npx cypress info

name: info
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          runTests: false
      - name: Cypress info
        run: npx cypress info
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          install: false

name: example-cron
on:
  schedule:
    - cron: \'0 4 * * *\'
jobs:
  nightly:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress nightly tests \xf0\x9f\x8c\x83
        uses: cypress-io/github-action@v5

name: Example no summary
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          publish-summary: false
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
frabert/replace-string-action,"uses: frabert/replace-string-action@v2\r
with:\r
  pattern: 'Hello, (\\w+)!'\r
  string: 'Hello, world!'\r
  replace-with: 'I greet you, $1!'\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
JJ/issue-greeting-action,"name: ""PR Greeter""
on: [pull_request]

jobs:
  pr-greeter:
    runs-on: ubuntu-latest
    steps:
      - name: ""Greeter""
        uses: JJ/pr-greeting-action@releases/v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          greeting: ""Hey **#** welcome to this repo""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
micnncim/action-label-syncer,"- name: bug
  description: Something isn't working
  color: d73a4a
- name: documentation
  description: Improvements or additions to documentation
  color: 0075ca
- name: duplicate
  description: This issue or pull request already exists
  color: cfd3d7

name: Sync labels
on:
  push:
    branches:
      - master
    paths:
      - path/to/manifest/labels.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: micnncim/action-label-syncer@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          manifest: path/to/manifest/labels.yml

name: Sync labels
on:
  push:
    branches:
      - master
    paths:
      - path/to/manifest/labels.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: micnncim/action-label-syncer@v1
        with:
          manifest: path/to/manifest/labels.yml
          repository: |
              owner/repository-1
              owner/repository-2
          token: ${{ secrets.PERSONAL_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ashutoshvarma/setup-ninja,"jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: ""Windows MSVC"", os: windows-latest, cc: ""cl"", cxx: ""cl"" }
          - { name: ""Ubuntu gcc"", os: ubuntu-latest, cc: ""gcc"", cxx: ""g++"" }
          - { name: ""MacOS clang"", os: macos-latest, cc: ""clang"", cxx: ""clang++"" }
        
    steps:
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.0

      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -G Ninja
          build-type: Release
        
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
liri-infra/qmllint-action,"name: Lint

on:
  push:
    branches:
      - develop
  pull_request:
    types:
      - assigned
      - opened
      - synchronize
      - reopened

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate QML and JavaScript files
        uses: liri-infra/qmllint-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

GITHUB_TOKEN=token
GITHUB_WORKSPACE=/path/to/project
GITHUB_REPOSITORY=owner/repo
GITHUB_SHA=abcdef...
./entrypoint
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jackstr/update-changelog,"name: Update Changelog file

on: [workflow_dispatch]

jobs:
  update-changelog-pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jackstr/update-changelog@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: jackstr/create-pull-request@master
        with:
          branch: update-changelog
          branch-suffix: timestamp
          title: Update CHANGELOG.md
          body: |
            Updates CHANGELOG with latest versions.

            This is automatically generated pull request.

curl \\
    -u $user:$token \\
    -X POST \\
    -H ""Accept: application/vnd.github.v3+json"" \\
    https://api.github.com/repos/jackstr/seamly2d/actions/workflows/update-changelog.yml/dispatches \\
    -d \'{""ref"": ""develop""}\' # branch name
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jackstr/create-pull-request,"      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
      - name: Check outputs
        run: |
          echo ""Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}""

      - uses: actions/checkout@v1
      - run: git checkout ""${GITHUB_REF:11}""

    steps:
      - uses: actions/checkout@v2
      - name: Create commits
        run: |
          git config user.name \'Peter Evans\'
          git config user.email \'peter-evans@users.noreply.github.com\'
          date +%s > report.txt
          git commit -am ""Modify tracked file during workflow""
          date +%s > new-report.txt
          git add -A
          git commit -m ""Add untracked file during workflow""
      - name: Uncommitted change
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v1
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}

name: Create Pull Request
on: push
jobs:
  createPullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Make changes to pull request
        run: date +%s > report.txt

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}
          commit-message: Update report
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: example-patches
          title: \'[Example] Update report\'
          body: |
            Update report
            - Updated with *today\'s* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: peter-evans
          reviewers: peter-evans
          team-reviewers: |
            owners
            maintainers
          milestone: 1
          draft: false

      - name: Check output
        run: |
          echo ""Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sbeyer/include-guards-check-action,"
name: check-include-guards

on: [push, pull_request]

jobs:
  include-guards:
    name: Check include guards
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Check include guards
      uses: sbeyer/include-guards-check-action@v1.0.0
      with:
        path: 'include/'
        pattern: 'PROJECT_{last_dir}_{file_base}'
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Harmon758/postgresql-action,"steps:
- uses: harmon758/postgresql-action@v1
  with:
    postgresql version: '11'  # See https://hub.docker.com/_/postgres for available versions
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
archive/github-actions-slack,"{
  ""statusCode"": 200,
  ""statusMessage"": ""OK"",
  ""ok"": true,
  ""result"": ""<deprecated - same as response but as string>"",
  ""response"": {
    ""ok"": true,
    ""channel"": ""XXXX"",
    ""ts"": ""1612623790.009600"",
    ""message"": {
      ""type"": ""message"",
      ""subtype"": ""bot_message"",
      ""text"": ""Lipsum"",
      ""ts"": ""1612623790.009600"",
      ""username"": ""Lipsum"",
      ""bot_id"": ""XXXX""
    }
  }
}

      - name: Send Slack Message Result
        run: echo ""${{ steps.send-message.outputs.slack-result }}""

name: slack-notification

on: [push, pull_request, issues]

jobs:
  slack-notifications:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made
    steps:
      - name: Send message to Slack API
        uses: archive/github-actions-slack@v2.0.0
        id: notify
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: CPPUV5KU0
          slack-text: Hello! Event ""${{ github.event_name }}"" in ""${{ github.repository }}"" \xf0\x9f\xa4\x93
      - name: Result from ""Send Message""
        run: echo ""The result was ${{ steps.notify.outputs.slack-result }}""

name: slack-notification-with-optional-parameters

on: [push, pull_request, issues]

jobs:
  slack-notification-with-optional-parameters:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made
    steps:
      - name: Send message to Slack API
        uses: archive/github-actions-slack@v2.0.0
        id: notify
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: CPPUV5KU0 #USE CHANNEL ID, NOT CHANNEL NAME, SINCE ID IS USED IN NEW SLACK API\'s
          slack-text: Hello! Something is burning! Or not...
          slack-optional-icon_emoji: "":fire:""
      - name: Result from ""Send Message""
        run: echo ""The result was ${{ steps.notify.outputs.slack-result }}""

name: slack-thread

on: [push, issues]

jobs:
  slack-thread:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made

    steps:
      - name: Send Slack Message
        uses: archive/github-actions-slack@master
        id: send-message

        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: CPPUV5KU0
          slack-text: This is a message

      - name: Send ""Slack Message"" Result
        run: echo ""Data - ${{ steps.send-message.outputs.slack-result }}""

      - name: Some step in between
        run: echo ""...""

      - name: Send Thread Message
        uses: archive/github-actions-slack@master
        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJson(steps.send-message.outputs.slack-result).response.channel }}
          slack-text: This is a thread reply
          slack-optional-thread_ts: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}

      - name: Send ""Send Thread Message"" Result
        run: echo ""Data - ${{ steps.send-message.outputs.slack-result }}""


name: slack-reaction

on: [push, issues]

jobs:
  slack-reaction:
    runs-on: ubuntu-20.04
    name: Sends a message to Slack when a push, a pull request or an issue is made

    steps:
      - name: Send Slack Message
        uses: archive/github-actions-slack@v2.0.0
        id: send-message

        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: CPPUV5KU0
          slack-text: Time to react...

      - name: Send Slack Message Result
        run: echo ""Data - ${{ steps.send-message.outputs.slack-result }}""

      - name: Some step in between
        run: echo ""...""

      - name: Send Slack Reaction To Message
        uses: archive/github-actions-slack@v2.0.0
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJson(steps.send-message.outputs.slack-result).response.channel }}
          slack-emoji-name: thumbsup
          slack-message-timestamp: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}

      - name: Send Slack Reaction To Message Result
        run: echo ""Data - ${{ steps.send-message.outputs.slack-result }}""

on: push

jobs:
  one:
    runs-on: ubuntu-20.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo ""$GITHUB_CONTEXT""
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo ""$JOB_CONTEXT""
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo ""$STEPS_CONTEXT""
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo ""$RUNNER_CONTEXT""
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo ""$STRATEGY_CONTEXT""
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo ""$MATRIX_CONTEXT""

env BOT_USER_OAUTH_ACCESS_TOKEN=<YOUR TOKEN> CHANNEL=<YOUR CHANNEL> node integration-test/end-to-end.js
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ammaraskar/sphinx-action,"name: ""Pull Request Docs Check""
on: 
- pull_request

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: ""docs/""

    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: docs/_build/html/

    - name: Commit documentation changes
      run: |
        git clone https://github.com/your_git/repository.git --branch gh-pages --single-branch gh-pages
        cp -r docs/_build/html/* gh-pages/
        cd gh-pages
        git config --local user.email ""action@github.com""
        git config --local user.name ""GitHub Action""
        git add .
        git commit -m ""Update documentation"" -a || true
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: ""docs/""
        build-command: ""sphinx-build -b html . _build""

    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: ""docs2/""
        pre-build-command: ""apt-get update -y && apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended""
        build-command: ""make latexpdf""
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
apple-actions/import-codesign-certs,"uses: apple-actions/import-codesign-certs@v2
with: 
  p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
  p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
",0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
jhenstridge/snapcraft-build-action,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: jhenstridge/snapcraft-build-action@v1

...
    - uses: jhenstridge/snapcraft-build-action@v1
      with:
        path: path-to-snapcraft-project

...
    - uses: jhenstridge/snapcraft-build-action@v1
      id: snapcraft
    - uses: actions/upload-artifact@v1
      with:
        name: snap
        path: ${{ steps.snapcraft.outputs.snap }}

    - run: |
        sudo snap install --dangerous ${{ steps.snapcraft.outputs.snap }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
snapcore/action-build,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: snapcore/action-build@v1

...
    - uses: snapcore/action-build@v1
      id: snapcraft
    - uses: actions/upload-artifact@v3
      with:
        name: snap
        path: ${{ steps.snapcraft.outputs.snap }}

    - run: |
        sudo snap install --dangerous ${{ steps.snapcraft.outputs.snap }}

...
    - uses: snapcore/action-build@v1
      with:
        path: path-to-snapcraft-project

...
    - uses: snapcore/action-build@v1
      with:
        ua-token: ${{ secrets.UA_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Roang-zero1/factorio-mod-luacheck,"on: push
name: Check & Release
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: lint
        uses: Roang-zero1/factorio-mod-luacheck@master
        with:
          luacheckrc_url: https://raw.githubusercontent.com/Nexela/Factorio-luacheckrc/0.17/.luacheckrc
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
bcomnes/cleanup-xvfb,"name: Example cleaning up xvfb

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: sudo apt-get install xvfb
    - name: npm install, build, and test
      run: |
        npm i
        xvfb-run --auto-servernum npm test
      env:
        CI: true
    - name: Cleanup xvfb pidx
      uses: bcomnes/cleanup-xvfb@v1
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dotnet/nbgv,"- uses: dotnet/nbgv@master
  id: nbgv
- run: echo \'SemVer2=${{ steps.nbgv.outputs.SemVer2 }}\'

- uses: dotnet/nbgv@master
  with:
    setAllVars: true
- run: echo ""NBGV_SemVer2 $NBGV_SemVer2""

- uses: dotnet/nbgv@master
  with:
    stamp: package.json

- uses: actions/checkout@v2
  with:
    fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
BryanSchuetz/jekyll-deploy-gh-pages,"name: Jekyll Deploy

on: [push]

jobs: 
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build & Deploy to GitHub Pages
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
        uses: BryanSchuetz/jekyll-deploy-gh-pages@master
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
meitar/jekyll-builder-for-github-pages-action,"- name: Build Jekyll site.
  uses: fabacab/jekyll-builder-for-github-pages-action@v1 # Or whatever ""@ref"" you want.

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    jekyll_build_opts: --future

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: |
      echo ""Packaged bundler version: $(bundle --version)""
      echo ""Updating bundler...""
      gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    secret_gh_pages_api_token: ${{ secrets.YOUR_SECRET_VARIABLE }}

---
name: Publish to GitHub Pages

on:
  push:
    branches:
      - jekyll

jobs:
  build-and-publish:
    runs-on: ubuntu-latest # This job uses a GitHub-hosted runner.

    steps:
      - uses: actions/checkout@v2

      - uses: fabacab/jekyll-builder-for-github-pages-action@master
        with:
          secret_gh_pages_api_token: ${{ secrets.GH_PAGES_TOKEN }}

on:
  schedule:
    - cron:  \'0 */12 * * *\' # Rebuild twice a day (every twelve hours on the hour).

  push:
    branches:
      - jekyll
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actions/delete-package-versions,"- uses: actions/delete-package-versions@v4
  with:
  package-version-ids:

  owner:

  package-name:

  package-type:

  num-old-versions-to-delete:

  min-versions-to-keep:

  ignore-versions:

  delete-only-pre-release-versions:

  delete-only-untagged-versions:

  token:

- uses: actions/delete-package-versions@v4
  with: 
    package-name: \'test-package\'
    package-type: \'npm\'
    min-versions-to-keep: 10
    delete-only-pre-release-versions: ""true""

- uses: actions/delete-package-versions@v4
  with: 
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.GITHUB_PAT }}
    min-versions-to-keep: 10
    delete-only-pre-release-versions: ""true""

- uses: actions/delete-package-versions@v4
  with: 
    package-name: \'test-package\'
    package-type: \'container\'
    min-versions-to-keep: 10
    delete-only-untagged-versions: \'true\'

- uses: actions/delete-package-versions@v4
  with: 
    package-name: \'test-package\'
    package-type: \'npm\'
    min-versions-to-keep: 3
    ignore-versions: \'^(0|[1-9]\\\\d*)\\\\.0\\\\.0$\'

- uses: actions/delete-package-versions@v4
  with: 
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.GITHUB_PAT }}
    min-versions-to-keep: 3
    ignore-versions: \'^(0|[1-9]\\\\d*)\\\\.0\\\\.0$\'

- uses: actions/delete-package-versions@v4
  with: 
    package-name: \'test-package\'
    package-type: \'npm\'
    num-old-versions-to-delete: 3
    ignore-versions: \'^(0|[1-9]\\\\d*)\\\\.0\\\\.0$\'

- uses: actions/delete-package-versions@v4
  with: 
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.PAT }}
    num-old-versions-to-delete: 3
    ignore-versions: \'^(0|[1-9]\\\\d*)\\\\.0\\\\.0$\'

- uses: actions/delete-package-versions@v4
  with:
    package-name: \'test-package\'
    package-type: \'npm\'
    min-versions-to-keep: 2

- uses: actions/delete-package-versions@v4
  with:
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.PAT }}
    min-versions-to-keep: 2

- uses: actions/delete-package-versions@v4
  with:
    package-name: \'test-package\'
    package-type: \'npm\'
    num-old-versions-to-delete: 3

- uses: actions/delete-package-versions@v4
  with:
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    num-old-versions-to-delete: 3
    token: ${{ secrets.GITHUB_PAT }}

- uses: actions/delete-package-versions@v4
  with:
    package-name: \'test-package\'
    package-type: \'npm\'

- uses: actions/delete-package-versions@v4
  with:
    owner: \'github\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.PAT }}

- uses: actions/delete-package-versions@v4
  with:
    package-version-ids: \'MDE0OlBhY2thZ2VWZXJzaW9uOTcyMDY3\'
    package-name: \'test-package\'
    package-type: \'npm\'

- uses: actions/delete-package-versions@v4
  with:
    package-version-ids: \'MDE0OlBhY2thZ2VWZXJzaW9uOTcyMDY3\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.PAT }}

- uses: actions/delete-package-versions@v4
  with:
    package-version-ids: \'MDE0OlBhY2thZ2VWZXJzaW9uOTcyMDY3, MDE0OlBhY2thZ2VWZXJzaW9uOTcyMzQ5, MDE0OlBhY2thZ2VWZXJzaW9uOTcyMzUw\'
    package-name: \'test-package\'
    package-type: \'npm\'

- uses: actions/delete-package-versions@v4
  with:
    package-version-ids: \'MDE0OlBhY2thZ2VWZXJzaW9uOTcyMDY3, MDE0OlBhY2thZ2VWZXJzaW9uOTcyMzQ5, MDE0OlBhY2thZ2VWZXJzaW9uOTcyMzUw\'
    package-name: \'test-package\'
    package-type: \'npm\'
    token: ${{ secrets.PAT }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
janbernloehr/github-setup-catkin,"runs-on: [ubuntu-18.04]
steps:
- uses: actions/checkout@v1
- uses: betwo/github-setup-catkin@v1.1.1
  with:
    ros-version: \'melodic\'
    workspace: \'$GITHUB_WORKSPACE\'
- run: catkin_make_isolated

runs-on: [ubuntu-18.04]
steps:
- uses: actions/checkout@v1
  with:
    path: wworkspace/src/my_package
- uses: betwo/github-setup-catkin@v1.1.1
  with:
    ros-version: \'melodic\'
    workspace: \'$GITHUB_WORKSPACE\'
- name: clone_dependencies
  run: |
    cd ..
    git clone https://github.com/betwo/csapex
- uses: betwo/github-setup-catkin@v1.1.1
  with:
    ros-version: \'kinetic\'
    workspace: $HOME/work/my-repo-name/workspace
- name: build
  run: |
    cd $HOME/work/my-repo-name/workspace
    catkin_make_isolated

runs-on: [ubuntu-18.04]
strategy:
  matrix:
    compiler: [""/usr/bin/g++"", ""/usr/bin/clang++""]
steps:
- uses: actions/checkout@v1
- uses: betwo/github-setup-catkin@v1.1.1
  with:
    ros-version: \'melodic\'
    workspace: \'$GITHUB_WORKSPACE\'
- run: catkin_make_isolated -DCMAKE_C_COMPILER=${{ matrix.compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
rojopolis/envkey-action,"on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Configure Environment
      env:
        ENVKEY: ${{ secrets.ENVKEY }}
      uses: rojopolis/envkey-action@master
    - name: Show environment
      run: env
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
hole19/git-tag-action,"uses: hole19/git-tag-action@master
env:
  TAG: v1.2.3
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
olafurpg/setup-scala,"+++ .github/workflows/ci.yml
  name: CI
  on:
    push:
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v1
+     - uses: olafurpg/setup-scala@v11
      - name: Compile
        run: sbt compile

+++ .github/workflows/ci.yml
  name: CI
  on:
    push:
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v11
+       with:
+         java-version: adopt@1.11
      - name: Compile
        run: sbt compile

+++ .github/workflows/ci.yml
  name: CI
  on: [push]
  jobs:
    build:
      runs-on: ubuntu-latest
+     strategy:
+       fail-fast: false
      steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v11
      - name: Compile
        run: sbt compile

+++ .github/workflows/ci.yml
  name: CI
  on: [push]
  jobs:
    build:
-     runs-on: ubuntu-latest
+     runs-on: windows-latest
      steps:
+     - name: Configure git
+       run: ""git config --global core.autocrlf false""
+       shell: bash
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v11
      - name: Compile
+       shell: bash
        run: sbt compile

+++ .github/workflows/ci.yml
  name: CI
  on: [push]
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
-     - uses: actions/checkout@v1
+     - uses: actions/checkout@v2
+       with:
+         fetch-depth: 100
+     - name: Fetch tags
+       run: git fetch --depth=100 origin +refs/tags/*:refs/tags/*
      - uses: olafurpg/setup-scala@v11
      - name: Compile
        run: sbt compile
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
reviewdog/action-eslint,"$ npm install eslint -D

name: reviewdog
on: [pull_request]
jobs:
  eslint:
    name: runner / eslint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review # Change reporter.
          eslint_flags: ""src/""

name: reviewdog
on: [pull_request]
jobs:
  eslint:
    name: runner / eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ""20""
      - run: yarn install
      - uses: reviewdog/action-eslint@v1
        with:
          reporter: github-check
          eslint_flags: ""src/""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
reviewdog/action-yamllint,"name: reviewdog
on: [pull_request]
jobs:
  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Change reporter.
          yamllint_flags: 'src/'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
github/ossar-action,"steps:
- uses: actions/checkout@v2
- name: Run OSSAR
  uses: github/ossar-action@v1
  id: ossar
- name: Upload results to Security tab
  uses: github/codeql-action/upload-sarif@v1
  with:
    sarif_file: ${{ steps.ossar.outputs.sarifFile }}

- uses: actions/setup-dotnet@v1
  with:

- name: Upload results to Security tab
  uses: github/codeql-action/upload-sarif@v1
  with:
    sarif_file: ${{ steps.ossar.outputs.sarifFile }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Azure/docker-login,"- uses: azure/docker-login@v1\r
  with:\r
    login-server: '<login server>' # default: index.docker.io\r
    username: '<username>'\r
    password: '<password>'\r

- uses: azure/docker-login@v1\r
  with:\r
    login-server: contoso.azurecr.io\r
    username: ${{ secrets.ACR_USERNAME }}\r
    password: ${{ secrets.ACR_PASSWORD }}\r
- uses: azure/docker-login@v1\r
  with:\r
    login-server: index.docker.io\r
    username: ${{ secrets.DOCKERIO_USERNAME }}\r
    password: ${{ secrets.DOCKERIO_PASSWORD }}\r
- run: |\r
    docker pull contoso.azurecr.io/private/image:latest\r
    docker pull private/image:latest\r

- uses: azure/docker-login@v1\r
  with:\r
    login-server: contoso.azurecr.io\r
    username: ${{ secrets.REGISTRY_USERNAME }}\r
    password: ${{ secrets.REGISTRY_PASSWORD }}\r
\r
- run: |\r
    docker build . -t contoso.azurecr.io/k8sdemo:${{ github.sha }}\r
    docker push contoso.azurecr.io/k8sdemo:${{ github.sha }}\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
niden/actions-memcached,"steps:
- uses: niden/actions-memcached@v7
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
enriikke/gatsby-gh-pages-action,"name: Gatsby Publish

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: enriikke/gatsby-gh-pages-action@v2
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}

module.exports = {
  pathPrefix: ""/reponame"",
}

name: Gatsby Publish

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: enriikke/gatsby-gh-pages-action@v2
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}
          deploy-branch: gh-pages
          gatsby-args: --prefix-paths

name: Gatsby Publish

on:
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: enriikke/gatsby-gh-pages-action@v2
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}
          deploy-branch: gh-pages
          gatsby-args: --prefix-paths
          skip-publish: true

imenrique.com
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jpetrucciani/mypy-check,"uses: jpetrucciani/mypy-check@master

uses: jpetrucciani/mypy-check@master
with:
  path: \'.\'


uses: jpetrucciani/mypy-check@master
with:
  mypy_flags: \'--config-file .mypy.ini\'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
clupprich/ruby-build-action,"name: Example install of Ruby 2.6.5

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: clupprich/ruby-build-action@master
      id: ruby
      with:
        ruby-version: 2.6.5
    - name: Print version
      run: ${{ steps.ruby.outputs.ruby-path }} --version

name: Example install of Ruby 2.6.5 (cached)

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@preview
      id: cache
      with:
        path: ~/local/rubies
        key: ruby-2.6.5
    - uses: clupprich/ruby-build-action@master
      id: ruby
      with:
        ruby-version: 2.6.5
        cache-available: ${{ steps.cache.outputs.cache-hit == \'true\' }}
    - name: Print version
      run: ${{ steps.ruby.outputs.ruby-path }} --version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
linz/linz-software-repository,"- name: Build package
  uses: linz/linz-software-repository@vN
  with:
    release: jammy
    packages: \'cowsay python3\'
    packagecloud_repository: dev
    packagecloud_token: ${{ secrets.PACKAGECLOUD_TOKEN }}

- name: Authorize pushing to remote
  run:
    git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN
    }}@github.com/${GITHUB_REPOSITORY}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ibiqlik/action-yamllint,"- uses: ibiqlik/action-yamllint@v3

---
name: Yaml Lint
on: [push]  # yamllint disable-line rule:truthy
jobs:
  lintAllTheThings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: myfolder/*values*.yaml
          config_file: .yamllint.yml

---
name: Yaml Lint
on: [push]  # yamllint disable-line rule:truthy
jobs:
  lintAllTheThings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3

config_data: ""{extends: default, rules: {new-line-at-end-of-file: disable}}""

config_data: |
  extends: default
  rules:
    new-line-at-end-of-file:
      level: warning
    trailing-spaces:
      level: warning

---
name: Yaml Lint
on: [push]  # yamllint disable-line rule:truthy
jobs:
  lintAllTheThings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: yaml-lint
        uses: ibiqlik/action-yamllint@v3

      - run: echo ${{ steps.yaml-lint.outputs.logfile }}

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: yamllint-logfile
          path: ${{ steps.yaml-lint.outputs.logfile }}
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gr2m/create-or-update-pull-request-action,"name: Nightly update
on:
  schedule:
    - cron: ""0 0 * * *""

jobs:
  update_routes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - run: ""date > datetime.txt"" # create or update a test.txt file
      - uses: gr2m/create-or-update-pull-request-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: gr2m/create-or-update-pull-request-action@v1
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  title: ""My pull request title""
  body: ""My pull request body""
  branch: ""my-pull-request-base-branch""
  path: ""lib/""
  commit-message: ""My commit message for uncommitted changes in lib/ folder""
  author: ""Lorem J. Ipsum <lorem@example.com>""
  labels: label1, label2
  assignees: user1, user2
  reviewers: user1, user2
  team_reviewers: team1, team2
  auto-merge: squash
  update-pull-request-title-and-body: false

- uses: gr2m/create-or-update-pull-request-action@v1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  with:
    title: ""My pull request title""
    body: ""My pull request body""
    branch: ""my-pull-request-base-branch""
    author: ""Lorem J. Ipsum <lorem@example.com>""
    path: ""cache/""
    commit-message: ""build: cache""
- uses: gr2m/create-or-update-pull-request-action@v1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  with:
    branch: ""my-pull-request-base-branch""
    author: ""Lorem J. Ipsum <lorem@example.com>""
    path: ""data/""
    commit-message: ""feat: data updated""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
the-coding-owl/action-typo3-extension-repository-upload,"uses: the-coding-owl/action-typo3-extension-repository-upload@0.0.1
  env: 
    SECRET_USERNAME: ${{ secrets.USERNAME }}
    SECRET_PASSWORD: ${{ secrets.PASSWORD }}
    EXTENSION_KEY: 'github_actions_test'
    UPLOAD_MESSAGE: ${{ github.event.release.body }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
geekyeggo/delete-artifact,"steps:
    - uses: actions/checkout@v2

    - run: echo hello > world.txt

    - uses: actions/upload-artifact@v2
      with:
          name: my-artifact
          path: world.txt

    - uses: geekyeggo/delete-artifact@v2
      with:
          name: my-artifact

steps:
    - uses: geekyeggo/delete-artifact@v2
      with:
          name: |
              artifact-*
              binary-file
              output

steps:
    - uses: geekyeggo/delete-artifact@v2
      with:
          name: okay-to-keep
          failOnError: false
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
codespell-project/actions-codespell,"uses: codespell-project/actions-codespell@v1

uses: codespell-project/actions-codespell@v1
with:
  check_filenames: true

uses: codespell-project/actions-codespell@v1
with:
  check_hidden: true

uses: codespell-project/actions-codespell@v1
with:
  exclude_file: src/foo

uses: codespell-project/actions-codespell@v1
with:
  skip: foo,bar

uses: codespell-project/actions-codespell@v1
with:
  builtin: clear,rare

uses: codespell-project/actions-codespell@v1
with:
  ignore_words_file: .codespellignore

uses: codespell-project/actions-codespell@v1
with:
  ignore_words_list: abandonned,ackward

uses: codespell-project/actions-codespell@v1
with:
  uri_ignore_words_list: abandonned

uses: codespell-project/actions-codespell@v1
with:
  path: src

uses: codespell-project/actions-codespell@v1
with:
  only_warn: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
TrueBrain/actions-flake8,"steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2

steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v3
  with:
    python-version: 3.9
- uses: TrueBrain/actions-flake8@v2
  with:
    path: src

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    flake8_version: 3.8.0

steps:
- uses: actions/checkout@v3
- run: pip install flake8==3.8.0
- uses: TrueBrain/actions-flake8@v2

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    path: src

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    ignore: E4,W

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    max_line_length: 90

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    only_warn: 1

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    plugins: flake8-bugbear cohesion==0.9.1

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    error_classes: E,H

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    warning_classes: W,B,D

steps:
- uses: actions/checkout@v3
- uses: TrueBrain/actions-flake8@v2
  with:
    extra_arguments: ""--hang-closing""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
codespell-project/sort-problem-matcher,"    - uses: codespell-project/sort-problem-matcher@v1
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gerbal/always-cache,"name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: Cache Primes
      id: cache-primes
      uses: actions/cache@v1
      with:
        path: prime-numbers
        key: ${{ runner.os }}-primes

    - name: Generate Prime Numbers
      if: steps.cache-primes.outputs.cache-hit != \'true\'
      run: /generate-primes.sh -d prime-numbers
    
    - name: Use Prime Numbers
      run: /primes.sh -d prime-numbers

steps:
  - uses: actions/checkout@v1

  - uses: actions/cache@v1
    id: cache
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}
  
  - name: Install Dependencies
    if: steps.cache.outputs.cache-hit != \'true\'
    run: /install.sh
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
pascalgn/automerge-action,"name: automerge
on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}
jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - id: automerge
        name: automerge
        uses: ""pascalgn/automerge-action@v0.15.6""
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          MERGE_LABELS: ""automerge,!work in progress""
          MERGE_REMOVE_LABELS: ""automerge""
          MERGE_METHOD: ""squash""
          MERGE_COMMIT_MESSAGE: ""pull-request-description""
          MERGE_FORKS: ""false""
          MERGE_RETRIES: ""6""
          MERGE_RETRY_SLEEP: ""10000""
          MERGE_REQUIRED_APPROVALS: ""0""
          UPDATE_LABELS: """"
          UPDATE_METHOD: ""rebase""
          PULL_REQUEST: ""1234""

    steps:
      - id: automerge
        name: automerge
        uses: ""pascalgn/automerge-action@v0.15.6""
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
      - name: feedback
        if: steps.automerge.outputs.mergeResult == ""merged""
        run: |
          echo ""Pull request ${{ steps.automerge.outputs.pullRequestNumber }} merged!""

      - name: automerge
        uses: pascalgn/automerge-action@...
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          LOG: ""TRACE""  # or ""DEBUG""

GITHUB_TOKEN=""123abc...""
URL=""https://github.com/pascalgn/repository-name/pull/123""
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
MSP-Greg/actions-ruby,"jobs:\r
  ci:\r
    name: >-\r
      Ruby: ${{ matrix.ruby }}  OS: ${{ matrix.os }}\r
    runs-on: ${{ matrix.os }}\r
    strategy:\r
      fail-fast: false\r
      matrix:\r
        os: [ 'ubuntu-18.04', 'macos', 'windows-latest' ]\r
        ruby: [ '2.3.x', '2.4.x', '2.5.x', '2.6.x' ]\r
    steps:\r
      - name: repo checkout\r
        uses: actions/checkout@v1\r
        with:\r
          fetch-depth: 10\r
      - name: Setup Ruby, update MSYS2\r
        uses: MSP-Greg/actions-ruby@master\r
        with:\r
          ruby-version: ${{ matrix.ruby }}\r
          base: update\r
          mingw: openssl\r

runs-on: 'windows-latest'\r
strategy:\r
  matrix:\r
    ruby: [ '2.4.x', '2.5.x', '2.6.x', '9.9.x' ]\r
steps:\r
- name: Install Ruby, update MSYS2\r
  uses: MSP-Greg/actions-ruby@master\r
  with:\r
    ruby-version: ${{ matrix.ruby }}\r
    base: update\r
    mingw: openssl ragel\r

runs-on: 'windows-latest'\r
strategy:\r
  matrix:\r
    ruby: [ '2.4.x', '2.5.x', '2.6.x', '9.9.x' ]\r
steps:\r
- name: Install Ruby\r
  uses: MSP-Greg/actions-ruby@master\r
  with:\r
    ruby-version: ${{ matrix.ruby }}\r

actions-ruby     default\r
Ruby 2.3.3       not available\r
Ruby 2.4.9        2.4.6\r
Ruby 2.5.7        2.5.5\r
Ruby 2.6.5        2.6.3\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pascalgn/npm-publish-action,"name: npm-publish
on:
  push:
    branches:
      - main # Change this to your default branch
jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Publish if version has been updated
      uses: pascalgn/npm-publish-action@1.3.9
      with: # All of theses inputs are optional
        tag_name: ""v%s""
        tag_message: ""v%s""
        create_tag: ""true""
        commit_pattern: ""^Release (\\\\S+)""
        workspace: "".""
        publish_command: ""yarn""
        publish_args: ""--non-interactive""
      env: # More info about the environment variables in the README
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this as is, it\'s automatically generated
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }} # You need to set this in your repo settings
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
excitedleigh/setup-nox,"steps:
  - uses: actions/checkout@v2
  - uses: excitedleigh/setup-nox@v2.0.0
  - run: nox
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
JimCronqvist/action-ssh,"- name: Execute SSH commmands on remote server
  uses: JimCronqvist/action-ssh@master
  with:
    hosts: \'user@domain.com\'
    privateKey: ${{ secrets.PRIVATE_KEY }}
    command: ls -lah

- name: Execute SSH commmands on remote server
  uses: JimCronqvist/action-ssh@master
  env:
    NAME: ""Root""
  with:
    hosts: \'user@domain.com user@domain2.com:2222\'
    privateKey: ${{ secrets.PRIVATE_KEY }}
    debug: false
    command: |
      ls -lah
      echo ""I am $NAME""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
cachix/install-nix-action,"name: ""Test""
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-build

name: ""Test""
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v22
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - run: nix build
    - run: nix flake check

- name: Print nixpkgs version
  run: nix-instantiate --eval -E \'(import <nixpkgs> {}).lib.version\'

- uses: cachix/install-nix-action@vXX
  with:
    extra_nix_config: ""system-features = nixos-test benchmark big-parallel kvm""

nix-env -i mypackage -f \'<nixpkgs>\'

- uses: cachix/cachix-action@vXX
   with:
     name: mycache
     authToken: \'${{ secrets.CACHIX_AUTH_TOKEN }}\'
     extraPullNames: nix-community

- uses: cachix/install-nix-action@v22
  with:
    extra_nix_config: |
      trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      substituters = https://hydra.iohk.io https://cache.nixos.org/

- name: Run a command with nix develop
  run: nix develop --ignore-environment --keep MY_ENV_VAR --command echo $MY_ENV_VAR
  env:
    MY_ENV_VAR: ""hello world""

nix develop --impure
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
cachix/cachix-action,"$ yarn install

$ yarn build

$ yarn test
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
manimaul/android-builder-action,"name: Android CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Build with Gradle
        uses: manimaul/android-builder-action@v2
        with:
          entrypoint: /github/workspace/gradlew
          args: --no-daemon build

cd /path/to/your/android/project
docker run -v $(pwd):/build \\
            -w /build \\
            --entrypoint /build/gradlew \\
            manimaul/android-sdk:latest \\
            --no-daemon build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
manusa/actions-publish-docker,"steps:
  - name: Checkout
    uses: actions/checkout@v1
  - run: commandToBuildYourProject.sh
  - name: Dockerize
    if: success()
    uses: manusa/actions-publish-docker@v1.1.2
    with:
      name: organization/image_name
      username: ${{ secrets.DOCKER_HUB_USER }}
      password: ${{ secrets.DOCKER_HUB_PASSWORD }}

steps:
  - name: Checkout
    uses: actions/checkout@v1
  - run: commandToBuildYourProject.sh
  - name: Dockerize
    if: success()
    uses: manusa/actions-publish-docker@v1.1.2
    with:
      name: organization/image_name
      username: ${{ secrets.DOCKER_HUB_USER }}
      password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      tag script: |
        return context.ref
          .replace(\'refs/heads/
          .replace(\'refs/tags/\'
          .replace(\'refs/pull/\'
          .replace(/\\//g, \'_\')
          .replace(/#/g, \'\');
      registry: localhost:5000
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
sbrunner/backport-action,"name: Backport

on:
  pull_request:
    types:
      - closed
      - labeled

jobs:
  backport:
    runs-on: ubuntu-latest
    name: Backport closed pull request
    steps:
      - uses: sbrunner/backport-action@v2.0.0
        with:
          token: ${{ secrets.BACKPORT_GITHUB_TOKEN }}

if: ""!startsWith(github.event.head_commit.message, \'[skip ci] \')""

pip install pre-commit
pre-commit install --allow-missing-config
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
camptocamp/backport-action,"name: Backport

on:
  pull_request:
    types:
      - closed
      - labeled

jobs:
  backport:
    runs-on: ubuntu-latest
    name: Backport closed pull request
    steps:
      - uses: sbrunner/backport-action@v2.0.0
        with:
          token: ${{ secrets.BACKPORT_GITHUB_TOKEN }}

if: ""!startsWith(github.event.head_commit.message, \'[skip ci] \')""

pip install pre-commit
pre-commit install --allow-missing-config
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
camptocamp/initialise-gopass-summon-action,"pip install pre-commit
pre-commit install --allow-missing-config
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ridedott/dependabot-auto-merge-action,"name: Merge me!

on:
  workflow_run:
    types:
      - completed
    workflows:
      - 'Continuous Integration'

jobs:
  merge-me:
    name: Merge me!
    runs-on: ubuntu-latest
    steps:
      - # It is often a desired behavior to merge only when a workflow execution
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Merge me!

on:
  check_suite:
    types:
      - completed

jobs:
  merge-me:
    name: Merge me!
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Continuous Integration

on:
  pull_request_target:
    branches:
      - master
    types:
      - opened
      - synchronize
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
      - # This allows private dependencies from GitHub Packages to be installed.
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress
      - name: Test
        run: npm run test
  merge-me:
    name: Merge me!
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 5

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: my-awesome-bot-r2d2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: dependabot-preview
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_GITHUB_API_PREVIEW: true

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: MERGE

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRESET: DEPENDABOT_PATCH

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          MAXIMUM_RETRIES: 2

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLED_FOR_MANUAL_CHANGES: 'true'

git clone git@github.com:ridedott/merge-me-action.git

cd merge-me-action
npm install

npm run test
npm run test:watch
npm run test:coverage

npm run format
npm run format:fix

npm run lint
npm run lint:fix
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
arma-actions/sqflint,"name: CI

on:
  push:
    branches:
      - master
  pull_request: ~

jobs:
  test-sqflint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: arma-actions/sqflint@v1.0
        name: Validate with SQFLint

jobs:
  test-sqflint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: arma-actions/sqflint@v1.0
        name: Validate with SQFLint with custom arguments
        with:
          args: --exit w --directory Missionframework
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
homoluctus/slatify,"- name: Slack Notification
  uses: lazy-actions/slatify@master
  if: always()
  with:
    type: ${{ job.status }}
    job_name: \'*Test*\'
    channel: \'#random\'
    url: ${{ secrets.SLACK_WEBHOOK }}

- name: Slack Notification
  uses: lazy-actions/slatify@master
  if: always()
  with:
    type: ${{ job.status }}
    job_name: \'*Lint Check*\'
    mention: \'here\'
    mention_if: \'failure\'
    channel: \'#random\'
    url: ${{ secrets.SLACK_WEBHOOK }}
    commit: true
    token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
leafo/gh-actions-luarocks,"- uses: leafo/gh-actions-lua@v9
- uses: leafo/gh-actions-luarocks@v4

- name: install a module
  run: luarocks install moonscript

- uses: leafo/gh-actions-luarocks@v4
  with:
    luarocksVersion: ""3.1.3""

- uses: leafo/gh-actions-luarocks@v4
  with:
    withLuaPath: ""/usr/local/openresty/luajit/""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
s-weigand/setup-conda,"steps:
  - uses: actions/checkout@v3
  - uses: s-weigand/setup-conda@v1
  - run: conda --version
  - run: which python

steps:
  - uses: actions/checkout@v3
  - name: Set up Python 3.8
    uses: actions/setup-python@v4
    with:
      python-version: 3.8
  - uses: s-weigand/setup-conda@v1
    with:
      activate-conda: false
  - run: conda --version
  - run: which python

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]
    name: Python ${{ matrix.python-version }} example
    steps:
      - uses: actions/checkout@v3
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
      - run: conda --version
      - run: which python
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
csexton/release-asset-action,"name: Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: macOS-10.14
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: make
    - name: Upload asset to release
      uses: csexton/release-asset-action@v2
      with:
        file: my-release.zip
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - run: false

name: Build and relase

on:
 push:
   tags:
     - \'v*\'

jobs:
 build:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v1
   - name: Create Release
     id: create_release
     uses: actions/create-release@v1
     env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     with:
       tag_name: ${{ github.ref }}
       release_name: Release ${{ github.ref }}
       body: Auto generated release
       draft: true
       prerelease: false
   - name: Build
     run: make
   - name: Upload Assets to Release with a wildcard
     uses: csexton/release-asset-action@v2
     with:
       pattern: ""build/*""
       github-token: ${{ secrets.GITHUB_TOKEN }}
       release-url: ${{ steps.create_release.outputs.upload_url }}

    - name: Upload asset to release
      uses: csexton/release-asset-action@v2
      with:
        file: my-release.zip
        github-token: ${{ secrets.GITHUB_TOKEN }}

- name: Upload multiple assets to release
  uses: csexton/release-asset-action@v2
  with:
    files: |
      first.zip
      second.zip
      third.tar.gz
    github-token: ${{ secrets.GITHUB_TOKEN }}

- name: Upload Assets to Release with a wildcard
  uses: csexton/release-asset-action@v2
  with:
    pattern: ""build/*.zip""
    github-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
potiuk/cancel-workflow-runs,"  cancel-multiple-workflow-runs:
    name: ""Cancel the self CI workflow run""
    runs-on: ubuntu-latest
    steps:
      - name: ""Cancel workflow 1""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: allDuplicates
          cancelFutureDuplicates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          workflowFileName: workflow_1.yml
      - name: ""Cancel workflow 2""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: allDuplicates
          cancelFutureDuplicates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          workflowFileName: workflow_2.yml

name: Cancelling Duplicates
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  cancel-duplicate-workflow-runs:
    name: ""Cancel duplicate workflow runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel duplicate workflow runs""
        with:
          cancelMode: allDuplicates
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  cancel-duplicate-workflow-runs:
    name: ""Cancel duplicate workflow runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel duplicate workflow runs""
        with:
          cancelMode: duplicates
          cancelFutureDuplicates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}
          notifyPRCancel: true
          skipEventTypes: \'[""push"", ""schedule""]\'

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  cancel-duplicate-ci-runs:
    name: ""Cancel duplicate CI runs""
    runs-on: ubuntu-latest
    outputs:
      sourceHeadRepo: ${{ steps.cancel.outputs.sourceHeadRepo }}
      sourceHeadBranch: ${{ steps.cancel.outputs.sourceHeadBranch }}
      sourceHeadSha: ${{ steps.cancel.outputs.sourceHeadSha }}
      sourceEvent: ${{ steps.cancel.outputs.sourceEvent }}
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        id: cancel
        name: ""Cancel duplicate CI runs""
        with:
          cancelMode: duplicates
          cancelFutureDuplicates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          notifyPRCancel: true
          notifyPRMessageStart: |
            Note! The Docker Images for the build are prepared in a separate workflow,
            that you will not see in the list of checks.

            You can checks the status of those images in:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel duplicate Cancelling runs""
        with:
          cancelMode: namedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          notifyPRCancel: true
          jobNameRegexps: >
            [""Build info
            repo: ${{ steps.cancel.outputs.sourceHeadRepo }}
            branch: ${{ steps.cancel.outputs.sourceHeadBranch }}.*""]

  build-info:
    name: >
      Build info
      repo: ${{ needs.cancel-workflow-runs.outputs.sourceHeadRepo }}
      branch: ${{ needs.cancel-workflow-runs.outputs.sourceHeadBranch }}
    runs-on: ubuntu-latest
    needs: [cancel-duplicate-ci-runs]
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: >
          [${{ needs.cancel-workflow-runs.outputs.sourceEvent }}] will checkout
          Run id: ${{ github.run_id }}
          Source Run id: ${{ github.event.workflow_run.id }}
          Sha: ${{ needs.cancel-workflow-runs.outputs.sourceHeadSha }}
          Repo: ${{ needs.cancel-workflow-runs.outputs.sourceHeadRepo }}
          Branch: ${{ needs.cancel-workflow-runs.outputs.sourceHeadBranch }}
        run: |
          printenv

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

  cancel-self-source-workflow-run:
    name: ""Cancel the self CI workflow run""
    runs-on: ubuntu-latest
    steps:
      - name: ""Cancel the self CI workflow run""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: self
          notifyPRCancel: true
          notifyPRCancelMessage: Cancelled because image building failed.
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

  cancel-self-cancelling-run:
    name: ""Cancel the self Canceling workflow run""
    runs-on: ubuntu-latest
    steps:
      - name: ""Cancel the self Cancelling workflow run""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: self
          notifyPRCancel: true
          token: ${{ secrets.GITHUB_TOKEN }}


name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  fail-fast-triggered-workflow-named-jobs-runs:
    name: ""Fail fast CI runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Fail fast CI runs""
        with:
          cancelMode: failedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}
          notifyPRCancel: true
          jobNameRegexps: \'[""^Static checks$"", ""^Build docs$"", ""^Build prod image.*""]\'

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  fail-fast-triggered-workflow-named-jobs-runs:
    name: ""Fail fast CI runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Fail fast CI. Source run: ${{ github.event.workflow_run.id }}""
        id: cancel-failed
        with:
          cancelMode: failedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}
          notifyPRCancel: true
          jobNameRegexps: \'[""^Static checks$"", ""^Build docs$"", ""^Build prod image.*""]\'
      - name: ""Extract canceled failed runs""
        id: extract-cancelled-failed-runs
        if: steps.cancel-failed.outputs.cancelledRuns != \'[]\'
        run: |
            REGEXP=""Fail fast CI. Source run: ""
            SEPARATOR=""""
            for run_id in $(echo ""${{ steps.cancel-failed.outputs.cancelledRuns }}"" | jq \'.[]\')
            do
                REGEXP=""${REGEXP}${SEPARATOR}(${run_id})""
                SEPARATOR=""|""
            done
            echo ""::set-output name=matching-regexp::${REGEXP}""
      - name: ""Cancel triggered \'Cancelling\' runs for the cancelled failed runs""
        if: steps.cancel-failed.outputs.cancelledRuns != \'[]\'
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: namedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          notifyPRCancel: true
          jobNameRegexps: ${{ steps.extract-cancelled-failed.runs.matching-regexp }}


name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  fail-fast-triggered-workflow-named-jobs-runs:
    name: ""Fail fast Canceling runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Fail fast Canceling runs""
        with:
          cancelMode: failedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          jobNameRegexps: \'[""^Static checks$"", ""^Build docs$"", ""^Build prod image.*""]\'

name: Cancelling
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

  cancel-other-workflow-run:
    name: ""Cancel the self CI workflow run""
    runs-on: ubuntu-latest
    steps:
      - name: ""Cancel the self CI workflow run""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: duplicates
          cancelFutureDuplicates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          workflowFileName: other_workflow.yml

on:
  push:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  cancel-self-failed-runs:
    name: ""Cancel the self workflow run""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel past CI runs""
        with:
          cancelMode: allDuplicatedNamedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          jobNameRegexps: \'[""Branch: .* Repo: .* Event: .* ""]\'
          selfPreservation: false
          notifyPRCancel: true


name: CI
on: push
jobs:
  cancel-duplicate-workflow-runs:
    name: ""Cancel duplicate workflow runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel duplicate workflow runs""
        with:
          cancelMode: duplicates
          cancelFutureDuplicates: true
          notifyPRCancel: true

name: CI
on: push
jobs:
  cancel-self-run:
    name: ""Cancel the self workflow run""
    runs-on: ubuntu-latest
    steps:
      - name: ""Cancel the self workflow run""
        uses: potiuk/cancel-workflow-runs@master
        with:
          cancelMode: self
          token: ${{ secrets.GITHUB_TOKEN }}
          notifyPRCancel: true

name: CI
on:
  push:

jobs:
  cancel-self-failed-runs:
    name: ""Cancel failed runs""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel failed runs""
        with:
          cancelMode: failedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          jobNameRegexps: \'[""^Static checks$"", ""^Build docs$"", ""^Build prod image.*""]\'
          notifyPRCancel: true

on:
  push:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  cancel-self-failed-runs:
    name: ""Cancel the self workflow run""
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: ""Cancel past CI runs""
        with:
          cancelMode: namedJobs
          token: ${{ secrets.GITHUB_TOKEN }}
          jobNameRegexps: \'[""^Static checks$"", ""^Build docs$"", ""^Build prod image.*""]\'
          notifyPRCancel: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
andymckay/cancel-action,"    - name: cancelling
      uses: andymckay/cancel-action@0.3
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
engineerd/setup-kind,"name: ""Create cluster using KinD""
on: [pull_request, push]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: engineerd/setup-kind@v0.5.0
      - name: Testing
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo ""current-context:"" $(kubectl config current-context)
          echo ""environment-kubeconfig:"" ${KUBECONFIG}

name: ""Create cluster using KinD""
on: [pull_request, push]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: ""v0.11.1""
      - name: Testing
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo ""current-context:"" $(kubectl config current-context)
          echo ""environment-kubeconfig:"" ${KUBECONFIG}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
repo-sync/github-sync,"
on:
  schedule:
  - cron:  ""*/15 * * * *""
  workflow_dispatch:

jobs:
  repo-sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: repo-sync
      uses: repo-sync/github-sync@v2
      with:
        source_repo: """"
        source_branch: """"
        destination_branch: """"
        github_token: ${{ secrets.PAT }}

with:
  sync_tags: ""true""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
tim-actions/get-pr-commits,"name: Sanity check
on: [pull_request]

jobs:
  commits_check_job:
    runs-on: ubuntu-latest
    name: Commits Check
    steps:
    - name: Get PR Commits
      id: 'get-pr-commits'
      uses: tim-actions/get-pr-commits@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
tim-actions/dco,"name: Sanity check
on: [pull_request]

jobs:
  commits_check_job:
    runs-on: ubuntu-latest
    name: Commits Check
    steps:
    - name: Get PR Commits
      id: 'get-pr-commits'
      uses: tim-actions/get-pr-commits@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: DCO Check
      uses: tim-actions/dco@master
      with:
        commits: ${{ steps.get-pr-commits.outputs.commits }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jidicula/clang-format-action,"name: clang-format Check
on: [push, pull_request]
jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: \'13\'
        check-path: \'src\'
        fallback-style: \'Mozilla\' # optional

name: clang-format Check
on: [push, pull_request]
jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - \'src\'
          - \'examples\'
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: \'13\'
        check-path: ${{ matrix.path }}
        fallback-style: \'Mozilla\' # optional

name: clang-format Check
on: [push, pull_request]
jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - check: \'src\'
            exclude: \'(hello|world)\' # Exclude file paths containing ""hello"" or ""world""
          - check: \'examples\'
            exclude: \'\'              # Nothing to exclude
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: \'13\'
        check-path: ${{ matrix.path[\'check\'] }}
        exclude-regex: ${{ matrix.path[\'exclude\'] }}
        fallback-style: \'Mozilla\' # optional
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
moderntribe/action-tribe-phpcs,"""require-dev"": {
    ""dealerdirect/phpcodesniffer-composer-installer"": ""^0.4.4"",
    ""wp-coding-standards/wpcs"": ""^2.1"",
    ""automattic/vipwpcs"": ""^2.0"",
    ""moderntribe/tribalscents"": ""dev-master"",
    ...
}

""repositories"": [
    {
      ""name"": ""moderntribe/TribalScents"",
      ""type"": ""github"",
      ""url"": ""https://github.com/moderntribe/TribalScents"",
      ""no-api"": true
    }
]

<?xml version=""1.0""?>
<ruleset name=""Modern Tribe Plugin Coding Standards"">
\t<rule ref=""TribalScents""></rule>
\t<rule ref=""WordPress-VIP-Go""></rule>
\t<rule ref=""WordPress"">
\t\t<exclude name=""WordPress.Files.FileName""/>
\t</rule>
\t<rule ref=""WordPress-Extra""></rule>
\t<rule ref=""WordPress-Docs""></rule>
\t<rule ref=""WordPress-Core""></rule>
</ruleset>

- uses: moderntribe/action-tribe-phpcs@master
  with:
    github_bot_token: ${{ secrets.GH_BOT_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
technote-space/get-diff-action,"on: pull_request
name: CI
jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            +(src|__tests__)/**/*.ts
            !src/exclude.ts
          FILES: |
            yarn.lock
            .eslintrc
      - name: Install Package dependencies
        run: yarn install
        if: env.GIT_DIFF
      - name: Check code style
        run: yarn lint
        if: env.GIT_DIFF

on: pull_request
name: CI
jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            +(src|__tests__)/**/*.ts
          FILES: |
            yarn.lock
            .eslintrc
      - name: Install Package dependencies
        run: yarn install
        if: env.GIT_DIFF
      - name: Check code style
        run: yarn eslint ${{ env.GIT_DIFF_FILTERED }}  # e.g. yarn eslint \'src/main.ts\' \'__tests__/test.ts\'
        if: env.GIT_DIFF && !env.MATCHED_FILES
      - name: Check code style
        run: yarn lint
        if: env.GIT_DIFF && env.MATCHED_FILES

git diff ${FROM}${DOT}${TO} \'--diff-filter=${DIFF_FILTER}\' --name-only

DOT: \'...\'
DIFF_FILTER: \'AMRC\'

git diff ${FROM}...${TO} \'--diff-filter=AMRC\' --name-only

.github/workflows/ci.yml
__tests__/utils/command.test.ts
package.json
src/main.ts
src/utils/command.ts
src/docs.md
yarn.lock

PATTERNS: |
  src/**/*.+(ts|md)
  !src/utils/*

src/main.ts
src/docs.md

FILES: package.json

package.json
anywhere/package.json

/home/runner/work/my-repo-name/my-repo-name/src/main.ts
/home/runner/work/my-repo-name/my-repo-name/src/docs.md

SEPARATOR: \' \'

/home/runner/work/my-repo-name/my-repo-name/src/main.ts /home/runner/work/my-repo-name/my-repo-name/src/docs.md

on:
  pull_request:
    types: [opened, reopened, synchronize, closed, ready_for_review]

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          CHECK_ONLY_COMMIT_WHEN_DRAFT: true

on: pull_request
name: CI
jobs:
  dump:
    name: Dump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            +(src|__tests__)/**/*.ts
            !src/exclude.ts
          FORMAT: json
      - run: echo \'${{ env.GIT_DIFF }}\' | jq .

> Run echo \'[""yarn.lock""]\' | jq .
[
  ""yarn.lock""
]

on: pull_request
name: CI
jobs:
  dump:
    name: Dump
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: \'*.ts\'
          RELATIVE: \'src/abc\'
      - run: echo ${{ env.GIT_DIFF }}

> Run echo \'test1.ts\' \'test2.ts\'
test1.ts test2.ts
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
travisj/build-number-action,"- uses: travisj/build-number-action@v1
  id: my-project-build-number

- name: Echo Build Number
  run: echo $BUILD_NUMBER
  env:
    BUILD_NUMBER: ${{ steps.my-project-build-number.outputs.build-number }}

- uses: travisj/build-number-action@v1
  id: my-project-build-number
  with:
    key: my-project
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
codfish/semantic-release-action,"steps:
  - uses: docker://ghcr.io/codfish/semantic-release-action@sha256:4675eae74abbabc869298ca798833fef291ce30fb9edfac76787746e7d9d3904
  - uses: codfish/semantic-release-action@v2
  - uses: codfish/semantic-release-action@4e0079a1e7511dab622628e1bf298e572a9f3d22
  - uses: codfish/semantic-release-action@v1.10
  - uses: codfish/semantic-release-action@main

steps:
  - uses: docker://ghcr.io/codfish/semantic-release-action:v2
  - uses: docker://codfish/semantic-release-action:v2

steps:
  - uses: docker://ghcr.io/codfish/semantic-release-action@<digest>

steps:
  - uses: actions/checkout@v3

  - uses: codfish/semantic-release-action@v2
    with:
      branches: |
        [
          \'+([0-9])?(.{+([0-9]),x}).x\',
          \'main\',
          \'next\',
          \'next-major\',
          {
            name: \'beta\',
            prerelease: true
          },
          {
            name: \'alpha\',
            prerelease: true
          }
        ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - uses: actions/checkout@v3

  - uses: codfish/semantic-release-action@v2
    id: semantic
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  - run: echo ${{ steps.semantic.outputs.release-version }}

  - run: echo ""$OUTPUTS""
    env:
      OUTPUTS: ${{ toJson(steps.semantic.outputs) }}

  - uses: codfish/some-other-action@v1
    with:
      release-version: ${{ steps.semantic.outputs.release-version }}

steps:
  - uses: actions/checkout@v3

  - uses: codfish/semantic-release-action@v2
    id: semantic
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  - name: docker push version
    if: steps.semantic.outputs.new-release-published == \'true\'
    run: |
      docker tag some-image some-image:$TAG
      docker push some-image:$TAG
    env:
      TAG: v$RELEASE_VERSION

steps:
  - uses: actions/checkout@v3

  - uses: codfish/semantic-release-action@v2
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  - run: |
      echo $RELEASE_VERSION
      echo $RELEASE_MAJOR
      echo $RELEASE_MINOR
      echo $RELEASE_PATCH

steps:
  - run: npx semantic-release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

steps:
  - run: codfish/semantic-release-action@v2
    with:
      dry_run: true
      branches: |
        [
          \'+([0-9])?(.{+([0-9]),x}).x\',
          \'main\',
          \'next\',
          \'next-major\',
          {
            name: \'beta\',
            prerelease: true
          },
          {
            name: \'alpha\',
            prerelease: true
          }
        ]
      repository_url: https://github.com/codfish/semantic-release-action.git
      tag_format: \'v${version}\'
      extends: \'@semantic-release/apm-config\'
      additional_packages: |
        [\'@semantic-release/apm@4.0.0\', \'@semantic-release/git\']
      plugins: |
        [\'@semantic-release/commit-analyzer\', \'@semantic-release/release-notes-generator\', \'@semantic-release/github\', \'@semantic-release/apm\', \'@semantic-release/git\']
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

git tag -fa v2 -m ""Update v2 tag"" && git push origin v2 --force
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
Mudlet/lupdate-action,"  - name: run lupdate
    uses: Mudlet/lupdate-action@master
    with:
      args: -recursive ./src/ ./3rdparty/dblsqd/dblsqd ./3rdparty/edbee-lib/edbee-lib -ts ./translations/mudlet.ts
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
teaminkling/autocommit,"name: my-workflow

on: [push]

jobs:
  autocommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: autosuite/autocommit@master
        with:
          commit-message: Your custom commit message here.
          add-options: -A
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peterjgrainger/action-create-branch,"uses: peterjgrainger/action-create-branch@v2.2.0
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  branch: \'release-notes\'
  sha: \'${{ github.event.pull_request.head.sha }}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hexrabbit/whitespace-lint,"name: Whitespace linter

on:
  issue_comment:
    types: [created]

jobs:
  whitespace_lint:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/wslint')
    steps:
    - uses: actions/checkout@v2
    - name: Whitespace linter
      uses: hexrabbit/whitespace-lint@v0.0.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
reviewdog/action-rubocop,"name: reviewdog
on: [pull_request]
permissions:
  contents: read
  pull-requests: write
jobs:
  rubocop:
    name: runner / rubocop
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          rubocop_version: gemfile
          rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile
          reporter: github-pr-review # Default is github-pr-check
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
marvinpinto/action-automatic-releases,"---
name: ""pre-release""

on:
  push:
    branches:
      - ""master""

jobs:
  pre-release:
    name: ""Pre Release""
    runs-on: ""ubuntu-latest""

    steps:
      - name: ""Build & test""
        run: |
          echo ""done!""

      - uses: ""marvinpinto/action-automatic-releases@latest""
        with:
          repo_token: ""${{ secrets.GITHUB_TOKEN }}""
          automatic_release_tag: ""latest""
          prerelease: true
          title: ""Development Build""
          files: |
            LICENSE.txt
            *.jar

---
name: ""tagged-release""

on:
  push:
    tags:
      - ""v*""

jobs:
  tagged-release:
    name: ""Tagged Release""
    runs-on: ""ubuntu-latest""

    steps:
      - name: ""Build & test""
        run: |
          echo ""done!""

      - uses: ""marvinpinto/action-automatic-releases@latest""
        with:
          repo_token: ""${{ secrets.GITHUB_TOKEN }}""
          prerelease: false
          files: |
            LICENSE.txt
            *.jar

- uses: ""marvinpinto/action-automatic-releases@<VERSION>""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
fnkr/github-action-git-bash,"workflow ""On push"" {
  on = ""push""
  resolves = [""Update mirror""]
}

action ""Update mirror"" {
  uses = ""fnkr/github-action-git-bash@v1""
  secrets = [""GITHUB_TOKEN"", ""SSH_KEY""]
  args = [""bash"", ""-c"", ""{ [ \\""$(git rev-parse --abbrev-ref HEAD)\\"" = \\""master\\"" ] || exit 78; } && rm -rf .github && git add -A .github && git commit -m \\""Remove .github\\"" && git remote set-url origin git@github.com:GITHUB/PROJECT.git && git push --force origin master""]
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nasa-gibs/trufflehog-actions-scan,"
workflow ""Detect Secrets"" {
  on = ""push""
  resolves = [""nasa-gibs/trufflehog-actions-scan""]
}

action ""nasa-gibs/trufflehog-actions-scan"" {
  uses = ""nasa-gibs/trufflehog-actions-scan@master""
}


steps:
- uses: actions/checkout@master
- name: trufflehog-actions-scan
  uses: nasa-gibs/trufflehog-actions-scan@master

steps:
- uses: actions/checkout@master
- name: trufflehog-actions-scan
  uses: nasa-gibs/trufflehog-actions-scan@master
  with:
    scanArguments: ""--regex --entropy=False --max_depth=5"" # Add custom options here*


steps:
- uses: actions/checkout@master
- name: trufflehog-actions-scan
  uses: nasa-gibs/trufflehog-actions-scan@master
  with:
    githubToken: ${{ secrets.GITHUB_CLONE_TOKEN }} # You have to create an access token manually

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mrb0nj/gitversion,"uses: mrb0nj/gitversion@master
with:
  args: '-output buildserver'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
houseofmaldorne/rsync-deploy,"- name: Deploy to server
  uses: houseofmaldorne/rsync-deploy@v2.0
  env:
    DEPLOY_KEY: ${{ secrets.REMOTE_SSH_KEY }}
    REMOTE_USER: ${{ secrets.REMOTE_USER }}
    REMOTE_SERVER: ${{ secrets.REMOTE_SERVER }}
    REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
    REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
    FOLDER: ""./""
    EXCLUDE_LIST: "".github/workflows/exclude.txt""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
AEnterprise/rsync-deploy,"- name: deploy to server
        uses: AEnterprise/rsync-deploy@v1.0.2
        env:
          DEPLOY_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: ""-e -c -r --delete""
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          FOLDER: ""./""
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DESTINATION: ${{ secrets.SERVER_DESTINATION }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
larsoner/circleci-artifacts-redirector-action,"on: [status]

permissions: read-all

jobs:
  circleci_artifacts_redirector_job:
    runs-on: ubuntu-latest
    if: ""${{ github.event.context == \'ci/circleci: build_doc\' }}""
    permissions:
      statuses: write
    name: Run CircleCI artifacts redirector
    steps:
      - name: GitHub Action step
        id: step1
        uses: larsoner/circleci-artifacts-redirector-action@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          api-token: ${{ secrets.CIRCLECI_TOKEN }}
          artifact-path: 0/test_artifacts/root_artifact.md
          circleci-jobs: build_doc
          job-title: Check the rendered docs here!
      - name: Check the URL
        if: github.event.status != \'pending\'
        run: |
          curl --fail ${{ steps.step1.outputs.url }} | grep $GITHUB_SHA

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
peter-evans/close-issue,"    - name: Close Issue
      run: gh issue close --comment ""Auto-closing issue"" ""1""
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: 1
          comment: Auto-closing issue

on:
  issues:
    types: [opened]
jobs:
  titlePrefixCheck:
    runs-on: ubuntu-latest
    steps:
      - if: startsWith(github.event.issue.title, \'ABC-\') != \'true\'
        name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          comment: |
            Issue title must start with \'ABC-\'.
            Auto-closing this issue.

      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: 1
          comment: Auto-closing issue
          labels: |
            wontfix
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peter-evans/close-pull,"    - name: Close Pull
      run: gh pr close --comment ""Auto-closing pull request"" --delete-branch ""1""
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close Pull
        uses: peter-evans/close-pull@v3
        with:
          pull-request-number: 1
          comment: Auto-closing pull request
          delete-branch: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
aws-actions/aws-cloudformation-github-deploy,"- name: Deploy to AWS CloudFormation
  uses: aws-actions/aws-cloudformation-github-deploy@v1
  with:
    name: MyStack
    template: myStack.yaml
    parameter-overrides: ""MyParam1=myValue,MyParam2=${{ secrets.MY_SECRET_VALUE }}""

[
  {
    ""ParameterKey"": ""MyParam1"",
    ""ParameterValue"": ""myValue1""
  }
]

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""cloudformation:CreateStack"",
                ""cloudformation:DescribeStacks"",
                ""cloudformation:CreateChangeSet"",
                ""cloudformation:DescribeChangeSet"",
                ""cloudformation:DeleteChangeSet"",
                ""cloudformation:ExecuteChangeSet""
            ],
            ""Resource"": ""*""
        }
    ]
}

name: Deploy Cluster

on:
  workflow_dispatch:
    inputs:
      region:
        description: \'AWS Region\'
        required: true
        default: \'eu-west-1\'
      keypair:
        description: \'SSH Key Pair\'
        required: true

jobs:
  cluster:
    name: Deploy stack to AWS
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region}}

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr ""/"" ""-""`
        echo ""Environment name: $ENVIRONMENT""
        echo ""environment=$ENVIRONMENT"" >> $GITHUB_OUTPUT

    - name: Deploy Amazon EKS Cluster
      id: eks-cluster
      uses: aws-actions/aws-cloudformation-github-deploy@master
      with:
        name: ${{ steps.env-name.outputs.environment }}-cluster
        template: https://s3.amazonaws.com/aws-quickstart/quickstart-amazon-eks/templates/amazon-eks-master.template.yaml
        no-fail-on-empty-changeset: ""1""
        parameter-overrides: >-
          AvailabilityZones=${{ github.event.inputs.region }}a,
          AvailabilityZones=${{ github.event.inputs.region }}c,
          KeyPairName=${{ github.event.inputs.keypair }},
          NumberOfAZs=2,
          ProvisionBastionHost=Disabled,
          EKSPublicAccessEndpoint=Enabled,
          EKSPrivateAccessEndpoint=Enabled,
          RemoteAccessCIDR=0.0.0.0/0


uses: aws-actions/aws-cloudformation-github-deploy@v1
with:
  name: eks-primary
  template: https://s3.amazonaws.com/aws-quickstart/quickstart-amazon-eks/templates/amazon-eks-master.template.yaml
  no-fail-on-empty-changeset: ""1""
  http-proxy: ""http://companydomain.com:3128""

HTTP_PROXY=""http://companydomain.com:3128""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
hashicorp/setup-terraform,"steps:
- uses: hashicorp/setup-terraform@v2

steps:
- uses: hashicorp/setup-terraform@v2
  with:
    terraform_version: 1.1.7

steps:
- uses: hashicorp/setup-terraform@v2
  with:
    cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

steps:
- uses: hashicorp/setup-terraform@v2
  with:
    cli_config_credentials_hostname: \'terraform.example.com\'
    cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

steps:
- uses: hashicorp/setup-terraform@v2
  with:
    terraform_wrapper: false

steps:
- uses: hashicorp/setup-terraform@v2

- run: terraform init

- id: plan
  run: terraform plan -no-color

- run: echo ${{ steps.plan.outputs.stdout }}
- run: echo ${{ steps.plan.outputs.stderr }}
- run: echo ${{ steps.plan.outputs.exitcode }}

defaults:
  run:
    working-directory: ${{ env.tf_actions_working_dir }}
permissions:
  pull-requests: write
steps:
- uses: actions/checkout@v3
- uses: hashicorp/setup-terraform@v2

- name: Terraform fmt
  id: fmt
  run: terraform fmt -check
  continue-on-error: true

- name: Terraform Init
  id: init
  run: terraform init

- name: Terraform Validate
  id: validate
  run: terraform validate -no-color

- name: Terraform Plan
  id: plan
  run: terraform plan -no-color
  continue-on-error: true

- uses: actions/github-script@v6
  if: github.event_name == \'pull_request\'
  env:
    PLAN: ""terraform\
${{ steps.plan.outputs.stdout }}""
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
    script: |
      const output = `#### Terraform Format and Style \xf0\x9f\x96\x8c\\`${{ steps.fmt.outcome }}\\`
      <details><summary>Validation Output</summary>

      \\`\\`\\`\

      ${{ steps.validate.outputs.stdout }}
      \\`\\`\\`

      </details>


      <details><summary>Show Plan</summary>

      \\`\\`\\`\

      ${process.env.PLAN}
      \\`\\`\\`

      </details>

      *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`, Working Directory: \\`${{ env.tf_actions_working_dir }}\\`, Workflow: \\`${{ github.workflow }}\\`*`;

      github.rest.issues.createComment({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
        body: output
      })

defaults:
  run:
    working-directory: ${{ env.tf_actions_working_dir }}
permissions:
  pull-requests: write
steps:
- uses: actions/checkout@v3
- uses: hashicorp/setup-terraform@v2

- name: Terraform fmt
  id: fmt
  run: terraform fmt -check
  continue-on-error: true

- name: Terraform Init
  id: init
  run: terraform init

- name: Terraform Validate
  id: validate
  run: terraform validate -no-color

- name: Terraform Plan
  id: plan
  run: terraform plan -no-color
  continue-on-error: true

- uses: actions/github-script@v6
  if: github.event_name == \'pull_request\'
  env:
    PLAN: ""terraform\
${{ steps.plan.outputs.stdout }}""
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
    script: |
      // 1. Retrieve existing bot comments for the PR
      const { data: comments } = await github.rest.issues.listComments({
        owner: context.repo.owner,
        repo: context.repo.repo,
        issue_number: context.issue.number,
      })
      const botComment = comments.find(comment => {
        return comment.user.type === \'Bot\' && comment.body.includes(\'Terraform Format and Style\')
      })

      // 2. Prepare format of the comment
      const output = `#### Terraform Format and Style \xf0\x9f\x96\x8c\\`${{ steps.fmt.outcome }}\\`
      <details><summary>Validation Output</summary>

      \\`\\`\\`\

      ${{ steps.validate.outputs.stdout }}
      \\`\\`\\`

      </details>


      <details><summary>Show Plan</summary>

      \\`\\`\\`\

      ${process.env.PLAN}
      \\`\\`\\`

      </details>

      *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`, Working Directory: \\`${{ env.tf_actions_working_dir }}\\`, Workflow: \\`${{ github.workflow }}\\`*`;

      // 3. If we have a comment, update it, otherwise create a new one
      if (botComment) {
        github.rest.issues.updateComment({
          owner: context.repo.owner,
          repo: context.repo.repo,
          comment_id: botComment.id,
          body: output
        })
      } else {
        github.rest.issues.createComment({
          issue_number: context.issue.number,
          owner: context.repo.owner,
          repo: context.repo.repo,
          body: output
        })
      }
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
lemonarc/jekyll-action,"name: Testing the GitHub Pages publication

on:
  push
    
jobs:
  jekyll:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - uses:  lemonarc/jekyll-action@1.0.0
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Sync output to S3
      run: |
        aws s3 sync ./_site/ s3://my-s3-bucket --delete
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
imjohnbo/gh-polls-bot-action,"name: GitHub Polls Actions Bot

on:
  issue_comment:
    types: [created, edited] # issue comment is created or edited
  issues:
    types: [opened, edited] # issue is opened or edited

jobs:
  polls:
    runs-on: ubuntu-latest
    steps:
    - uses: imjohnbo/gh-polls-bot-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # created for you automatically; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#github_token-secret

/polls Option1 \'Option 2\' ""Option 3""

[![](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option1)](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option1/vote)
[![](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option%202)](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option%202/vote)
[![](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option%203)](https://api.gh-polls.com/poll/01BY7ECS60GG8F9AR1VMR8745S/Option%203/vote)
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ravinderjangra/android-ndk-toolchain-setup,"      - shell: bash
        run: mkdir toolchains
      - name: specify NDK
        uses: ravinderjangra/android-ndk-toolchain-setup@0.2
        with:
          api: '21'
          arch: 'x86'
          install-location: 'toolchains'
          force: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0
webispy/checkpatch-action,"name: checkpatch review
on: [pull_request]
jobs:
  my_review:
    name: checkpatch review
    runs-on: ubuntu-latest
    steps:
    - name: \'Calculate PR commits + 1\'
      run: echo ""PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))"" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: ${{ env.PR_FETCH_DEPTH }}
    - name: Run checkpatch review
      uses: webispy/checkpatch-action@v9

name: checkpatch review
on: [pull_request]
jobs:
  my_review:
    name: checkpatch review
    runs-on: ubuntu-latest
    steps:
    - name: \'Calculate PR commits + 1\'
      run: echo ""PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))"" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: ${{ env.PR_FETCH_DEPTH }}
    - name: Run DPDK checkpatches.sh review
      uses: webispy/checkpatch-action@v9
      env:
        DPDK_CHECKPATCH_PATH: /usr/bin/checkpatch.pl
        CHECKPATCH_COMMAND: ./devtools/checkpatches.sh

name: checkpatch review
on: [pull_request]
jobs:
  my_review:
    name: checkpatch review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
    - name: \'Calculate PR commits + 1\'
      run: echo ""PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))"" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: ${{ env.PR_FETCH_DEPTH }}
    - name: Run checkpatch review
      uses: webispy/checkpatch-action@v9
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

--no-tree

--ignore CONFIG_DESCRIPTION
--ignore FILE_PATH_CHANGES
--ignore GERRIT_CHANGE_ID
--ignore GIT_COMMIT_ID
--ignore NEW_TYPEDEFS
--ignore SPDX_LICENSE_TAG
--ignore SPACING
--ignore CONST_STRUCT
--ignore EMBEDDED_FUNCTION_NAME
--exclude externals
--exclude examples
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
garygrossgarten/github-action-scp,"- name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: test
          remote: scp/directory
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}


- name: Copy single file to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: test/oof.txt
          remote: scp/single/oof.txt
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
garygrossgarten/github-action-ssh,"- name: ls -a via ssh
  uses: garygrossgarten/github-action-ssh@release
  with:
    command: ls -a
    host: ${{ secrets.HOST }}
    username: garygrossgarten
    passphrase: ${{ secrets.PASSPHRASE }}
    privateKey: ${{ secrets.PRIVATE_KEY}}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
Pendect/action-rsyncer,"- name: Deploy to server
  id: deploy
  uses: Pendect/action-rsyncer@v1.1.0
  env:
    DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
  with:
    flags: \'-avzr --delete\'
    options: \'\'
    ssh_options: \'\'
    src: \'public/\'
    dest: \'user@server.com:/var/www/server.com\'

- name: Display status from deploy
  run: echo ""${{ steps.deploy.outputs.status }}""

- name: Deploy to server
  id: deploy
  uses: Pendect/action-rsyncer@v1.1.0
  env:
    DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
  with:
    flags: \'-avzr --delete\'
    options: \'\'
    ssh_options: \'-p 2222\'
    src: \'public/\'
    dest: \'user@server.com:/var/www/server.com\'

- name: Display status from deploy
  run: echo ""${{ steps.deploy.outputs.status }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
sonots/slack-notice-action,"- uses: sonots/slack-notice-action@v3
  with:
    status: ${{ job.status }}
    username: Custom Username
    icon_emoji: \':octocat:\'
    channel: \'#integration-test\'
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required, but this should be automatically supplied by GitHub.
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required. Legacy Incoming Webhook is also supported.
  if: always() # Pick up events even if the job fails or is canceled.

- uses: sonots/slack-notice-action@v3
  with:
    status: custom
    payload: |
      {
        text: ""Custom Field Check"",
        attachments: [{
          ""author_name"": ""sonots@slack-notice-action"", // json
          fallback: \'fallback\',
          color: \'good\',
          title: \'CI Result\',
          text: \'Succeeded\',
          fields: [{
            title: \'lower case\',
            value: \'LOWER CASE CHECK\'.toLowerCase(),
            short: true
          },
          {
            title: \'reverse\',
            value: \'gnirts esrever\'.split(\'\').reverse().join(\'\'),
            short: true
          },
          {
            title: \'long title1\',
            value: \'long value1\',
            short: false
          }],
          actions: [{
          }]
        }]
      }
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peternewman/actions-flake8,"uses: TrueBrain/actions-flake8@master

uses: TrueBrain/actions-flake8@master
with:
  path: src

uses: TrueBrain/actions-flake8@master
with:
  ignore: E4,W

uses: TrueBrain/actions-flake8@master
with:
  max_line_length: 90

uses: TrueBrain/actions-flake8@master
with:
  only_warn: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jpmcb/prow-github-actions,"name: ""Prow github actions""
on:
  issue_comment:
    types: [created]

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - uses: jpmcb/prow-github-actions@v1
        with:
          prow-commands: \'/assign 
            /unassign 
            /approve 
            /retitle 
            /area 
            /kind 
            /priority 
            /remove 
            /lgtm 
            /close 
            /reopen 
            /lock 
            /milestone 
            /hold 
            /cc 
            /uncc\'
          github-token: ""${{ secrets.GITHUB_TOKEN }}""

name: ""Pull Request Labeler""
on:
- pull_request_target

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@main
      with:
        repo-token: ""${{ secrets.GITHUB_TOKEN }}""

area:
  - \'bug\'
  - \'important\'

tests:
  - \'**/*.test.ts\'

name: ""Merge on lgtm label""
on:
  schedule:
  - cron: ""0 * * * *""

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - uses: jpmcb/prow-github-actions@v1
        with:
          jobs: \'lgtm\'
          github-token: ""${{ secrets.GITHUB_TOKEN }}""

          merge-method: \'squash\'

name: ""Run Jobs on PR""
on: pull_request

jobs:
  execute:
    runs-on: ubuntu-latest
    steps:
      - uses: jpmcb/prow-github-actions@v1
        with:
          jobs: \'lgtm\'
          github-token: ""${{ secrets.GITHUB_TOKEN }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
rokroskar/workflow-run-cleanup-action,"uses: rokroskar/workflow-run-cleanup-action
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEBUG: FALSE

name: CI
on:
  push: []
  jobs:
    cleanup-runs:
      runs-on: ubuntu-latest
      steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
      if: ""!startsWith(github.ref, \'refs/tags/\') && github.ref != \'refs/heads/master\'""
    ...
    other-jobs:
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
zcong1993/setup-timezone,"- name: Setup timezone
  uses: zcong1993/setup-timezone@master
  with:
    timezone: Asia/Shanghai
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
voxmedia/github-action-slack-notify-build,"uses: voxmedia/github-action-slack-notify-build@v1
with:
  channel: app-alerts
  status: STARTED
  color: good
env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

- name: Notify slack success
  if: success()
  id: slack # IMPORTANT: reference this step ID value in future Slack steps
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
  uses: voxmedia/github-action-slack-notify-build@v1
  with:
    channel: app-alerts
    status: STARTING
    color: warning

- name: Run tests
- name: Notify slack success
  if: success()
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
  uses: voxmedia/github-action-slack-notify-build@v1
  with:
    message_id: ${{ steps.slack.outputs.message_id }}
    channel: app-alerts
    status: SUCCESS
    color: good

- name: Run tests
- name: Notify slack success
  if: success()
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
  uses: voxmedia/github-action-slack-notify-build@v1
  with:
    channel: app-alerts
    status: SUCCESS
    color: good

- name: Notify slack fail
  if: failure()
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
  uses: voxmedia/github-action-slack-notify-build@v1
  with:
    channel: app-alerts
    status: FAILED
    color: danger

message_id: ${{ steps.<your_first_slack_step_id>.outputs.message_id }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
dev-drprasad/delete-older-releases,"- uses: dev-drprasad/delete-older-releases@v0.2
  with:
    repo: <owner>/<repoName> # defaults to current repo
    keep_latest: 3
    delete_tag_pattern: beta # defaults to """"
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
michaeljolley/aggregit,"uses: michaeljolley/aggregit@v1
with:
  githubToken: ${{ secrets.GITHUB_TOKEN }}
  project_id: ${{ secrets.project_id }}
  private_key: ${{ secrets.private_key }}
  client_email: ${{ secrets.client_email }}
  firebaseDbUrl: ${{ secrets.firebaseDbUrl }}

{
    name: 'repoName',
    url: 'https://github.com/owner/repoName',
    contributors:  {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    issues: {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    forks: {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    pullRequests: {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    stars:  {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    watchers:  {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    totalIssues:  {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    totalPullRequests: {
        '2020-04-14': 4,
        '2020-04-15': 3
    },
    healthPercentage: {
        '2020-04-14': 64,
        '2020-04-15': 83
    },
    commits: {
        '2020-04-14': 4,
        '2020-04-15': 6
    },
    codeOfConductExists: {
        '2020-04-14': false,
        '2020-04-15': true
    },
    contributingExists: {
        '2020-04-14': true,
        '2020-04-15': true
    },
    issueTemplateExists: {
        '2020-04-14': false,
        '2020-04-15': false
    },
    pullRequestTemplateExists: {
        '2020-04-14': false,
        '2020-04-15': true
    },
    licenseExists: {
        '2020-04-14': true,
        '2020-04-15': true
    },
    readMeExists: {
        '2020-04-14': true,
        '2020-04-15': true
    },
    totalViews: {
        '2020-04-14': 110,
        '2020-04-15': 89
    },
    uniqueViews: {
        '2020-04-14': 45,
        '2020-04-15': 23
    }
}
",0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
openwrt/gh-action-sdk,"name: Test Build

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.arch }} build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64
          - mips_24kc

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}

      - name: Store packages
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch}}-packages
          path: bin/packages/${{ matrix.arch }}/packages/*.ipk
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pullpreview/action,"name: PullPreview
on:
  schedule:
    - cron: ""30 2 * * *""
  push:
    branches:
      - main
  pull_request:
    types: [labeled, unlabeled, synchronize, closed, reopened]

jobs:
  deploy:
    if: github.event_name == \'schedule\' || github.event_name == \'push\' || github.event.label.name == \'pullpreview\' || contains(github.event.pull_request.labels.*.name, \'pullpreview\')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: pullpreview/action@v5
        with:
          admins: crohr,other-github-user
          always_on: main
          cidrs: ""0.0.0.0/0""
          compose_files: docker-compose.yml,docker-compose.pullpreview.yml
          default_port: 80
          instance_type: nano_2_0
          ports: 80,5432
        env:
          AWS_ACCESS_KEY_ID: ""${{ secrets.AWS_ACCESS_KEY_ID }}""
          AWS_SECRET_ACCESS_KEY: ""${{ secrets.AWS_SECRET_ACCESS_KEY }}""
          AWS_REGION: ""us-east-1""
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ashutoshvarma/action-cmake-build,"   - name: Build & Test
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: gcc
          cxx: g++
          build-type: Release
          configure-options: -DCMAKE_C_FLAGS=-w32 -DPNG_INCLUDE=OFF
          run-test: true
          ctest-options: -R mytest
          install-build: true
          parallel: 14
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
lukka/set-shell-env,"    - uses: lukka/set-shell-env@v1
      name: 
      with:
        NEW_VAR_NAME: new_var_value
        filter: <regexp>
    - name: print $NEW_VAR_NAME
      run: |
        echo $NEW_VAR_NAME
      shell: bash
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
eregon/publish-release,"jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: <tofill>
        release_name: <tofill>
        draft: true
        prerelease: false

    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}

",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
samuelmeuli/action-snapcraft,"- name: Install Snapcraft
  uses: samuelmeuli/action-snapcraft@v2

name: My workflow

on: push

jobs:
  my-job:
    runs-on: ubuntu-latest
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v2

      - name: Use Snapcraft
        run: snapcraft --help

snapcraft export-login --snaps SNAP_NAME --channels edge -

env:
  SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}

- name: Install Snapcraft
  uses: samuelmeuli/action-snapcraft@v2
  with:
    skip_install: true # optional, if already installed in an earlier step

- name: Install Snapcraft with LXD
  uses: samuelmeuli/action-snapcraft@v2
  with:
    use_lxd: ${{ matrix.os == 'ubuntu-18.04' }}
- name: Build snap
  run: sg lxd -c 'snapcraft --use-lxd'
",1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
php-actions/composer,"name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: php-actions/composer@v6

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        command: your-command-here

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        dev: no
        args: --profile --ignore-platform-reqs

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        php_version: ""7.1""
        version: 1

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        php_version: ""7.4""
        php_extensions: redis exif
        version: 2.x

name: CI

on: [push]

jobs:
  build:
    runs-on: [ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v3

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles(\'**/composer.lock\') }}
      
    - uses: php-actions/composer@v6

    ...      

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        ssh_key: ${{ secrets.ssh_key }}
        ssh_key_pub: ${{ secrets.ssh_key_pub }}

jobs:
  build:

    ...

    - name: Install dependencies
      uses: php-actions/composer@v6
      env:
        COMPOSER_AUTH: \'{""github-oauth"": {""github.com"": ""${{ secrets.PAT }}""} }\'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ChristophWurst/xmllint-action,"name: Lint

on: [push]

jobs:
  xml-linters:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Download schema
      run: wget https://apps.nextcloud.com/schema/apps/info.xsd
    - name: Lint info.xml
      uses: ChristophWurst/xmllint-action@v1
      with:
        xml-file: ./appinfo/info.xml
        xml-schema-file: ./info.xsd

name: Lint

on: [push]

jobs:
  xml-linters:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Download schema
      run: wget https://apps.nextcloud.com/schema/apps/info.xsd
    - name: Lint info.xml
      uses: korelstar/xmllint-problem-matcher@v1
      uses: ChristophWurst/xmllint-action@v1
      with:
        xml-file: ./appinfo/info.xml
        xml-schema-file: ./info.xsd
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
joelwmale/webhook-action,"- name: Webhook
  uses: joelwmale/webhook-action@master
  with:
    url: ${{ secrets.WEBHOOK_URL }}
    headers: \'{""repository"": ""joelwmale/webhook-action""}\'
    body: \'{""event"": ""deployment"", ""repository"": ""joelwmale/webhook-action""}\'

  headers: \'{""repository"": ""joelwmale/webhook-action""}\'

  body: \'{""event"": ""deployment"", ""repository"": ""joelwmale/webhook-action""}\'
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
shalzz/zola-deploy-action,"name: Zola on GitHub Pages

on: 
 push:
  branches:
   - main

jobs:
  build:
    name: Publish site
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main
      uses: actions/checkout@v3.0.0
    - name: Build and deploy
      uses: shalzz/zola-deploy-action@v0.17.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Zola on GitHub Pages

on:
  push:
    branches:
      - main 
  pull_request:
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout main
        uses: actions/checkout@v3.0.0
      - name: Build only 
        uses: shalzz/zola-deploy-action@v0.17.2
        env:
          BUILD_DIR: docs
          BUILD_ONLY: true
          BUILD_FLAGS: --drafts
          
  build_and_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout main
        uses: actions/checkout@v3.0.0
      - name: Build and deploy
        uses: shalzz/zola-deploy-action@v0.17.2
        env:
          BUILD_DIR: docs
          PAGES_BRANCH: gh-pages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
shivammathur/cache-extensions,"jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: [\'8.0\', \'8.1\', \'8.2\', \'8.3\']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    env:
      extensions: intl, pcov
      key: cache-v1 # can be any string, change to clear the extension cache.
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}

    - name: Cache extensions
      uses: actions/cache@v3
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}

- name: Cache extensions
  uses: actions/cache@v3
  with:
    path: ${{ steps.extcache.outputs.dir }}
    key: ${{ steps.extcache.outputs.key }}-${{ env.phpts }}
    restore-keys: ${{ steps.extcache.outputs.key }}-${{ env.phpts }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
maxim-lobanov/setup-xamarin,"name: CI
on: [push]
jobs:
  build:
    name: Setup Xamarin and Mono versions
    runs-on: macos-latest
    steps:
    - name: setup-xamarin
      uses: maxim-lobanov/setup-xamarin@v1
      with:
        mono-version: '6.6' # specify version in '<major>.<minor>' format
        xamarin-ios-version: '13' # specify version in '<major>' format
        xamarin-mac-version: latest # specify 'latest' keyword to pick up the latest available version
        xamarin-android-version: '10.1.3.7' # specify full version; it is not recomended option because your pipeline can be broken suddenly in future
        xcode-version: '11.x' # set the latest available Xcode 11
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
bruceadams/get-release,"on:
  release:
    types: [created]

jobs:
  build:
    name: Build release binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build binary
        run: cargo build --release --verbose

      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/release/my-widget
          asset_name: my-widget
          asset_content_type: application/octet-stream
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Azure/login,"
on: [push]

name: AzureLoginSample

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - run: |
        az webapp list --query ""[?state==\'Running\']""



on: [push]

name: AzurePowerShellLoginSample

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true 
     
     - run: |
        Get-AzVM -ResourceGroupName ""ResourceGroup11""
        


name: Run Azure Login with OIDC
on: [push]

permissions:
      id-token: write
      contents: read
jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az account show
            az group list


name: Run Azure Login with OIDC
on: [push]

permissions:
      id-token: write
      contents: read
      
jobs: 
  Windows-latest:
      runs-on: windows-latest
      steps:
        - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
            enable-AzPSSession: true

        - name: \'Get RG with powershell action\'
          uses: azure/powershell@v1
          with:
             inlineScript: |
               Get-AzResourceGroup
             azPSVersion: ""latest""



    - name: Login to Azure US Gov Cloud with CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_US_GOV_CREDENTIALS }}
        environment: \'AzureUSGovernment\'
        enable-AzPSSession: false
    - name: Login to Azure US Gov Cloud with Az Powershell
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_US_GOV_CREDENTIALS }}
        environment: \'AzureUSGovernment\'
        enable-AzPSSession: true


on: [push]

name: AzureLoginSample

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: \'AzureStack\'

    - run: |
        az webapp list --query ""[?state==\'Running\']""



   az ad sp create-for-rbac --name ""myApp"" --role contributor \\
                            --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group} \\
                            --sdk-auth

 {
   ""clientId"": ""<GUID>"",
   ""clientSecret"": ""<STRING>"",
   ""subscriptionId"": ""<GUID>"",
   ""tenantId"": ""<GUID>"",
   ""resourceManagerEndpointUrl"": ""<URL>""
   (...)
 }
 

  - uses: Azure/login@v1
    with:
      creds: \'{""clientId"":""${{ secrets.CLIENT_ID }}"",""clientSecret"":""${{ secrets.CLIENT_SECRET }}"",""subscriptionId"":""${{ secrets.SUBSCRIPTION_ID }}"",""tenantId"":""${{ secrets.TENANT_ID }}""}\'


on: [push]

name: AzureLoginWithNoSubscriptions

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        allow-no-subscriptions: true

- name: Azure CLI script
  uses: azure/CLI@v1
  with:
    inlineScript: |
      az logout
      az cache purge
      az account clear
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
azure/webapps-deploy,"
on: push

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: \'Checkout Github Action\' 
      uses: actions/checkout@master

    - name: Setup Node 10.x
      uses: actions/setup-node@v1
      with:
        node-version: \'10.x\'
    - name: \'npm install, build, and test\'
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: \'Run Azure webapp deploy action using publish profile credentials\'
      uses: azure/webapps-deploy@v2
      with:
        app-name: node-rn
        publish-profile: ${{ secrets.azureWebAppPublishProfile }}


on: [push]

name: Linux_Container_Node_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: \'Checkout Github Action\'
      uses: actions/checkout@master

    - uses: azure/docker-login@v1
      with:
        login-server: contoso.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build . -t contoso.azurecr.io/nodejssampleapp:${{ github.sha }}
        docker push contoso.azurecr.io/nodejssampleapp:${{ github.sha }} 

    - uses: azure/webapps-deploy@v2
      with:
        app-name: \'node-rnc\'
        publish-profile: ${{ secrets.azureWebAppPublishProfile }}
        images: \'contoso.azurecr.io/nodejssampleapp:${{ github.sha }}\'

on: [push]

name: Linux_Container_Node_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: \'Checkout Github Action\'
      uses: actions/checkout@master

    - name: \'Login via Azure CLI\'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/docker-login@v1
      with:
        login-server: contoso.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build . -t contoso.azurecr.io/nodejssampleapp:${{ github.sha }}
        docker push contoso.azurecr.io/nodejssampleapp:${{ github.sha }} 

    - uses: azure/webapps-deploy@v2
      with:
        app-name: \'node-rnc\'
        images: \'contoso.azurecr.io/nodejssampleapp:${{ github.sha }}\'

az ad sp create-for-rbac --name ""{sp-name}"" --sdk-auth --role contributor \\
    --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/sites/{app-name}

az ad sp create-for-rbac --name ""{sp-name}"" --sdk-auth --role contributor \\
    --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group}

{
  ""clientId"": ""<GUID>"",
  ""clientSecret"": ""<GUID>"",
  ""subscriptionId"": ""<GUID>"",
  ""tenantId"": ""<GUID>"",
  (...)
}

    - name: Set Web App ACR authentication
      uses: Azure/appservice-settings@v1
      with:
       app-name: \'node-rnc\'
       app-settings-json: |
         [
             {
                 ""name"": ""DOCKER_REGISTRY_SERVER_PASSWORD"",
                 ""value"": ""${{ secrets.REGISTRY_PASSWORD }}"",
                 ""slotSetting"": false
             },
             {
                 ""name"": ""DOCKER_REGISTRY_SERVER_URL"",
                 ""value"": ""https://contoso.azurecr.io"",
                 ""slotSetting"": false
             },
             {
                 ""name"": ""DOCKER_REGISTRY_SERVER_USERNAME"",
                 ""value"": ""${{ secrets.REGISTRY_USERNAME  }}"",
                 ""slotSetting"": false
             }
         ]
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
zhulik/redis-action,"steps:
- uses: zhulik/redis-action@1.1.0
  with:
    redis version: '5'
    number of databases: 100
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
srggrs/assign-one-project-github-action,"name: Auto Assign to Project(s)

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled]
  issue_comment:
    types: [created]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  assign_one_project:
    runs-on: ubuntu-latest
    name: Assign to One Project
    steps:
    - name: Assign NEW issues and NEW pull requests to project 2
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: github.event.action == 'opened'
      with:
        project: 'https://github.com/srggrs/assign-one-project-github-action/projects/2'

    - name: Assign issues and pull requests with `bug` label to project 3
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: |
        contains(github.event.issue.labels.*.name, 'bug') ||
        contains(github.event.pull_request.labels.*.name, 'bug')
      with:
        project: 'https://github.com/srggrs/assign-one-project-github-action/projects/3'
        column_name: 'Labeled'

...

if: |
  github.event_name == 'issues' &&
  (
    github.event.action == 'opened' ||
    contains(github.event.issue.labels.*.name, 'mylabel')
  )
...

name: Auto Assign to Project(s)

on:
  issues:
    types: [opened, labeled]
  pull_request_target:
    types: [opened, labeled]
  issue_comment:
    types: [created]
env:
  MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

jobs:
  assign_one_project:
    runs-on: ubuntu-latest
    name: Assign to One Project
    steps:
    - name: Assign NEW issues and NEW pull requests to project 2
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: github.event.action == 'opened'
      with:
        project: 'https://github.com/srggrs/assign-one-project-github-action/projects/2'

    - name: Assign issues and pull requests with `bug` label to project 3
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: |
        contains(github.event.issue.labels.*.name, 'bug') ||
        contains(github.event.pull_request.labels.*.name, 'bug')
      with:
        project: 'https://github.com/srggrs/assign-one-project-github-action/projects/3'
        column_name: 'Labeled'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dangoslen/changelog-enforcer,"name: ""Pull Request Workflow""
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: dangoslen/changelog-enforcer@v3
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
py-actions/py-dependency-install,"steps:
  - name: Install Python dependencies
    uses: py-actions/py-dependency-install@v4

steps:
  - name: Install Python dependencies
    uses: py-actions/py-dependency-install@v4
    with:
      path: ""path/to/requirements.txt""

steps:
  - name: Install Python dependencies
    uses: py-actions/py-dependency-install@v4
    with:
      update-pip: ""false""
      update-setuptools: ""false""
      update-wheel: ""false""
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
csexton/debugger-action,"steps:
- name: Setup Debug Session
  uses: csexton/debugger-action@master

Running tmate...

To connect to this session copy-n-paste the following into a terminal:

ssh redactedMxoJ0pXmjredacted@nyc1.tmate.io

touch /tmp/keepalive
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
turleypol/create-release,"on:
  push:
    tags:
      - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
turleypol/actions-status-discord,"- name: Post status to Discord
  uses: sarisia/actions-status-discord@v1
  if: always()
  with:
    webhook: ${{ secrets.DISCORD_WEBHOOK }}
    status: ${{ job.status }}
    job: deploy to github pages
    description: build pages and deploy to github pages!
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hallee/eslint-action,"name: Lint

on: pull_request

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hallee/eslint-action@1.0.3
        if: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }} 
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          source-root: optional-sub-dir
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
goto-bus-stop/standard-action,"jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npx standard

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: goto-bus-stop/standard-action@v1
        with:



          annotate: true

        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

- uses: actions/checkout@v2
- uses: actions/setup-node@v1
- run: npm install
- uses: goto-bus-stop/standard-action@v1
  with:
    linter: semistandard

- uses: goto-bus-stop/standard-action@v1
  with:
    files: \'{src/**/*.js,test/**/*.js}\'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
skaut/wordpress-version-checker,"name: ""WordPress version checker""
on:
  push:
    branches:
      - master
  schedule:
    - cron: \'0 0 * * *\'

permissions:
  issues: write

jobs:
  wordpress-version-checker:
    runs-on: ubuntu-latest
    steps:
      - name: WordPress version checker
        uses: skaut/wordpress-version-checker@v1.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

{
    ""readme"": ""path/to/your/readme.txt""
}

{
    ""readme"": [""path/to/first/readme.txt"", ""path/to/second/readme.txt""]
}

{
    ""channel"": ""rc""
}

{
    ""assignees"": [""alice"", ""bob""]
}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
guite/generator-action,"uses: docker://guite/generator-action:latest
with:
  args: MultiHook.mostapp Zikula/MultiHookModule src/ true

docker run --rm -it -w=/app -v ${PWD}:/app guite/generator-action:latest MultiHook.mostapp Zikula/MultiHookModule src/ true
",0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
guite/zikula-action,"uses: docker://guite/zikula-action:latest
with:
  args: Zikula MultiHook 1.0.0 ZK3DEV src/ true

docker run --rm -it -w=/app -v ${PWD}:/app guite/zikula-action:latest Zikula MultiHook 1.0.0 ZK3DEV src/ true
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
getong/mariadb-action,"steps:
- uses: getong/mariadb-action@v1.1
  with:
    host port: 3800 # Optional, default value is 3306. The port of host
    container port: 3307 # Optional, default value is 3306. The port of container
    character set server: \'utf8\' # Optional, default value is \'utf8mb4\'. The \'--character-set-server\' option for mysqld
    collation server: \'utf8_general_ci\' # Optional, default value is \'utf8mb4_general_ci\'. The \'--collation-server\' option for mysqld
    mariadb version: \'10.4.10\' # Optional, default value is ""latest"". The version of the MariaDB
    mysql database: \'some_test\' # Optional, default value is ""test"". The specified database which will be create
    mysql root password: ${{ secrets.RootPassword }} # Required if ""mysql user"" is empty, default is empty. The root superuser password
    mysql user: \'developer\' # Required if ""mysql root password"" is empty, default is empty. The superuser for the specified database. Can use secrets, too
    mysql password: ${{ secrets.DatabasePassword }} # Required if ""mysql user"" exists. The password for the ""mysql user""

jobs:
  build:
    runs-on: ubuntu-${{ ubuntu-version }} # is Ubuntu environment


    steps:
    - # ... some prepare steps, like action/checkout, run some script without MySQL, etc.

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, ""sudo"" is necessary, please not remove it

    - # ... some steps before set-up MySQL ...
    - name: Set up MariaDB
      uses: getong/mariadb-action@v1.1
      with:

    - # ... some steps after set-up MariaDB ...

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
reviewdog/action-misspell,"path: |
  doc
  src

pattern: |
  *.py
  *.sh

exclude: |
  ./.git/*
  ./.cache/*

name: reviewdog
on: [pull_request]
jobs:
  misspell:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v2
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: ""US""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
plettich/action-codespell,"name: reviewdog
on: [pull_request]
jobs:
  codespell:
    name: runner / codespell
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v1
      - name: codespell
        uses: plettich/action-codespell@master
        with:
          github_token: ${{ secrets.github_token }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Ilshidur/action-slack,"- name: Slack notification
  env:
    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    SLACK_USERNAME: ThisIsMyUsername # Optional. (defaults to webhook app)
    SLACK_CHANNEL: general #\xc2\xa0Optional. (defaults to webhook)
    SLACK_AVATAR: repository #\xc2\xa0Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
  uses: Ilshidur/action-slack@2.0.2
  with:
    args: \'A new commit has been pushed.\' #\xc2\xa0Optional
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mheap/phpunit-matcher-action,"- name: Configure matchers
  uses: mheap/phpunit-matcher-action@v1

name: PHPUnit
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Composer dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Configure matchers
      uses: mheap/phpunit-matcher-action@v1
    - name: Run Tests
      run: ./vendor/bin/phpunit --teamcity test

- name: Configure matchers
  uses: mheap/phpunit-matcher-action@v1
  with:
    base_path: /path/to/other/folder
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mattnotmitt/doxygen-action,"uses: mattnotmitt/doxygen-action@v1.9.5
with:
    additional-packages: font-fira-code

uses: mattnotmitt/doxygen-action@v1.9.5
with:
    working-directory: 'submodule/'
    doxyfile-path: 'docs/Doxygen'

uses: mattnotmitt/doxygen-action@v1.9.5
with:
    working-directory: 'submodule/'
    doxyfile-path: 'docs/Doxygen'
    enable-latex: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
satackey/action-docker-layer-caching,"name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - run: docker-compose pull

    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - run: docker-compose up --build


name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      with:
        key: foo-docker-cache-{hash}
        restore-keys: |
          foo-docker-cache-
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0
scarhand/actions-ruby,"workflow ""Build, Test, and Publish"" {
  on = ""push""
  resolves = [""Publish""]
}

action ""Build"" {
  uses = ""scarhand/actions-ruby@master""
  args = ""build *.gemspec""
}

action ""Tag"" {
  needs = ""Build""
  uses = ""actions/bin/filter@master""
  args = ""tag v*""
}

action ""Publish"" {
  needs = ""Tag""
  uses = ""scarhand/actions-ruby@master""
  args = ""push *.gem""
  secrets = [""RUBYGEMS_AUTH_TOKEN""]
}

action ""Publish"" {
  uses = ""scarhand/actions-ruby@master""
  args = ""push *.gem""
  env = {
    RUBYGEMS_HOST = ""https://someOtherRepository.someDomain.net""
  }
  secrets = [""RUBYGEMS_AUTH_TOKEN""]
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
whoan/docker-build-with-cache-action,"- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.DOCKER_HUB_PASSWORD }}""
    image_name: hello-world

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.GITHUB_TOKEN }}""
    registry: docker.pkg.github.com
    image_name: hello-world

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: _json_key
    password: ""${{ secrets.GCLOUD_JSON_KEY }}""
    registry: gcr.io
    image_name: hello-world

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: ""${{ secrets.AWS_ACCESS_KEY_ID }}""  # no need to provide it if you already logged in with aws-actions/configure-aws-credentials
    password: ""${{ secrets.AWS_SECRET_ACCESS_KEY }}""  # no need to provide it if you already logged in with aws-actions/configure-aws-credentials
    session:  ""${{ secrets.AWS_SESSION_TOKEN }}""  # if you need role assumption. no need to provide it if you already logged in with aws-actions/configure-aws-credentials
    registry: 861729690598.dkr.ecr.us-west-1.amazonaws.com
    image_name: hello-world

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.DOCKER_HUB_PASSWORD }}""
    compose_file: docker-compose.yml

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.GITHUB_TOKEN }}""
    registry: docker.pkg.github.com
    compose_file: docker-compose.yml

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.DOCKER_HUB_PASSWORD }}""
    compose_file: docker-compose.yml > docker-compose.override.yml

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.GITHUB_TOKEN }}""
    registry: docker.pkg.github.com
    compose_file: docker-compose.yml
    services_regex: \'(service_1|extra_service.*)\' # eg: builds services called exactly ""service_1"" plus the ones which start with ""extra_service"" and may have extra chars after

- uses: whoan/docker-build-with-cache-action@v5
  with:
    username: whoan
    password: ""${{ secrets.GITHUB_TOKEN }}""
    image_name: whoan/docker-images/node
    image_tag: alpine-slim,another-tag,latest
    push_git_tag: true
    registry: docker.pkg.github.com
    context: node-alpine-slim
    dockerfile: custom.Dockerfile
    build_extra_args: ""--compress=true --build-arg=hello=world""
    push_image_and_stages: docker run my_awesome_image:latest  # eg: push only if docker run succeed
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
julianoes/Publish-Docker-Github-Action,"name: Publish Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

with:
  name: owner/repository/image
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  registry: docker.pkg.github.com

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  snapshot: true

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  dockerfile: MyDockerFileName

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  workdir: mySubDirectory

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  context: myContextDirectory

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@master
  env:
    MY_FIRST: variableContent
    MY_SECOND: variableContent
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildargs: MY_FIRST,MY_SECOND

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@master
  env:
    MY_FIRST: variableContent
    MY_SECOND: variableContent
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildoptions: ""--compress --force-rm""

name: Publish to Registry
on:
  push:
    branches:
      - master
  schedule:
    - cron: \'0 2 * * 0\' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        cache: ${{ github.event_name != \'schedule\' }}

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  tag_names: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
bmaranville/get-release,"on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    name: Get Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get Release
        id: get
        uses: bruceadams/get-release@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
qcastel/github-actions-maven-release,"    <scm>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>scm:git:${project.scm.url}</developerConnection>
        <url>git@github.com:idhub-io/idhub-api.git</url>
        <tag>HEAD</tag>
    </scm>

\t<scm>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>scm:git:${project.scm.url}</developerConnection>
\t\t<url>https://github.com/YOUR_REPO.git</url>
\t\t<tag>HEAD</tag>
\t</scm>

    <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>XXX</version>
        <configuration>
            <scmCommentPrefix>[ci skip]</scmCommentPrefix>
        </configuration>
    </plugin>

 - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:

 - name: Release
      uses: qcastel/github-actions-maven-release@TAG_NAME
      with:

 - name: Release
      uses: qcastel/github-actions-maven-release@COMMIT_HASH
      with:

      env:
       JAVA_HOME: /usr/lib/jvm/java-17-openjdk/
      with:
       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

docker run -it qcastel/maven-release:latest  bash

ssh-keygen -b 2048 -t rsa -f /tmp/sshkey -q -N """"
export SSH_PRIVATE_KEY=$(base64 /tmp/sshkey)
export SSH_PUBLIC_KEY=$(cat /tmp/sshkey.pub)
echo -n ""Copy the following SSH private key and add it to your repo secrets under the name \'SSH_PRIVATE_KEY\':""
echo $SSH_PRIVATE_KEY
echo ""Copy the encoded SSH public key and add it as one of your repo deploy keys with write access:""
echo $SSH_PUBLIC_KEY

exit 

        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-passphrase: ${{ secrets.SSH_PASSPHRASE }}

        with:
          ssh-extra-known-host: ""my-awesome-private-git-host.com""

        with:
          ssh-ignore-default-hosts: true

14:27:09,491 [INFO] Downloading from spring-snapshots: https://repo.spring.io/snapshot/io/projectreactor/reactor-bom/Dysprosium-SR13/reactor-bom-Dysprosium-SR13.pom

        with:
            maven-args: ""-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip""

        with:
            maven-options: ""-DbranchName=hotfix""

env:
 JAVA_HOME: /usr/lib/jvm/java-1.8-openjdk/

env:
 JAVA_HOME: /usr/lib/jvm/java-11-openjdk/

env:
 JAVA_HOME: /usr/lib/jvm/java-14-openjdk/

env:
 JAVA_HOME: /usr/lib/jvm/java-15-openjdk/

env:
 JAVA_HOME: /usr/lib/jvm/java-16-openjdk/

env:
 JAVA_HOME: /usr/lib/jvm/java-17-openjdk/

        with:
            git-release-bot-name: ""release-bot""
            git-release-bot-email: ""release-bot@example.com""

        with:
            release-branch-name: ""release""


        with:
            skip-perform: true

        with:
            version-major: true

        with:
            version-minor: true

        with:
            version-patch: true

        with:
            maven-development-version-number: ${parsedVersion.majorVersion}.\\${parsedVersion.nextMinorVersion}-SNAPSHOT

        with:
            maven-release-version-number: ${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.0

        with:
            m2-home-folder: \'/your-custom-path/.m2\'

      with:
        gpg-enabled: ""true""
        gpg-key-id: ${{ secrets.GITHUB_GPG_KEY_ID }}
        gpg-key: ${{ secrets.GITHUB_GPG_KEY }}

<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-gpg-plugin</artifactId>
    <version>1.6</version>
    <configuration>
        <skip>true</skip>
    </configuration>
</plugin>

      with:
        maven-servers: ${{ secrets.MVN_REPO_SERVERS }}

[
  {
    ""id"": ""serverId1"",
    ""username"": ""username"",
    ""password"": ""password1"",
    ""privateKey"": ""privatekey1"",
    ""passphrase"": ""passphrase1""
  },
  {
    ""id"": ""serverId2"",
    ""username"": ""username2"",
    ""password"": ""password2""
  }
]

MVN_REPO_SERVERS=\'[{""id"": ""serverId1"", ""username"": ""username"", ""password"": ""password1"", ""privateKey"": ""privatekey1"", ""passphrase"": ""passphrase1""}, {""id"": ""serverId2"", ""username"": ""username2"", ""password"": ""password2""}]\'

      with:
        docker-registry-id: your-docker-registry-id
        docker-registry-username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        docker-registry-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      with:
        docker-registry-id: registry.hub.docker.com
        docker-registry-username: ${{ secrets.DOCKER_HUB_USERNAME }}
        docker-registry-password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    with:
        maven-project-folder: ""sub-folder/""

        with:
            gpg-enabled: true
            gpg-key-id: ${{ secrets.GPG_KEY_ID }}
            gpg-key: ${{ secrets.GPG_KEY }}

        with:
            gpg-enabled: true
            gpg-key-id: ${{ secrets.GPG_KEY_ID }}
            gpg-key: ${{ secrets.GPG_KEY }}
            gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} 

docker run -it qcastel/maven-release:latest  bash

cat >genkey-batch <<EOF
 %no-protection
 Key-Type: default
 Subkey-Type: default
 Name-Real: bot
 Name-Email: bot@idhub.io
 Expire-Date: 0
EOF
gpg --batch --gen-key genkey-batch

gpg --list-secret-keys --keyid-format LONG

sec   rsa2048/3EFC3104C0088B08 2019-11-28 [SC]
      CBFD9020DAC388A77C68385C3EFC3104C0088B08
uid                 [ultimate] bot-openbanking4-dev (it\'s the bot openbanking4.dev key) <bot@openbanking4.dev>
ssb   rsa2048/7D1523C9952204C1 2019-11-28 [E]



echo \'Public key to add in your bot github account:\'
gpg --armor --export FFD651809B1889DF
echo \'Private key to add to the CI secrets under GITHUB_GPG_KEY:\'
gpg --export-secret-keys --armor FFD651809B1889DF | base64

exit
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
s4u/maven-settings-action,"steps:
- uses: s4u/maven-settings-action@v2.8.0

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    servers: \'[{""id"": ""serverId"", ""username"": ""username"", ""password"": ""password""}]\'

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    servers: |
      [{
        ""id"": ""serverId"",
        ""configuration"": {
          ""item1"": ""value1"",
          ""item2"": {
            ""item21"": ""value21"",
            ""item22"": ""value22""
          }
        }
      }]

<server>
    <id>serverId</id>
    <configuration>
      <item1>value1</item1>
      <item2>
        <item21>value21</item21>
        <item22>value22</item22>
      </item1>
    </configuration>
</server></servers>

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    mirrors: \'[{""id"": ""mirrorId"", ""name"": ""mirrorName"", ""mirrorOf"": ""mirrorOf"", ""url"": ""mirrorUrl""}]\'

step:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    proxies: \'[{""id"": ""proxyId"", ""active"": ""isActive"", ""protocol"": ""proxyProtocol"", ""host"": ""proxyHost"", ""port"": ""proxyPort"", ""nonProxyHosts"": ""nonProxyHost""}]\'

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    properties: \'[{""propertyName1"": ""propertyValue1""}, {""propertyName2"": ""propertyValue2""}]\'

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    sonatypeSnapshots: true

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    apacheSnapshots: true

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    override: false

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    githubServer: false

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    oracleServers: \'[{""id"": ""serverId"", ""username"": ""username"", ""password"": ""password""}]\'

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    oracleRepo: true

steps:
- uses: s4u/maven-settings-action@v2.8.0
  with:
    servers: |
      [{
          ""id"": ""sonatype-nexus-snapshots"",
          ""username"": ""${{ secrets.SONATYPE_USERNAME }}"",
          ""password"": ""${{ secrets.SONATYPE_PASSWORD }}""
      }]

  steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles(\'**/pom.xml\') }}
          restore-keys: maven-

      - uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: s4u/maven-settings-action@v2.8.0

      - run: mvn verify
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
ilammy/setup-nasm,"jobs:
  test:
    - uses: ilammy/setup-nasm@v1
    - uses: actions/checkout@v1
    - name: Build something requiring NASM
      run: |
        cd third_party/boringssl
        cmake -G Ninja . && ninja
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
WyriHaximus/github-action-get-previous-tag,"name: Generate
jobs:
  generate:
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won\'t be able to find any or the correct tags
      - name: \'Get Previous tag\'
        id: previoustag
        uses: ""WyriHaximus/github-action-get-previous-tag@v1""
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: \'Get next minor version\'
        id: semvers
        uses: ""WyriHaximus/github-action-next-semvers@v1""
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: \'Create new milestone\'
        id: createmilestone
        uses: ""WyriHaximus/github-action-create-milestone@v1""
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
shogo82148/actions-upload-release-asset,"on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: echo ""REPLACE ME!"" > assets.txt

      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: assets.txt

on:
  push:
    tags:
      - ""v*""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: echo ""REPLACE ME!"" > assets.txt

      - name: Create a Release
        id: create_release
        uses: shogo82148/actions-create-release@v1


      - name: Upload Assets
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: assets.txt

",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zzzze/webhook-trigger,"- name: Webhook
  uses: zzzze/webhook-trigger@master
  with:
    data: ""{\\""event_type\\"":\\""build\\""}""
    webhook_url: ${{ secrets.WEBHOOK_URL }}
    options: ""-H \\""Accept: application/vnd.github.everest-preview+json\\"" -H \\""Authorization: token ${{ secrets.TOKEN }}\\""""
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
drdanz/rebase,"on: issue_comment
name: Automatic Rebase
jobs:
  rebase:
    name: Rebase
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Automatic Rebase
      uses: cirrus-actions/rebase@1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
austinshalit/setup-java,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'9.0.4\' # The JDK version to make available on the path.
    java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
    architecture: x64 # (x64 or x86) - defaults to x64
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'4.0.0\'
    architecture: x64
    jdkFile: <path to jdkFile> # Optional - jdkFile to install java from. Useful for versions not found on Zulu Community CDN
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.MAVEN_GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
wei/curl,"on: push
jobs:
  curl:
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@master
      with:
        args: https://httpbin.org/get

on: push
jobs:
  curl:
    runs-on: ubuntu-latest
    steps:
    - name: curl
      uses: wei/curl@v1
      with:
        args: -X POST https://httpbin.org/post

on: push
jobs:
  curl:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: curl
      uses: wei/curl@v1
      with:
        args: --upload-file .github/workflows/main.yml https://transfer.sh/main-workflow.yml

docker run --rm $(docker build -q .) \\
  https://httpbin.org/get
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
psf/black,"black {source_file_or_directory}

python -m black {source_file_or_directory}

[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
    :target: https://github.com/psf/black
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ros-tooling/setup-ros,"steps:
  - uses: ros-tooling/setup-ros@v0.7
  - run: vcs --help

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest]
    steps:
      - name: Setup ROS
        uses: ros-tooling/setup-ros@v0.7
      - run: vcs --help

  build_docker:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:jammy
    steps:
      - name: Setup ROS
        uses: ros-tooling/setup-ros@v0.7
      - run: vcs --help

build_docker:
  runs-on: ubuntu-latest
  container:
    image: ubuntu:jammy
  steps:
    - uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: noetic humble
    - run: ""source /opt/ros/humble/setup.bash && ros2 run --help""
    - run: ""source /opt/ros/noetic/setup.bash && rosnode --help""

build_docker:
  runs-on: ubuntu-latest
  container:
    image: ubuntu:jammy
  steps:
    - uses: ros-tooling/setup-ros@v0.7
      with:
        use-ros2-testing: true
        required-ros-distributions: humble

build_docker:
  runs-on: ubuntu-latest
  container:
    image: ubuntu:jammy
  steps:
    - uses: ros-tooling/setup-ros@v0.7
      with:
        install-connext: true
        use-ros2-testing: true
        required-ros-distributions: humble

jobs:
  test: # Docker is not supported on macOS and Windows.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]
        ros_distribution: # Only include ROS 2 distributions, as ROS 1 does not support macOS and Windows.
          - humble
          - iron
    steps:
      - uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - name: build and test
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: YOUR_PACKAGE_HERE MORE_PACKAGES_HERE
          target-ros2-distro: ${{ matrix.ros_distribution }}

  test_docker: # On Linux, iterates on all ROS 1 and ROS 2 distributions.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distribution:
          - noetic
          - humble
          - iron

        include:
          - docker_image: ubuntu:focal
            ros_distribution: noetic
            ros_version: 1

          - docker_image: ubuntu:jammy
            ros_distribution: humble
            ros_version: 2

          - docker_image: ubuntu:jammy
            ros_distribution: iron
            ros_version: 2

          - docker_image: ubuntu:jammy
            ros_distribution: rolling
            ros_version: 2

    container:
      image: ${{ matrix.docker_image }}
    steps:
      - name: setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - name: build and test ROS 1
        if: ${{ matrix.ros_version == 1 }}
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: YOUR_PACKAGE_HERE MORE_PACKAGES_HERE
          target-ros1-distro: ${{ matrix.ros_distribution }}
      - name: build and test ROS 2
        if: ${{ matrix.ros_version == 2 }}
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: YOUR_PACKAGE_HERE MORE_PACKAGES_HERE
          target-ros2-distro: ${{ matrix.ros_distribution }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
ros-tooling/action-ros-ci,"colcon-common-extensions
colcon-lcov-result  # Optional
colcon-coveragepy-result
colcon-mixin
rosdep
vcstool

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble

steps:
  - uses: ros-tooling/setup-ros@v0.6
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      vcs-repo-file-url: https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos

name: Humble Source Build
on:
  schedule:
    - cron \'0 0 * * 0\'

jobs:
  humble_source:
    runs_on: ubuntu-22.04
    steps:
      - uses: ros-tooling/setup-ros@v0.6
        with:
          required-ros-distributions: humble
      - uses: ros-tooling/action-ros-ci@v0.3
        with:
          package-name: my_package
          ref: humble
          target-ros2-distro: humble
          vcs-repo-file-url: https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos

steps:
  - uses: actions/checkout@v2
  - uses: ros-tooling/setup-ros@v0.6
  - run: |
      rosinstall_generator <package-name> --rosdistro <target-distro> \\
      --deps-only --deps --upstream-development > /tmp/deps.repos
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      vcs-repo-file-url: /tmp/deps.repos

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: noetic
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros1-distro: noetic

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      skip-tests: true

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      colcon-defaults: |
        {
          ""build"": {
            ""cmake-args"": [
                ""-DMY_CUSTOM_OPTION=ON""
            ]
          }
        }

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      colcon-defaults: |
        {
          ""build"": {
            ""mixin"": [""asan-gcc""]
          }
        }
      colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/3e627e0fa30db85aea05a50e2c61a9832664d236/index.yaml
      package-name: my_package
      target-ros2-distro: humble

==9442== ERROR: AddressSanitizer heap-use-after-free on address 0x7f7ddab8c084 at pc 0x403c8c bp 0x7fff87fb82d0 sp 0x7fff87fb82c8

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      colcon-defaults: |
        {
          ""build"": {
            ""mixin"": [""coverage-gcc""]
          }
        }
      colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml

steps:
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      colcon-defaults: |
        {
          ""build"": {
            ""mixin"": [""coverage-pytest""]
          },
          ""test"": {
            ""mixin"": [""coverage-pytest""]
          }
        }
      colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml

steps:
  - uses: actions/checkout@v2
  - uses: ros-tooling/setup-ros@v0.6
    with:
      required-ros-distributions: humble
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      target-ros2-distro: humble
      colcon-defaults: |
        {
          ""build"": {
            ""mixin"": [""coverage-gcc"", ""coverage-pytest""]
          },
          ""test"": {
            ""mixin"": [""coverage-pytest""]
          }
        }
      colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
  - uses: codecov/codecov-action@v1.2.1
    with:
      token: ${{ secrets.CODECOV_TOKEN }}  # only needed for private repos
      files: ros_ws/lcov/total_coverage.info,ros_ws/coveragepy/.coverage
      flags: unittests
      name: codecov-umbrella

fixes:
  - ""ros_ws/src/*/my_repo/my_package/::""

steps:
  - uses: ros-tooling/action-ros-ci@v0.3
    id: action_ros_ci_step
    with:
      package-name: ament_copyright
      target-ros2-distro: humble
  - uses: actions/upload-artifact@v1
    with:
      name: colcon-logs
      path: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}/log
    if: always() # upload the logs even when the build fails

steps:
  - uses: ros-tooling/action-ros-ci@v0.3
    with:
      package-name: my_package
      import-token: ${{ secrets.GITHUB_TOKEN }}
      import-token: ${{ secrets.REPO_TOKEN }}

action-ros-ci-repos-override: https://gist.github.com/some-user/some.repos
action-ros-ci-repos-override: https://gist.github.com/some-user/some-other.repos
action-ros-ci-repos-supplemental: https://gist.github.com/some-user/some-supplemental.repos
action-ros-ci-repos-supplemental: file://path/to/some/other/supplemental.repos
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0
ridedott/merge-me-action,"name: Merge me!

on:
  workflow_run:
    types:
      - completed
    workflows:
      - 'Continuous Integration'

jobs:
  merge-me:
    name: Merge me!
    runs-on: ubuntu-latest
    steps:
      - # It is often a desired behavior to merge only when a workflow execution
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Merge me!

on:
  check_suite:
    types:
      - completed

jobs:
  merge-me:
    name: Merge me!
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Continuous Integration

on:
  pull_request_target:
    branches:
      - master
    types:
      - opened
      - synchronize
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
      - # This allows private dependencies from GitHub Packages to be installed.
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress
      - name: Test
        run: npm run test
  merge-me:
    name: Merge me!
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 5

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: my-awesome-bot-r2d2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_LOGIN: dependabot-preview
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_GITHUB_API_PREVIEW: true

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: MERGE

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRESET: DEPENDABOT_PATCH

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          MAXIMUM_RETRIES: 2

jobs:
  merge-me:
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLED_FOR_MANUAL_CHANGES: 'true'

git clone git@github.com:ridedott/merge-me-action.git

cd merge-me-action
npm install

npm run test
npm run test:watch
npm run test:coverage

npm run format
npm run format:fix

npm run lint
npm run lint:fix
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
SonarSource/sonarcloud-github-action,"sonar.organization=<replace with your SonarCloud organization key>
sonar.projectKey=<replace with the key generated when setting up the project on SonarCloud>

sonar.sources=.

on:
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

uses: sonarsource/sonarcloud-github-action@master
with:
  projectBaseDir: my-custom-directory

- name: Analyze with SonarCloud
  uses: sonarsource/sonarcloud-github-action@master
  with:
    projectBaseDir: my-custom-directory
    args: >
      -Dsonar.organization=my-organization
      -Dsonar.projectKey=my-projectkey
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.sources=lib/
      -Dsonar.test.exclusions=tests/**
      -Dsonar.tests=tests/
      -Dsonar.verbose=true
",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peaceiris/actions-mdbook,"name: github pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: \'0.4.10\'

      - run: mdbook build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == \'refs/heads/main\' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book

- name: Setup mdBook
  uses: peaceiris/actions-mdbook@v1
  with:
    mdbook-version: \'latest\'

MDBOOK_VERSION=0.4.10

    - name: Read .env
      id: mdbook-version
      run: |
        . ./.env
        echo ""::set-output name=MDBOOK_VERSION::${MDBOOK_VERSION}""

    - name: Setup mdBook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: \'${{ steps.mdbook-version.outputs.MDBOOK_VERSION }}\'

version: \'3\'

services:
  mdbook:
    container_name: mdbook
    image: ""peaceiris/mdbook:v${MDBOOK_VERSION}""
    stdin_open: true
    tty: true
    ports:
      - 3000:3000
      - 3001:3001
    volumes:
      - ${PWD}:/book
    command:
      - serve
      - --hostname
      - \'0.0.0.0\'

make build
make run
make run cmd=""env""
make test
make commit msg=""chore: Add Makefile""

./release.sh
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
nerrad/automations,"on: pull_request
jobs:
  pull-request-automation:
    runs-on: ubuntu-latest
    steps:
      - uses: WordPress/gutenberg/packages/project-management-automation@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          automations: todos


module.exports = {
  // the name of your automation
  name: \'my-automation\',
  // what github action workflow events your automation reacts to.
  events: [ \'pull_request\' ],
  // what github action workflow event actions your automation reacts to.
  actions: [ \'opened\' ],
  // the runner for your automation.
  runner
}

  
const todos = require( \'./automations/todos\' );
const myAutomation = require( \'./automations/my-automation\' );

const moduleNames = [ todos, myAutomation ];

/**
 * @typedef {import(\'./typedefs\').AutomationTask} AutomationTask
 */

/**
 * @type {AutomationTask[]}
 */
const automations = moduleNames.map( ( module ) => module );

module.exports = automations;
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
perl-actions/install-with-cpanm,"- name: install cpanm and multiple modules
  uses: perl-actions/install-with-cpanm@stable
  with:
    install: |
      Simple::Accessor
      Test::Parallel


jobs:
  perl_tester:
    runs-on: ubuntu-latest
    name: ""perl v${{ matrix.perl-version }}""

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - ""5.30""
          - ""5.28""
          - ""5.26""

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v3
      - name: uses install-with-cpanm
        uses: perl-actions/install-with-cpanm@stable
        with:
          cpanfile: ""cpanfile""
          sudo: false
      - run: perl Makefile.PL
      - run: make test

args: ""-L vendor""

args: ""--installdeps .""

uses: perl-actions/install-with-cpanm@stable
run: sudo cpanm Module::To::Install

- name: install cpanm and one module
  uses: perl-actions/install-with-cpanm@stable
  with:
    install: ""Simple::Accessor""

- name: install cpanm and one module
  uses: perl-actions/install-with-cpanm@stable
  with:
    install: |
      Simple::Accessor
      Test::Parallel

- name: install cpanm and files from cpanfile
  uses: perl-actions/install-with-cpanm@stable
  with:
    cpanfile: ""your-cpanfile""

- name: install cpanm and files from cpanfile
  uses: perl-actions/install-with-cpanm@stable
  with:
    install: ""Simple::Accessor""
    tests: true

windows:
  runs-on: windows-latest
  name: ""windows""

  steps:
    - name: Set up Perl
      run: |
        choco install strawberryperl
        echo ""##[add-path]C:\\strawberry\\c\\bin;C:\\strawberry\\perl\\site\\bin;C:\\strawberry\\perl\\bin""

    - name: perl -V
      run: perl -V

    - uses: actions/checkout@v3
    - name: ""install-with-cpanm""
      uses: perl-actions/install-with-cpanm@stable
      with:
        install: |
          abbreviation
          ACH
    - run: perl -Mabbreviation -e1
    - run: perl -MACH -e1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
rtCamp/action-wordpress-org-plugin-deploy,"name: Deploy
on:
  push:
    tags:
      - \'*\'
jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: WordPress Plugin Deploy
      uses: rtCamp/action-wordpress-org-plugin-deploy@master
      env:
        CUSTOM_COMMAND: composer install --no-dev --optimize-autoloader && npm install
          && gulp build
        CUSTOM_PATH: post-contributor
        EXCLUDE_LIST: asset_sources/
        SLUG: plugin-slug
        WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
        WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
MSP-Greg/setup-ruby-pkgs,"- uses: ruby/setup-ruby-pkgs@v1
  with:
    ruby-version:      # passed to ruby/setup-ruby
    bundler:           #   ""    ""   ""     ""    ""
    bundler-cache:     #   ""    ""   ""     ""    ""
    cache-version:     #   ""    ""   ""     ""    ""
    rubygems:          #   ""    ""   ""     ""    ""
    working-directory: #   ""    ""   ""     ""    ""
    apt-get:           # Ubuntu
    brew:              # macOS
    mingw:             # Windows mingw / mswin /ucrt
    msys2:             #         mingw / mswin /ucrt
    mswin:             # Windows mswin - installs MSYS packages
    choco:             #         mswin
    vcpkg:             #         mswin

""--with-opt-dir=#{ENV[\'VCPKG_INSTALLATION_ROOT\']}/installed/x64-windows""
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
AkhileshNS/heroku-deploy,"name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""

git push heroku YOUR_BRANCH:refs/heads/main

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          usedocker: true

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          usedocker: true
          docker_build_args: |
            NODE_ENV
            SECRET_KEY
        env:
          NODE_ENV: production
          SECRET_KEY: ${{ secrets.MY_SECRET_KEY }}

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          buildpack: ""https://github.com/HashNuke/heroku-buildpack-elixir.git""

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          appdir: ""api"" # <- This will point to the api folder in your project

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          branch: ""dev""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          remote_branch: ""main""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          stack: ""container""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          healthcheck: ""https://[YOUR APP\'s NAME].herokuapp.com/health""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          healthcheck: ""https://[YOUR APP\'s NAME].herokuapp.com/health""
          checkstring: ""ok""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          healthcheck: ""https://[YOUR APP\'s NAME].herokuapp.com/health""
          checkstring: ""ok""
          delay: 5

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          healthcheck: ""https://[YOUR APP\'s NAME].herokuapp.com/health""
          checkstring: ""ok""
          rollbackonhealthcheckfailed: true

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
        env:
          HD_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
          HD_RANDOM_DATA: ""Hello""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          env_file: "".env""
        env:
          HD_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
          HD_RANDOM_DATA: ""Hello""

HELLO=world
WORLD=hello

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME"" #Must be unique in Heroku
          heroku_email: ""YOUR EMAIL""
          procfile: ""web: npm start""

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ""YOUR APP\'s NAME""
          heroku_email: ""YOUR EMAIL""
          team: ""THE TEAM\'s NAME""

name: Deploy

on:
  push:
    branches:
      - master # Changing the branch here would also work

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: """"
          heroku_email: ""YOUR EMAIL""
          justlogin: true
      - run: heroku auth:whoami
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
roots/issue-closer-action,"name: Autocloser
on: [issues, pull_request]
jobs:
  autoclose:
    runs-on: ubuntu-latest
    steps:
    - name: Autoclose issues that did not follow issue template
      uses: roots/issue-closer@v1.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        issue-close-message: ""@${issue.user.login} this issue was automatically closed because it did not follow the issue template""
        issue-pattern: "".*guidelines for Contributing.*""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
samuelcolvin/codecov-action,"steps:
- uses: actions/checkout@master
- uses: codecov/codecov-action@v1
  with:
    token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
    file: ./coverage.xml # optional
    flags: unittests # optional
    name: codecov-umbrella # optional
    fail_ci_if_error: true # optional (default = false)

name: Example workflow for Codecov
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@master
    - name: Setup Python  
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
m273d15/java-format-action,"on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check format
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: m273d15/java-format-action@v1.1
      with:
        version: '1.7'
        dir: './java' # Optional default is './'
        pattern: '**/*.java' # Optional default is '**/*.java'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
agentd00nut/jekyll-build-optional-deploy-gh-pages,"name: Jekyll Build - Optional Deploy\r
\r
on:\r
  push:\r
    branches:\r
    - dev\r
\r
jobs: \r
  build_and_deploy:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - uses: actions/checkout@v1\r
      - name: Building a jekyll site from configured directory, maybe deploying it.\r
        env: \r
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}\r
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}\r
          JEKYLL_ROOT: ""MySite/""\r
          REMOTE_BRANCH: ""staging""\r
        uses: agentd00nut/jekyll-build-optional-deploy-gh-pages@master\r
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
akenmorris/install-qt-action,"    - name: Install Qt
      uses: jurplel/install-qt-action@v2

- name: Cache Qt
  id: cache-qt
  uses: actions/cache@v1
  with:
    path: ../Qt
    key: QtCache

- name: Install Qt
  uses: jurplel/install-qt-action@v2
  with:
    cached: ${{ steps.cache-qt.outputs.cache-hit }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
dawidd6/action-send-mail,"- name: Send mail
  uses: dawidd6/action-send-mail@v3
  with:
    connection_url: ${{secrets.MAIL_CONNECTION}}
    server_address: smtp.gmail.com
    server_port: 465
    secure: true
    username: ${{secrets.MAIL_USERNAME}}
    password: ${{secrets.MAIL_PASSWORD}}
    subject: Github Actions job result
    to: obiwan@example.com,yoda@example.com
    from: Luke Skywalker # <user@example.com>
    body: Build job of ${{github.repository}} completed successfully!
    html_body: file://README.html
    cc: kyloren@example.com,leia@example.com
    bcc: r2d2@example.com,hansolo@example.com
    reply_to: luke@example.com
    in_reply_to: <random-luke@example.com>
    ignore_cert: true
    convert_markdown: true
    attachments: attachments.zip,git.diff,./dist/static/*.js
    priority: low
",0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
rzr/fediverse-action,"curl ""https://github.com/rzr/color-sensor-js/commit/867de15f.patch""  | git am
git push

        with:
          access-token: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          host: ""social.bau-ha.us"" # custom host if not ""mastodon.social"" (default)

curl ""https://github.com/rzr/color-sensor-js/commit/cb4512fe.patch"" | git am
git push

(...)
    steps:
      - uses: actions/checkout@v1
      - id: log
        run: echo ""::set-output name=message::$(git log --no-merges -1 --oneline)""
      - uses: rzr/fediverse-action@master
        with:
          access-token: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          message: ""https://github.com/${{ github.repository }}/commit/${{ steps.log.outputs.message }} ~ #FediVerseAction""

---
name: fediverse-action
on: [push]
jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - id: log
        run: echo ""::set-output name=message::$(git log --no-merges -1 --oneline)""
      - if: ""contains(steps.log.outputs.message, \'Release \')""
        uses: rzr/fediverse-action@master
        with:
          access-token: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          message: ""https://github.com/${{ github.repository }}# ${{ steps.log.outputs.message }} ~ #FediVerseAction""
          host: ""mamot.fr"" # If not using default ""mastodon.social""
",0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
BjornLuG/release-for-reddit-action,"name: Release

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: bluwy/release-for-reddit-action@v1
        with:
          username: ${{ secrets.REDDIT_USERNAME }}
          password: ${{ secrets.REDDIT_PASSWORD }}
          app-id: ${{ secrets.REDDIT_APP_ID }}
          app-secret: ${{ secrets.REDDIT_APP_SECRET }}
          subreddit: test # Submit to /r/test
",0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
seravo/action-wordpress-plugin-asset-update,"name: Plugin asset/readme update
on:
  push:
    branches:
    - master
jobs:
  master:
    name: Push to master
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: WordPress.org plugin asset/readme update
      uses: 10up/action-wordpress-plugin-asset-update@master
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Actions-R-Us/actions-tagger,"name: Keep the versions up-to-date

on:
  release:
    types: [published, edited]

jobs:
  actions-tagger:
    runs-on: windows-latest
    steps:
      - uses: Actions-R-Us/actions-tagger@latest
        with:
          publish_latest_tag: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
allenevans/set-env,"name: example-pipeline
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      
      - name: set environment variables
        uses: allenevans/set-env@v2.0.0
        with:
          MY_ENV_VAR: \'my value\'

      - name: Printenv
        run: |
          echo ""MY_ENV_VAR=${MY_ENV_VAR}""
          printenv

    - name: set many environment variables
      uses: allenevans/set-env@v2.0.0
      with:
        VAR_A: abc
        VAR_B: def
        VAR_C: ghi

    myVar: abc => MYVAR=abc
    with space: abc => WITH_SPACE=abc
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
digitalocean/action-doctl,"    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save testing-cluster
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
mikeal/merge-release,"- uses: mikeal/merge-release@master
  env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      DEPLOY_DIR: my/deploy/dir
      SRC_PACKAGE_DIR: my/src/package
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
shinhwagk/actions-crypto,"name: Test actions crypto
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo abc > test.file # test file
      - name: Encryption
        uses: shinhwagk/actions-crypto@0.0.1
        with:
          crypto-path: test.file # file or direcotry
          crypto-action: enc     # enc or dec
          crypto-password:  ${{ secrets.pass }} # passphrase
      - run: cat test.file || cat test.file.enc  # Files are deleted after encryption
      - name: Decryption
        uses: shinhwagk/actions-crypto@0.0.1
        with:
          crypto-path: test.file.enc # file or direcotry
          crypto-action: dec     # enc or dec
          crypto-password:  ${{ secrets.pass }} # passphrase
      - run: cat test.file.enc || cat test.file
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
SonarSource/gh-action_LT_release,"---
name: sonar-release
on:
  release:
    types:
      - published

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    uses: SonarSource/gh-action_release/.github/workflows/main.yaml@v5
    with:
      publishToBinaries: true
      mavenCentralSync: true # for OSS projects only

---
name: my-releasability-check

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number to check releasability on
        required: true

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    uses: SonarSource/gh-action_release/.github/workflows/releasability-check.yaml@<id>

    steps:
      - uses: SonarSource/gh-action_release/main@5.0.0

    steps:
      - uses: SonarSource/gh-action_release/main@v4

git fetch --tags
git update-ref -m ""reset: update branch v4 to tag 4.2.5"" refs/heads/v4 4.2.5
git push origin v4
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
SonarSource/gh-action_dogfood_merge,"uses: SonarSource/gh-action_dogfood_merge@v1
env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
with:
  dogfood-branch: \'dogfood-on-next\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
SonarSource/gh-action_nightly_build,"uses: SonarSource/gh-action_nightly_build@master
env:
  CIRRUS_TOKEN: ${{ secrets.CIRRUS_TOKEN }}
with:
  branch: 'master'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sot/setup-miniconda,"- uses: conda-incubator/setup-miniconda@v2
  with:
    activate-environment: whatever

- uses: conda-incubator/setup-miniconda@v2
  with:
    auto-activate-base: true
    activate-environment: """"

jobs:
  example-1:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu-latest"", ""macos-latest"", ""windows-latest""]
        python-version: [""3.7"", ""2.7""]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

jobs:
  example-2-linux:
    name: Ex2 Linux
    runs-on: ""ubuntu-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-mac:
    name: Ex2 Mac
    runs-on: ""macos-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Sh
        shell: sh -l {0}
        run: |
          conda info
          conda list
      - name: Bash
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-win:
    name: Ex2 Windows
    runs-on: ""windows-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: PowerShell
        shell: powershell
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
      - name: Cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          conda info && conda list

jobs:
  example-3:
    name: Ex3 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
          python-version: 3.5
          condarc-file: etc/example-condarc.yml
          auto-activate-base: false
      - run: |
          conda info
          conda list

jobs:
  example-4:
    name: Ex4 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: foo
          python-version: 3.6
          channels: conda-forge,spyder-ide
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-5:
    name: Ex5 Miniforge for PyPy
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-6:
    name: Ex6 Mamba
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6
          mamba-version: ""*""
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash -l {0}
        run: mamba install jupyterlab

jobs:
  example-7:
    name: Ex7 Explicit
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: etc/example-explicit.conda.lock
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

jobs:
  example-10-miniforge:
    name: Ex10 (${{ matrix.os }}, Miniforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: etc/example-environment.yml
          miniforge-version: latest

jobs:
  example-10-mambaforge:
    name: Ex10 (${{ matrix.os }}, Mambaforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
        include:
          - os: ubuntu
            environment-file: etc/example-environment-no-name.yml
            miniforge-variant: Mambaforge
            miniforge-version: 4.9.2-4
          - os: macos
            environment-file: etc/example-empty-channels-environment.yml
            miniforge-variant: Mambaforge-pypy3
          - os: windows
            environment-file: etc/example-explicit.Windows.conda.lock
            condarc-file: etc/example-condarc.yml
            miniforge-variant: Mambaforge
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file: ${{ matrix.condarc-file }}
          environment-file: ${{ matrix.environment-file }}
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: ${{ matrix.miniforge-version }}
          use-mamba: true

jobs:
  caching-example:
    name: Caching
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles(\'etc/example-environment.yml\') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          channel-priority: strict
          environment-file: etc/example-environment-caching.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/anaconda-client-env

          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/anaconda-client-env

          - os: windows-latest
            label: win-64
            prefix: C:\\Miniconda3\\envs\\anaconda-client-env

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: anaconda-client-env
            use-mamba: true

      - name: Set cache date
        run: echo ""DATE=$(date +\'%Y%m%d\')"" >> $GITHUB_ENV
        
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles(\'etc/example-environment-caching.yml\') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        env:
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n anaconda-client-env -f etc/example-environment-caching.yml
        if: steps.cache.outputs.cache-hit != \'true\'

jobs:
  default-shell:
    name: Default shell
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment-caching.yml
      - run: conda info
      - run: conda list
      - run: conda config --show
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
reviewdog/action-cpplint,"name: Reviewdog
on: [pull_request]

jobs:
  cpplint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: reviewdog/action-cpplint@master
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        flags: --linelength=50 # Optional
        filter: ""-readability/braces\\
          ,-whitespace/braces\\
          ,-whitespace/comments\\
          ,-whitespace/indent\\
          ,-whitespace/newline\\
          ,-whitespace/operators\\
          ,-whitespace/parens\\
          "" # Optional
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
salsify/action-detect-and-tag-new-version,"jobs:
  tag-new-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: salsify/action-detect-and-tag-new-version@v2
        with:
          version-command: |
            cat current-version.txt
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
kt3k/license_checker,"{
  ""**/*.ts"": ""// Copyright 2019 My Name. All rights reserved. MIT license.""
}

name: Check License Lines
on:
  push:
    branches: [master]
jobs:
  check-license-lines:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Check License Lines
      uses: kt3k/license_checker@v1.0.6
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mathieudutour/github-tag-action,"name: Bump version
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

fix(pencil): stop graphite breaking when too much pressure applied

feat(pencil): add 'graphiteWidth' option

perf(pencil): remove graphiteWidth option

BREAKING CHANGE: The graphiteWidth option has been removed.
The default graphite width of 10mm is always used for performance reasons.
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
codelytv/pr-size-labeler,"name: labeler

on: [pull_request]

jobs:
  labeler:
    runs-on: ubuntu-latest
    name: Label the PR size
    steps:
      - uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: \'size/xs\'
          xs_max_size: \'10\'
          s_label: \'size/s\'
          s_max_size: \'100\'
          m_label: \'size/m\'
          m_max_size: \'500\'
          l_label: \'size/l\'
          l_max_size: \'1000\'
          xl_label: \'size/xl\'
          fail_if_xl: \'false\'
          message_if_xl: >
            This PR exceeds the recommended size of 1000 lines.
            Please make sure you are NOT addressing multiple issues with one PR.
            Note this PR might be rejected due to its size.
          github_api_url: \'api.github.com\'
          files_to_ignore: \'\'

files_to_ignore: \'package-lock.json *.lock\'
files_to_ignore: |
  ""package-lock.json""
  ""*.lock""
  ""docs/*""
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
talbring/jenkins-release-drafter,"name: Release Management

on:
  push:
    branches:
      - master

jobs:
  update_draft_release:
    runs-on: ubuntu-latest
    steps:
      - uses: toolmantim/release-drafter@v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$NEXT_PATCH_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$NEXT_PATCH_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
template: |

  $CHANGES

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

exclude-labels:
  - \'skip-changelog\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

yarn

npm test

npm run dev

docker-compose run --rm app npm test

git checkout master && git pull && npm version [major | minor | patch]
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
rbialon/flake8-annotations,"    - name: Setup flake8 annotations
      uses: rbialon/flake8-annotations@v1

name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup flake8 annotations
      uses: rbialon/flake8-annotations@v1
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
SublimeText/syntax-test-action,"name: Syntax Tests

on:
  push:
    paths:
      - \'**.sublime-syntax\'
      - \'**/syntax_test*\'
      - \'**.tmPreferences\'
  pull_request:
    paths:
      - \'**.sublime-syntax\'
      - \'**/syntax_test*\'
      - \'**.tmPreferences\'

jobs:
  syntax_tests:
    name: Syntax Tests (${{ matrix.build }})
    runs-on: ubuntu-latest
    timeout-minutes: 15 # default is 6 hours!
    strategy:
      matrix:
        include:
          - build: latest  # This is the default
          - build: 3210  # Latest known ST3 build with a test binary
    steps:
      - uses: actions/checkout@v3
      - uses: SublimeText/syntax-test-action@v2
        with:
          build: ${{ matrix.build }}

name: Multi Package Syntax Tests

on:
  push:
    paths:
      - \'**.sublime-syntax\'
      - \'**/syntax_test*\'
      - \'**.tmPreferences\'
  pull_request:
    paths:
      - \'**.sublime-syntax\'
      - \'**/syntax_test*\'
      - \'**.tmPreferences\'

jobs:
  syntax_tests:
    name: Syntax Tests (${{ matrix.build }})
    runs-on: ubuntu-latest
    timeout-minutes: 15         # default is 6 hours!
    env:
      package_name: My Package  # install name as specified at packagecontrol.io
    strategy:
      matrix:
        include:
          - build: latest       # This is the default
            packages: master    # default packages revision to use
            less_ref: master    # LESS package revision to use
            sass_ref: master    # SASS package revision to use
          - build: 3210         # Latest known ST3 build with a test binary
            packages: v3189     # default packages revision to use
            less_ref: master    # LESS package revision to use
            sass_ref: master    # SASS package revision to use
    steps:
      - name: Checkout ${{ env.package_name }} (primary package)
        uses: actions/checkout@v3
        with:
          path: ${{ env.package_name }}
      - name: Checkout LESS (dependency)
        uses: actions/checkout@v3
        with:
          repository: danro/LESS-sublime
          ref: ${{ matrix.less_ref }}
          path: LESS
      - name: Checkout Sass/Scss (dependency)
        uses: actions/checkout@v3
        with:
          repository: braver/SublimeSass
          ref: ${{ matrix.sass_ref }}
          path: Sass
      - name: Run Syntax Tests for Sublime Text ${{ matrix.build }}
        uses: SublimeText/syntax-test-action@v2
        with:
          build: ${{ matrix.build }}
          package_name: ${{ env.package_name }}
          package_root: ${{ env.package_name }}
          default_packages: ${{ matrix.packages }}
          default_tests: false  # default
          additional_packages: LESS,Sass
          additional_tests: false  # default
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
masa-iwasaki/setup-rbenv,"steps:
- uses: actions/checkout@master
- uses: masa-iwasaki/setup-rbenv@v1
- name: Install Ruby
  run: |
    eval ""$(rbenv init -)""
    rbenv install -s `cat .ruby-version` # or specify the version you want

- name: Run bundler
  run: |
    eval ""$(rbenv init -)""
    bundle install --path vendor/bundle

steps:
- uses: actions/checkout@master
- uses: masa-iwasaki/setup-rbenv@v1

- name: Cache RBENV_ROOT
  uses: actions/cache@v1
  id: cache_rbenv
  with:
    path: /home/runner/.rbenv
    key: ${{ runner.os }}-rbenv-${{ hashFiles(\'**/.ruby-version\') }}
    restore-keys: |
      {{ runner.os }}-rbenv-

- name: Install Ruby
  run: |
    eval ""$(rbenv init -)""
    rbenv install -s `cat .ruby-version`
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
aktions/codeclimate-test-reporter,"- name: Code Climate Test Reporter
  uses: aktions/codeclimate-test-reporter@v1
  with:
    codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
    command: after-build
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sue445/setup-rbenv,"steps:
- uses: actions/checkout@master
- uses: masa-iwasaki/setup-rbenv@v1
- name: Install Ruby
  run: |
    eval ""$(rbenv init -)""
    rbenv install -s `cat .ruby-version` # or specify the version you want

- name: Run bundler
  run: |
    eval ""$(rbenv init -)""
    bundle install --path vendor/bundle

steps:
- uses: actions/checkout@master
- uses: masa-iwasaki/setup-rbenv@v1

- name: Cache RBENV_ROOT
  uses: actions/cache@preview
  id: cache_rbenv
  with:
    path: /home/runner/.rbenv
    key: ${{ runner.os }}-rbenv

- name: Install Ruby
  run: |
    eval ""$(rbenv init -)""
    rbenv install -s `cat .ruby-version`
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
benc-uk/workflow-dispatch,"workflow: My Workflow
workflow: my-workflow.yaml
workflow: 1218419

- name: Invoke workflow without inputs
  uses: benc-uk/workflow-dispatch@v1
  with:
    workflow: My Workflow

- name: Invoke workflow with inputs
  uses: benc-uk/workflow-dispatch@v1
  with:
    workflow: Another Workflow
    inputs: \'{ ""message"": ""blah blah"", ""something"": true }\'

- name: Invoke workflow in another repo with inputs
  uses: benc-uk/workflow-dispatch@v1
  with:
    workflow: my-workflow.yaml
    repo: benc-uk/example
    inputs: \'{ ""message"": ""blah blah"", ""something"": false }\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
StephaneBour/actions-php-lint,"- name: PHP Syntax Checker (Lint)
  uses: StephaneBour/actions-php-lint@8.2
  with:
    dir: \'./src\'

StephaneBour/actions-php-lint@8.2
StephaneBour/actions-php-lint@8.1
StephaneBour/actions-php-lint@8.0
StephaneBour/actions-php-lint@7.4
StephaneBour/actions-php-lint@7.3
StephaneBour/actions-php-lint@7.2
StephaneBour/actions-php-lint@7.1
StephaneBour/actions-php-lint@7.0
StephaneBour/actions-php-lint@5.6
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
varunsridharan/action-repository-meta,"  - name: ""Repository Meta""
    uses: varunsridharan/action-repository-meta@main
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  - run: echo $REPOSITORY_HOMEPAGE_URL
    env:
      REPOSITORY_HOMEPAGE_URL: ${{ env.REPOSITORY_HOMEPAGE_URL }}

  - name: ""Repository Meta""
    uses: varunsridharan/action-repository-meta@main
    with:
      REPOSITORY: octocat/Hello-World
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  - run: echo $REPOSITORY_HOMEPAGE_URL
    env:
      REPOSITORY_HOMEPAGE_URL: ${{ env.REPOSITORY_HOMEPAGE_URL }}
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
varunsridharan/action-vs-utility,"- Public Use Of This Action Is Not ADVISED. \xe2\x9a\xa0\xef\xb8\x8f  Use @ Your OWN RISK
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
varunsridharan/action-apigen,"name: ON_PUSH

on:
  push:
    branches:
      - master

jobs:
  Document_Generator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: \xf0\x9f\x93\x9d ApiGen PHP Document Generator
      uses: varunsridharan/action-apigen@2.0
      with:
        cached_apigen: 'no'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: ON_PUSH

on:
  push:
    branches:
      - master

jobs:
  Document_Generator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: \xf0\x9f\x93\x9d ApiGen PHP Document Generator
      uses: varunsridharan/action-apigen@2.0
      with:
        cached_apigen: 'yes'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0
m1ner79/Github-Twittction,"name: \'testing workflow\'
  push:
    branches:
      - master
jobs:
  test:
    name: posting_on_twitter
    runs-on: ubuntu-latest
    steps:
      - name: tweety
        uses: m1ner79/Github-Twittction@{VERSION}
        with:
            twitter_status: ""\xe2\x84\x8d\xf0\x9d\x95\x96\xf0\x9d\x95\xaa \xf0\x9d\x95\xaa\xf0\x9d\x95\xa0\xf0\x9d\x95\xa6! \xf0\x9f\x91\x8b \xf0\x9d\x95\x8e\xf0\x9d\x95\x96 ${{ github.event.repository.owner.name}} \xf0\x9d\x95\x99\xf0\x9d\x95\x92\xf0\x9d\x95\xa7\xf0\x9d\x95\x96 \xf0\x9d\x95\x92 \xf0\x9d\x95\x9f\xf0\x9d\x95\x96\xf0\x9d\x95\xa8 \xf0\x9d\x95\x94\xf0\x9d\x95\xa0\xf0\x9d\x95\x9e\xf0\x9d\x95\x9e\xf0\x9d\x95\x9a\xf0\x9d\x95\xa5 \xf0\x9d\x95\x9a\xf0\x9d\x95\x9f \xf0\x9d\x95\xa5\xf0\x9d\x95\x99\xf0\x9d\x95\x96 \xf0\x9d\x95\x9e\xf0\x9d\x95\x92\xf0\x9d\x95\xa4\xf0\x9d\x95\xa5\xf0\x9d\x95\x96\xf0\x9d\x95\xa3 \xf0\x9d\x95\x93\xf0\x9d\x95\xa3\xf0\x9d\x95\x92\xf0\x9d\x95\x9f\xf0\x9d\x95\x94\xf0\x9d\x95\x99 \xf0\x9f\xa5\xb3 \
 \xf0\x9d\x95\x80\xf0\x9d\x95\xa5\xf0\x9d\x95\xa4 \xf0\x9d\x95\x9f\xf0\x9d\x95\x92\xf0\x9d\x95\x9e\xf0\x9d\x95\x96 \xf0\x9d\x95\x9a\xf0\x9d\x95\xa4 ${{ github.event.commits[0].message }} \xf0\x9f\x98\xb1 \
 \xe2\x84\x82\xf0\x9d\x95\x99\xf0\x9d\x95\x96\xf0\x9d\x95\x94\xf0\x9d\x95\x9c \xf0\x9d\x95\x9a\xf0\x9d\x95\xa5 \xf0\x9d\x95\xa0\xf0\x9d\x95\xa6\xf0\x9d\x95\xa5 \xf0\x9d\x95\x99\xf0\x9d\x95\x96\xf0\x9d\x95\xa3\xf0\x9d\x95\x96 \xf0\x9f\x91\x87 \
 ${{ github.event.commits[0].url }}""
            twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            twitter_access_token_key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }} 
            twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 

name: \'testing workflow\'
on: 
  pull_request:
    types:
      - opened
jobs:
  test:
    name: posting_on_twitter
    runs-on: ubuntu-latest
    steps:
      - name: tweety
        uses: m1ner79/Github-Twittction@{VERSION}
        with:
            twitter_status: ""\xf0\x9f\x85\x86\xf0\x9f\x84\xb4 \xf0\x9f\x84\xb2\xf0\x9f\x84\xb0\xf0\x9f\x84\xbd \xf0\x9f\x85\x82\xf0\x9f\x84\xb4\xf0\x9f\x84\xb4 \xf0\x9f\x84\xb0 \xf0\x9f\x84\xbf\xf0\x9f\x85\x84\xf0\x9f\x84\xbb\xf0\x9f\x84\xbb_\xf0\x9f\x85\x81\xf0\x9f\x84\xb4\xf0\x9f\x85\x80\xf0\x9f\x85\x84\xf0\x9f\x84\xb4\xf0\x9f\x85\x82\xf0\x9f\x85\x83 ${{github.event.pull_request.title}} \xf0\x9f\x84\xb2\xf0\x9f\x85\x81\xf0\x9f\x84\xb4\xf0\x9f\x84\xb0\xf0\x9f\x85\x83\xf0\x9f\x84\xb4\xf0\x9f\x84\xb3 \xf0\x9f\x84\xb1\xf0\x9f\x85\x88 ${{github.event.pull_request.head.repo.full_name}} \xf0\x9f\x84\xb2\xf0\x9f\x84\xbb\xf0\x9f\x84\xb8\xf0\x9f\x84\xb2\xf0\x9f\x84\xba \xf0\x9f\x84\xb7\xf0\x9f\x84\xb4\xf0\x9f\x85\x81\xf0\x9f\x84\xb4 ${{github.event.pull_request.html_url}} \xf0\x9f\x84\xb0\xf0\x9f\x84\xbd\xf0\x9f\x84\xb3 \xf0\x9f\x85\x82\xf0\x9f\x84\xb4\xf0\x9f\x84\xb4 \xf0\x9f\x84\xb8\xf0\x9f\x85\x83 \xf0\x9f\x85\x88\xf0\x9f\x84\xbe\xf0\x9f\x85\x84\xf0\x9f\x85\x81\xf0\x9f\x85\x82\xf0\x9f\x84\xb4\xf0\x9f\x84\xbb\xf0\x9f\x84\xb5""
            twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            twitter_access_token_key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }} 
            twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 

name: \'testing workflow\'
on: 
  release:
    types: 
      - published
jobs:
  test:
    name: posting_on_twitter
    runs-on: ubuntu-latest
    steps:
      - name: tweety
        uses: m1ner79/Github-Twittction@{VERSION}
        with:
            twitter_status: ""\xe2\x93\x81\xe2\x93\x9e\xe2\x93\x9e\xe2\x93\x9a\xe2\x93\xa2 \xe2\x93\x9b\xe2\x93\x98\xe2\x93\x9a\xe2\x93\x94 \xe2\x93\x90 \xe2\x93\x9d\xe2\x93\x94\xe2\x93\xa6 \xe2\x93\xa1\xe2\x93\x94\xe2\x93\x9b\xe2\x93\x94\xe2\x93\x90\xe2\x93\xa2\xe2\x93\x94 ${{github.event.release.tag_name}} \xe2\x93\x98\xe2\x93\xa2 \xe2\x93\x98\xe2\x93\x9d ${{github.event.repository.full_name}}\xe2\x80\xaf.\xe2\x93\x82\xe2\x93\x9e\xe2\x93\xa1\xe2\x93\x94 \xe2\x93\x93\xe2\x93\x94\xe2\x93\xa3\xe2\x93\x90\xe2\x93\x98\xe2\x93\x9b\xe2\x93\xa2 \xe2\x93\x90\xe2\x93\xa1\xe2\x93\x94 \xe2\x93\x90\xe2\x93\xa5\xe2\x93\x90\xe2\x93\x98\xe2\x93\x9b\xe2\x93\x90\xe2\x93\x91\xe2\x93\x9b\xe2\x93\x94 \xe2\x93\x97\xe2\x93\x94\xe2\x93\xa1\xe2\x93\x94 ${{github.event.release.html_url}}""
            twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            twitter_access_token_key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }} 
            twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 

name: \'testing workflow\'
on: 
  push:
    branches:
      - master
jobs:
  test:
    name: posting_on_twitter
    runs-on: ubuntu-latest
    steps:
      - name: tweety
        uses: m1ner79/Github-Twittction@{VERSION}
        with:
 \xf0\x9d\x95\x80\xf0\x9d\x95\xa5\xf0\x9d\x95\xa4 \xf0\x9d\x95\x9f\xf0\x9d\x95\x92\xf0\x9d\x95\x9e\xf0\x9d\x95\x96 \xf0\x9d\x95\x9a\xf0\x9d\x95\xa4 ${{ github.event.commits[0].message }} \xf0\x9f\x98\xb1 \
 \xe2\x84\x82\xf0\x9d\x95\x99\xf0\x9d\x95\x96\xf0\x9d\x95\x94\xf0\x9d\x95\x9c \xf0\x9d\x95\x9a\xf0\x9d\x95\xa5 \xf0\x9d\x95\xa0\xf0\x9d\x95\xa6\xf0\x9d\x95\xa5 \xf0\x9d\x95\x99\xf0\x9d\x95\x96\xf0\x9d\x95\xa3\xf0\x9d\x95\x96 \xf0\x9f\x91\x87 \
 ${{ github.event.commits[0].url }}""
            twitter_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }} 
            twitter_consumer_secret: ${{ secrets.TWITTER_CONSUMER_SECRET }} 
            twitter_access_token_key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }} 
            twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }} 

push default message:
`${payload.pusher.name} just created a commit to ${payload.repository.full_name}. More details are available here: ${payload.commits[0].url}`

pull_request default message:
`${payload.pull_request.head.repo.full_name} just created a pull request: ${payload.pull_request.title}. More info is available here: ${payload.pull_request.html_url}`;

release default message:
`A new release ${payload.release.tag_name} is in ${payload.repository.full_name}. More details are available here ${payload.release.html_url}`;

",0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pxgamer/composer-action,"on: push
name: CI
jobs:
  composer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: pxgamer/composer-action@master
        with:
          command: install --optimize-autoloader --prefer-dist
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
varunsridharan/action-wp-org-deploy,".wordpress-org
.github

/.gitattributes
/.gitignore

name: Deploy to WordPress.org
on:
  push:
    branches:
    - refs/tags/*
jobs:
  tag:
    name: New tag
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: WordPress Plugin Deploy
      uses: varunsridharan/action-wp-org-deploy@master
      with:
        WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
        WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
        SLUG: my-super-cool-plugin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
patrickjahns/version-drafter-action,"
name: Update Releaseinfo
on:
  push:
    branches:
      - master

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        with:
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: echo calculated version
        run: |
          echo ""version: ${{ steps.version.outputs.next-version }}""


name: Update Releaseinfo
on:
  push:
    branches:
      - master

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: release-drafter/release-drafter@master
        with:
          version: ${{ format(\'v{0}\', steps.version.outputs.next-version) }}
          tag: ${{ format(\'v{0}\', steps.version.outputs.next-version) }}
          name: ${{ format(\'v{0}\', steps.version.outputs.next-version) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

major-labels: [\'semver:major\']
minor-labels: [\'semver:minor\',\'enhancement\']
patch-labels: [\'semver:patch\',\'bug\']
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
mikefarah/yq,"yq \'.a.b[0].c\' file.yaml

yq \'.a.b[0].c\' < file.yaml

yq -i \'.a.b[0].c = ""cool""\' file.yaml

NAME=mike yq -i \'.a.b[0].c = strenv(NAME)\' file.yaml

yq ea \'. as $item ireduce ({}; . * $item )\' path/to/*.yml

yq -i \'
  .a.b[0].c = ""cool"" |
  .x.y.z = ""foobar"" |
  .person.name = strenv(NAME)
\' file.yaml

yq -Poy sample.json

wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\\
  tar xz && mv ${BINARY} /usr/bin/yq

wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq &&\\
    chmod +x /usr/bin/yq

wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\\
    chmod +x /usr/bin/yq

brew install yq

snap install yq

sudo cat /etc/myfile | yq \'.a.path\'

sudo cat /etc/myfile | yq \'.a.path = ""value""\' | sudo sponge /etc/myfile

sudo cat /etc/myfile | yq \'.a.path = ""value""\' | sudo tee /etc/myfile.tmp
sudo mv /etc/myfile.tmp /etc/myfile
rm /etc/myfile.tmp

docker run --rm -v ""${PWD}"":/workdir mikefarah/yq [command] [flags] [expression ]FILE...

podman run --rm -v ""${PWD}"":/workdir mikefarah/yq [command] [flags] [expression ]FILE...

docker run -i --rm mikefarah/yq \'.this.thing\' < myfile.yml

podman run -i --rm mikefarah/yq \'.this.thing\' < myfile.yml

docker run --rm -it -v ""${PWD}"":/workdir --entrypoint sh mikefarah/yq

podman run --rm -it -v ""${PWD}"":/workdir --entrypoint sh mikefarah/yq

yq() {
  docker run --rm -i -v ""${PWD}"":/workdir mikefarah/yq ""$@""
}

yq() {
  podman run --rm -i -v ""${PWD}"":/workdir mikefarah/yq ""$@""
}

docker run --user=""root"" -it --entrypoint sh mikefarah/yq

podman run --user=""root"" -it --entrypoint sh mikefarah/yq

FROM mikefarah/yq

USER root
RUN apk add --no-cache bash
USER yq

FROM mikefarah/yq

USER root
RUN apk add --no-cache tzdata
USER yq

-v ""${PWD}"":/workdir:z

  - name: Set foobar to cool
    uses: mikefarah/yq@master
    with:
      cmd: yq -i \'.foo.bar = ""cool""\' \'config.yml\'
  - name: Get an entry with a variable that might contain dots or spaces
    id: get_username
    uses: mikefarah/yq@master
    with:
      cmd: yq \'.all.children.[""${{ matrix.ip_address }}""].username\' ops/inventories/production.yml
  - name: Reuse a variable obtained in another step
    run: echo ${{ steps.get_username.outputs.result }}

go install github.com/mikefarah/yq/v4@latest

nix profile install nixpkgs#yq-go

webi yq

pacman -S go-yq

choco install yq

sudo port selfupdate
sudo port install yq

Usage:
  yq [flags]
  yq [command]

Examples:

yq \'.stuff\' < myfile.yml # outputs the data at the ""stuff"" node from ""myfile.yml""

yq -i \'.stuff = ""foo""\' myfile.yml # update myfile.yml inplace


Available Commands:
  completion       Generate the autocompletion script for the specified shell
  eval             (default) Apply the expression to each document in each yaml file in sequence
  eval-all         Loads _all_ yaml documents of _all_ yaml files and runs expression once
  help             Help about any command
  shell-completion Generate completion script

Flags:
  -C, --colors                        force print with colors
  -e, --exit-status                   set exit status if there are no matches or null or false is returned
  -f, --front-matter string           (extract|process) first input as yaml front-matter. Extract will pull out the yaml content, process will run the expression against the yaml content, leaving the remaining data intact
      --header-preprocess             Slurp any header comments and separators before processing expression. (default true)
  -h, --help                          help for yq
  -I, --indent int                    sets indent level for output (default 2)
  -i, --inplace                       update the file inplace of first file given.
  -p, --input-format string           [yaml|y|xml|x] parse format for input. Note that json is a subset of yaml. (default ""yaml"")
  -M, --no-colors                     force print with no colors
  -N, --no-doc                        Don\'t print document separators (---)
  -n, --null-input                    Don\'t read input, simply evaluate the expression given. Useful for creating docs from scratch.
  -o, --output-format string          [yaml|y|json|j|props|p|xml|x] output format type. (default ""yaml"")
  -P, --prettyPrint                   pretty print, shorthand for \'... style = """"\'
  -s, --split-exp string              print each result (or doc) into a file named (exp). [exp] argument must return a string. You can use $index in the expression as the result counter.
      --unwrapScalar                  unwrap scalar, print the value with no quotes, colors or comments (default true)
  -v, --verbose                       verbose mode
  -V, --version                       Print version information and quit
      --xml-attribute-prefix string   prefix for xml attributes (default ""+"")
      --xml-content-name string       name for xml content (if no attribute name is present). (default ""+content"")

Use ""yq [command] --help"" for more information about a command.
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
github-actions-x/commit,"name: publish

on:
  push:
    branches:
    - master
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@master
      with:
        ref: master
    - name: build
      uses: github-actions-x/hugo@master
    - name: push
      uses: github-actions-x/commit@v2.9
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push-branch: 'master'
        commit-message: 'publish'
        force-add: 'true'
        files: a.txt b.txt c.txt dirA/ dirB/ dirC/a.txt
        name: commiter name
        email: my.github@email.com 


name: Node CI

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 10.x
          - 12.x
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: generate benchmarks
        run: |
          npm run generate-some-files-for-specific-node-version
      - name: push
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: master
          commit-message: '${{ matrix.node-version }} adds auto-generated benchmarks and bar graph'
          rebase: 'true' # pull and rebase before commit
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
reviewdog/action-golangci-lint,"on: [pull_request]
jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0



      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

name: reviewdog
on: [pull_request]
jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

name: reviewdog
on: [pull_request]
jobs:

  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          go_version: ""1.17""

          golangci_lint_flags: ""--config=.github/.golangci.yml ./testdata""
          workdir: subdirectory/

  golint:
    name: runner / golint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: golint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: ""--disable-all -E golint""
          tool_name: golint # Change reporter name.
          level: warning # GitHub Status Check won\'t become failure with this level.

  errcheck:
    name: runner / errcheck
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: errcheck
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: ""--disable-all -E errcheck""
          tool_name: errcheck
          level: info

  with_cache:
    name: runner / errcheck
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          cache: false

name: reviewdog
on: [pull_request]
jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: ""--enable-all --exclude-use-default=false""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
docker-practice/actions-setup-docker,"on:
  push

name: ci

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: docker-practice/actions-setup-docker@master
      timeout-minutes: 12
    - run: |
        set -x

        docker version

        docker run --rm hello-world
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
egorpugin/sw-action,"steps:
- uses: egorpugin/sw-action@master

- name: build
  run: ./sw build
",1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
andymckay/pycodestyle-action,"
- name: Python Style Checker
  uses: andymckay/pycodestyle-action@0.1.3
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions-hub/gcloud,"- uses: actions-hub/gcloud@master
  env:
    PROJECT_ID: test
    APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  with:
    args: info

- uses: actions-hub/gcloud@master
  env:
    PROJECT_ID: test
    APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  with:
    args: cp your-file.txt gs://your-bucket/
    cli: gsutil

- uses: actions-hub/gcloud@master
  env:
    PROJECT_ID: test
    APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  with:
    args: create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0
    cli: kubectl

- id: google_cloud_auth
  name: Authenticate to Google Cloud
  uses: google-github-actions/auth@v1
  with:
    workload_identity_provider: \'projects/${{ secrets.gcp_project_number }}/locations/global/workloadIdentityPools/${{ secrets.workload_identity_pool }/providers/${{ secrets.workload_identity_provider }}\'
    service_account: \'${{ secrets.workload_identity_service_account }}@${{ secrets.gcp_project_name }}.iam.gserviceaccount.com\'
    token_format: \'access_token\'

- uses: actions-hub/gcloud@master
  env:
    PROJECT_ID: ${{ secrets.gcp_project_name }}
    CLOUDSDK_AUTH_ACCESS_TOKEN: \'${{ steps.google_cloud_auth.outputs.access_token }}\'
  with:
    args: info

name: gcloud
on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          args: app deploy app.yaml

name: gcloud
on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: ""deploy to project A""  
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID_A}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          args: app deploy app.yaml
      
      - name: ""deploy to project B""  
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID_B}}
        with:
          args: app deploy app.yaml

name: gcloud
on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions-hub/gcloud@271.0.0
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          args: app deploy app.yaml
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Gottox/irc-message-action,"on: [push]

jobs:
  notification:
    runs-on: ubuntu-latest
    name: Notifications
    steps:
    - name: IRC notification
      uses: Gottox/irc-message-action@v2
      with:
        channel: \'##mychannel\'
        nickname: mynickname
        message: |-
          ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Chain
    steps:
    - name: Acknowledge
      id: acknowledge
      uses: Gottox/irc-message-action@v2
      with:
        channel: \'##mychannel\'
        nickname: mynickname
        response_allow_from: Operator1, Operator2, Operator3
        response_timeout: 18000
        message: |-
          ${{ github.actor }} pushed something: ${{ github.event.compare }}
          Please acknowledge with ""ok""!
    - name: Print Acknowledger
      run: echo ""${{ steps.response.outputs.response_from }}""
    - name: Check Acknowledge
      run: test ""${{ steps.response.outputs.response }}"" = ""ok""
    - name: Deploy
      run: ./deploy.sh
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
rips/github-action-scan,"steps:
- uses: actions/checkout@v1
  with:
    fetch-depth: 1
- uses: rips/github-action-scan@v1
  env:
    RIPS_BASE_URI: ""https://api-3.ripstech.com""
    RIPS_EMAIL: ${{ secrets.RIPS_EMAIL }}
    RIPS_PASSWORD: ${{ secrets.RIPS_PASSWORD }}
  with:
    application-id: 923
    additional-parameters: -t critical:10 
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
helaili/jekyll-action,"source \'https://rubygems.org\'

gem \'jekyll\', \'~> 3.8.5\'
gem \'coderay\', \'~> 1.1.0\'

group :jekyll_plugins do
  gem \'jekyll-asciidoc\', \'~> 2.1.1\'
end


asciidoc: {}
asciidoctor:
  base_dir: :docdir
  safe: unsafe
  attributes:
    - idseparator=_
    - source-highlighter=coderay
    - icons=font

git switch --orphan gh-pages
git commit --allow-empty -m ""Initial commit on orphan branch""
git push -u origin gh-pages

name: Testing the GitHub Pages publication

on:
  push

jobs:
  jekyll:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles(\'**/Gemfile\') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - uses:  helaili/jekyll-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: helaili/jekyll-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        jekyll_src: \'sample_site\'

    - uses: helaili/jekyll-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        target_branch: \'gh-pages\'

keep_files: [.git, hello.html]

... 
  publish-current-version: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Run with dest path
      uses: helaili/jekyll-build@v2
      with:
        target_branch: gh-pages
        target_path: /
        keep_history: true
        token: ${{ secrets.GITHUB_TOKEN }}

  publish-v2-version: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: v2.0
    - name: Run with dest path
      uses: helaili/jekyll-build@v2
      with:
        target_branch: gh-pages
        target_path: v2.0
        keep_history: true
        token: ${{ secrets.GITHUB_TOKEN }}
  
  publish-v1-version: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: v1.0
    - name: Run with dest path
      uses: helaili/jekyll-build@v2
      with:
        target_branch: gh-pages
        target_path: v1.0        
        keep_history: true
        token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
thraxil/django-deploy-action,"action ""deploy"" {
  needs = ""docker push""
  uses = ""thraxil/django-deploy-action@master""
  secrets = [
     ""PRIVATE_KEY"",
     ""KNOWN_HOSTS"",
     ""WEB_HOSTS"",
  ]
  env = {
    SSH_USER = ""anders""
    APP = ""mithras""
  }
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
juankaram/sentry-release,"workflow ""Release a new version"" {
  on = ""push""
  resolves = ""release version""
}

action ""release version"" {
  uses = ""juankaram/sentry-release@master""
  secrets = [""SENTRY_AUTH_TOKEN""]
  env = {
    SENTRY_ORG     = ""foo""
    SENTRY_PROJECT = ""bar""
    ENVIRONMENT    = ""development""
  }
}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
toshimaru/auto-author-assign,"name: Auto Author Assign

on:
  pull_request_target:
    types: [ opened, reopened ]

permissions:
  pull-requests: write

jobs:
  assign-author:
    runs-on: ubuntu-latest
    steps:
      - uses: toshimaru/auto-author-assign@v1.6.2

jobs:
  assign-author:
    runs-on: ubuntu-latest
    steps:
      - uses: toshimaru/auto-author-assign
        with:
          repo-token: ${{ secrets.YOUR_TOKEN }}

on:
  issues:
    types: [ opened, reopened ]
  pull_request_target:
    types: [ opened, reopened ]

permissions:
  issues: write
  pull-requests: write

jobs:
  ...
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pullreminders/slack-action,"- name: Notify slack
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  uses: pullreminders/slack-action@master
  with:
    args: \'{\\""channel\\"":\\""C1234567890\\"",\\""text\\"":\\""Hello world\\""}\'

- name: Notify slack
  env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  uses: pullreminders/slack-action@master
  with:
    args: \'{\\""channel\\"":\\""C1234567890\\"",\\""text\\"":\\""Hello world\\""}\'

https://myworkspace.slack.com/messages/CHANNEL_ID/
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
nuuday/github-changelog-action,"name: Build and release
on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: nuuday/github-changelog-action@v1.0.0
        with:
          next_version: ""1.0.0""      
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jandelgado/gcov2lcov-action,"uses: jandelgado/gcov2lcov-action@v1
with:
  infile: coverage.out        # optional, default filename is `coverage.out`
  outfile: coverage.lcov      # optional, default filename is `coverage.lcov`
  version: v1.0.4             # optional, use specific `gcov2lcov` release version
  working-directory: testdata # optional, change working directory

coverage:
  runs-on: ubuntu-latest
  steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Calc coverage
      run: go test -v -covermode=count -coverprofile=coverage.out
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1
    - name: Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: coverage.lcov
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gleam-lang/setup-erlang,"on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - uses: gleam-lang/setup-erlang@v1.1.3
        with:
          otp-version: ""23.2""
      - run: rebar3 eunit

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: [""23.1"", ""23.2""]
    steps:
      - uses: actions/checkout@v2.0.0
      - uses: gleam-lang/setup-erlang@v1.1.3
        with:
          otp-version: ${{matrix.otp}}
      - run: rebar3 eunit

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: [\'5432:5432\']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2.0.0
      - uses: gleam-lang/setup-erlang@v1.1.3
        with:
          otp-version: ""23.2""
      - run: rebar3 eunit

on: push

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - name: Install Erlang/OTP
        uses: gleam-lang/setup-erlang@v1.1.3
        with:
          otp-version: ""23.2""
        id: install_erlang
      - name: Run erl
        run: |
          $env:PATH = ""${{ steps.install_erlang.outputs.erlpath }}\\bin;$env:PATH""
          & erl.exe -eval \'erlang:display({otp_release, erlang:system_info(otp_release)}), halt().\' -noshell
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
fabacab/jekyll-builder-for-github-pages-action,"- name: Build Jekyll site.
  uses: fabacab/jekyll-builder-for-github-pages-action@v1 # Or whatever ""@ref"" you want.

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    jekyll_build_opts: --future

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: |
      echo ""Packaged bundler version: $(bundle --version)""
      echo ""Updating bundler...""
      gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    secret_gh_pages_api_token: ${{ secrets.YOUR_SECRET_VARIABLE }}

---
name: Publish to GitHub Pages

on:
  push:
    branches:
      - jekyll

jobs:
  build-and-publish:
    runs-on: ubuntu-latest # This job uses a GitHub-hosted runner.

    steps:
      - uses: actions/checkout@v2

      - uses: fabacab/jekyll-builder-for-github-pages-action@master
        with:
          secret_gh_pages_api_token: ${{ secrets.GH_PAGES_TOKEN }}

on:
  schedule:
    - cron:  \'0 */12 * * *\' # Rebuild twice a day (every twelve hours on the hour).

  push:
    branches:
      - jekyll
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
kinow/jekyll-builder-for-github-pages-action,"- name: Build Jekyll site.
  uses: fabacab/jekyll-builder-for-github-pages-action@v1 # Or whatever ""@ref"" you want.

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    jekyll_build_opts: --future

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    pre_build_commands: |
      echo ""Packaged bundler version: $(bundle --version)""
      echo ""Updating bundler...""
      gem install bundler

- uses: fabacab/jekyll-builder-for-github-pages-action@master
  with:
    secret_gh_pages_api_token: ${{ secrets.YOUR_SECRET_VARIABLE }}

---
name: Publish to GitHub Pages

on:
  push:
    branches:
      - jekyll

jobs:
  build-and-publish:
    runs-on: ubuntu-latest # This job uses a GitHub-hosted runner.

    steps:
      - uses: actions/checkout@v2

      - uses: fabacab/jekyll-builder-for-github-pages-action@master
        with:
          secret_gh_pages_api_token: ${{ secrets.GH_PAGES_TOKEN }}

on:
  schedule:
    - cron:  \'0 */12 * * *\' # Rebuild twice a day (every twelve hours on the hour).

  push:
    branches:
      - jekyll
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
two-pack/redmine-plugin-test-action,"- name: Redmine plugin test
  uses: two-pack/redmine-plugin-test-action@v2
  with:
    plugin_name: redmine_auto_assign_group
    redmine_version: v4.1
    ruby_version: v2.6
    database: sqlite3
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Yikun/hub-mirror-action,"steps:
- name: Mirror the Github organization repos to Gitee.
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/kunpengcompute
    dst: gitee/kunpengcompute
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    account_type: org

- name: Organization mirror
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/kunpengcompute
    dst: gitee/kunpengcompute
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    account_type: org

- name: Single repo mirror
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    white_list: ""hub-mirror-action""
    black_list: ""hashes""

- name: Black list
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    static_list: ""hub-mirror-action""

- name: ssh clone style
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    clone_style: ""ssh""

- name: Mirror with specific cache
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    cache_path: /github/workspace/hub-mirror-cache

- name: Mirror with force push (git push -f)
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    force_update: true
    debug: true

- name: Mirror with force push (git push -f)
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    force_update: true
    timeout: \'1h\'

- name: mirror with mappings
  uses: Yikun/hub-mirror-action@mappings
  with:
    src: github/yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    mappings: ""yikun.github.com=>blog""
    static_list: ""yikun.github.com""

- name: Get repository list exclude private and fork
  id: repo
  uses: yi-Xu-0100/repo-list-generator@v1.0.1
- name: Mirror repository list exclude private and fork
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    static_list: ${{ steps.repo.outputs.repoList }}

- name: Mirror with lfs (git lfs fetch/push --all)
  uses: Yikun/hub-mirror-action@master
  with:
    src: github/Yikun
    dst: gitee/yikunkero
    dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
    dst_token: ${{ secrets.GITEE_TOKEN }}
    lfs: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
n1hility/cancel-previous-runs,"name: Cleanup Duplicate Branches and PRs  
on:
  schedule:
    - cron:  \'*/15 * * * *\'
cancel-runs:
  if: github.repository == \'foo-org/my-repo\'
  runs-on: ubuntu-latest
    steps:
      - uses: n1hility/cancel-previous-runs@v3
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: my-heavy-workflow.yml

  test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: n1hility/cancel-previous-runs@v3
      with: 
        token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
wanduow/action-cloudsmith-upload-packages,"distro_version1/*.[deb|rpm]
distro_version2/*.[deb|rpm]
distro_versionN/*.[deb|rpm]

uses: wandnz/action-cloudsmtih-upload-packages@v1
with:
  path: packages/
  repo: salcock/libtrace
  username: libtrace-maintainer
  api_key: ${{ secrets.CLOUDSMITH_API_KEY }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
salcock/action-bintray-upload-rpm-packages,"distro_version1/*.rpm
distro_version2/*.rpm
distro_versionN/*.rpm

uses: wanduow/action-bintray-upload-rpm-packages@v1
with:
  path: packages/
  repo: LibtraceTeam/libtrace
  license: LGPL-3.0
  username: libtrace-maintainer
  api_key: ${{ secrets.BINTRAY_API_KEY }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
xmake-io/github-action-setup-xmake,"uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: latest

uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: '2.5.3'

uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: branch@master

uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: '>=2.2.6 <=2.5.3'

uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: '2.7.2'
  actions-cache-folder: '.xmake-cache'

uses: xmake-io/github-action-setup-xmake@v1
with:
  xmake-version: '2.7.2'
  actions-cache-folder: '.xmake-cache'
  actions-cache-key: 'archlinux-ci'

yarn install

yarn release
git add .
yarn version

git tag --delete v1
git tag v1

git push origin master
git push --tags --force
",0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
past-due/turnstyle,"name: Main

on: push

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
+     - name: Turnstyle
+       uses: softprops/turnstyle@v1
+       env:
+         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        run: sleep 30

name: Main

on: push

jobs:
  main:
+   timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        run: sleep 30

name: Main

on: push

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
+         continue-after-seconds: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        run: sleep 30

name: Main

on: push

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
+         abort-after-seconds: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        run: sleep 30

name: Main

on: push

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Turnstyle
        id: turnstyle
        uses: softprops/turnstyle@v1
        with:
+         continue-after-seconds: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
+       if: ! steps.turnstyle.outputs.force_continued
        run: sleep 30
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
past-due/fetch-release-info,"- name: Fetch Latest Release Info
  uses: past-due/fetch-release-info@master
  with:
    github_token: \'${{ secrets.GITHUB_TOKEN }}\'
    
    
    

github_token: ${{ secrets.GITHUB_TOKEN }}

- name: Fetch Latest Release Info
  uses: past-due/fetch-release-info@master
  with:
    github_token: \'${{ secrets.GITHUB_TOKEN }}\'
    github_repo: \'nlohmann/json\' # example

- name: Fetch Latest Release Info
  uses: past-due/fetch-release-info@master
  with:
    github_token: \'${{ secrets.GITHUB_TOKEN }}\'
    github_repo: \'nlohmann/json\' # example
    github_release_id: <INSERT_VALUE_HERE> # see: https://developer.github.com/v3/repos/releases/#get-a-single-release

- name: Fetch All Release Info
  uses: past-due/fetch-release-info@master
  with:
    github_token: \'${{ secrets.GITHUB_TOKEN }}\'
    fetch_release_index: true

- name: Fetch Latest Release Info, Filter Nothing
  uses: past-due/fetch-release-info@master
  with:
    github_token: \'${{ secrets.GITHUB_TOKEN }}\'
    filter_release_keys: \'[]\'
    filter_asset_keys: \'[]\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
wmde/git-filter-repo-docker-action,"name: CI
on:
  push:
    branches: [ master ]

jobs:
  filter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: git-filter-repo
      uses: wmde/git-filter-repo-docker-action@v1
      with:
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        targetOrg: wikimedia
        targetRepo: wikibase-changes
        targetBranch: main
        filterArguments: >-
          --path=lib/includes/changes/
          --path=lib/includes/Changes/
          --path=lib/tests/phpunit/changes/
          --path=lib/tests/phpunit/Changes/
          --path lib/packages/wikibase/changes/
          --path .mailmap
          --path-rename=lib/includes/changes:src
          --path-rename=lib/includes/Changes:src
          --path-rename=lib/tests/phpunit/changes:tests
          --path-rename=lib/tests/phpunit/Changes:tests
          --path-rename lib/packages/wikibase/changes/:
          --message-callback \'return re.sub(b""^changes: "", b"""", message)\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
elgohr/Github-Release-Action,"name: Publish Release
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create a Release
      uses: elgohr/Github-Release-Action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        title: MyReleaseMessage
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
andstor/file-existence-action,"- name: ""Check file existence""
  uses: andstor/file-existence-action@v2
  with:
    files: ""package.json, LICENSE, README.md, foo, *.txt""

name: ""File existence check""

on: [push, pull_request]

jobs:
  file_existence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: ""package.json, LICENSE, README.md""

      - name: File exists
        if: steps.check_files.outputs.files_exists == \'true\'
        run: echo All files exists!
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dev-drprasad/delete-tag-and-release,"- uses: dev-drprasad/delete-tag-and-release@v1.0 # PRERELEASE is v1.0 and can also be used to test and give us feedback
  with:
    tag_name: v0.1.0 #(required) tag name to delete 
    github_token: ${{ secrets.GITHUB_TOKEN }} # (required) a GitHub token with write access to the repo that needs to be modified
    delete_release: true #(optional) default: true 
    repo: <owner>/<repoName> #(optional) target repository. default: repo running this action

git clone https://github.com/dev-drprasad/delete-tag-and-release.git
cd delete-tag-and-release
npm install

npm test

npm run package

npm run lint

npm run lint:fix

git checkout master
git fetch
git pull
npm version <patch/minor/major>
git push --follow-tags
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
wip/action,"name: WIP
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  wip:
    runs-on: ubuntu-latest
    steps:
      - uses: wip/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mstksg/setup-stack,"use: mstksg/setup-stack@v1
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
miloserdow/capistrano-deploy,"$ ssh-keygen -t ed25519

$ cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys

$ openssl enc -aes-256-cbc -md sha512 -salt -in ~/.ssh/id_ed25519 -out deploy_id_ed25519_enc -k ""PASSWORD"" -a -pbkdf2

name: Deploy with Capistrano

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - uses: miloserdow/capistrano-deploy@v3 # you can use miloserdow/capistrano-deploy@master for the cuurent stable dev version
        with:
          target: development # Defines the environment that will be used for the deployment
          deploy_key: ${{ secrets.DEPLOY_ENC_KEY }} # Name of the variable configured in Settings/Secrets of your github project
          enc_rsa_key_pth: config/deploy_id_ed25519_enc

name: Start Rails and Sidekiq with Capistrano

on:
  workflow_dispatch:
    inputs:
      environment:
        description: ""The environment to deploy""
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Turnstyle
        uses: softprops/turnstyle@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          abort-after-seconds: 3600
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.6
          bundler-cache: true
      - name: Deploy
        uses: kaspernj/capistrano-deploy@custom-capistrano-command
        with:
          capistrano_commands: \'[""puma:start"", ""sidekiq:start""]\'
          target: ${{ github.event.inputs.environment }}
          deploy_key: ${{ secrets.DEPLOY_ENC_KEY }}
          enc_rsa_key_pth: config/deploy_id_ed25519_enc

curl \\
  -X POST \\
  -H ""Accept: application/vnd.github.v3+json"" \\
  -H ""Authorization: Bearer $PERSONAL_GITHUB_TOKEN"" \\
  https://api.github.com/repos/$GITHUB_USERNAME/$GITHUB_REPO_NAME/actions/workflows/$WORKFLOW_FILE_NAME/dispatches \\
  -d ""{\\""ref\\"":\\""master\\"",\\""inputs\\"":{\\""environment\\"":\\""$ENVIRONMENT_TO_DEPLOY\\""}}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
vitalyliber/dokku-github-action,"name: CD

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Dokku deploy
      uses: vitalyliber/dokku-github-action@v7.1
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        HOST: ${{ secrets.HOST }}
        PROJECT: ${{ secrets.PROJECT }}
        APP_CONFIG: ${{ secrets.APP_CONFIG }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
StephaneBour/actions-php-security-checker,"- name: PHP Security Checker
  uses: StephaneBour/actions-php-security-checker@1.1
  with:
    composer-lock: \'./composer.lock\'
",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
umutphp/php-var-dump-check-action,"on: [push]

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: Test Itself
    steps:
    - name: Check 1
      id: check1
      uses: umutphp/php-var-dump-check-action@v1
      with:
        checktype: \'laravel\'
        exclude: \'vendor,test\'
        extensions: \'php\'

on: [push]

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: Test Itself
    steps:
    - name: Check 1
      id: check1
      uses: umutphp/php-var-dump-check-action@v1

on: [push]

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: Test Itself
    steps:
    - name: Check 1
      id: check1
      uses: umutphp/php-var-dump-check-action@v1
      with:
        checktype: \'none\'
        exclude: \'vendor,test\'
        extensions: \'php\'
    - name: Check 2
      id: check2
      uses: umutphp/php-var-dump-check-action@v1
      with:
        checktype: \'laravel\'
        exclude: \'vendor,test\'
        extensions: \'php\'
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
superchargejs/redis-github-action,"name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        node-version: [18.x, 20.x]\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Git checkout\r
      uses: actions/checkout@v2\r
\r
    - name: Use Node.js ${{ matrix.node-version }}\r
      uses: actions/setup-node@v1\r
      with:\r
        node-version: ${{ matrix.node-version }}\r
\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
\r
    - run: npm install\r
\r
    - run: npm test\r
      env:\r
        CI: true\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6.2.4-v4, 6.2.6-v3]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-image: redis/redis-stack-server\r
        redis-version: ${{ matrix.redis-version }}\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-port: 12345\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-container-name: redis-auth-token-cache\r
\r
    - name: \xe2\x80\xa6\r

name: Run tests\r
\r
on: [push]\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    strategy:\r
      matrix:\r
        redis-version: [6, 7]\r
\r
    steps:\r
    - name: Start Redis\r
      uses: supercharge/redis-github-action@1.6.0\r
      with:\r
        redis-version: ${{ matrix.redis-version }}\r
        redis-remove-container: true # false by default\r
\r
    - name: \xe2\x80\xa6\r
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
thomaseizinger/keep-a-changelog-new-release,"diff --git a/./__tests__/fixtures/standard/CHANGELOG.md b/./__tests__/fixtures/standard/CHANGELOG.expected.md
index bc86d0e..08101e3 100644
--- a/./__tests__/fixtures/standard/CHANGELOG.md
+++ b/./__tests__/fixtures/standard/CHANGELOG.expected.md
@@ -7,6 +7,8 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0
 
 
+## [0.3.0] - 2019-12-06
+
 
 -   Our main theme is now blue instead of red.
@@ -28,7 +30,9 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0
 
 -   Initial release :tada:
 
-[Unreleased]: https://github.com/foo/bar/compare/0.2.0...HEAD
+[Unreleased]: https://github.com/foo/bar/compare/0.3.0...HEAD
+
+[0.3.0]: https://github.com/foo/bar/compare/0.2.0...0.3.0
 
 [0.2.0]: https://github.com/foo/bar/compare/0.1.0...0.2.0
 


name: ""...""
on: ...

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Update changelog
      uses: thomaseizinger/keep-a-changelog-new-release@v1
      with:
        tag: v0.6.0 # You probably want to have this dynamic :)
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
thomaseizinger/create-pull-request,"name: ""Create PR""
on: push

jobs:
  create-pr-on-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@1.0.0
    
    - name: Create pull request
      uses: thomaseizinger/create-pull-request@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        head: ${{ github.ref }}
        base: master
        title: ""An automatically created PR!""

- name: Create pull request
      uses: thomaseizinger/create-pull-request@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        head: ${{ github.ref }}
        base: master
        title: ""An automatically created PR!""
      env:
        https_proxy: http://<proxy_address>:<port>
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mindsers/changelog-reader-action,"on:
  push:
    tags:
      - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md
      - name: Create/update release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.changelog_reader.outputs.version }}
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == \'prereleased\' }}
          draft: ${{ steps.changelog_reader.outputs.status == \'unreleased\' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
zendesk/cache,"name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache Primes
      id: cache-primes
      uses: actions/cache@v3
      with:
        path: prime-numbers
        key: ${{ runner.os }}-primes

    - name: Generate Prime Numbers
      if: steps.cache-primes.outputs.cache-hit != \'true\'
      run: /generate-primes.sh -d prime-numbers

    - name: Use Prime Numbers
      run: /primes.sh -d prime-numbers

name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Restore cached Primes
      id: cache-primes-restore
      uses: actions/cache/restore@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ runner.os }}-primes
    .
    . //intermediate workflow steps
    .
    - name: Save Primes
      id: cache-primes-save
      uses: actions/cache/save@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}

  - uses: actions/cache@v3
    with:
      path: |
        path/to/dependencies
        some/other/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Get Date
    id: get-date
    run: |
      echo ""date=$(/bin/date -u ""+%Y%m%d"")"" >> $GITHUB_OUTPUT
    shell: bash

  - uses: actions/cache@v3
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles(\'**/lockfiles\') }}

steps:
  - uses: actions/checkout@v3

  - uses: actions/cache@v3
    id: cache
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Install Dependencies
    if: steps.cache.outputs.cache-hit != \'true\'
    run: /install.sh

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d prime-numbers

      - name: Cache Numbers
        id: cache-numbers
        uses: actions/cache@v3
        with:
          path: numbers
          key: primes

      - name: Generate Numbers
        if: steps.cache-numbers.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d numbers

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes -d prime-numbers
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kappmeier/github-actions-maven-release," - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:
        release-branch-name: ""master""

        git-release-bot-name: ""release-bot""
        git-release-bot-email: ""release-bot@example.com""

        access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

        maven-args: ""-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip""

 - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:
        release-branch-name: ""master""
        gpg-enabled: ""true""
        gpg-key-id: ${{ secrets.GITHUB_GPG_KEY_ID }}
        gpg-key: ${{ secrets.GITHUB_GPG_KEY }}

        git-release-bot-name: ""release-bot""
        git-release-bot-email: ""release-bot@example.com""

        access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

 - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:
        release-branch-name: ""master""

        maven-repo-server-id: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
        maven-repo-server-username: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
        maven-repo-server-password: ${{ secrets.MVN_REPO_PRIVATE_REPO_PASSWORD }}

        git-release-bot-name: ""release-bot""
        git-release-bot-email: ""release-bot@example.com""

        access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

 - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:
        release-branch-name: ""master""

        gpg-enabled: ""true""
        gpg-key-id: ${{ secrets.GITHUB_GPG_KEY_ID }}
        gpg-key: ${{ secrets.GITHUB_GPG_KEY }}

        maven-repo-server-id: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
        maven-repo-server-username: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
        maven-repo-server-password: ${{ secrets.MVN_REPO_PRIVATE_REPO_PASSWORD }}

        maven-args: ""-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip""

        git-release-bot-name: ""release-bot""
        git-release-bot-email: ""release-bot@example.com""

        access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

        maven-project-folder: ""sub-folder/""

        gpg-key-id: ${{ secrets.GITHUB_GPG_KEY_ID }}
        gpg-key: ${{ secrets.GITHUB_GPG_KEY }}

gpg --list-secret-keys --keyid-format LONG

sec   rsa2048/3EFC3104C0088B08 2019-11-28 [SC]
      CBFD9020DAC388A77C68385C3EFC3104C0088B08
uid                 [ultimate] bot-openbanking4-dev (it\'s the bot openbanking4.dev key) <bot@openbanking4.dev>
ssb   rsa2048/7D1523C9952204C1 2019-11-28 [E]


gpg --export-secret-keys --armor 3EFC3104C0088B08 | base64
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
andstor/copycat-action,"- name: Copy
  uses: andstor/copycat-action@v3
  with:
    personal_token: ${{ secrets.PERSONAL_TOKEN }}
    src_path: /.
    dst_path: /backup/
    dst_owner: andstor
    dst_repo_name: copycat-action

name: Copy
on: gollum
jobs:
  copy:
    runs-on: ubuntu-latest
    steps:
    - name: Copycat
      uses: andstor/copycat-action@v3
      with:
        personal_token: ${{ secrets.PERSONAL_TOKEN }}
        src_path: /.
        dst_path: /wiki/
        dst_owner: andstor
        dst_repo_name: andstor.github.io
        dst_branch: master
        src_branch: master
        src_wiki: true
        dst_wiki: false
        username: nutsbot
        email: andr3.storhaug+bot@gmail.com
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
zooniverse/label-when-approved-action,"on: pull_request_review
name: Label approved pull requests
jobs:
  labelWhenApproved:
    name: Label when approved
    runs-on: ubuntu-latest
    steps:
    - name: Label when approved
      uses: pullreminders/label-when-approved-action@master
      env:
        APPROVALS: ""2""
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ADD_LABEL: ""approved""
        REMOVE_LABEL: ""awaiting review""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Atrox/codecov-action,"action ""send coverage to codecov"" {
  uses = ""Atrox/codecov-action@v0.1.2""
  secrets = [""CODECOV_TOKEN""]
}
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gradle/gradle-build-action,"name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build
      run: ./gradlew build

 - uses: gradle/gradle-build-action@v2
   with:
     gradle-version: 6.5

name: Test latest Gradle RC
on:
  schedule:
    - cron: 0 0 * * * # daily
jobs:
  gradle-rc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - uses: gradle/gradle-build-action@v2
      id: setup-gradle
      with:
        gradle-version: release-candidate
    - run: gradle build --dry-run # just test build configuration
    - run: echo ""The release-candidate version was ${{ steps.setup-gradle.outputs.gradle-version }}""

cache-disabled: true

cache-read-only: true

cache-read-only: ${{ github.ref != \'refs/heads/main\' && github.ref != \'refs/heads/release\' }}

cache-write-only: true

cache-overwrite-existing: true

env:
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

gradle-home-cache-includes: |
    caches
    notifications
    jdks
gradle-home-cache-excludes: |
    caches/build-cache-1
    caches/keyrings

gradle-home-cache-cleanup: true

generate-job-summary: false

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      id: gradle
      run: ./gradlew build --scan
    - name: ""Add Build Scan URL as PR comment""
      uses: actions/github-script@v5
      if: github.event_name == \'pull_request\' && failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: \'\xe2\x9d\x8c ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}\'
          })

jobs:   
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      run: ./gradlew build --scan
    - name: Upload build reports
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports/

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    
    - name: Setup and execute Gradle \'test\' task
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test

- uses: gradle/gradle-build-action@v2
  with:
    arguments: assemble
- uses: gradle/gradle-build-action@v2
  with:
    arguments: check

arguments: build
arguments: check --scan
arguments: some arbitrary tasks
arguments: build -PgradleProperty=foo
arguments: |
    build
    --scan
    -PgradleProperty=foo
    -DsystemProperty=bar

- uses: gradle/gradle-build-action@v2
  env:
    CI: true
  with:
    arguments: build

- uses: gradle/gradle-build-action@v2
  with:
    arguments: build
    build-root-directory: some/subdirectory

 - uses: gradle/gradle-build-action@v2
   with:
     arguments: build
     gradle-executable: /path/to/installed/gradle

name: Submit dependency graph
on:
  push:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Build the app, generating a graph of dependencies required
      run: ./gradlew :my-app:assemble
    - name: Run all checks, disabling dependency graph generation
      run: ./gradlew check
      env:
        GITHUB_DEPENDENCY_GRAPH_ENABLED: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph from \'runtimeClasspath\' configurations
      run: ./gradlew build
      env:
        DEPENDENCY_GRAPH_INCLUDE_PROJECTS: ""^:(?!buildSrc).*""
        DEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS: runtimeClasspath

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Extract the \'runtimeClasspath\' dependencies for \'my-app\'
      run: ./gradlew :my-app:dependencies --configuration runtimeClasspath

name: run-build-and-generate-dependency-snapshot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate # Only generate in this job
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

name: submit-dependency-snapshot

on:
  workflow_run:
    workflows: [\'run-build-and-generate-dependency-snapshot\']
    types: [completed]

jobs:
  submit-snapshots:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve dependency graph artifact and submit
        uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: download-and-submit

name: Run build with Gradle Enterprise injection
  
env:
  GRADLE_ENTERPRISE_INJECTION_ENABLED: true
  GRADLE_ENTERPRISE_URL: https://ge.gradle.org
  GRADLE_ENTERPRISE_PLUGIN_VERSION: 3.14.1
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_KEY }} # Required to publish scans to ge.gradle.org

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run a Gradle build with Gradle Enterprise injection enabled
      run: ./gradlew build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
aochmann/actions-download-artifact,"- name: Download artifact
  uses: aochmann/actions-download-artifact@1.0.0
  with:
    github_token: ${{secrets.GITHUB_TOKEN}}

    name: artifact_name

    latest: true

    path: extract_here

    repo: ${{github.repository}}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
joutvhu/get-release,"name: Upload Asset To Current Release
on:
  release:
    types: [created]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        run: |
          zip --junk-paths my-artifact README.md

      - name: Get Current Release
        id: get_current_release
        uses: joutvhu/get-release@v1
        with:
          debug: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_current_release.outputs.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

steps:
  - uses: joutvhu/get-release@v1
    with:
      tag_name: v1.0.0
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: joutvhu/get-release@v1
    with:
      latest: true
      pattern: '^v.*'
      prerelease: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
tibdex/github-app-token,"jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}




          private_key: ${{ secrets.PRIVATE_KEY }}


      - name: Use token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo ""The generated token is masked: ${TOKEN}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
urlstechie/urlchecker-action,"name: Check URLs

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: urls-checker
      uses: urlstechie/urlchecker-action@master
      with:
        subfolder: docs

        file_types: .md,.py,.rst

        print_all: false

        timeout: 5

        retry_count: 3

        exclude_urls: https://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2

        exclude_patterns: https://github.com/SuperKogito/Voice-based-gender-recognition/issues

        force_pass : true

name: Check URLs

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: URLs-checker
      uses: urlstechie/urlchecker-action@master
      with:
        git_path: https://github.com/urlstechie/URLs-checker-test-repo

        branch: devel

        subfolder: docs

        cleanup: true

        file_types: .md,.py,.rst

        print_all: false

        verbose: true

        timeout: 5

        retry_count: 3

        exclude_urls: https://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2

        exclude_patterns: https://github.com/SuperKogito/Voice-based-gender-recognition/issues

        exclude_files: README.md,/github/workspace/_config.yml

        workers: 4

        force_pass: true

file_types: \'.*,\'
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
robinraju/release-downloader,"
- uses: robinraju/release-downloader@v1.8
  with: 
    repository: """"
    
    latest: true
    
    tag: """"
    
    releaseId: """"
    
    fileName: """"
    
    tarBall: true
    
    zipBall: true
    
    out-file-path: """"

    extract: false

    token: """"

    github-api-url: """"


- uses: robinraju/release-downloader@v1.8
  with:
    latest: true
    fileName: ""foo.zip""


- uses: robinraju/release-downloader@v1.8
  with:
    repository: ""owner/repo""
    tag: ""v1.0.0""
    fileName: ""foo.zip""


- uses: robinraju/release-downloader@v1.8
  with:
    repository: ""owner/repo""
    latest: true
    tarBall: true
    zipBall: true

- uses: robinraju/release-downloader@v1.8
  with:
    repository: ""owner/repo""
    latest: true
    fileName: ""foo.zip""
    tarBall: true
    zipBall: true

- uses: robinraju/release-downloader@v1.8
  with:
    repository: ""owner/repo""
    latest: true
    fileName: ""*""

- uses: robinraju/release-downloader@v1.8
  with:
    repository: ""owner/repo""
    latest: true
    fileName: ""*.deb""

- uses: robinraju/release-downloader@v1.8
  with:
    releaseId: ""123123""
    fileName: ""foo.zip""

- uses: robinraju/release-downloader@v1.8
  with:
    fileName: ""foo.zip""
    latest: true
    extract: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
fkirc/skip-duplicate-actions,"frontend:
  paths_ignore:
    - \'frontend/docs/**\'
  paths:
    - \'frontend/**\'
backend:
  paths:
    - \'backend/**\'
  backtracking: 5

{
  ""id"": 1709469369,
  ""runNumber"": 737,
  ""event"": ""pull_request"",
  ""treeHash"": ""e3434bb7aeb3047d7df948f09419ac96cf03d73e"",
  ""commitHash"": ""4a0432e823468ecff81a978165cb35586544c795"",
  ""status"": ""completed"",
  ""conclusion"": ""success"",
  ""htmlUrl"": ""https://github.com/fkirc/skip-duplicate-actions/actions/runs/1709469369"",
  ""branch"": ""master"",
  ""repo"": ""fkirc/skip-duplicate-actions"",
  ""workflowId"": 2640563,
  ""createdAt"": ""2022-01-17T18:56:06Z""
}

{
  ""frontend"": {
    ""should_skip"": true,
    ""backtrack_count"": 1,
    ""skipped_by"": {
      // Information about the workflow run
    },
  ""backend"": {
    ""should_skip"": false,
    ""backtrack_count"": 1,
    ""matched_files"": [""backend/file.txt""]
  },
  ""global"": {
    ""should_skip"": false,
    ""backtrack_count"": 0
  }
}

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: \'never\'
          skip_after_successful_duplicate: \'true\'
          paths_ignore: \'[""**/README.md"", ""**/docs/**""]\'
          do_not_skip: \'[""pull_request"", ""workflow_dispatch"", ""schedule""]\'

  main_job:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != \'true\'
    runs-on: ubuntu-latest
    steps:
      - run: echo ""Running slow tests..."" && sleep 30

jobs:
  skip_individual_steps_job:
    runs-on: ubuntu-latest
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: \'false\'
          paths: \'[""src/**"", ""dist/**""]\'
      - if: steps.skip_check.outputs.should_skip != \'true\'
        run: |
          echo ""Run only if src/ or dist/ changed..."" && sleep 30
          echo ""Do other stuff...""

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_filter: |
            frontend:
              paths_ignore:
                - \'frontend/docs/**\'
              paths:
                - \'frontend/**\'
            backend:
              paths:
                - \'backend/**\'

  frontend:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != \'true\' || !fromJSON(needs.pre_job.outputs.paths_result).frontend.should_skip

  backend:

stateDiagram-v2
    Check_Commit: Check Commit
    [*] --> Check_Commit: Current commit

    state Path_Ignored <<choice>>
    Check_Commit --> Path_Ignored: Do all changed files match against ""paths_ignore""?
    Ignored_Yes: Yes
    Ignored_No: No
    Path_Ignored --> Ignored_Yes
    Path_Ignored --> Ignored_No

    state Path_Skipped <<choice>>
    Ignored_No --> Path_Skipped: Do none of the changed files match against ""paths""?
    Skipped_Yes: Yes
    Skipped_No: No
    Path_Skipped --> Skipped_Yes: No matches
    Path_Skipped --> Skipped_No: Some matches

    Parent_Commit: Fetch Parent Commit
    Ignored_Yes --> Parent_Commit
    Skipped_Yes --> Parent_Commit

    state Successful_Run <<choice>>
    Parent_Commit --> Successful_Run: Is there a successful run for this commit?
    Run_Yes: Yes
    Run_No: No
    Successful_Run --> Run_Yes
    Successful_Run --> Run_No

    Run_No --> Check_Commit: Parent commit

    Skip: Skip!
    Run_Yes --> Skip: (Because all changes since this run are in ignored or skipped paths)

    Dont_Skip: Don\'t Skip!
    Skipped_No --> Dont_Skip: (Because changed files needs to be ""tested"")

result:
  name: Result
  if: needs.pre_job.outputs.should_skip != \'true\' && always()
  runs-on: ubuntu-latest
  needs:
    - pre_job
    - example-matrix-job
  steps:
    - name: Mark result as failed
      if: needs.example-matrix-job.result != \'success\'
      run: exit 1
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
sqren/backport-github-action,"name: Automatic backport action

on:
  pull_request_target:
    types: [""labeled"", ""closed""]

jobs:
  backport:
    name: Backport PR
    runs-on: ubuntu-latest
    steps:
      - name: Backport Action
        uses: sqren/backport-github-action@v9.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          auto_backport_label_prefix: backport-to-

      - name: Info log
        if: ${{ success() }}
        run: cat ~/.backport/backport.info.log
        
      - name: Debug log
        if: ${{ failure() }}
        run: cat ~/.backport/backport.debug.log        
          

// .backportrc.json
{
  // example repo info
  ""repoOwner"": ""torvalds"",
  ""repoName"": ""linux"",

  // `targetBranch` option allows to automatically backport every PR to a specific branch without the need for labels
  ""targetBranches"": [""production""],

  // the branches available to backport to
  ""targetBranchChoices"": [""main"", ""production"", ""staging""],

  // In this case, adding the label ""backport-to-production"" will backport the PR to the ""production"" branch
  ""branchLabelMapping"": {
    ""^backport-to-(.+)$"": ""$1""
  }
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
skeet70/default-project-board-action,"name: ""Default Project""

on:
  issues:
    types:
      - opened

jobs:
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      - uses: skeet70/default-project-board-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue: ${{ github.event.issue.number }}
          project: 1

npm run package

git add dist
",0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
browser-actions/setup-firefox,"steps:
  - uses: browser-actions/setup-firefox@v1
  - run: firefox --version

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        firefox: [ '84.0', 'latest-beta', 'latest-devedition', 'latest-esr', 'latest' ]
    name: Firefox ${{ matrix.firefox }} sample
    steps:
      - name: Setup firefox
        id: setup-firefox
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: ${{ matrix.firefox }}
      - run: |
          echo Installed firefox versions: ${{ steps.setup-firefox.outputs.firefox-version }}
          firefox --version
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/solaris-vm,"
name: Test

on: [push]

jobs:
  test:
    runs-on: macos-12
    name: A job to run test in Solaris
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: ""value2""
    steps:
    - uses: actions/checkout@v3
    - name: Test in Solaris
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        prepare: |
          pkgutil -y -i socat

        run: |
          if [ -n ""test"" ]; then
            echo ""false""
          fi
          if [ ""test"" ]; then
            echo ""test""
          fi
          pwd
          ls -lah
          whoami
          env
          psrinfo -vp
          cat /etc/release
          echo ""OK""






...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: sshfs
        prepare: |
          pkgutil -y -i socat



...




...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          pkgutil -y -i socat



...



...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        nat: |
          ""8080"": ""80""
          ""8443"": ""443""
          udp:""8081"": ""80""
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        mem: 2048
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/solaris-vm@v0
      with:
        release: 11.4
...
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
invi5H/ssh-action,"name: ssh command
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - id: ssh
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: ssh ${{ steps.ssh.outputs.SERVER }} pwd

name: ssh command
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - id: ssh-foo
        uses: invi5H/ssh-action@v1
        with:
          NAME: foo
          SSH_HOST: ${{ secrets.FOO_HOST }}
          SSH_PORT: ${{ secrets.FOO_PORT }}
          SSH_USER: ${{ secrets.FOO_USER }}
          SSH_KEY: ${{ secrets.FOO_KEY }}
      - id: ssh-bar
        uses: invi5H/ssh-action@v1
        with:
          NAME: bar
          SSH_HOST: ${{ secrets.BAR_HOST }}
          SSH_PORT: ${{ secrets.BAR_PORT }}
          SSH_USER: ${{ secrets.BAR_USER }}
          SSH_KEY: ${{ secrets.BAR_KEY }}
      - run: ssh ${{ steps.ssh-foo.outputs.SERVER }} pwd
      - run: ssh ${{ steps.ssh-bar.outputs.SERVER }} pwd
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
avinal/github-pages-deploy-action,"    name: GitHub Pages Deploy Action
    on:
        push: [ <write-branch-here> ]
    jobs:
        deploy-pages:
            name: Deploy to GitHub Pages
            runs-on: ubuntu-latest
            steps:
                - uses: avinal/github-pages-deploy-action@main
                  with:
                    GITHUB_TOKEN: ${{ github.token }}
                    LANGUAGE: ""<write-as-directed-above>""
                    MAKE_COMMAND: ""make html""
                    PAGES_BRANCH: ""gh-pages""
                    BUILD_FROM: ""master""
                    DOCS_FOLDER: ""docs""

    BASEDIR=$(CURDIR)
    OUTPUTDIR=$(BASEDIR)/docs # you may change docs with custom folder name
    PACKAGE=<your-java-package-name> # write the package name here
    html:
        javadoc ""$(PACKAGE)"" -d ""$(OUTPUTDIR)"" -encoding UTF-8
    .PHONY: html

    PY?=python3
    PELICAN?=pelican
    PELICANTHEME?=pelican-themes
    BASEDIR=$(CURDIR)
    INPUTDIR=$(BASEDIR)/content
    OUTPUTDIR=$(BASEDIR)/output
    THEMEDIR=$(BASEDIR)/themes/alchemy
    CONFFILE=$(BASEDIR)/pelicanconf.py
    PUBLISHCONF=$(BASEDIR)/publishconf.py
    theme:
\t            ""$(PELICANTHEME)"" --install ""$(THEMEDIR)""
    html: theme
        ""$(PELICAN)"" ""$(INPUTDIR)"" -o ""$(OUTPUTDIR)"" -s ""$(CONFFILE)"" $(PELICANOPTS)
    .PHONY: theme html

    git clone --single-branch --branch <branch-name> <remote-repository-url>

    git checkout --orphan <empty-branch-name>
    git rm -rf .
    git commit --allow-empty -m ""<commit-message>""
    git push origin <empty-branch-name>

    git reset --hard

    command=""git branch -v""
    command_array=(${command})
    ""${command_array[@]}""

    cp -a source/. destination

    sudo apt install --no-install-recommends <package-name>

    ARG DEBIAN_FRONTEND=noninteractive
    ENV TZ=<TimeZone>/<City>
    RUN apt-get update && apt-get install -y tzdata <other-packages>
",0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
vmactions/freebsd-vm,"
name: Test

on: [push]

jobs:
  test:
    runs-on: macos-12
    name: A job to run test in FreeBSD
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: ""value2""
    steps:
    - uses: actions/checkout@v3
    - name: Test in FreeBSD
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        prepare: |
          pkg install -y curl

        run: |
          pwd
          ls -lah
          whoami
          env
          freebsd-version






...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: sshfs
        prepare: |
          pkg install -y curl



...




...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          pkg install -y curl



...



...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        nat: |
          ""8080"": ""80""
          ""8443"": ""443""
          udp:""8081"": ""80""
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        mem: 2048
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        release: 13.0
...
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/openbsd-vm,"
name: Test

on: [push]

jobs:
  test:
    runs-on: macos-12
    name: A job to run test in OpenBSD
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: ""value2""
    steps:
    - uses: actions/checkout@v3
    - name: Test in OpenBSD
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        prepare: |
          pkg_add curl

        run: |

          pwd
          ls -lah
          whoami
          env
          
          






...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: sshfs
        prepare: |
          pkg_add curl



...




...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          pkg_add curl



...



...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        nat: |
          ""8080"": ""80""
          ""8443"": ""443""
          udp:""8081"": ""80""
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        mem: 2048
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/openbsd-vm@v0
      with:
        release: 7.1
...
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ffurrer2/extract-release-notes,"name: Create Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create --notes '${{ steps.extract-release-notes.outputs.release_notes }}' --title ${{ github.ref_name }} ${{ github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: MY_CHANGELOG.md

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract release notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          release_notes_file: RELEASE_NOTES.md

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract release notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          prerelease: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jfrog/setup-jfrog-cli,"- uses: jfrog/setup-jfrog-cli@v3
- run: jf --version

- uses: jfrog/setup-jfrog-cli@v3
  env:
    JF_URL: ${{ secrets.JF_URL }}
    
    JF_USER: ${{ secrets.JF_USER }}
    JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
    or
    JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
- run: |
    jf rt ping

- uses: jfrog/setup-jfrog-cli@v3
  env:
    JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
- run: |
    jf rt ping

- uses: jfrog/setup-jfrog-cli@v3
  env:
    JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
    JF_ENV_2: ${{ secrets.JF_SECRET_ENV_2 }}
- run: |
    jf c use local-1
    jf rt ping
    jf c use local-2
    jf rt ping

- run: |
    jf rt dl artifacts/
    jf rt u aether artifacts/
    jf rt bp

- uses: jfrog/setup-jfrog-cli@v3
  with:
    version: X.Y.Z

- uses: jfrog/setup-jfrog-cli@v3
  with:
    version: latest

- uses: jfrog/setup-jfrog-cli@v3
  env:
    JF_URL: ${{ secrets.JF_URL }}

    JF_USER: ${{ secrets.JF_USER }}
    JF_PASSWORD: ${{ secrets.JF_PASSWORD }}


  with:
    download-repository: jfrog-cli-remote

curl -fL ""https://getcli.jfrog.io?setup"" | sh

powershell ""Start-Process -Wait -Verb RunAs powershell \'-NoProfile iwr https://releases.jfrog.io/artifactory/jfrog-cli/v2-jf/[RELEASE]/jfrog-cli-windows-amd64/jf.exe -OutFile $env:SYSTEMROOT\\system32\\jf.exe\'"" ; jf setup

npm i && npm t
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
oprypin/find-latest-tag,"steps:
  - uses: oprypin/find-latest-tag@v1
    with:
      repository: octokit/rest.js  # The repository to scan.
      releases-only: true  # We know that all relevant tags have a GitHub release for them.
    id: octokit  # The step ID to refer to later.

  - run: echo ""Octokit is at version ${{ steps.octokit.outputs.tag }}""

  - uses: actions/checkout@v3
    with:
      repository: octokit/rest.js  # Download that repository.
      ref: ${{ steps.octokit.outputs.tag }}  # At the latest released version, found earlier.

steps:
  - uses: oprypin/find-latest-tag@v1
    with:
      repository: slembcke/Chipmunk2D
      prefix: \'Chipmunk-7.\'  # Other kinds of tags are irrelevant; also limit to major version 7.
    id: chipmunk_version
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
addnab/docker-run-action,"- name: Checkout 
  uses: actions/checkout@v2 # Required to mount the Github Workspace to a volume 
- uses: addnab/docker-run-action@v3
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: gcr.io
    image: private-image:latest
    options: -v ${{ github.workspace }}:/work -e ABC=123
    run: |
      echo ""Running Script""
      /work/run-script

- uses: addnab/docker-run-action@v3
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: gcr.io
    image: test-image:latest
    run: echo ""hello world""

- uses: docker/build-push-action@v2
  with:
    tags: test-image:latest
    push: false
- uses: addnab/docker-run-action@v3
  with:
    image: test-image:latest
    run: echo ""hello world""

- uses: addnab/docker-run-action@v3
  with:
    image: docker:latest
    shell: bash
    run: |
      echo ""first line""
      echo ""second line""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
KeisukeYamashita/create-comment,"      - name: Create Comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          number: 1
          comment: Comment for Issue or GitHub Pull Request

on: pull_request
jobs:
  commit-message-check:
    runs-on: ubuntu-latest
    steps:
      - name: Post comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          comment: |
            Issue title must start with 'ABC-'.
            Auto-closing this issue.
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Khan/pull-request-comment-trigger,"on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with:
          trigger: \'@deploy\'
          reaction: rocket
        env:
          GITHUB_TOKEN: \'${{ secrets.GITHUB_TOKEN }}\'
      - run: \'echo Found it!\'
        if: steps.check.outputs.triggered == \'true\'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
dessant/support-requests,"name: 'Support Requests'

on:
  issues:
    types: [labeled, unlabeled, reopened]

permissions:
  issues: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/support-requests@v3

name: 'Support Requests'

on:
  issues:
    types: [labeled, unlabeled, reopened]

permissions:
  issues: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/support-requests@v3
        with:
          github-token: ${{ github.token }}
          support-label: 'support'
          issue-comment: >
            :wave: @{issue-author}, we use the issue tracker exclusively
            for bug reports and feature requests. However, this issue appears
            to be a support request. Please use our support channels
            to get help with the project.
          close-issue: true
          lock-issue: false
          issue-lock-reason: 'off-topic'

    steps:
      - uses: dessant/support-requests@v3
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
rlespinasse/github-slug-action,"- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    prefix: CI_

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    slug-maxlength: 80 # Use 'nolimit' to remove use of a max length (Default to 63)

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    short-length: 7 # By default it's up to git to decide, use 8 to have the v3.x behavior

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    short-length: 8 # Same as v3 and before

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    prefix: CI_

Download action repository 'rlespinasse/github-slug-action@GIT_REFERENCE'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
bazelbuild/setup-bazelisk,"steps:
- uses: actions/checkout@v3
- uses: bazelbuild/setup-bazelisk@v2
- name: Mount bazel cache  # Optional
  uses: actions/cache@v3
  with:
    path: ""~/.cache/bazel""
    key: bazel
- run: bazel build //...

- name: Run tests
  run: bazel test tests/...
  shell: bash
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
franzbischoff/replace_envs,"    env:
      MY_CUSTOM_VARIABLE: 'some value'

steps:
  - uses: actions/checkout@v2
  - uses: franzbischoff/replace_envs@v1
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MY_CUSTOM_VARIABLE: 'some value'
    with:
      from_file: 'README.md'
      to_file: 'README.md'
      commit: 'true'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
contention/rsync-deployments,"name: Deploy to production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: contention/rsync-deployments@v2.0.0
        with:
          FLAGS: -avzr --delete
          EXCLUDES: --exclude .htaccess --exclude /uploads/
          USER deploybot
          HOST: myserver.com
          LOCALPATH: /dist/
          REMOTEPATH: /srv/myapp/public/htdocs/
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
gradle-update/update-gradle-wrapper-action,"name: Update Gradle Wrapper

on:
  schedule:
    - cron: ""0 0 * * *""

jobs:
  update-gradle-wrapper:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Gradle Wrapper
        uses: gradle-update/update-gradle-wrapper-action@v1

with:
  repo-token: ${{ secrets.GITHUB_TOKEN }}

with:
  repo-token: ${{ secrets.GRADLE_UPDATE_PAT }}

with:
  reviewers: username1, username2

with:
  reviewers: |
    username1
    username2

with:
  team-reviewers: team1, team2

with:
  team-reviewers: |
    team1
    team2

with:
  labels: automated pr, dependencies

with:
  labels: |
    automated pr
    dependencies

with:
  base-branch: gradle-testing

with:
  target-branch: unstable

with:
  paths: project-web/**, project-backend/**

with:
  paths: |
    project-web/**
    project-backend/**

with:
  paths-ignore: project-docs/**, project-examples/**

with:
  paths-ignore: |
    project-docs/**
    project-examples/**

with:
  set-distribution-checksum: false

with:
  release-channel: release-candidate

with:
  merge-method: SQUASH

with:
  pr-title-template: \'chore(deps): Bump Gradle Wrapper from %sourceVersion% to %targetVersion%\'

on:
  schedule:
    - cron: ""0 2 * * *""

on:
  schedule:
    - cron: ""0 8 * * MON""

with:
  target-branch: v2-dev

with:
  release-channel: release-candidate

with:
  paths-ignore: examples/**

with:
  paths: sub-project/**
  paths-ignore: sub-project/examples/**

with:
  set-distribution-checksum: false
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dawidd6/action-get-tag,"on:
  push:
    tags:
      - '*'

- name: Get tag
  id: tag
  uses: dawidd6/action-get-tag@v1
  with:
    strip_v: true
- name: Use tag
  run: echo ${{steps.tag.outputs.tag}}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
alexellis/upload-assets,"    permissions:
      contents: write
      checks: write

      actions: read
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read

name: publish

on:
  push:
    tags:
      - \'*\'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Make all
        run: make all
      - name: Upload release binaries
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: \'[""./bin/release-it*""]\'

npm i -g  @vercel/ncc

npm i
npm run build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
andreaswilli/delete-release-assets-action,"name: Delete Release Assets

on: push

jobs:
  deleteReleaseAssets:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Delete current release assets
        uses: andreaswilli/delete-release-assets-action@<version>
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tagPrefix: v
          tag: 1.0.1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
MarceloPrado/has-changed-path,"name: Conditional Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-front
        with:
          paths: packages/front

      - name: Deploy front
        if: steps.changed-front.outputs.changed == \'true\'
        run: /deploy-front.sh

name: Conditional Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-front
        with:
          paths: packages/front packages/common

      - name: Deploy front
        if: steps.changed-front.outputs.changed == \'true\'
        run: /deploy-front.sh

name: Conditional Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          path: main

      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          repsitory: my-org/my-tools
          path: my-tools

      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-main
        with:
          paths: packages/front
        env:
          SOURCE: main

      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-my-tools
        with:
          paths: somewhere/else
        env:
          SOURCE: my-tools

      - name: Deploy main
        if: steps.changed-main.outputs.changed == \'true\'
        run: /deploy-main.sh

      - name: Deploy my tools
        if: steps.changed-my-tools.outputs.changed == \'true\'
        run: /deploy-my-tools.sh
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
dineshsonachalam/markdown-autodocs,"npm i -g markdown-autodocs

dineshsonachalam@macbook ~ % markdown-autodocs --help
Usage: markdown-autodocs [options]

Options:
  -o, --outputFilePath <outputFilePaths...>  Output file paths
  -c, --category <categories...>             code-block, json-to-html-table, workflow-artifact-table
  -r, --repo <type>                          Repo name
  -b, --branch <type>                        Branch name
  -a, --accessToken <type>                   Github Access token
  -h, --help                                 display help for command

markdown-autodocs -c code-block -o ./README.md 

markdown-autodocs -c json-to-html-table -o ./README.md

markdown-autodocs -c workflow-artifact-table -o ./README.md -r $REPO -b $BRANCH -a $ACCESSTOKEN

uses: dineshsonachalam/markdown-autodocs@v1.0.7

- name: Markdown autodocs
- uses: dineshsonachalam/markdown-autodocs@v1.0.7
  with:
    commit_author: Author <actions@github.com>

    commit_user_email: actions@github.com

    commit_message: Apply automatic changes

    branch: feature-123

    output_file_paths: \'[./README.md]\'

    categories: \'[code-block,json-to-html-table,workflow-artifact-table]\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
marocchino/sticky-pull-request-comment,"permissions:
  pull-requests: write

uses: marocchino/sticky-pull-request-comment@v2
with:
  message: |
    Release ${{ github.sha }} to <https://pr-${{ github.event.number }}.example.com>

release:
  ...
  - uses: marocchino/sticky-pull-request-comment@v2
    with:
      header: release
      message: |
        Release ${{ github.sha }} to <https://pr-${{ github.event.number }}.example.com>

test:
  ...
  - name: Run Test
    run: |
      EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      echo ""test_result<<$EOF"" >> ""$GITHUB_ENV""
      rake test >> ""$GITHUB_ENV""
      echo ""$EOF"" >> ""$GITHUB_ENV""
  - uses: marocchino/sticky-pull-request-comment@v2
    with:
      header: test
      message: |


test:
  ...
  - name: Run Test
    run: |
      EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      echo ""test_result<<$EOF"" >> ""$GITHUB_ENV""
      rake test >> ""$GITHUB_ENV""
      echo ""$EOF"" >> ""$GITHUB_ENV""
  - uses: marocchino/sticky-pull-request-comment@v2
    with:
      append: true
      message: |
        Test with ${{ github.sha }}.


- uses: jwalton/gh-find-current-pr@v1
  id: finder
- uses: marocchino/sticky-pull-request-comment@v2
  with:
    number: ${{ steps.finder.outputs.pr }}
    message: |
      Test ${{ github.sha }} ended successfully.
      This message is from a push.

uses: marocchino/sticky-pull-request-comment@v2
with:
  path: path-to-comment-contents.txt

uses: marocchino/sticky-pull-request-comment@v2
with:
  recreate: true
  message: |
    Release ${{ github.sha }} to <https://pr-${{ github.event.number }}.example.com>

uses: marocchino/sticky-pull-request-comment@v2
with:
  header: <same-header-as-the-step-that-added-the-comment>
  delete: true

uses: marocchino/sticky-pull-request-comment@v2
with:
  hide_and_recreate: true
  hide_classify: ""OUTDATED""
  message: |
    Release ${{ github.sha }} to <https://pr-${{ github.event.number }}.example.com>

uses: marocchino/sticky-pull-request-comment@v2
with:
  header: <same-header-as-the-step-that-added-the-comment>
  hide: true
  hide_classify: ""OUTDATED""

permissions:
  pull-requests: write
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
potiuk/get-workflow-origin,"name: Get information
on:
  pull_request:
    branches: [\'main\']

jobs:
  get-info:
    name: ""Get information about the source run""
    runs-on: ubuntu-latest
    outputs:
      sourceHeadRepo: ${{ steps.workflow-run-info.outputs.sourceHeadRepo }}
      sourceHeadBranch: ${{ steps.workflow-run-info.outputs.sourceHeadBranch }}
      sourceHeadSha: ${{ steps.workflow-run-info.outputs.sourceHeadSha }}
      mergeCommitSha: ${{ steps.workflow-run-info.outputs.mergeCommitSha }}
      targetCommitSha: ${{ steps.workflow-run-info.outputs.targetCommitSha }}
      pullRequestNumber: ${{ steps.workflow-run-info.outputs.pullRequestNumber }}
      pullRequestLabels: ${{ steps.workflow-run-info.outputs.pullRequestLabels }}
      targetBranch: ${{ steps.source-run-info.outputs.targetBranch }}
      sourceEvent: ${{ steps.workflow-run-info.outputs.sourceEvent }}
    steps:
      - name: ""Get information about the current run""
        uses: potiuk/get-workflow-origin@v1_1
        id: workflow-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

name: Build
on:
  workflow_run:
    workflows: [\'CI\']
    types: [\'requested\']

jobs:
  get-info:
    name: ""Get information about the source run""
    runs-on: ubuntu-latest
    outputs:
      sourceHeadRepo: ${{ steps.source-run-info.outputs.sourceHeadRepo }}
      sourceHeadBranch: ${{ steps.source-run-info.outputs.sourceHeadBranch }}
      sourceHeadSha: ${{ steps.source-run-info.outputs.sourceHeadSha }}
      mergeCommitSha: ${{ steps.source-run-info.outputs.mergeCommitSha }}
      targetCommitSha: ${{ steps.source-run-info.outputs.targetCommitSha }}
      pullRequestNumber: ${{ steps.source-run-info.outputs.pullRequestNumber }}
      pullRequestLabels: ${{ steps.source-run-info.outputs.pullRequestLabels }}
      targetBranch: ${{ steps.source-run-info.outputs.targetBranch }}
      sourceEvent: ${{ steps.source-run-info.outputs.sourceEvent }}
    steps:
      - name: ""Get information about the origin \'CI\' run""
        uses: potiuk/get-workflow-origin@v1_1
        id: source-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}```
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
conda-incubator/setup-miniconda,"- uses: conda-incubator/setup-miniconda@v2
  with:
    activate-environment: whatever

- uses: conda-incubator/setup-miniconda@v2
  with:
    auto-activate-base: true
    activate-environment: """"

jobs:
  example-1:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu-latest"", ""macos-latest"", ""windows-latest""]
        python-version: [""3.7"", ""2.7""]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

jobs:
  example-2-linux:
    name: Ex2 Linux
    runs-on: ""ubuntu-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-mac:
    name: Ex2 Mac
    runs-on: ""macos-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Sh
        shell: sh -l {0}
        run: |
          conda info
          conda list
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-win:
    name: Ex2 Windows
    runs-on: ""windows-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell
        shell: powershell
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
      - name: Cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          conda info && conda list

jobs:
  example-3:
    name: Ex3 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
          python-version: 3.5
          condarc-file: etc/example-condarc.yml
          auto-activate-base: false
      - run: |
          conda info
          conda list

jobs:
  example-4:
    name: Ex4 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: foo
          python-version: 3.6
          channels: conda-forge,spyder-ide
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-5:
    name: Ex5 Miniforge for PyPy
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-6:
    name: Ex6 Mamba
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6
          mamba-version: ""*""
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
      - shell: bash -el {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash -el {0}
        run: mamba install jupyterlab

jobs:
  example-7:
    name: Ex7 Explicit
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: etc/example-explicit.conda.lock
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

jobs:
  example-10-miniforge:
    name: Ex10 (${{ matrix.os }}, Miniforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: etc/example-environment.yml
          miniforge-version: latest

jobs:
  example-10-mambaforge:
    name: Ex10 (${{ matrix.os }}, Mambaforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
        include:
          - os: ubuntu
            environment-file: etc/example-environment-no-name.yml
            miniforge-variant: Mambaforge
            miniforge-version: 4.9.2-4
          - os: macos
            environment-file: etc/example-empty-channels-environment.yml
            miniforge-variant: Mambaforge-pypy3
          - os: windows
            environment-file: etc/example-explicit.Windows.conda.lock
            condarc-file: etc/example-condarc.yml
            miniforge-variant: Mambaforge
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file: ${{ matrix.condarc-file }}
          environment-file: ${{ matrix.environment-file }}
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: ${{ matrix.miniforge-version }}
          use-mamba: true

jobs:
  example-11:
    name:
      Ex11 (os=${{ matrix.os }} architecture=${{ matrix.architecture }}
      miniconda-version=${{ matrix.miniconda-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""windows-latest""]
        architecture: [""x86""]
        miniconda-version: [""latest""]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          architecture: ${{ matrix.architecture }}
          miniconda-version: $${{ matrix.miniconda-version }}
          auto-update-conda: true
          python-version: ""3.8""

jobs:
  caching-example:
    name: Caching
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles(\'etc/example-environment.yml\') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          channel-priority: strict
          environment-file: etc/example-environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

- name: Setup Mambaforge
  uses: conda-incubator/setup-miniconda@v2
  with:
    miniforge-variant: Mambaforge
    miniforge-version: latest
    activate-environment: anaconda-client-env
    use-mamba: true

- name: Get Date
  id: get-date
  run: echo ""today=$(/bin/date -u \'+%Y%m%d\')"" >> $GITHUB_OUTPUT
  shell: bash

- name: Cache Conda env
  uses: actions/cache@v2
  with:
    path: ${{ env.CONDA }}/envs
    key:
      conda-${{ runner.os }}--${{ runner.arch }}--${{
      steps.get-date.outputs.today }}-${{
      hashFiles(\'etc/example-environment-caching.yml\') }}-${{ env.CACHE_NUMBER
      }}
  env:
    CACHE_NUMBER: 0
  id: cache

- name: Update environment
  run:
    mamba env update -n anaconda-client-env -f
    etc/example-environment-caching.yml
  if: steps.cache.outputs.cache-hit != \'true\'

jobs:
  default-shell:
    name: Default shell
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment-caching.yml
      - run: conda info
      - run: conda list
      - run: conda config --show
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions-cool/check-user-permission,"name: Check User Permission

on:
  issues:
    types: [opened, edited]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions-cool/check-user-permission@v2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
crystal-lang/install-crystal,"steps:
  - uses: crystal-lang/install-crystal@v1
  - run: crystal eval ""puts 1337""

steps:
  - uses: actions/checkout@v3
  - uses: crystal-lang/install-crystal@v1
    with:
      crystal: 1.2
  - run: shards install
  - run: crystal spec

    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, crystal: latest}
          - {os: ubuntu-latest, crystal: nightly}
          - {os: macos-latest}
          - {os: windows-latest}
    runs-on: ${{matrix.os}}
    steps:
      - uses: crystal-lang/install-crystal@v1
        with:
          crystal: ${{matrix.crystal}}
      - uses: actions/checkout@v3
      - run: shards install
      - run: crystal spec
      - run: crystal tool format && git diff --exit-code
        if: matrix.crystal == \'latest\'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
hpi-swa/setup-smalltalkCI,"steps:
  - uses: actions/checkout@v2
  - uses: hpi-swa/setup-smalltalkCI@v1
    id: smalltalkci
    with:
      smalltalk-image: 'Squeak64-trunk'
  - run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
    shell: bash
    timeout-minutes: 15

jobs:
  build:
    strategy:
      matrix:
        smalltalk: [ Squeak64-trunk, Pharo64-stable ]
    name: ${{ matrix.smalltalk }}
    steps:
      - uses: actions/checkout@v2
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15

jobs:
  build:
    strategy:
      matrix:
        smalltalk: [ Squeak64-trunk, Pharo64-stable ]
        smalltalk_config: [ .smalltalkA.ston, .smalltalkB.ston ]
    name: ${{ matrix.smalltalk }}
    steps:
      - uses: actions/checkout@v2
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      - run: smalltalkci -s ${{ matrix.smalltalk }} ${{ matrix.smalltalk_config }}
        shell: bash
        timeout-minutes: 15

steps:
  - uses: actions/checkout@v2
  - uses: hpi-swa/setup-smalltalkCI@v1
    id: smalltalkci
    with:
      smalltalk-image: 'Squeak64-trunk'
      smalltalkCI-branch: 'testing-branch'
      smalltalkCI-source: 'myfork/smalltalkCI'
  - run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
    shell: bash
    timeout-minutes: 15

(IceRepository registeredRepositoryIncludingPackage: self class package) location pathString

steps:
  - uses: actions/checkout@v3
    with:
      fetch-depth: 0 # Option fetching all commits
  - uses: hpi-swa/setup-smalltalkCI@v1
    id: smalltalkci
    with:
      smalltalk-image: 'Squeak64-trunk'
  - run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
    shell: bash
    timeout-minutes: 15
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
r0adkll/sign-android-release,"openssl base64 < some_signing_key.jks | tr -d \'\
\' | tee some_signing_key.jks.base64.txt

steps:
  - uses: r0adkll/sign-android-release@v1
    name: Sign app APK
    id: sign_app
    with:
      releaseDirectory: app/build/outputs/apk/release
      signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      alias: ${{ secrets.ALIAS }}
      keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      keyPassword: ${{ secrets.KEY_PASSWORD }}
    env:
      BUILD_TOOLS_VERSION: ""30.0.2""

  - uses: actions/upload-artifact@v2
    with:
      name: Signed app bundle
      path: ${{steps.sign_app.outputs.signedReleaseFile}}

steps:
  - uses: r0adkll/sign-android-release@v1
    id: sign_app
    with:
      releaseDirectory: app/build/outputs/apk/release
      signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      alias: ${{ secrets.ALIAS }}
      keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      keyPassword: ${{ secrets.KEY_PASSWORD }}

  - name: Example Release
    uses: ""marvinpinto/action-automatic-releases@latest""
    with:
      repo_token: ""${{ secrets.GITHUB_TOKEN }}""
      automatic_release_tag: ""latest""
      prerelease: true
      title: ""Release X""
      files: |
        ${{ steps.sign_app.signedReleaseFile0 }}
        ${{ steps.sign_app.signedReleaseFile1 }}
        ${{ steps.sign_app.signedReleaseFile2 }}
        ${{ steps.sign_app.signedReleaseFile3 }}
        ${{ steps.sign_app.signedReleaseFile4 }}

steps:
  - uses: r0adkll/sign-android-release@v1
    id: sign_app
    with:
      releaseDirectory: app/build/outputs/apk/release
      signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      alias: ${{ secrets.ALIAS }}
      keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      keyPassword: ${{ secrets.KEY_PASSWORD }}

  - uses: jungwinter/split@v1
    id: signed_files
    with:
      msg: ${{ steps.sign_app.signedReleaseFiles }}
      separator: \':\'

  - name: Example Release
    uses: ""marvinpinto/action-automatic-releases@latest""
    with:
      repo_token: ""${{ secrets.GITHUB_TOKEN }}""
      automatic_release_tag: ""latest""
      prerelease: true
      title: ""Release X""
      files: |
        ${{ steps.signed_files._0 }}
        ${{ steps.signed_files._1 }}
        ${{ steps.signed_files._2 }}
        ${{ steps.signed_files._3 }}
        ${{ steps.signed_files._4 }}
",0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
fjogeleit/http-request-action,"jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy Stage
      uses: fjogeleit/http-request-action@v1
      with:
        url: \'https://ansible.io/api/v2/job_templates/84/launch/\'
        method: \'POST\'
        username: ${{ secrets.AWX_USER }}
        password: ${{ secrets.AWX_PASSWORD }}
        customHeaders: \'{""Content-Type"": ""application/json""}\'
        data: \'{""key_1"": ""value_1"", ""key_2"": ""value_2""}\'

steps:
  - name: Make Request
    id: myRequest
    uses: fjogeleit/http-request-action@v1
    with:
      url: ""http://yoursite.com/api""
  - name: Show Response
    run: |
      echo ${{ steps.myRequest.outputs.response }}
      echo ${{ steps.myRequest.outputs.headers }}
      echo ${{ fromJson(steps.myRequest.outputs.response).field_you_want_to_access }}

bin/http-action --help                   
Positionals:
  url  request URL                                                     [string]

Optionen:
      --help           helper text                                     [boolean]
  -d, --data           request body data                               [string] [default: ""{}""]
  -f, --files          request files, send as multipart/form-data      [string] [default: ""{}""]
      --file           single file, send as application/octet-stream   [string]
  -h, --customHeaders  custom request headers                          [string] [default: ""{}""]
  -m, --method         request method (GET, POST, PATCH, PUT, DELETE)  [string] [default: ""POST""]
  -t, --contentType    request content type                            [string] [default: ""application/json""]
      --bearerToken    bearer token without Bearer prefix, added as
                       Authorization header                            [string]
      --timeout        request timeout                                 [number] [default: 5000]
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
dorny/test-reporter,"on:
  pull_request:
  push:
jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     # checkout the repo
      - run: npm ci                   # install packages
      - run: npm test                 # run tests (configured to use jest-junit reporter)

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results

name: \'CI\'
on:
  pull_request:
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2         # checkout the repo
      - run: npm ci                       # install packages
      - run: npm test                     # run tests (configured to use jest-junit reporter)
      - uses: actions/upload-artifact@v2  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: jest-junit.xml

name: \'Test Report\'
on:
  workflow_run:
    workflows: [\'CI\']                     # runs after CI workflow
    types:
      - completed
jobs:
  report:
    runs-on: ubuntu-latest
    steps:
    - uses: dorny/test-reporter@v1
      with:
        artifact: test-results            # artifact name
        name: JEST Tests                  # Name of the check run which will be created
        path: \'*.xml\'                     # Path to test results (inside artifact .zip)
        reporter: jest-junit              # Format of test results

- uses: dorny/test-reporter@v1
  with:

    artifact: \'\'

    name: \'\'

    path: \'\'

    path-replace-backslashes: \'false\'

    reporter: \'\'

    only-summary: \'false\'

    list-suites: \'all\'

    list-tests: \'all\'

    max-annotations: \'10\'

    fail-on-error: \'true\'

    working-directory: \'\'

    token: \'\'

file_reporters:
  json: reports/test-results.json

<PropertyGroup>
  <VSTestLogger>trx%3bLogFileName=$(MSBuildProjectName).trx</VSTestLogger>
  <VSTestResultsDirectory>$(MSBuildThisFileDirectory)/TestResults/$(TargetFramework)</VSTestResultsDirectory>
</PropertyGroup>

file_reporters:
  json: reports/test-results.json

""scripts"": {
  ""test"": ""jest --ci --reporters=default --reporters=jest-Junit""
},
""devDependencies"": {
  ""jest"": ""^26.5.3"",
  ""jest-junit"": ""^12.0.0""
},
""jest-junit"": {
  ""outputDirectory"": ""reports"",
  ""outputName"": ""jest-junit.xml"",
  ""ancestorSeparator"": "" \xe2\x80\xba "",
  ""uniqueOutputName"": ""false"",
  ""suiteNameTemplate"": ""{filepath}"",
  ""classNameTemplate"": ""{classname}"",
  ""titleTemplate"": ""{title}""
}

""scripts"": {
  ""test"": ""mocha --reporter json > test-results.json""
}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sigstore/cosign-installer,"uses: sigstore/cosign-installer@v3.1.1
with:
  cosign-release: \'v2.1.1\' # optional

jobs:
  example:
    runs-on: ubuntu-latest

    permissions: {}

    name: Install Cosign
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: \'v2.1.1\'
      - name: Check install!
        run: cosign version

jobs:
  example:
    runs-on: ubuntu-latest

    permissions: {}

    name: Install Cosign
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
      - name: Check install!
        run: cosign version

jobs:
  example:
    runs-on: ubuntu-latest

    permissions: {}

    name: Install Cosign via go install
    steps:
      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: \'1.20\'
          check-latest: true
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: main
      - name: Check install!
        run: cosign version

jobs:
  build-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    name: build-image
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ghcr.io/sigstore/sample-honk
          tags: type=sha,format=long

      - name: Build and Push container images
        uses: docker/build-push-action@v4.0.0
        id: build-and-push
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ""${TAGS}@${DIGEST}""
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: cosign sign --yes ""${TAGS}@${DIGEST}""
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
shogo82148/actions-setup-redis,"steps:
- uses: actions/checkout@v3
- uses: shogo82148/actions-setup-redis@v1
  with:
    redis-version: \'6.x\'
- run: redis-cli ping

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - \'ubuntu-latest\'
        - \'macOS-latest\'
        redis:
        - \'6.2\'
        - \'6.0\'
        - \'5.0\'
        - \'4.0\'
    name: Redis ${{ matrix.redis }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ matrix.redis }}
          auto-start: ""false""

      - name: tests with Test::RedisServer
        run: |
          cpanm Test::RedisServer
          prove -lv t

jobs:
  build:
    runs-on: \'ubuntu-latest\'
    steps:
      - uses: actions/checkout@v3
      - id: setup
        uses: shogo82148/actions-setup-redis@v1

      - run: |
          redis-cli -h 127.0.0.1 -p ${{ steps.setup.outputs.redis-port }} ping

jobs:
  build:
    runs-on: \'ubuntu-latest\'
    steps:
      - uses: actions/checkout@v3
      - id: setup
        uses: shogo82148/actions-setup-redis@v1

      - run: |
          redis-cli -s ${{ steps.setup.outputs.redis-unix-socket }} ping

jobs:
  build:
    runs-on: \'ubuntu-latest\'
    steps:
      - uses: actions/checkout@v3
      - id: setup
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ""6.0""

          redis-port: ""0""
          redis-tls-port: ""6379""

      - run: |
          redis-cli -h 127.0.0.1 -p ""${{ steps.setup.outputs.redis-tls-port }}"" \\
            --tls \\
            --cert ""${{ steps.setup.outputs.redis-tls-dir }}/redis.crt"" \\
            --key ""${{ steps.setup.outputs.redis-tls-dir }}/redis.key"" \\
            --cacert ""${{ steps.setup.outputs.redis-tls-dir }}/ca.crt"" \\
            ping
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
step-security/harden-runner,"steps:
  - uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
    with:
      egress-policy: audit
",0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
JS-DevTools/npm-publish,"  - run: echo ""Version changed!""
-   if: ${{ steps.publish.outputs.type != \'none\' }}
+   if: ${{ steps.publish.outputs.type }}

  with:
    token: ${{ secrets.NPM_TOKEN }}
+   ignore-scripts: false

  - uses: actions/setup-node@v3
    with:
      node-version: \'18\'
      registry-url: https://registry.npmjs.org/
  - uses: JS-DevTools/npm-publish@v1
    with:
      token: ${{ secrets.NPM_TOKEN }}
  - name: Do some more stuff with npm
    run: npm whoami
    env:
-     INPUT_TOKEN: ${{ secrets.NPM_TOKEN }}
+     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  with:
    token: ${{ secrets.NPM_TOKEN }}
-   check-version: true
-   greater-version-only: false
+   strategy: all

  with:
    token: ${{ secrets.NPM_TOKEN }}
-   check-version: true
-   greater-version-only: true
+   strategy: upgrade

- - uses: JS-DevTools/npm-publish@v1
-   with:
-     token: ${{ secrets.NPM_TOKEN }}
-     check-version: false
+ - uses: actions/setup-node@v3
+   with:
+     node-version: \'18\'
+     registry-url: https://registry.npmjs.org/
+ - run: npm publish
+   env:
+     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    branches: main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ""18""
      - run: npm ci
      - run: npm test
      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}

on:
  push:
    branches: main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # allow GITHUB_TOKEN to publish packages
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ""18""
      - run: npm ci
      - run: npm test
      - uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: ""https://npm.pkg.github.com""

steps:
  - id: publish
    uses: JS-DevTools/npm-publish@v2
    with:
      token: ${{ secrets.NPM_TOKEN }}

  - if: ${{ steps.publish.outputs.type }}
    run: echo ""Version changed!""

npm install --save-dev @jsdevtools/npm-publish

import { npmPublish } from ""@jsdevtools/npm-publish"";

// Run npm-publish with all defaults
await npmPublish({ token: ""YOUR_NPM_AUTH_TOKEN_HERE"" });

import type { Options } from ""@jsdevtools/npm-publish"";

import type { Results } from ""@jsdevtools/npm-publish"";

npm install --save-dev @jsdevtools/npm-publish

npx npm-publish --token YOUR_NPM_AUTH_TOKEN_HERE

npx npm-publish --token YOUR_NPM_AUTH_TOKEN_HERE --registry http://example.com ./path/to/package

Usage:

  npm-publish <options> [package]

Arguments:

  package                 The path to the package to publish.
                          May be a directory, package.json, or .tgz file.
                          Defaults to the package in the current directory.

Options:

  --token <token>         (Required) npm authentication token.

  --registry <url>        Registry to read from and write to.
                          Defaults to ""https://registry.npmjs.org/"".

  --tag <tag>             The distribution tag to check against and publish to.
                          Defaults to ""latest"".

  --access <access>       Package access, may be ""public"" or ""restricted"".
                          See npm documentation for details.

  --provenance            Publish with provenance statements.
                          See npm documentation for details.

  --strategy <strategy>   Publish strategy, may be ""all"" or ""upgrade"".
                          Defaults to ""all"", see documentation for details.

  --no-ignore-scripts     Allow lifecycle scripts, which are disabled by default
                          as a security precaution. Defaults to false.

  --dry-run               Do not actually publish anything.
  --quiet                 Only print errors.
  --debug                 Print debug logs.

  -v, --version           Print the version number.
  -h, --help              Show usage text.

Examples:

  $ npm-publish --token abc123 ./my-package
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
Sibz/github-status-action,"name: ""test""
on: # run on any PRs and main branch changes
pull_request:
push:
  branches:
    - master
jobs:
test: # make sure the action works on a clean machine without building
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v2
  - name: Run the action # You would run your tests before this using the output to set state/desc
    uses: Sibz/github-status-action@v1
    with: 
      authToken: ${{secrets.GITHUB_TOKEN}}
      context: \'Test run\'
      description: \'Passed\'
      state: \'success\'
      sha: ${{github.event.pull_request.head.sha || github.sha}}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jwlawson/actions-setup-cmake,"jobs:
  example:
    runs-on: ubuntu-latest
    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: '3.16.x'
    - name: Use cmake
      run: cmake --version
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
fabriciobastian/download-release-asset-action,"name: download-release-asset

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: YOUR_JOB_NAME
    steps:
    - name: Download asset
      uses: fabriciobastian/download-release-asset-action@v1.0.6
      with:
        version: latest
        repository: JsonRpcNet/JsonRpcNet.Docs.Ui
        file: jsonrpcnet-docs-ui.zip
        out: ./some/path/
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
lucasbento/auto-close-issues,"on:
  issues:
    types: [opened, edited]

jobs:
  auto_close_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Automatically close issues that don\'t follow the issue template
        uses: lucasbento/auto-close-issues@v1.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          issue-close-message: ""@${issue.user.login}: hello! :wave:\
\
This issue is being automatically closed because it does not follow the issue template."" # optional property
          closed-issues-label: ""\xf0\x9f\x99\x81 Not following issue template"" # optional property
",0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kentaro-m/auto-assign-action,"name: 'Auto Assign'
on:
  pull_request:
    types: [opened, ready_for_review]

jobs:
  add-reviews:
    runs-on: ubuntu-latest
    steps:
      - uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: '.github/some_name_for_configs.yml' # Only needed if you use something other than .github/auto_assign.yml

name: 'Auto Assign'
 on:
-  pull_request:
+  pull_request_target:
     types: [opened, ready_for_review]

 jobs:

addReviewers: true

addAssignees: false

reviewers:
  - reviewerA
  - reviewerB
  - reviewerC

numberOfReviewers: 0



addReviewers: true

addAssignees: false

numberOfReviewers: 1


useReviewGroups: true

reviewGroups:
  groupA:
    - reviewerA
    - reviewerB
    - reviewerC
  groupB:
    - reviewerD
    - reviewerE
    - reviewerF

useAssigneeGroups: false


addAssignees: author

filterLabels:
  include:
    - my_label
    - another_label
  exclude:
    - wip

runOnDraft: true
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sibiraj-s/action-archiver,"name: Build
on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci
      - run: npm run build

      - uses: sibiraj-s/action-archiver@v1
        with:
          working-directory: './'
          path: 'dist/**'
          format: tar # default
          output: dist.tar

steps:
  - uses: sibiraj-s/action-archiver@v1
    with:
      path: '**/*.js'
      format: zip
      output: dist.zip
      compression-level: 4 # default, see https://nodejs.org/api/zlib.html#class-options

steps:
  - uses: sibiraj-s/action-archiver@v1
    with:
      path: '**/*.js'
      format: tar
      gzip: true
      output: dist.tar.gz

steps:
  - uses: sibiraj-s/action-archiver@v1
    with:
      path: '**/*'
      output: dist.tar
      ignore: |
        **/*.md
        **/*.yml
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
emibcn/badge-action,"uses: emibcn/badge-action@v2.0.2
with:
  label: 'Test coverage'
  status: '53.4%'
  color: 'blue,555,daf'
  path: '.github/badges/coverage.svg'

git checkout master
git checkout --orphan badges

git rm --cached $(git ls-files)

echo '# Badges branch' > README.md
git add README.md
git commit -m 'Add dedicated README'
git push origin badges
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
marcodallasanta/ssh-scp-deploy,"    - uses: mdallasanta/ssh-scp-deploy@{version}
      with:
        local: \'./\'                                                  # Local file path - REQUIRED false - DEFAULT ./
        remote: \'~/\'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
        host: ${{secrets.HOST}}                                      # Remote server address - REQUIRED true
        port: ${{secrets.PORT}}                                      # Remote server port - REQUIRED false - DEFAULT 22
        user: ${{secrets.USER}}                                      # Remote server user - REQUIRED true
        password: ${{secrets.PASSWORD}}                              # User password - REQUIRED at least one of ""password"" or ""key"" 
        key: ${{secrets.KEY}}                                        # Remote server private key - REQUIRED at least one of ""password"" or ""key"" 
        pre_upload: echo ""This will be executed before the upload!""  # Command to run via ssh before scp upload - REQUIRED false
        post_upload: echo ""This will be executed after the upload!""  # Command to run via ssh after scp upload - REQUIRED false
        ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
        scp_options: -v                                              # Flags to use during scp - REQUIRED false - DEFAULT \'\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
Crec0/announce-n-crosspost,"  Publish-To-Discord:
    runs-on: ubuntu-latest
    steps:
      - name: Publish
        id: publish-to-discord
        uses: Crec0/announce-n-crosspost@v1
        with:
          bot-token: ${{ secrets.DISCORD_BOT_TOKEN }}
          channel: ${{ secrets.CHANNEL_ID }}
          content: |
            **${{ github.event.release.name }}** has been released!
            
            ${{ github.event.release.body }}
            
            Get it on Github Releases: <${{ github.event.release.html_url }}>

      - name: Print message id
        run: echo ""Message id = ${{ steps.publish-to-discord.outputs.message-id }}""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lando/code-sign-action,"outputs:
  file:
    description: ""The path to the signed and/or notarized file.""
    value: ${{ steps.code-sign-action.outputs.file }}

jobs:
  package:
    runs-on: macos-11
  steps:
    name: Sign binary
    uses: lando/code-sign-action@v2
    with:
      file: path/to/binary
      certificate-data: ${{ secrets.APPLE_CERT_DATA }}
      certificate-password: ${{ secrets.APPLE_CERT_PASSWORD }}
      apple-team-id: ${{ secrets.APPLE_TEAM_ID }}

jobs:
  package:
    runs-on: macos-11
  steps:
    name: Sign binary
    uses: lando/code-sign-action@v2
    with:
      file: path/to/binary
      certificate-data: ${{ secrets.APPLE_CERT_DATA }}
      certificate-password: ${{ secrets.APPLE_CERT_PASSWORD }}
      apple-notary-user: ${{ secrets.APPLE_NOTARY_USER }}
      apple-notary-password: ${{ secrets.APPLE_NOTARY_PASSWORD }}
      apple-notary-tool: altool
      apple-team-id: FY8GAUX282
      apple-product-id: dev.lando.code-sign-action
      options: --options runtime --entitlements entitlements.xml

jobs:
  package:
    runs-on: windows-2022
  steps:
    name: Sign binary
    uses: lando/code-sign-action@v2
    with:
      file: path/to/binary
      certificate-data: ${{ secrets.WINDOZE_CERT_DATA }}
      certificate-password: ${{ secrets.WINDOZE_CERT_PASSWORD }}
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
leonsteinhaeuser/project-beta-automations,"name: Project automations
on:
  issues:
    types:
      - opened
      - reopened
      - closed
  pull_request:
    types:
      - opened
      - reopened
      - review_requested
      - closed

env:
  todo: Todo \xe2\x9c\x8f\xef\xb8\x8f
  done: Done \xe2\x9c\x85
  in_progress: In Progress \xf0\x9f\x9a\xa7

jobs:
  issue_opened_or_reopened:
    name: issue_opened_or_reopened
    runs-on: ubuntu-latest
    if: github.event_name == \'issues\' && (github.event.action == \'opened\' || github.event.action == \'reopened\')
    steps:
      - name: Move issue to ${{ env.todo }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.todo }} # Target status
  issue_closed:
    name: issue_closed
    runs-on: ubuntu-latest
    if: github.event_name == \'issues\' && github.event.action == \'closed\'
    steps:
      - name: Moved issue to ${{ env.done }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.done }} # Target status
  pr_opened_or_reopened_or_reviewrequested:
    name: pr_opened_or_reopened_or_reviewrequested
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request\' && (github.event.action == \'opened\' || github.event.action == \'reopened\' || github.event.action == \'review_requested\')
    steps:
      - name: Move PR to ${{ env.in_progress }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.pull_request.node_id }}
          status_value: ${{ env.in_progress }} # Target status
  pr_closed:
    name: pr_closed
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request\' && github.event.action == \'closed\'
    steps:
      - name: Move PR to ${{ env.done }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.pull_request.node_id }}
          status_value: ${{ env.done }} # Target status

name: Project automations

on:
  pull_request_target:
    types:
      - opened
      - closed

env:
  done: Done \xe2\x9c\x85
  in_progress: In Progress \xf0\x9f\x9a\xa7

jobs:
  pr_opened:
    name: pr_opened
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request_target\' && github.event.action == \'opened\'
    steps:
      - name: Move PR to ${{ env.in_progress }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.pull_request.node_id }}
          status_value: ${{ env.in_progress }} # Target status
  pr_closed:
    name: pr_closed
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request_target\' && github.event.action == \'closed\'
    steps:
      - name: Move PR to ${{ env.done }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          user: sample-user
          project_id: 1
          resource_node_id: ${{ github.event.pull_request.node_id }}
          status_value: ${{ env.done }} # Target status

gh cli is installed.
Run echo ""No GH Auth method configured, provide PAT or App ID/Key""; exit 1
  echo ""No GH Auth method configured, provide PAT or App ID/Key""; exit 1
  shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
  env:
    in_review: In Review
No GH Auth method configured, provide PAT or App ID/Key
Error: Process completed with exit code 1.

{
  ""name"": ""Sample Text Field"", # defines the name of the custom field
  ""type"": ""text"", # can be one of: text, number, date, single_select, iteration
  ""value"": ""High"" # defines the value to set (string)
}

[
  {
    ""name"": ""Priority"",
    ""type"": ""single_select"",
    ""value"": ""High""
  }
  {
    ""name"": ""Context"",
    ""type"": ""text"",
    ""value"": ""Just a random text""
  }
]

\'[{\\""name\\"": \\""Priority\\"",\\""type\\"": \\""text\\"",\\""value\\"": \\""uuid1\\""},{\\""name\\"": \\""Number\\"",\\""type\\"": \\""number\\"",\\""value\\"": \\""100\\""},{\\""name\\"": \\""Date\\"",\\""type\\"": \\""date\\"",\\""value\\"": \\""2022-01-28T20:02:27.306+01:00\\""},{\\""name\\"": \\""Single Select\\"",\\""type\\"": \\""single_select\\"",\\""value\\"": \\""Option 1\\""},{\\""name\\"": \\""Iteration\\"",\\""type\\"": \\""iteration\\"",\\""value\\"": \\""Iteration 1\\""}]\'

name: Project automations (organization)

on:
  issues:
  pull_request:

env:
  gh_project_token: ${{ secrets.PAC_TOKEN }}
  project_id: 1
  gh_organization: sample-org
  status_todo: ""Todo""
  status_in_progress: ""In Progress""
  custom_field_values: \'[{\\""name\\"": \\""Priority\\"",\\""type\\"": \\""text\\"",\\""value\\"": \\""uuid1\\""},{\\""name\\"": \\""Number\\"",\\""type\\"": \\""number\\"",\\""value\\"": \\""100\\""},{\\""name\\"": \\""Date\\"",\\""type\\"": \\""date\\"",\\""value\\"": \\""2022-01-28T20:02:27.306+01:00\\""},{\\""name\\"": \\""Single Select\\"",\\""type\\"": \\""single_select\\"",\\""value\\"": \\""Option 1\\""},{\\""name\\"": \\""Iteration\\"",\\""type\\"": \\""iteration\\"",\\""value\\"": \\""Iteration 1\\""}]\'

jobs:
  issue_opened_or_reopened:
    name: issue_opened_or_reopened
    runs-on: ubuntu-latest
    if: github.event_name == \'issues\' && (github.event.action == \'opened\' || github.event.action == \'reopened\')
    steps:
      - name: \'Move issue to ${{ env.status_todo }}\'
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_LOG: ""true""
        with:
          gh_token: ${{ env.gh_project_token }}
          organization: ${{ env.gh_organization }}
          project_id: ${{ env.project_id }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.status_todo }}

  issue_project_custom_field_update:
    name: issue_opened_or_reopened
    runs-on: ubuntu-latest
    if: github.event_name == \'issues\'
    needs:
      - issue_opened_or_reopened
    steps:
      - name: \'Modify custom fields\'
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_LOG: ""true""
        with:
          gh_token: ${{ env.gh_project_token }}
          organization: ${{ env.gh_organization }}
          project_id: ${{ env.project_id }}
          resource_node_id: ${{ github.event.issue.node_id }}
          operation_mode: custom_field
          custom_field_values: ${{ env.custom_field_values }}

  pr_opened_or_reopened:
    name: pr_opened_or_reopened
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request\' && (github.event.action == \'opened\' || github.event.action == \'reopened\')
    steps:
      - name: \'Move PR to ${{ env.status_in_progress }}\'
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_LOG: ""true""
        with:
          gh_token: ${{ env.gh_project_token }}
          organization: ${{ env.gh_organization }}
          project_id: ${{ env.project_id }}
          resource_node_id: ${{ github.event.pull_request.node_id }}
          status_value: ${{ env.status_in_progress }}

  pr_custom_field_update_1:
    name: pr_custom_field_update_1 from env
    runs-on: ubuntu-latest
    if: github.event_name == \'pull_request\'
    needs:
      - pr_opened_or_reopened
    steps:
      - name: \'Modify custom fields\'
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_LOG: ""true""
        with:
          gh_token: ${{ env.gh_project_token }}
          organization: ${{ env.gh_organization }}
          project_id: ${{ env.project_id }}
          resource_node_id: ${{ github.event.pull_request.node_id }}
          operation_mode: custom_field
          custom_field_values: ${{ env.custom_field_values }}

\'[{\\""name\\"": \\""Iteration\\"",\\""type\\"": \\""iteration\\"",\\""value\\"": \\""@next\\""}]\'

\'[{\\""name\\"": \\""Iteration\\"",\\""type\\"": \\""iteration\\"",\\""value\\"": \\""@current\\""}]\'

env:
  todo: Todo \xe2\x9c\x8f\xef\xb8\x8f
  gh_project_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  user: sample-user
  project_id: 1

jobs:
  issue_opened:
    name: issue_opened
    runs-on: ubuntu-latest
    if: github.event_name == \'issues\' && github.event.action == \'opened\'
    steps:
      - name: Move issue to ${{ env.todo }}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_COMMANDS: true
          DEBUG_LOG: true
        with:
          gh_token: ${{ env.gh_project_token }}
          user: ${{ env.user }}
          project_id: ${{ env.project_id }}
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{ env.todo }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
limitusus/json-syntax-check,"name: JSON check

on:
  push:
    paths:
      - \'**.json\'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v2
        with:
          pattern: ""\\\\.json$""
",0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hkusu/status-create-action,"- uses: hkusu/status-create-action@v1
  with:
    sha: ${{ github.sha }}
    state: pending # specify 'error', 'failure', 'pending', or 'success'
    target-url: http://ci.example.com # default: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
    description: Running.. # option
    context: My Workflow # default: '${{ github.workflow }}'

- uses: hkusu/status-create-action@v1
  id: status-create # specify id
  with:
    sha: ${{ github.sha }}
    state: pending
- name: Show result
  if: always()
  run: echo '${{ steps.status-create.outputs.result }}' # success or failure
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
xinthink/action-telegram,"- name: notification
  if: cancelled() == false
  uses: xinthink/action-telegram@v1.1
  with:
    botToken: ${{ secrets.BotToken }}
    chatId: ${{ secrets.ChatID }}
    jobStatus: ${{ job.status }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
JoshuaTheMiller/conditional-build-matrix,"name: Sample Conditional Matrix Build

on: push

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2      
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@main        
        with:
          filter: \'[?runOnBranch==`${{ github.ref }}` || runOnBranch==`always`]\'
  build:
    needs: matrix_prep
    strategy:      
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: Build
    runs-on: ${{ matrix.runs_on }}
    steps:
    - name: Echo
      run: echo ""${{ matrix.runOn }}""


name: Sample Conditional Matrix Build

on: push

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@main        
        with:          
          filter: \'[?runOnBranch==`${{ env.BRANCH_NAME }}` || runOnBranch==`always`]\'   
  build:
    needs: matrix_prep
    strategy:      
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: Build
    runs-on: ${{ matrix.runs_on }}
    steps:
    - name: Echo
      run: echo ""${{ matrix.runOn }}""


[
    {
        ""runs_on"":""ubuntu-latest"",        
        ""runOnBranch"":""always""
    },
    {
        ""runs_on"":""windows-latest"",        
        ""runOnBranch"":""main""
    }
]
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
cardinalby/git-get-release-action,"- uses: cardinalby/git-get-release-action@v1
  env:
    GITHUB_TOKEN: ${{ github.token }}
  with:
    tag: \'1.2.3\'    

- uses: cardinalby/git-get-release-action@v1
  env:
    GITHUB_TOKEN: ${{ github.token }}
  with:
    commitSha: e92acb19de8845ad1f3cb6cfab421ac26002d6b6
    prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
cicirello/jacoco-badge-generator,"![Coverage](.github/badges/jacoco.svg)

![Branches](.github/badges/branches.svg)

[![Coverage](.github/badges/jacoco.svg)](https://github.com/USERNAME/REPOSITORY/actions/workflows/build.yml)

![Coverage](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/USERNAME/REPOSITORY/BRANCHNAME/.github/badges/jacoco.json)

![Branches](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/USERNAME/REPOSITORY/BRANCHNAME/.github/badges/branches.json)

[![Coverage](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/USERNAME/REPOSITORY/BRANCHNAME/.github/badges/jacoco.json)](https://github.com/USERNAME/REPOSITORY/actions/workflows/build.yml)

{""branches"": 77.77777777777779, ""coverage"": 72.72727272727273}

<build>
  <plugins>
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>0.8.10</version>
      <executions>
        <execution>
          <goals>
            <goal>prepare-agent</goal>
          </goals>
        </execution>
        <execution>
          <id>generate-code-coverage-report</id>
          <phase>test</phase>
          <goals>
            <goal>report</goal>
          </goals>
        </execution>
      </executions>
      </plugin>
  </plugins>
</build>

plugins {
    jacoco
}

tasks.jacocoTestReport {
    reports {
        csv.isEnabled = true
    }
}

plugins {
    id \'jacoco\'
}

jacocoTestReport {
    reports {
        csv.enabled true
    }
}

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true

      - name: Run Tests
        run: ./gradlew test

      - name: Run Test Coverage
        run: ./gradlew jacocoTestReport

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2.10.0
      with:
        generate-branches-badge: true

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        jacoco-csv-file: target/site/jacoco/jacoco.csv
        badges-directory: .github/badges
        generate-coverage-badge: true
        coverage-badge-filename: jacoco.svg
        generate-branches-badge: false
        branches-badge-filename: branches.svg
        generate-coverage-endpoint: false
        coverage-endpoint-filename: jacoco.json
        generate-branches-endpoint: false
        branches-endpoint-filename: branches.json
        generate-summary: false
        summary-filename: coverage-summary.json
        coverage-label: coverage
        branches-label: branches
        colors: \'#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44\'
        intervals: 100 90 80 70 60 0
        on-missing-report: fail
        fail-if-coverage-less-than: 0
        fail-if-branches-less-than: 0
        fail-on-coverage-decrease: false
        fail-on-branches-decrease: false
        generate-workflow-summary: true

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: \'17\'
        distribution: \'adopt\'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2

    - name: Log coverage percentage
      run: |
        echo ""coverage = ${{ steps.jacoco.outputs.coverage }}""
        echo ""branch coverage = ${{ steps.jacoco.outputs.branches }}""

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name \'YOUR NAME HERE\'
          git config --global user.email \'YOUR-GITHUB-USERID@users.noreply.github.com\'
          git add -A
          git commit -m ""Autogenerated JaCoCo coverage badge""
          git push
        fi

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: \'17\'
        distribution: \'adopt\'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true

    - name: Log coverage percentage
      run: |
        echo ""coverage = ${{ steps.jacoco.outputs.coverage }}""
        echo ""branch coverage = ${{ steps.jacoco.outputs.branches }}""

    - name: Commit and push the badge (if it changed)
      uses: EndBug/add-and-commit@v7
      with:
        default_author: github_actions
        message: \'commit badge\'
        add: \'*.svg\'

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: \'17\'
        distribution: \'adopt\'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: >
          module1/target/site/jacoco/jacoco.csv
          module2/target/site/jacoco/jacoco.csv
          module3/target/site/jacoco/jacoco.csv

    - name: Log coverage percentage
      run: |
        echo ""coverage = ${{ steps.jacoco.outputs.coverage }}""
        echo ""branch coverage = ${{ steps.jacoco.outputs.branches }}""

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name \'YOUR NAME HERE\'
          git config --global user.email \'YOUR-GITHUB-USERID@users.noreply.github.com\'
          git add -A
          git commit -m ""Autogenerated JaCoCo coverage badge""
          git push
        fi

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: \'17\'
        distribution: \'adopt\'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: ""**/jacoco.csv""

    - name: Log coverage percentage
      run: |
        echo ""coverage = ${{ steps.jacoco.outputs.coverage }}""
        echo ""branch coverage = ${{ steps.jacoco.outputs.branches }}""

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name \'YOUR NAME HERE\'
          git config --global user.email \'YOUR-GITHUB-USERID@users.noreply.github.com\'
          git add -A
          git commit -m ""Autogenerated JaCoCo coverage badge""
          git push
        fi

name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up the Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: \'17\'
        distribution: \'adopt\'

    - name: Build with Maven
      run: mvn -B test

    - name: Generate JaCoCo Badges for Module 1
      id: jacocoMod1
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: module1/target/site/jacoco/jacoco.csv
        coverage-badge-filename: jacoco1.svg
        branches-badge-filename: branches1.svg
        coverage-label: coverage (module 1)
        branches-label: branches (module 1)

    - name: Generate JaCoCo Badges for Module 2
      id: jacocoMod2
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: module2/target/site/jacoco/jacoco.csv
        coverage-badge-filename: jacoco2.svg
        branches-badge-filename: branches2.svg
        coverage-label: coverage (module 2)
        branches-label: branches (module 2)

    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name \'YOUR NAME HERE\'
          git config --global user.email \'YOUR-GITHUB-USERID@users.noreply.github.com\'
          git add -A
          git commit -m ""Autogenerated JaCoCo coverage badge""
          git push
        fi

python3 -m pip install jacoco-badge-generator

py -m pip install jacoco-badge-generator

python3 -m pip install --upgrade jacoco-badge-generator

py -m pip install --upgrade jacoco-badge-generator

python3 -m jacoco_badge_generator --help

py -m jacoco_badge_generator --help

python3 -m jacoco_badge_generator

python3 -m jacoco_badge_generator --generate-branches-badge true

python3 -m jacoco_badge_generator --generate-coverage-badge false --generate-coverage-endpoint true --generate-branches-endpoint true

python3 -m jacoco_badge_generator --colors green yellow orange red --intervals 90 75 60

python3 -m jacoco_badge_generator --badges-directory put/badges/here

python3 -m jacoco_badge_generator --jacoco-csv-file build/reports/jacoco/test/jacocoTestReport.csv

python3 -m jacoco_badge_generator --jacoco-csv-file reports/report1.csv reports/report2.csv

python3 -m jacoco_badge_generator --jacoco-csv-file reports/report*.csv

python3 -m jacoco_badge_generator --jacoco-csv-file **/jacoco.csv
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
convictional/trigger-workflow-and-wait,"- uses: convictional/trigger-workflow-and-wait@v1.6.1
  with:
    owner: keithconvictional
    repo: myrepo
    github_token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}

- uses: convictional/trigger-workflow-and-wait@v1.6.1
  with:
    owner: keithconvictional
    repo: myrepo
    github_token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
    github_user: github-user
    workflow_file_name: main.yml
    ref: release-branch
    wait_interval: 10
    client_payload: \'{}\'
    propagate_failure: false
    trigger_workflow: true
    wait_workflow: true

- uses: convictional/trigger-workflow-and-wait@v1.6.1
  with:
    owner: keithconvictional
    repo: myrepo
    github_token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
    comment_downstream_url: ${{ github.event.pull_request.comments_url }}

INPUT_OWNER=""keithconvictional"" \\
INPUT_REPO=""myrepo"" \\
INPUT_GITHUB_TOKEN=""<REDACTED>"" \\
INPUT_GITHUB_USER=""github-user"" \\
INPUT_WORKFLOW_FILE_NAME=""main.yml"" \\
INPUT_REF=""release-branch"" \\
INPUT_WAIT_INTERVAL=10 \\
INPUT_CLIENT_PAYLOAD=\'{}\' \\
INPUT_PROPAGATE_FAILURE=false \\
INPUT_TRIGGER_WORKFLOW=true \\
INPUT_WAIT_WORKFLOW=true \\
busybox sh entrypoint.sh

name: Main
on:
  workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Pause for 25 seconds
        run: |
          sleep 25

...
- name: Pause for 25 seconds
  run: |
    sleep 25
    echo ""For testing failure""
    exit 1

- uses: convictional/trigger-workflow-and-wait@v1.6.1
  with:
    owner: keithconvictional
    repo: myrepo
    github_token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
fluttercandies/no-free-usage-action,"on:
  issues:
    types: [opened, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Check issue actor
      uses: fluttercandies/no-free-usage-action@v1.0.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
haythem/public-ip,"name: Public IP\r
\r
on: push\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
\r
    steps:\r
    - name: Public IP\r
      id: ip\r
      uses: haythem/public-ip@v1.3\r
\r
    - name: Print Public IP\r
      run: |\r
        echo ${{ steps.ip.outputs.ipv4 }}\r
        echo ${{ steps.ip.outputs.ipv6 }}\r
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
tj-actions/changed-files,"name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR ""2"" -> To retrieve the preceding commit.

      - name: Get all test, doc and src files that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@v39
        with:
          files_yaml: |
            doc:
              - \'**/*.md\'
              - docs/**
              - README.md
            test:
              - test/**
              - \'!test/**.md\'
            src:
              - src/**

      - name: Run step if test file(s) change
        if: steps.changed-files-yaml.outputs.test_any_changed == \'true\'  
        run: |
          echo ""One or more test file(s) has changed.""
          echo ""List all the files that have changed: ${{ steps.changed-files-yaml.outputs.test_all_changed_files }}""
      
      - name: Run step if doc file(s) change
        if: steps.changed-files-yaml.outputs.doc_any_changed == \'true\'
        run: |
          echo ""One or more doc file(s) has changed.""
          echo ""List all the files that have changed: ${{ steps.changed-files-yaml.outputs.doc_all_changed_files }}""

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo ""$file was changed""
          done

      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v39
        with:
          files: docs/*.{js,html}  # Alternatively using: `docs/**` or `docs`
          files_ignore: docs/static.js

      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == \'true\'
        run: |
          echo ""One or more files in the docs folder has changed.""
          echo ""List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}""

name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  changed_files:

    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    permissions:
      pull-requests: read

    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo ""$file was changed""
          done

name: CI

on:
  push:
    branches:
      - main



jobs:
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR ""2"" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39


      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo ""$file was changed""
          done

      ...

      ...

...
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39
...

...
    - name: Get all changed files and use a comma separator in the output
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        separator: "",""
...

...
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39

    - name: List all added files
      run: |
        for file in ${{ steps.changed-files.outputs.added_files }}; do
          echo ""$file was added""
        done
...

...
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39

    - name: Run a step if my-file.txt was modified
      if: contains(steps.changed-files.outputs.modified_files, \'my-file.txt\')
      run: |
        echo ""my-file.txt file has been modified.""
...

...

   - name: Get changed files and write the outputs to a Txt file
     id: changed-files-write-output-files-txt
     uses: ./
     with:
       write_output_files: true

   - name: Verify the contents of the .github/outputs/added_files.txt file
     run: |
       cat .github/outputs/added_files.txt
...

...
   - name: Get changed files and write the outputs to a JSON file
     id: changed-files-write-output-files-json
     uses: ./
     with:
       json: true
       write_output_files: true

   - name: Verify the contents of the .github/outputs/added_files.json file
     run: |
       cat .github/outputs/added_files.json
...

...
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        files: |
          my-file.txt
          *.sh
          *.png
          !*.md
          test_directory
          **/*.sql
...

...
    - name: Get changed files
      id: changed-files-specific
      uses: tj-actions/changed-files@v39
      with:
        files: |
          my-file.txt
          *.sh
          *.png
          !*.md
          test_directory
          **/*.sql

    - name: Run step if any of the listed files above change
      if: steps.changed-files-specific.outputs.any_changed == \'true\'
      run: |
        echo ""One or more files listed above has changed.""

    - name: Run step if only the files listed above change
      if: steps.changed-files-specific.outputs.only_changed == \'true\'
      run: |
        echo ""Only files listed above have changed.""

    - name: Run step if any of the listed files above is deleted
      if: steps.changed-files-specific.outputs.any_deleted == \'true\'
      run: |
        for file in ${{ steps.changed-files-specific.outputs.deleted_files }}; do
          echo ""$file was deleted""
        done

    - name: Run step if all listed files above have been deleted
      if: steps.changed-files-specific.outputs.only_deleted == \'true\'
      run: |
        for file in ${{ steps.changed-files-specific.outputs.deleted_files }}; do
          echo ""$file was deleted""
        done
...

...
    - name: Get changed files using a source file or list of file(s) to populate to files input.
      id: changed-files-specific-source-file
      uses: tj-actions/changed-files@v39
      with:
        files_from_source_file: test/changed-files-list.txt
...

...
    - name: Get changed files using a source file or list of file(s) to populate to files input and optionally specify more files.
      id: changed-files-specific-source-file-and-specify-files
      uses: tj-actions/changed-files@v39
      with:
        files_from_source_file: |
          test/changed-files-list.txt
        files: |
          test.txt
...

...
    - name: Get changed files using a different SHA
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        sha: ${{ github.event.pull_request.head.sha }}
...

...
    - name: Get changed files using a different base SHA
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        base_sha: ${{ github.event.pull_request.base.sha }}
...

...
on:
  push:
    tags:
      - \'v*\'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: Get changed files in the .github folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v39
        with:
          base_sha: ${{ steps.get-base-sha.outputs.base_sha }}
          files: .github/**

      - name: Run step if any file(s) in the .github folder change
        if: steps.changed-files-specific.outputs.any_changed == \'true\'
        run: |
          echo ""One or more files in the .github folder has changed.""
          echo ""List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}""
...

...
    - name: Checkout into dir1
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: dir1

    - name: Run changed-files with defaults in dir1
      id: changed-files-for-dir1
      uses: tj-actions/changed-files@v39
      with:
        path: dir1

    - name: List all added files in dir1
      run: |
        for file in ${{ steps.changed-files-for-dir1.outputs.added_files }}; do
          echo ""$file was added""
        done
...

...
    - name: Run changed-files with quotepath disabled
      id: changed-files-quotepath
      uses: tj-actions/changed-files@v39
      with:
        quotepath: ""false""

    - name: Run changed-files with quotepath disabled for a specified list of file(s)
      id: changed-files-quotepath-specific
      uses: ./
      with:
        files: test/test-\xc3\xa8.txt
        quotepath: ""false""
...

...
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - uses: nrwl/nx-set-shas@v3
        id: last_successful_commit_push
        with:
          main-branch-name: ${{ steps.branch-name.outputs.current_branch }} # Get the last successful commit for the current branch.
          workflow-id: \'test.yml\'

      - name: Run changed-files with the commit of the last successful test workflow run
        id: changed-files-base-sha-push
        uses: tj-actions/changed-files@v39
        with:
          base_sha: ${{ steps.last_successful_commit_push.outputs.base }}
...

...
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5

      - uses: nrwl/nx-set-shas@v3
        id: last_successful_commit_pull_request
        with:
          main-branch-name: ${{ steps.branch-name.outputs.base_ref_branch }} # Get the last successful commit on the master or main branch
          workflow_id: \'test.yml\'

      - name: Run changed-files with the commit of the last successful test workflow run on the main branch
        id: changed-files-base-sha-pull-request
        uses: tj-actions/changed-files@v39
        with:
          base_sha: ${{ steps.last_successful_commit_pull_request.outputs.base }}
...

...
    - name: Run changed-files with dir_names
      id: changed-files-dir-names
      uses: tj-actions/changed-files@v39
      with:
        dir_names: ""true""
...

...
    - name: Run changed-files with JSON output
      id: changed-files-json
      uses: tj-actions/changed-files@v39
      with:
        json: ""true""
...

...
    - name: Get changed-files since 2022-08-19
      id: changed-files-since
      uses: tj-actions/changed-files@v39
      with:
        since: ""2022-08-19""

    - name: Get changed-files until 2022-08-20
      id: changed-files-until
      uses: tj-actions/changed-files@v39
      with:
        until: ""2022-08-20""
...

...
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v24
        with:
          files: |
-            \\.sh$
-            .(sql|py)$
-            ^(dir1|dir2)
+            **/*.{sh,sql,py}
+            {dir1,dir2}/**
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
peter-evans/find-comment,"      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          body-includes: search string 1

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          comment-author: peter-evans

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          comment-author: peter-evans
          body-includes: search string 1

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          body-regex: '^.*search string 1.*$'

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          body-includes: search string 1
          direction: last

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          body-includes: search string 1
          nth: 1 # second matching comment (0-indexed)

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 1
          body-includes: search string 1
      - run: |
          echo ${{ steps.fc.outputs.comment-id }}
          echo ${{ steps.fc.outputs.comment-body }}
          echo ${{ steps.fc.outputs.comment-author }}
          echo ${{ steps.fc.outputs.comment-created-at }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
bbonkr/get-version-action,"steps:
  - name: Checkout
    uses: actions/checkout@v3

  - uses: bbonkr/get-version-action@v1
    id: get_version
    with:
      project: \'./package.json\'
  - name: logging
    run: |
      echo ""version=${{ steps.get_version.outputs.version }}""
      echo ""major=${{ steps.get_version.outputs.major }}""
      echo ""minor=${{ steps.get_version.outputs.minor }}""
      echo ""patch=${{ steps.get_version.outputs.patch }}""
      echo ""pre-release=${{ steps.get_version.outputs.pre-release }}""
      echo ""build=${{ steps.get_version.outputs.build }}""
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
peter-evans/slash-command-dispatch,"name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]
jobs:
  slashCommandDispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          commands: |
            deploy
            integration-test
            build-docs

      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          reaction-token: ${{ secrets.PAT }}
          commands: |
            deploy
            integration-test
            build-docs

on:
  repository_dispatch:
    types: [integration-test-command]

      - uses: peter-evans/slash-command-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          commands: |
            deploy
          static-args: |
            production
            region=us-east-1

    ""slash_command"": {
        ""command"": ""deploy"",
        ""args"": {
            ""all"": ""production region=us-east-1 branch=main dry-run reason=\\""new feature\\"""",
            ""unnamed"": {
                ""all"": ""production dry-run"",
                ""arg1"": ""production"",
                ""arg2"": ""dry-run""
            },
            ""named"": {
                ""region"": ""us-east-1"",
                ""branch"": ""main"",
                ""reason"": ""new feature""
            },
        }
    }

      - name: Output command and arguments
        run: |
          echo ${{ github.event.client_payload.slash_command.command }}
          echo ${{ github.event.client_payload.slash_command.args.all }}
          echo ${{ github.event.client_payload.slash_command.args.unnamed.all }}
          echo ${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
          echo ${{ github.event.client_payload.slash_command.args.unnamed.arg2 }}
          echo ${{ github.event.client_payload.slash_command.args.named.region }}
          echo ${{ github.event.client_payload.slash_command.args.named.branch }}
          echo ${{ github.event.client_payload.slash_command.args.named.reason }}

      - name: Dump the client payload context
        env:
          PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
        run: echo ""$PAYLOAD_CONTEXT""

      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray

      - name: Create URL to the run output
        id: vars
        run: echo ""run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"" >> $GITHUB_OUTPUT

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            [Command run output][1]

            [1]: ${{ steps.vars.outputs.run-url }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
githubocto/repo-visualizer,"excluded_globs: ""frontend/*.spec.js;**/*.{png,jpg};**/!(*.module).ts""

- name: Checkout code
  uses: actions/checkout@master
- name: Update diagram
  uses: githubocto/repo-visualizer@0.7.1
  with:
    output_file: ""images/diagram.svg""
    excluded_paths: ""dist,node_modules""

- name: Update diagram
  id: make_diagram
  uses: githubocto/repo-visualizer@0.7.1
  with:
    output_file: ""output-diagram.svg""
    artifact_name: ""my-diagram""
- name: Get artifact
  uses: actions/download-artifact@v2
  with:
    name: ""my-diagram""
    path: ""downloads""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
vijaykramesh/pr-lint-action,"name: PR Lint
on: [pull_request]
jobs:
  pr_lint:
    runs-on: ubuntu-latest
    steps:
    - uses: vijaykramesh/pr-lint-action@v1.0
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


projects: ['PROJ', 'ABC']
check_title: true
check_branch: true
check_commits: true
ignore_case: true

PASS  ./index.test.js
  pr-lint-action
    \xe2\x9c\x93 fails if check_title is true and title does not match (180ms)
    \xe2\x9c\x93 passes if check_title is false and title does not match (66ms)
    \xe2\x9c\x93 passes if check_title is true and title matches (67ms)
    \xe2\x9c\x93 fails if check_branch is true and branch does not match (66ms)
    \xe2\x9c\x93 passes if check_branch is false and branch does not match (61ms)
    \xe2\x9c\x93 passes if check_branch is true and branch matches (64ms)
    \xe2\x9c\x93 passes if check_commits is true and all commits match (66ms)
    \xe2\x9c\x93 fails if check_commits is true and some commits do not match (59ms)
    \xe2\x9c\x93 passes if check_commits is false and all commits match (61ms)
    \xe2\x9c\x93 passes if check_commits is false and some commits do not match (62ms)
    \xe2\x9c\x93 fails if check_branch and check_title is true and title does not match (59ms)
    \xe2\x9c\x93 fails if check_branch and check_title is true and title does not match (63ms)
    \xe2\x9c\x93 passes if check_branch and check_title is true and both match (61ms)
    \xe2\x9c\x93 passes if ignore_case and lower case title/branch (58ms)
    \xe2\x9c\x93 passes if ignore_case and lower case commits (65ms)
    \xe2\x9c\x93 fails if not ignore_case and lower case title/branch (66ms)
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
flowwer-dev/pull-request-stats,"      - name: Run pull request stats
        uses: flowwer-dev/pull-request-stats@master

name: Pull Request Stats

on:
  pull_request:
    types: [opened]

jobs:
  stats:
    runs-on: ubuntu-latest
    steps:
      - name: Run pull request stats
        uses: flowwer-dev/pull-request-stats@master

name: Pull Request Stats

on:
  pull_request:
    types: [opened]

jobs:
  stats:
    runs-on: ubuntu-latest
    steps:
      - name: Run pull request stats
        uses: flowwer-dev/pull-request-stats@master
        with:
          token: ${{ secrets.ADD_A_PERSONAL_ACCESS_TOKEN }}
          organization: \'piedpiper\'
          period: 7
          charts: true
          disableLinks: true
          sortBy: \'COMMENTS\'

jobs:
  stats:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Run pull request stats
        uses: flowwer-dev/pull-request-stats@master
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
apache/skywalking-infra-e2e,"- name: Run E2E Test
  uses: apache/skywalking-infra-e2e@main      # always prefer to use a revision instead of `main`.
  with:
    e2e-file: e2e.yaml                        # need to run E2E file path
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
xresloader/upload-to-github-release,"uses: xresloader/upload-to-github-release@v1
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  file: ""*.md""
  tags: true
  draft: true

npm i -g yarn
yarn install
yarn run build

git add lib/* src/*
git commit -m ""COMMIT MESSAGE""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
pozil/auto-assign-issue,"name: Issue assignment

on:
    issues:
        types: [opened]

jobs:
    auto-assign:
        runs-on: ubuntu-latest
        permissions:
            issues: write
        steps:
            - name: 'Auto-assign issue'
              uses: pozil/auto-assign-issue@v1
              with:
                  assignees: octocat,cat,dog
                  numOfAssignee: 2
                  allowSelfAssign: false

name: PR assignment

on:
    pull_request:
        types: [opened, edited, synchronize, reopened]

jobs:
    auto-assign:
        runs-on: ubuntu-latest
        permissions:
            issues: write
        steps:
            - name: 'Auto-assign PR'
              uses: pozil/auto-assign-issue@v1
              with:
                  repo-token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
                  teams: support
                  numOfAssignee: 1

name: Project card assignment

on:
    project_card:
        types: [moved]

jobs:
    auto-assign:
        runs-on: ubuntu-latest
        permissions:
            issues: write
        steps:
            - name: 'Auto-assign card'
              uses: pozil/auto-assign-issue@v1
              with:
                  repo-token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
                  teams: triage
                  removePreviousAssignees: true
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Swatinem/rust-cache,"- uses: actions/checkout@v3

- run: rustup toolchain install stable --profile minimal

- uses: Swatinem/rust-cache@v2
  with:
    prefix-key: """"

    shared-key: """"

    key: """"

    env-vars: """"

    workspaces: """"

    cache-directories: """"

    cache-targets: """"

    cache-on-failure: """"

    cache-all-crates: """"

    save-if: """"
    save-if: ${{ github.ref == \'refs/heads/master\' }}

    cache-provider: """"
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Andrew-Chen-Wang/github-wiki-action,"name: Publish wiki
on:
  push:
    branches: [main]
    paths:
      - wiki/**
      - .github/workflows/publish-wiki.yml
concurrency:
  group: publish-wiki
  cancel-in-progress: true
permissions:
  contents: write
jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Andrew-Chen-Wang/github-wiki-action@v4

on:
  push:
    branches: [main]
jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Andrew-Chen-Wang/github-wiki-action@v4
        with:
          token: ${{ secrets.MEGA_PROJECT_GITHUB_TOKEN }}
          repository: octocat/mega-project
          path: .
",0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
docker/login-action,"name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to GitLab
        uses: docker/login-action@v2
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: <registry-name>.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
    - id: \'auth\'
      name: \'Authenticate to Google Cloud\'
      uses: \'google-github-actions/auth@v0\'
      with:
        token_format: \'access_token\'
        workload_identity_provider: \'<workload_identity_provider>\'
        service_account: \'<service_account>\'

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - id: \'auth\'
        name: \'Authenticate to Google Cloud\'
        uses: \'google-github-actions/auth@v0\'
        with:
          token_format: \'access_token\'
          workload_identity_provider: \'<workload_identity_provider>\'
          service_account: \'<service_account>\'
      
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: <location>-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: <location>-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_ACCOUNT_IDS: 012345678910,023456789012

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: <region>
      -
        name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: <region>

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to OCIR
        uses: docker/login-action@v2
        with:
          registry: <region>.ocir.io
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_TOKEN }}

name: ci

on:
  push:
    branches: main

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

version: 2
updates:
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0
TheBusyBiscuit/recently-closed-issues,"on:
  issue:
    types:
      - closed

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: TheBusyBiscuit/recently-closed-issues@master
        id: my_step_id
        token: ${{ secrets.GITHUB_TOKEN }}
        max_commits: 20
      - run: echo $ {{ steps.my_step_id.outputs.issues }}

on:
  issue:
    types:
      - closed

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: TheBusyBiscuit/recently-closed-issues@master
        id: my_step_id
        token: ${{ secrets.GITHUB_TOKEN }}
        max_commits: 20
      - uses: maxkomarychev/octions/octions/issues/add-labels@master
        if: contains(toJson(steps.my_step_id.outputs.issues), github.event.issue.number)
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue_number: ${{ github.event.issue.number }}
          labels: \'Resolved\'
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
devmasx/merge-branch,"name: Sync multiple branches
on:
  push:
    branches:
      - '*'
jobs:
  sync-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge development -> staging
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: development
          target_branch: staging
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge staging -> uat
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: staging
          target_branch: uat
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: Merge any release branch to uat
on:
  push:
    branches:
      - 'release/*'
jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge staging -> uat
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: uat
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: Merge any release branch to uat
on:
  push:
    branches:
      - 'release/*'
jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge staging -> uat
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: uat
          message: Merge staging into uat
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: Merge branch with labeled
on:
  pull_request:
    types: [labeled]
jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge by labeled
        uses: devmasx/merge-branch@master
        with:
          label_name: 'merged in develop'
          target_branch: 'develop'
          github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
johnnyhuy/actions-discord-git-webhook,"name: Discord Webhook

on: [push]

jobs:
  git:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main 
      with:
        webhook_url: ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}


    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main 
      with:
        webhook_url: ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}
        hide_links: true

    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main 
      with:
        webhook_url: ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}
        censor_username: false

    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main 
      with:
        id: ${{ secrets.YOUR_DISCORD_WEBHOOK_ID }}
        token: ${{ secrets.YOUR_DISCORD_WEBHOOK_TOKEN }}

    - name: Run Discord Webhook
      uses: johnnyhuy/actions-discord-git-webhook@main 
      with:
        id: ${{ secrets.YOUR_DISCORD_WEBHOOK_ID }}
        token: ${{ secrets.YOUR_DISCORD_WEBHOOK_TOKEN }}
        repo_name: My Special Repo

npm ci

docker-compose build workspace
docker-compose run --rm workspace
npm ci
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
joerick/pr-labels-action,"jobs:
  test:
    steps:
      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.8

jobs:
  test:
    steps:
      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.8

      - run: |
          bin/run_normal_tests
          if [ -n ""$GITHUB_PR_LABEL_TEST_FLIMBOMBLE"" ]; then
            bin/run_flimbomble_tests
          fi

      - run: |
          bin/publish_flimbomble_test_results
        if: contains(steps.pr-labels.outputs.labels, \' test-flimbomble \')
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
fossa-contrib/fossa-action,"- name: Run FOSSA scan and upload build data
  uses: fossa-contrib/fossa-action@v2
  with:
    fossa-api-key: abcdefghijklmnopqrstuvwxyz

- name: Run FOSSA scan and upload build data
  uses: fossa-contrib/fossa-action@v2
  with:
    fossa-api-key: ${{ secrets.FOSSA_API_KEY }}

- name: Run FOSSA scan and upload build data
  uses: fossa-contrib/fossa-action@v2
  with:
    fossa-api-key: abcdefghijklmnopqrstuvwxyz

steps:
  - uses: fossa-contrib/fossa-action@v2
  - uses: fossa-contrib/fossa-action@6728dc6
  - uses: fossa-contrib/fossa-action@v2.0.0
  - uses: fossa-contrib/fossa-action@master

name: License Scanning

on:
  - pull_request
  - push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tree
        uses: actions/checkout@v3

      - name: Run FOSSA scan and upload build data
        uses: fossa-contrib/fossa-action@v2
        with:
          fossa-api-key: abcdefghijklmnopqrstuvwxyz
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
andstor/jsdoc-action,"- name: Build
  uses: andstor/jsdoc-action@v1
  with:
    source_dir: ./src
    recurse: true
    output_dir: ./out

name: GitHub pages

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        uses: andstor/jsdoc-action@v1
        with:
          source_dir: ./src
          output_dir: ./out
          config_file: conf.json
          template: minami
          front_page: README.md

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./out
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hbfernandes/slack-action,"- name: Slack Message                     
  uses: hbfernandes/slack-action@1.0
  env:
    SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}   
  with:
    args: |
      {
        ""channel"": ""development"",
        ""text"": ""testing slack messaging""
      }

- name: Slack Message                     
  uses: hbfernandes/slack-action@1.0   
  with:
    method: conversations.list

- name: Slack Message                     
  uses: hbfernandes/slack-action@1.0   
  with:
    args: |
      {
        ""channel"": ""development"",
        ""attachments"": [
          {
            ""mrkdwn_in"": [""text""],
            ""color"": ""#36a64f"",
            ""pretext"": ""Built branch ${{ github.ref }}"",
            ""author_name"": ""${{ github.actor }}"",
            ""author_link"": ""http://flickr.com/bobby/"",
            ""author_icon"": ""https://placeimg.com/16/16/people"",
            ""title"": ""${{ github.workflow }}"",
            ""title_link"": ""https://api.slack.com/"",
            ""text"": ""Optional `text` that appears within the attachment"",
            ""thumb_url"": ""http://placekitten.com/g/200/200"",
            ""footer"": ""Github Actions"",
            ""footer_icon"": ""https://platform.slack-edge.com/img/default_application_icon.png"",
            ""ts"": 123456789
          }
        ]
      }

npm run package
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
nick-fields/private-action-loader,"- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action
    pal-action-directory: src/super-secret-nested-action

- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action
    input-used-by-other-action: this will be passed to super-secret-action

- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action

- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action@b8a83a0

- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action@master

- uses: nick-fields/private-action-loader@v3
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action@v1

- uses: nick-fields/private-action-loader@v3
  id: output_example
  with:
    pal-repo-token: ${{ secrets.REPO_TOKEN }}
    pal-repo-name: some-org/super-secret-action@v1
- name: Get the previous output
  run: echo ""The previous output was ${{ steps.output_example.outputs.<name of output> }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
google-github-actions/get-gke-credentials,"gha-kubeconfig-*

jobs:
  job_id:
    permissions:
      contents: \'read\'
      id-token: \'write\'

    steps:
    - id: \'auth\'
      uses: \'google-github-actions/auth@v1\'
      with:
        workload_identity_provider: \'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider\'
        service_account: \'my-service-account@my-project.iam.gserviceaccount.com\'

    - id: \'get-credentials\'
      uses: \'google-github-actions/get-gke-credentials@v1\'
      with:
        cluster_name: \'my-cluster\'
        location: \'us-central1-a\'

    - id: \'get-pods\'
      run: \'kubectl get pods\'

jobs:
  job_id:
    permissions:
      contents: \'read\'
      id-token: \'write\'

    steps:
    - id: \'auth\'
      uses: \'google-github-actions/auth@v1\'
      with:
        workload_identity_provider: \'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider\'
        service_account: \'my-service-account@my-project.iam.gserviceaccount.com\'

    - id: \'get-credentials\'
      uses: \'google-github-actions/get-gke-credentials@v1\'
      with:
        cluster_name: \'my-cluster\'
        location: \'us-central1-a\'

jobs:
  job_id:
    steps:
    - id: \'auth\'
      uses: \'google-github-actions/auth@v1\'
      with:
        credentials_json: \'${{ secrets.gcp_credentials }}\'

    - id: \'get-credentials\'
      uses: \'google-github-actions/get-gke-credentials@v1\'
      with:
        cluster_name: \'my-cluster\'
        location: \'us-central1-a\'

jobs:
  job_id:
    steps:
    - id: \'get-credentials\'
      uses: \'google-github-actions/get-gke-credentials@v1\'
      with:
        cluster_name: \'my-cluster\'
        location: \'us-central1-a\'

jobs:
  job_id:
    steps:
    - id: \'get-credentials\'
      uses: \'google-github-actions/get-gke-credentials@v1\'
      with:
        cluster_name: \'my-private-cluster\'
        location: \'us-central1-a\'
        use_connect_gateway: \'true\'

- uses: \'google-github-actions/get-gke-credentials@v1\'

- uses: \'google-github-actions/get-gke-credentials@v1.0.0\'
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
dessant/label-actions,"name: \'Label Actions\'

on:
  issues:
    types: [labeled, unlabeled]
  pull_request_target:
    types: [labeled, unlabeled]
  discussion:
    types: [labeled, unlabeled]

permissions:
  contents: read
  issues: write
  pull-requests: write
  discussions: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/label-actions@v3

name: \'Label Actions\'

on:
  issues:
    types: [labeled, unlabeled]
  pull_request_target:
    types: [labeled, unlabeled]
  discussion:
    types: [labeled, unlabeled]

permissions:
  contents: read
  issues: write
  pull-requests: write
  discussions: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/label-actions@v3
        with:
          github-token: ${{ github.token }}
          config-path: \'.github/label-actions.yml\'
          process-only: \'\'

    steps:
      - uses: dessant/label-actions@v3
        with:
          process-only: \'issues\'

    steps:
      - uses: dessant/label-actions@v3
        with:
          process-only: \'prs, discussions\'

on:
  issues:
    types: labeled


heated:
  comment: >
    The thread has been temporarily locked.
    Please follow our community guidelines.
  lock: true
  lock-reason: \'too heated\'
  prs:
    label: \'on hold\'

-heated:
  unlock: true

-wontfix:
  issues:
    reopen: true

feature:
  issues:
    comment: >
      :wave: @{issue-author}, please use our idea board to request new features.
    close: true
    close-reason: \'not planned\'

wip:
  prs:
    label:
      - \'on hold\'
      - \'needs feedback\'

-wip:
  prs:
    label: \'needs QA\'
    unlabel:
      - \'on hold\'
      - \'needs feedback\'

solved:
  discussions:
    close: true
    close-reason: \'resolved\'
    lock: true

pizzazz:
  comment:
    - \'![](https://i.imgur.com/WuduJNk.jpg)\'
    - \'![](https://i.imgur.com/1D8yxOo.gif)\'

    steps:
      - uses: dessant/label-actions@v3
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ThomasKliszowski/setup-kubectl,"on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ThomasKliszowski/setup-kubectl@v1
        with:
          kube-config: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBZMlZ5ZEdsbWFXTmhkR1V0WVhWMGFHOXlhWFI1TFdSaGRHRT0KICAgIHNlcnZlcjogaHR0cHM6Ly9zZXJ2ZXIuZ29vZ2xlLmNvbQogIG5hbWU6IG15LWNsdXN0ZXIKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IG15LWNsdXN0ZXIKICAgIG5hbWVzcGFjZTogZGVmYXVsdAogICAgdXNlcjogbXktdXNlcgogIG5hbWU6IG15LWNvbnRleHQKY3VycmVudC1jb250ZXh0OiBteS1jb250ZXh0CmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbXktdXNlcgogIHVzZXI6CiAgICB0b2tlbjogdXNlci10b2tlbgo=
          kube-version: 1.15.0
      - run: kubectl set image deployment/my-app app=my-app-image
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
MeilCli/danger-action,"name: CI

on:
  pull_request:
    branches:
      - master
      
jobs:
  danger:
    runs-on: ubuntu-latest
    if: github.event_name  == \'pull_request\' # if only run pull request when multiple trigger workflow
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: \'2.6\'
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles(\'Gemfile\') }} # change your gemfile path
        restore-keys: |
          ${{ runner.os }}-gems-
    - uses: MeilCli/danger-action@v5
      with:
        plugins_file: \'Gemfile\'
        install_path: \'vendor/bundle\'
        danger_file: \'Dangerfile\'
        danger_id: \'danger-pr\'
      env:
        DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: CI

on:
  pull_request:
    branches:
      - master
      
jobs:
  danger:
    runs-on: ubuntu-latest
    if: github.event_name  == \'pull_request\' # if only run pull request when multiple trigger workflow
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: \'2.6\'
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles(\'.github/Gemfile\') }} # change your gemfile path
        restore-keys: |
          ${{ runner.os }}-gems-
    - uses: MeilCli/danger-action@v5
      with:
        plugins_file: \'.github/Gemfile\'
        install_path: \'vendor/bundle\'
        danger_file: \'.github/Dangerfile\'
        danger_id: \'danger-pr\'
      env:
        DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
negz/create-tag,"name: Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v0.1.0)'
        required: true
      message:
        description: 'Tag message'
        required: true

jobs:
  create-tag:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ github.event.inputs.version }}
          message: ${{ github.event.inputs.message }}
          token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
coditory/changelog-parser,"Some description

- Another important feature

- Important feature

- Fixed small bug

- Initialized project

[Unreleased]: https://github.com/coditory/changelog-parser-action/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/coditory/changelog-parser-action/compare/v0.1.1...v0.2.0
[0.1.1]: https://github.com/coditory/changelog-parser-action/compare/v0.1.0...v0.1.1
[0.1.0]: https://github.com/coditory/changelog-parser-action/releases/tag/v0.1.0

version: ""0.2.0""
versionMajor: ""0""
versionMinor: ""2""
versionPatch: ""0""
date: ""2020-11-10""
status: ""release""
description: ""### Added\
- Important feature""

version: ""0.1.1""
versionMajor: ""0""
versionMinor: ""1""
versionPatch: ""1""
date: ""2020-10-10""
status: ""release""
description: ""### Changed\
- Fixed small bug""

name: Build

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Gradle
        run: ./gradlew build
      - name: Get last version from tag
        id: lasttag
        shell: bash
        run: echo ::set-output name=version::$(git describe --abbrev=0 --tags --match \'v[0-9]*\\.[0-9]*\\.[0-9]*\' | cut -c2-)
      - name: Parse Changelog Entry
        id: changelog
        uses: coditory/changelog-parser@v1
      - name: Release
        if: ""github.ref == \'refs/heads/master\' && steps.changelog.outputs.version != steps.lasttag.outputs.version""
        env:
          RELEASE_VERSION: ${{ steps.changelog.outputs.version }}
        run: ./gradlew release
      - name: GitHub Release
        if: ""github.ref == \'refs/heads/master\' && steps.changelog.outputs.version != steps.lasttag.outputs.version""
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog.outputs.description }}
          tag_name: ${{ steps.changelog.outputs.version }}
          release_name: Release ${{ steps.changelog.outputs.version }}

name: Create Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: lasttag
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Parse Changelog Entry
        id: changelog
        uses: coditory/changelog-parser@v1
        with:
          version: version: ${{ steps.lasttag.outputs.version }}
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.version }}
          release_name: Release ${{ steps.changelog.outputs.version }}
          body: ${{ steps.changelog.outputs.description }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ashutoshgngwr/validate-fastlane-supply-metadata,"on: [pull_request]
jobs:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
    - uses: ashutoshgngwr/validate-fastlane-supply-metadata@v2
      with:
        fastlaneDir: ./android-metadata # optional
        usePlayStoreLocales: true # optional

docker run --rm --workdir /app --mount type=bind,source=""$(pwd)"",target=/app \\
    ashutoshgngwr/validate-fastlane-supply-metadata:v2 -help

-fastlane-path string
    path to the Fastlane Android metadata directory (default ""./fastlane/metadata/android"")
-ga-file-annotations bool
    enables file annotations for GitHub action (default: false)
-play-store-locales bool
    throw an error if a locale isn\'t recognised by Google Play (default: false)
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
richardsimko/update-tag,"name: Deploy

on: [deployment]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: name-of-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
musichin/ktlint-check,"steps:
  - uses: actions/checkout@v2
  - uses: musichin/ktlint-check@v2
    with:
      ktlint-version: \'0.50.0\'

steps:
  - uses: actions/checkout@v2
  - uses: musichin/ktlint-check@v2
    continue-on-error: true
    with:
      ktlint-version: \'0.50.0\'
      level: \'warning\'

      code-style: android_studio
      relative: true
      experimental: true
      reporter: |
        plain,output=ktlint_report.txt
        json,output=ktlint_report.json
      patterns: |
        **/**.kt
        !**/generated/**
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
damccorm/tag-ur-it,"npm install

npm run build


Entering this information will route you directly to the right team and expedite traction.

**Question, Bug, or Feature?**  
*Type*: here

Should this get assigned to @damccorm?
**Assign to damccorm**: replace this with yes or no


Describe your issue here

rules:
- valueFor: \'*Type*\' # If user specifies ""*Type*: Question"" above, it will get labeled with ""question"" and ""plz help""
  contains: Question
  addLabels: [\'question\', \'plz help\']
- valueFor: \'*Type*\'
  contains: Bug
  addLabels: [\'bug\']
- valueFor: \'*Type*\'
  contains: Feature
  addLabels: [\'enhancement\']
- valueFor: \'**Assign to damccorm**\' # If user specifies ""**Assign to damccorm**: yes"", it will get labeled with ""damccorms problem now"" and assigned to ""@damccorm""
  contains: yes
  addLabels: [\'damccorms problem now\']
  assign: [\'damccorm\']

nomatches:
- contains: \'this should get assigned to damccorm\' # Checks the entire issue for a substring match. If one is found, adds labels ""damccorms problem now"" and ""maybe?"", and assigns to ""@damccorm""
  addLabels: [\'damccorms problem now\', \'maybe?\']
  assign: [\'damccorm\']

tags:
- noneIn: [\'bug\', \'enhancement\', \'question\'] # If no bug, enhancement, or question labels are added, label with \'triage\'
  addLabels: [\'triage\']

- uses: actions/checkout@v1
- uses: damccorm/tag-ur-it@master
with:
   repo-token: ""${{ secrets.GITHUB_TOKEN }}""
   configuration-path: ""path/to/issue-rules.yml""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
nick-fields/assert-action,"- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: testing
    actual: ${{ steps.test-data.outputs.value }}

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: testing
    actual: ${{ steps.test-data.outputs.value }}
    comparison: exact

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: test
    actual: ${{ steps.test-data.outputs.value }}
    comparison: startsWith

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: abc
    actual: ${{ steps.test-data.outputs.value }}
    comparison: notStartsWith

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: ing
    actual: ${{ steps.test-data.outputs.value }}
    comparison: endsWith

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: abc
    actual: ${{ steps.test-data.outputs.value }}
    comparison: notEndsWith

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: est
    actual: ${{ steps.test-data.outputs.value }}
    comparison: contains

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: abc
    actual: ${{ steps.test-data.outputs.value }}
    comparison: notContains

- id: test-data
  run: echo ""::set-output name=value::testing""
- uses: nick-fields/assert-action@v1
  with:
    expected: abc
    actual: ${{ steps.test-data.outputs.value }}
    comparison: notEqual
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
SirYwell/sarif-annotator,"name: code quality
on:
  pull_request:
    branches:
      - master

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: code-quality qodana
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin
      - name: Qodana - Code Inspection
        id: qodana
        uses: JetBrains/qodana-action@v3.2.1
      - name: SARIF Annotator
        uses: SirYwell/sarif-annotator@v0.1.0
        with:
          source: qodana
          report-path: ${{ steps.qodana.outputs.results-json-path }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mikehardy/buildcache-action,"jobs:
  ios:
  runs-on: macos-latest # also runs on ubuntu and windows
  steps:
    - uses: mikehardy/buildcache-action@v2

steps:
  - uses: actions/checkout@v3
  - uses: mikehardy/buildcache-action@v2

jobs:
  ios:
    env: # overrides: https://github.com/mbitsnbites/buildcache/blob/master/doc/configuration.md
      BUILDCACHE_DIR: ../.buildcache # optional: Put the cache somewhere else
      BUILDCACHE_DEBUG: 2 # optional: If you need more logging?
      BUILDCACHE_MAX_CACHE_SIZE: 1000000000 # optional: Need a bigger cache?
      BUILDCACHE_LOG_FILE: ../buildcache.log # optional: Log where you like
  runs-on: macos-latest
  steps:
    - uses: mikehardy/buildcache-action@v1
      with:
        cache_key: ${{ matrix.os }} # optional: separate caches maybe?
        upload_buildcache_log: \'true\' # optional: 100% cache misses? Find out why
        zero_buildcache_stats: \'false\' # optional: lifetime vs per-run stats?

xcodebuild CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ <all other parameters>`

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings[""CC""] = ""clang""
        config.build_settings[""LD""] = ""clang""
        config.build_settings[""CXX""] = ""clang++""
        config.build_settings[""LDPLUSPLUS""] = ""clang++""
      end
    end


export GITHUB_TOKEN=PERSONALACCESSTOKENHERE
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
sarisia/actions-status-discord,"- uses: sarisia/actions-status-discord@v1
  if: always()
  with:
    webhook: ${{ secrets.DISCORD_WEBHOOK }}

- uses: sarisia/actions-status-discord@v1
  if: always()
  with:
    webhook: ${{ secrets.DISCORD_WEBHOOK }}
    status: ${{ job.status }}
    content: ""Hey <@316911818725392384>""
    title: ""deploy""
    description: ""Build and deploy to GitHub Pages""
    image: ${{ secrets.EMBED_IMAGE }}
    color: 0x0000ff
    url: ""https://github.com/sarisia/actions-status-discord""
    username: GitHub Actions
    avatar_url: ${{ secrets.AVATAR_URL }}

- uses: sarisia/actions-status-discord@v1
  if: always()
  env:
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  with:
    nodetail: true
    title: ""We did it!""
    color: 0xff91a4

- uses: sarisia/actions-status-discord@v1
  with:
    webhook: ${{ secrets.DISCORD_WEBHOOK }}
    nodetail: true
    title: New version of `software` is ready!
    description: |
      Version `1.2.3-alpha`
      Click [here](https://github.com/sarisia/actions-status-discord) to download!

- uses: sarisia/actions-status-discord@v1
  if: always()
  with:
    webhook: ${{ secrets.DISCORD_WEBHOOK }}
    content: ""Hey <@316911818725392384>""

https://discordapp.com/api/webhooks/...
https://media.guilded.gg/webhooks/...
https://this-is-invalid-webhook-endpoint.invalid/...
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sinshutu/upload-to-discord,"on: push
name: Main workflow
jobs:
  github-action:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Send file README.md to discord channel
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: README.md

    - name: Send file README.md to discord channel
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: README.md
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hkusu/apk-info-action,"- name: Check out
  uses: actions/checkout@v3
- name: Set up JDK
  uses: actions/setup-java@v3
  with:
    distribution: \'zulu\'
    java-version: 11
- name: Build with Gradle
  run: ./gradlew assembleRelease
- name: Get apk path
  id: apk-path
  run: echo ""path=$(find . -regex \'^.*/build/outputs/apk/.*\\.apk$\' -type f | head -1)"" >> $GITHUB_OUTPUT
- name: Get apk info
  id: apk-info
  uses: hkusu/apk-info-action@v1
  with:
    apk-path: ${{ steps.apk-path.outputs.path }}
- name: Show apk info
  run: |
    echo \'${{ steps.apk-info.outputs.application-name }}\'
    echo \'${{ steps.apk-info.outputs.application-id }}\'
    echo \'${{ steps.apk-info.outputs.version-code }}\'
    echo \'${{ steps.apk-info.outputs.version-name }}\'
    echo \'${{ steps.apk-info.outputs.min-sdk-version }}\'
    echo \'${{ steps.apk-info.outputs.target-sdk-version }}\'
    echo \'${{ steps.apk-info.outputs.compile-sdk-version }}\'
    echo \'${{ steps.apk-info.outputs.uses-permissions }}\'
    echo \'${{ steps.apk-info.outputs.debuggable }}\'
    echo \'${{ steps.apk-info.outputs.allow-backup }}\'
    echo \'${{ steps.apk-info.outputs.supports-rtl }}\'
    echo \'${{ steps.apk-info.outputs.file-size }}\'
    echo \'${{ steps.apk-info.outputs.readable-file-size }}\'

- uses: hkusu/apk-info-action@v1
  id: apk-info
  with:
    apk-path: \'app/build/outputs/apk/release/app-release.apk\'
- name: Show result
  if: always()
  run: echo \'${{ steps.apk-info.outputs.result }}\' # success or failure
",0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mshick/add-pr-comment,"on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            **Hello**
            \xf0\x9f\x8c\x8f
            !

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            **Hello MAIN**

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            **Howdie!**
          proxy-url: https://add-pr-comment-proxy-94idvmwyie-uc.a.run.app

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          message: |
            **Howdie!**
          message-failure: |
            Uh oh!

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          message-path: |
            message-part-*.txt

[ ] Hello
[ ] World

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          find: |
            \
\\\\[ \\\\]
          replace: |
            [X]

[X] Hello
[X] World

hello world!

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          find: |
            hello
            world
          replace: |
            goodnight
            moon

goodnight moon!

hello

<< FILE_CONTENTS >>

world

on:
  pull_request:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          message-path: |
            message.txt
          find: |
            << FILE_CONTENTS >>

hello

secret message from message.txt

world

on:
  deployment_status:

jobs:
  pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - id: pr
        run: |
          issue=$(gh pr list --search ""${{ github.sha }}"" --state open --json number --jq "".[0].number"")
          echo ""issue=$issue"" >>$GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: mshick/add-pr-comment@v2
        with:
          issue: ${{ steps.pr.outputs.issue }}
          message: |
            **Howdie!**
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
keithalpichi/slack-action,"env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain2

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain2
    title: Success

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain1
    description: Everything looks good!

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    status: ${{ job.status }}
    template: plain2

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    status: all green
    template: plain2

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain1
    channel: #pets

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain1
    channel: @octocat

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain2
    username: Al

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain2
    icon_emoji: "":fire:""

- name: Send Slack Notification
  uses: keithalpichi/slack-action@x.y.z
  with:
    template: plain2
    icon_url: https://octodex.github.com/images/original.png

steps:
  ...
  - name: Always notify Slack no matter what happens
    if: ${{ always() }}

steps:
  ...
  - name: Only notify Slack when it is successful
    if: ${{ success() }}

steps:
  ...
  - name: Only notify Slack when there is a failure
    if: ${{ failure() }}

with:
  template: plain1
  description: We\'re all green!

with:
  template: plain2

with:
  title: ${{ job.status }}
  template: plain2

with:
  title: We\'re all green!
  template: plain2

with:
  template: push1
  description: optional description
  status: ${{ job.status }}

with:
  template: steps1
  description: optional description
  title: optional Title
  status: ${{ toJSON(steps) }}
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
narcodico/base64-to-path,"- name: Some name
  uses: RollyPeres/base64-to-path@v1
  with:
    filePath: ${{ github.workspace }}/somefile.someextension
    encodedString: ${{ secrets.SOME_GITHUB_SECRET }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
hmarr/debug-action,"name: Debug
on: pull_request_target

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: hmarr/debug-action@v2

\xe2\x96\xb6 Environment variables
  ACTIONS_RUNTIME_TOKEN=***
  CI=true
  GITHUB_ACTION=hmarrdebug-action
  GITHUB_ACTIONS=true
  GITHUB_ACTION_REF=v2.0.0
  GITHUB_ACTION_REPOSITORY=hmarr/debug-action
  GITHUB_ACTOR=hmarr
  GITHUB_API_URL=https://api.github.com
  GITHUB_BASE_REF=main
  GITHUB_EVENT_NAME=pull_request_target
  GITHUB_EVENT_PATH=/home/runner/work/_temp/_github_workflow/event.json
  GITHUB_HEAD_REF=patch-1
  GITHUB_JOB=build
  GITHUB_REF=refs/heads/main
  GITHUB_REPOSITORY=hmarr/demo
  GITHUB_REPOSITORY_OWNER=hmarr
  GITHUB_RUN_ID=658297586
  GITHUB_RUN_NUMBER=15
  GITHUB_SERVER_URL=https://github.com
  GITHUB_SHA=a4171998f9bf51fc5b9d0283b7d5243ac28954d1
  GITHUB_WORKFLOW=approve
  GITHUB_WORKSPACE=/home/runner/work/demo/demo
  HOME=/home/runner
  INPUT_GITHUB-TOKEN=***
  INVOCATION_ID=44ad8f42f5244809971260b35b889a08
  LEIN_HOME=/usr/local/lib/lein
  LEIN_JAR=/usr/local/lib/lein/self-installs/leiningen-2.9.5-standalone.jar
  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  RUNNER_OS=Linux
  RUNNER_TOOL_CACHE=/opt/hostedtoolcache
  RUNNER_USER=runner
  RUNNER_WORKSPACE=/home/runner/work/demo
  USER=runner

\xe2\x96\xb6 Event JSON
  {
    ""action"": ""opened"",
    ""number"": 20,
    ""pull_request"": {
      ...
    }
  }
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
fwilhe2/setup-kotlin,"name: CI
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
      - run: kotlinc myProgram.kt -include-runtime -d /tmp/hello.jar; java -jar /tmp/hello.jar
      - run: kotlin myScript.main.kts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
        with:
          install-native: true
      - run: kotlinc-native foo.kt
      - run: ./program.exe
        if: ${{ matrix.os == \'windows-latest\' }}
      - run: ./program.kexe
        if: ${{ matrix.os != \'windows-latest\' }}

    - uses: fwilhe2/setup-kotlin@main
      with:
        script: |
            //more kotlin script code here

      - uses: fwilhe2/setup-kotlin@main
        with:
          version: 1.8.10

      - run: |
            java.io.File(""."").listFiles().forEach {it -> println(it.getName().toString())}
        shell: kotlin -howtorun .main.kts {0}
",0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mvasigh/dispatch-action,"name: Alert parent repository on push
on: push

jobs:
  build:
    name: Dispatch to `other-repo`
    runs-on: ubuntu-latest
    steps:
      - name: Emit repository_dispatch
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repo: other-repo
          owner: mvasigh
          event_type: sample_push

name: Print on external push

on:
  repository_dispatch:
    types: [sample_push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          echo Add other custom actions to build,
          echo test, and deploy your project.

steps:
  - name: Dispatch submodule_push event
    uses: mvasigh/dispatch-action@main
    with:
      token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      repo: \'@\'
      event_type: submodule_push
      message: |
        {
          ""foo"": ""bar""
        }

steps:
  - name: Print custom message
    run: echo ${{ github.event.client_payload.message.foo }} # bar
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions-cool/issues-helper,"[![actions-cool](https://img.shields.io/badge/using-actions--cool-blue?style=flat-square)](https://github.com/actions-cool)

name: Add Assigness

on:
  issues:
    types: [opened, edited]

jobs:
  add-assigness:
    runs-on: ubuntu-latest
    steps:
      - name: Add assigness
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'add-assignees\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          assignees: \'xxx\' or \'xx1,xx2\'
          random-to: 1

name: Add Labels

on:
  issues:
    types: [opened]

jobs:
  add-labels:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.body, \'xxx\') == false
    steps:
      - name: Add labels
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'add-labels\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          labels: \'bug\' or \'xx1,xx2\'

- name: Close issue
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'close-issue\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: xxx

name: Create Comment

on:
  issues:
    types: [labeled]

jobs:
  create-comment:
    runs-on: ubuntu-latest
    if: github.event.label.name == \'xxx\'
    steps:
      - name: Create comment
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'create-comment\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello @${{ github.event.issue.user.login }}. Add some comments.

            \xe4\xbd\xa0\xe5\xa5\xbd @${{ github.event.issue.user.login }}\xe3\x80\x82\xe5\xb7\xb4\xe6\x8b\x89\xe5\xb7\xb4\xe6\x8b\x89\xe3\x80\x82
          emoji: \'+1\' or \'+1,heart\'

name: Create Issue

on:
  schedule:
    - cron: ""0 0 1 * *""

jobs:
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'create-issue\'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: \'xxxx\'
          body: \'xxxx\'
          labels: \'xx\'
          assignees: \'xxx\'
          emoji: \'+1\'

- name: Create label
  uses: actions-cool/issues-helper@v3
  with:
    actions: \'create-label\'
    token: ${{ secrets.GITHUB_TOKEN }}
    label-name: \'xx\'
    label-color: \'0095b3\'
    label-desc: \'xx\'

- name: Delete comment
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'delete-comment\'
      token: ${{ secrets.GITHUB_TOKEN }}
      comment-id: xxx

- name: Get Issue
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'get-issue\'
      token: ${{ secrets.GITHUB_TOKEN }}

name: Lock Issue

on:
  issues:
    types: [labeled]

jobs:
  lock-issue:
    runs-on: ubuntu-latest
    if: github.event.label.name == \'invalid\'
    steps:
      - name: Lock issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'lock-issue\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}

- name: Open issue
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'open-issue\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: xxx

- name: Remove assignees
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'remove-assignees\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: ${{ github.event.issue.number }}
      assignees: \'xx\'

- name: Remove labels
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'remove-labels\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: ${{ github.event.issue.number }}
      labels: \'xx\'

- name: Set labels
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'set-labels\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: ${{ github.event.issue.number }}
      labels: \'xx\'

- name: Unlock issue
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'unlock-issue\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: ${{ github.event.issue.number }}

name: Add eyes to each comment

on:
  issue_comment:
    types: [created]

jobs:
  update-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Update comment
          uses: actions-cool/issues-helper@v3
          with:
            actions: \'update-comment\'
            token: ${{ secrets.GITHUB_TOKEN }}
            comment-id: ${{ github.event.comment.id }}
            emoji: \'eyes\'

- name: Update issue
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'update-issue\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: ${{ github.event.issue.number }}
      state: \'open\'
      title: \'xxx\'
      body: \'xxxx\'
      update-mode: \'replace\'
      labels: \'xx\'
      assignees: \'xxx\'
      emoji: \'+1\'

name: Check inactive

on:
  schedule:
    - cron: ""0 0 1 * *""

jobs:
  check-inactive:
    runs-on: ubuntu-latest
    steps:
      - name: check-inactive
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'check-inactive\'
          token: ${{ secrets.GITHUB_TOKEN }}
          inactive-day: 30

name: Check Issue

on:
  issues:
    types: [edited]

jobs:
  check-issue:
    runs-on: ubuntu-latest
    steps:
      - name: check-issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'check-issue\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          assignee-includes: \'x1,x2\'
          title-includes: \'x1,x2/y1,y2\'

name: Check need info

on:
  schedule:
    - cron: ""0 0 */7 * *""

jobs:
  check-need-info:
    runs-on: ubuntu-latest
    steps:
      - name: close-issues
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'close-issues\'
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: \'need info\'
          inactive-day: 7

- name: Find comments
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'find-comments\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-number: 1
      comment-auth: \'k\'
      body-includes: \'this\'

[
  {id: 1, auth: \'x\', body: \'xxx\', created: \'\', updated: \'\'},
  {id: 2, auth: \'x\', body: \'xxx\', created: \'\', updated: \'\'},
]

- name: Find issues
    uses: actions-cool/issues-helper@v3
    with:
      actions: \'find-issues\'
      token: ${{ secrets.GITHUB_TOKEN }}
      issue-creator: \'k\'
      issue-state: \'open\'
      title-includes: \'this\'
      body-includes: \'that\'
      labels: \'documentation\'

[
  {number: 1, auth: \'x\', body: \'xxx\', body: \'xxx\', state: \'open\', created: \'\', updated: \'\'},
  {number: 2, auth: \'x\', body: \'xxx\', body: \'xxx\', state: \'closed\', created: \'\', updated: \'\'},
]

name: Lock inactive issues

on:
  schedule:
    - cron: ""0 0 1 */3 *""

jobs:
  lock-issues:
    runs-on: ubuntu-latest
    steps:
      - name: lock-issues
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'lock-issues\'
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: \'inactive\'
          inactive-day: 128

name: Issue Mark Assignees

on:
  issue_comment:
    types: [created, edited]

jobs:
  mark-assignees:
    runs-on: ubuntu-latest
    steps:
      - name: mark-assignees
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'mark-assignees\'
          token: ${{ secrets.GITHUB_TOKEN }}

name: Issue Mark Duplicate

on:
  issue_comment:
    types: [created, edited]

jobs:
  mark-duplicate:
    runs-on: ubuntu-latest
    steps:
      - name: mark-duplicate
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'mark-duplicate\'
          token: ${{ secrets.GITHUB_TOKEN }}

name: Toggle Labels

on:
  issues:
    types: [reopened]

jobs:
  toggle-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Toggle labels
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'toggle-labels\'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          labels: \'unread,outdated\'

name: Issue Welcome

on:
  issues:
    types: [opened]

jobs:
  issue-welcome:
    runs-on: ubuntu-latest
    steps:
      - name: welcome
        uses: actions-cool/issues-helper@v3
        with:
          actions: \'welcome\'
          token: ${{ secrets.GITHUB_TOKEN }}
          body: hi @${{ github.event.issue.user.login }}, welcome!
          labels: \'welcome1, welcome2\'
          assignees: \'xx1\'
          issue-emoji: \'+1, -1, eyes\'

- name: Create issue
  uses: actions-cool/issues-helper@v3
  id: createissue
  with:
    actions: \'create-issue\'
    token: ${{ secrets.GITHUB_TOKEN }}
- name: Check outputs
  run: echo ""Outputs issue_number is ${{ steps.createissue.outputs.issue-number }}""

""title-includes"": \'x1,x2\'

x1
x2

""x1y3y2""  true
""y2 x1""   true
""x2""      true
""x3""      false

""title-includes"": \'x1,x2/y1,y2\'

x1 + y1
x2 + y1
x1 + y2
x2 + y2

""x1y3y2""  true
""y2 x1""   true
""1x2y""    false
""x1""      false
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0
sudo-bot/action-shellcheck,"  - uses: actions/checkout@v2
  - name: run shellcheck
    uses: sudo-bot/action-shellcheck@latest
    with:
        cli-args: ""myscript""

  - uses: actions/checkout@v2
  - name: run shellcheck
    uses: sudo-bot/action-shellcheck@latest
    with:
        cli-args: ""--format=checkstyle --severity=info script.sh""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
MishaKav/pytest-coverage-comment,"- name: Pytest coverage comment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    pytest-coverage-path: ./pytest-coverage.txt
    junitxml-path: ./pytest.xml

{
  ""failures"": [{ ""classname"": ""..."", ""name"": ""..."" }],
  ""errors"": [{ ""classname"": ""..."", ""name"": ""..."" }],
  ""skipped"": [{ ""classname"": ""..."", ""name"": ""..."" }],
  ""count"": 3
}

name: pytest-coverage-comment
on:
  pull_request:
    branches:
      - \'*\'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build coverage file
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

- name: Pytest coverage comment
  id: coverageComment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    pytest-coverage-path: ./pytest-coverage.txt
    junitxml-path: ./pytest.xml

- name: Check the output coverage
  run: |
    echo ""Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}""
    echo ""Coverage Color - ${{ steps.coverageComment.outputs.color }}""
    echo ""Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}""
    echo ""Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}""

    echo ""Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}""

    echo ""Coverage Errors - ${{ steps.coverageComment.outputs.errors }}""
    echo ""Coverage Failures - ${{ steps.coverageComment.outputs.failures }}""
    echo ""Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}""
    echo ""Coverage Tests - ${{ steps.coverageComment.outputs.tests }}""
    echo ""Coverage Time - ${{ steps.coverageComment.outputs.time }}""
    echo ""Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}""

- name: Pytest coverage comment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    pytest-xml-coverage-path: ./coverage.xml

- name: Pytest coverage comment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    pytest-coverage-path: ./path-to-file/pytest-coverage.txt
    pytest-xml-coverage-path: ./path-to-file/coverage.xml
    title: My Coverage Report Title
    badge-title: My Badge Coverage Title
    hide-badge: false
    hide-report: false
    create-new-comment: false
    hide-comment: false
    report-only-changed-files: false
    remove-link-from-badge: false
    unique-id-for-comment: python3.8
    junitxml-path: ./path-to-file/pytest.xml
    junitxml-title: My JUnit Xml Summary Title

- name: Run unit tests (pytest)
  run: |
    docker run -v /tmp:/tmp $IMAGE_TAG python3 -m pytest --cov-report=term-missing:skip-covered --junitxml=/tmp/pytest.xml --cov=src tests/ | tee /tmp/pytest-coverage.txt

- name: Pytest coverage comment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    pytest-coverage-path: /tmp/pytest-coverage.txt
    junitxml-path: /tmp/pytest.xml

- name: Pytest coverage comment
  uses: MishaKav/pytest-coverage-comment@main
  with:
    multiple-files: |
      My Title 1, ./data/pytest-coverage_3.txt, ./data/pytest_junit_1.xml
      My Title 2, ./data/pytest-coverage_4.txt, ./data/pytest_junit_2.xml

<!-- Pytest Coverage Comment:Begin -->
<!-- Pytest Coverage Comment:End -->

name: Update Coverage on Readme
on:
  push:
jobs:
  update-coverage-on-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Pytest coverage comment
        if: ${{ github.ref == \'refs/heads/main\' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./data/pytest-coverage_4.txt

      - name: Update Readme with Coverage Html
        if: ${{ github.ref == \'refs/heads/main\' }}
        run: |
          sed -i \'/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\\<!-- Pytest Coverage Comment:Begin -->\
\\${{ steps.coverageComment.outputs.coverageHtml }}\
<!-- Pytest Coverage Comment:End -->\' ./README.md

      - name: Commit & Push changes to Readme
        if: ${{ github.ref == \'refs/heads/main\' }}
        uses: actions-js/push@master
        with:
          message: Update coverage on Readme
          github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peter-evans/commit-comment,"      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [commit-comment][1]

            [1]: https://github.com/peter-evans/commit-comment

      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          sha: 843dea1cc2e721163c20a5c876b5b155f7f3aa75
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [commit-comment][1]

            [1]: https://github.com/peter-evans/commit-comment
          path: path/to/file.txt
          position: 1

      - id: get-comment-body
        run: |
          body=""$(cat comment-body.txt)""
          delimiter=""$(openssl rand -hex 8)""
          echo ""body<<$delimiter"" >> $GITHUB_OUTPUT
          echo ""$body"" >> $GITHUB_OUTPUT
          echo ""$delimiter"" >> $GITHUB_OUTPUT

      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: ${{ steps.get-comment-body.outputs.body }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
mamba-org/provision-with-micromamba,"- uses: mamba-org/provision-with-micromamba@v16
  with:
    extra-specs: |
      python=3.10
      numpy
    cache-env: true

- uses: mamba-org/setup-micromamba@v1
  with:
    environment-file: environment.yml
    create-args: >- # beware the >- instead of |, we don\'t split on newlines but on spaces
      python=3.10
      numpy
    cache-environment: true

- uses: mamba-org/provision-with-micromamba@main
  with:
    micromamba-version: \'1.2.0\'
    environment-file: false
    environment-name: myenv
    extra-specs: |
      python=3.10
      numpy
    channels: conda-forge

- uses: mamba-org/setup-micromamba@v1
  with:
    micromamba-version: \'1.2.0-1\'
    environment-name: myenv
    create-args: >-
      python=3.10
      numpy

- uses: mamba-org/provision-with-micromamba@v16
  with:
    environment-file: false
    extra-specs: |
      python=3.10
      numpy
    channels: conda-forge,bioconda
    channel-priority: strict

- uses: mamba-org/setup-micromamba@v1
  with:
    create-args: >-
      python=3.10
      numpy
    condarc: |
      channels:
        - conda-forge
        - bioconda
      channel_priority: strict

extra-specs: |
  python=3.10
  xtensor

condarc-options: |
  proxy_servers:
    http: ...

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@main

      - name: Run Python
        shell: bash -l {0}
        run: |
          python -c ""import numpy""

      - name: Run Python
        shell: powershell
        run: |
          python -c ""import numpy""
      - name: Run cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          micromamba info && micromamba list

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pytest: [""6.1"", ""6.2""]
    steps:
      - uses: actions/checkout@v2

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: myenv.yaml
          environment-name: myenvname
          extra-specs: |
            python=3.7
            pytest=${{ matrix.pytest }}

- name: Install Conda environment with Micromamba
  uses: mamba-org/provision-with-micromamba@main
  with:
    cache-downloads: true

- name: Install Conda environment with Micromamba
  uses: mamba-org/provision-with-micromamba@main
  with:
    cache-env: true

jobs:
  myjob:
    defaults:
      run:
        shell: bash -l {0}

defaults:
  run:
    shell: bash -l {0}
jobs:
  ...
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
peter-evans/enable-pull-request-automerge,"    - name: Enable Pull Request Automerge
      run: gh pr merge --merge --auto ""1""
      env:
        GH_TOKEN: ${{ secrets.PAT }}

      - uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: 1

name: Auto-merge Dependabot
on: pull_request

permissions:
  pull-requests: write
  contents: write

jobs:
  automerge:
    runs-on: ubuntu-latest
    if: github.actor == \'dependabot[bot]\'
    steps:
      - uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

      - uses: actions/checkout@v3


      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == \'created\'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

      - name: Auto approve
        if: steps.cpr.outputs.pull-request-operation == \'created\'
        run: gh pr review --approve ""${{ steps.cpr.outputs.pull-request-number }}""
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
DeLaGuardo/setup-clojure,"name: Example workflow

on: [push]

jobs:

  clojure:

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: \'zulu\'
          java-version: \'8\'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.10.1.693              # Clojure CLI based on tools.deps
          lein: 2.9.1                  # Leiningen
          boot: 2.8.3                  # Boot.clj
          bb: 0.7.8                    # Babashka
          clj-kondo: 2022.05.31        # Clj-kondo
          cljfmt: 0.10.2               # cljfmt
          cljstyle: 0.15.0             # cljstyle
          cmd-exe-workaround: \'latest\' # Replaces `clojure` with `deps.clj` on Windows
          zprint: 1.2.3                # zprint
          
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles(\'deps.edn\') }}
          restore-keys: cljdeps-

      - name: Execute clojure code
        run: clojure -e ""(+ 1 1)""
        
      - name: Get leiningen version
        run: lein -v
        
      - name: Get boot version
        run: boot -V

      - name: Get babashka version
        run: bb --version

      - name: Get clj-kondo version
        run: clj-kondo --version

      - name: Get cljfmt version
        run: cljfmt --version

      - name: Get cljstyle version
        if: ${{ matrix.os != \'windows-latest\' }}
        run: cljstyle version

      - name: Get zprint version
        run: zprint --version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
keithweaver/aws-s3-github-action,"- uses: keithweaver/aws-s3-github-action@v1.0.0
  with:
    command: cp
    source: ./local_file.txt
    destination: s3://yourbucket/folder/local_file.txt
    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws_region: us-east-1

- uses: keithweaver/aws-s3-github-action@v1.0.0
  ...

- uses: keithweaver/aws-s3-github-action@master

- uses: keithweaver/aws-s3-github-action@dev-branch

docker build . -t aws-s3-action
docker run \\
  --env INPUT_AWS_ACCESS_KEY_ID=""<ACCESS_KEY>"" \\
  --env INPUT_AWS_SECRET_ACCESS_KEY=""<ACCESS_SECRET>"" \\
  --env INPUT_SOURCE=""./sample.txt"" \\
  --env INPUT_DESTINATION=""s3://yourbucket/sample.txt"" \\
  aws-s3-action

INPUT_AWS_ACCESS_KEY_ID=""<ACCESS_KEY>"" \\
  INPUT_AWS_SECRET_ACCESS_KEY=""<ACCESS_SECRET>"" \\
  INPUT_SOURCE=""./sample.txt"" \\
  INPUT_DESTINATION=""s3://yourbucket/sample.txt"" \\
  bash entrypoint.sh

- uses: keithweaver/aws-s3-github-action@v1.0.0
  name: Copy Folder
  with:
    command: cp
    source: ./folder1/
    destination: s3://bucket/folder1/
    aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws_region: us-east-1
    flags: --recursive
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
EndBug/latest-tag,"- name: Run latest-tag
  uses: EndBug/latest-tag@latest
  with:
    ref: someCustomTagName

    description: Description for the tag

    force-branch: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
pCYSl5EDgo/create-unitypackage,"name: Create Unity Package\r
\r
on: push\r
\r
jobs:\r
  echo:\r
    runs-on: ubuntu-latest\r
    steps:\r
    - uses: actions/checkout@v2\r
    - run: |\r
        echo ""Assets/Voiceer.meta"" > metaList\r
        find Assets/Voiceer/ -name \\*.meta >> metaList\r
\r
    - run: mkdir a\r
\r
    - uses: pCYSl5EDgo/create-unitypackage@master\r
      with:\r
        package-path: \'a/output.unitypackage\'\r
        include-files: metaList\r
    - uses: actions/upload-artifact@master\r
      with:\r
        path: a\r
        name: package\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
cake-build/cake-action,"steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      script-path: path/to/script.cake

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      target: Task-To-Run

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      verbosity: Diagnostic

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      dry-run: true

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      arguments: |
        name: value
        configuration: Release

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: 0.30.0

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: tool-manifest

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: explicit
      cake-version: 0.38.5

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: skip

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    steps:
      - name: Get the sources
        uses: actions/checkout@v1
      - name: Run the build script
        uses: cake-build/cake-action@v1
        with:
          target: Build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0
adapttive/algolia-docsearch-action,"name: Algolia Indexer

on:
  push:
    branches: [ live ]

jobs:
  algolia_indexer:
    runs-on: ubuntu-latest
    env:
      APPLICATION_ID: {{YOUR_APP_ID}}
      API_KEY: {{YOUR_API_KEY_WITH_WRITE_PERMISSIONS}}
      INDEX_NAME: {{YOUR_WEBSITE}} # example.com
      CONFIG: \'{""index_name"":""example.com"",""start_urls"":[{""url"":""https://example.com/blog"",""selectors_key"":""blog""}],""selectors"":{""blog"":{""lvl0"":""h1"",""lvl1"":""h2"",""lvl2"":""h3"",""lvl3"":""h4"",""lvl4"":""h5"",""lvl5"":""#description"",""text"":""#content""}}}\'
    name: Index Algolia
    steps:
    - name: Algolia Docsearch Action
      id: algolia
      uses:  adapttive/algolia-docsearch-action@1.1.1
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
MirageNet/nunit-reporter,"  - uses: MirageNet/nunit-reporter@v1.1.0
      if: always()
      with:
        path: Tests/*.xml
        access-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Secbyte/dotnet-sonarscanner,"- name: Sonarscanner for dotnet
  uses: Secbyte/dotnet-sonarscanner@v2.3
  with:
    buildCommand: dotnet build .
    testCommand: dotnet test .
    projectKey: a-project-key
    projectName: a-project-name
    sonarOrganisation: an-org
    beginArguments: >
        /d:sonar.verbose=""true""
        /d:sonar.cs.opencover.reportsPaths=\'""/path/to/coverage.xml"",""/path/to/coverage.2.xml""\'
        /d:sonar.coverage.exclusions=\'""**/*.cs"",""**/*.md""\'
  env:
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

buildCommand:
  description: ""Command to invoke build""
  required: true
testCommand:
  description: ""Command to invoke tests""
  required: false
projectKey:
  description: ""Specifies the key of the analyzed project in SonarQube""
  required: true
projectName:
  description: ""Specifies the name of the analyzed project in SonarQube""
  required: true
sonarHostname:
  description: ""The server URL""
  default: ""https://sonarcloud.io""
  required: false
sonarOrganisation:
  description: ""Organisation""
  required: true
beginArguments:
  description: ""Arguments to append to the begin command""
  required: false
endArguments:
  description: ""Arguments to append to the end command""
  required: false
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
zyborg/dotnet-tests-report,"jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: use this action, test solution dir
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: tests/My.Project.Tests
          report_name: my_project_tests
          report_title: My Project Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - name: unit tests for Contoso Business Layer
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: tests/Contoso.Business.Tests
          report_name: contoso_business_tests
          report_title: Contos Business Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gist_name: contoso_business_tests.md
          gist_badge_label: \'Contoso Business: %Counters_passed%/%Counters_total%\'
          gist_token: ${{ secrets.GIST_TOKEN }}

      - name: unit tests for Contoso Service Layer
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: tests/Contoso.Service.Tests
          report_name: contoso_service_tests
          report_title: Contos Service Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gist_name: contoso_service_tests.md
          gist_badge_label: \'Contoso Service: %Counters_passed%/%Counters_total%\'
          gist_token: ${{ secrets.GIST_TOKEN }}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
vedantmgoyal2009/winget-releaser,"name: Publish to WinGet
on:
  release:
    types: [released]
jobs:
  publish:
    runs-on: windows-latest
    steps:
      - uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Package.Identifier
          max-versions-to-keep: 5 # keep only latest 5 versions
          token: ${{ secrets.WINGET_TOKEN }}

name: Publish to WinGet
on:
  release:
    types: [released]
jobs:
  publish:
    runs-on: windows-latest
    steps:
      - uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Package.Identifier
          installers-regex: \'\\.exe$\' # Only .exe files
          token: ${{ secrets.WINGET_TOKEN }}

name: Publish to WinGet
on:
  release:
    types: [released]
jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: Publish X to WinGet
        uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Package.Identifier<X>
          installers-regex: \'\\.exe$\' # Only .exe files
          token: ${{ secrets.WINGET_TOKEN }}
      - name: Publish Y to WinGet
        uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Package.Identifier<Y>
          installers-regex: \'\\.msi$\' # Only .msi files
          token: ${{ secrets.WINGET_TOKEN }}

name: Publish to WinGet
on:
  release:
    types: [released]
jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: Get version
        id: get-version
        run: |
          $VERSION=""${{ github.event.release.name }}"" -replace \'^.*/ \'
          echo ""::set-output name=version::$VERSION""
        shell: pwsh
      - uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Package.Identifier
          version: ${{ steps.get-version.outputs.version }}
          token: ${{ secrets.WINGET_TOKEN }}

identifier: Publisher.Package # Microsoft.Excel

version: ${{ github.event.release.tag_name }} # For tags without the \'v\' prefix

installers-regex: \'\\.exe$\'

max-versions-to-keep: 5 # keep only the latest 5 versions

release-tag: ${{ inputs.version }} # workflow_dispatch input `version`

token: ${{ secrets.WINGET_TOKEN }} # Repository secret called \'WINGET_TOKEN\'

fork-user: dotnet-winget-bot # for example purposes only
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
jarrodparkes/git-log-action,"name: Inject git log into environment
id: git-log
uses: jarrodparkes/git-log-action@1.0.0
with:
  start: ${{ github.event.pull_request.base.sha }}
  end: ${{ github.event.pull_request.head.sha }}
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
AndrewMusgrave/automatic-pull-request-review,"name: Automatic pull request review
on: [pull_request]
jobs:
  automate-pullrequest-review:
    runs-on: ubuntu-latest
    steps:
      - name: Approve pull request
        if: github.actor == 'dependabot[bot]'
        uses: andrewmusgrave/automatic-pull-request-review@0.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: APPROVE
          body: 'Thank you dependabot \xf0\x9f\x8e\x8a'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Attest/annotations-action,"//npm.pkg.github.com/:_authToken={githubtoken}
@attest:registry=https://npm.pkg.github.com/

yarn

name: workflow
on: [push]
jobs:
  job:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Annotate
        uses: Attest/annotations-action@v0.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          input: './annotations.json'
          title: 'Annotate Files'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
kzrnm/get-net-sdk-project-versions-action,"      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: YourProject/YourProject.csproj
      - run: echo ""${{steps.get-version.outputs.version}}""
      - run: echo ""${{steps.get-version.outputs.version-prefix}}"" 
      - run: echo ""${{steps.get-version.outputs.version-suffix}}"" 
      - run: echo ""${{steps.get-version.outputs.package-version}}"" 
      - run: echo ""${{steps.get-version.outputs.assembly-version}}"" 
      - run: echo ""${{steps.get-version.outputs.file-version}}"" 
      - run: echo ""${{steps.get-version.outputs.informational-version}}"" 
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
xt0rted/dotnet-format,"name: Format check on push
on: push
jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1

name: Format check on pull request
on: pull_request
jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1
        with:
          only-changed-files: ""true""

name: Format on slash command
on:
  issue_comment:
    types: created
jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check for command
        id: command
        uses: xt0rted/slash-command-action@v1
        continue-on-error: true
        with:
          command: dotnet
          reaction-type: ""eyes""

      - name: Get branch info
        if: steps.command.outputs.command-name
        id: comment-branch
        uses: xt0rted/pull-request-comment-branch@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repo
        if: steps.command.outputs.command-name
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.comment-branch.outputs.ref }}
          persist-credentials: false

      - name: Restore dotnet tools
        if: steps.command.outputs.command-name
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        if: steps.command.outputs.command-name && steps.command.outputs.command-arguments == \'format\'
        id: format
        uses: xt0rted/dotnet-format@v1
        with:
          action: ""fix""
          only-changed-files: true

      - name: Commit files
        if: steps.command.outputs.command-name && steps.command.outputs.command-arguments == \'format\' && steps.format.outputs.has-changes == \'true\'
        run: |
          git config --local user.name ""github-actions[bot]""
          git config --local user.email ""41898282+github-actions[bot]@users.noreply.github.com""
          git commit -a -m \'Automated dotnet-format update

          Co-authored-by: ${{ github.event.comment.user.login }} <${{ github.event.comment.user.id }}+${{ github.event.comment.user.login }}@users.noreply.github.com>\'

      - name: Push changes
        if: steps.command.outputs.command-name && steps.command.outputs.command-arguments == \'format\' && steps.format.outputs.has-changes == \'true\'
        uses: ad-m/github-push-action@v0.5.0
        with:
          branch: ${{ steps.comment-branch.outputs.ref }}
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

on: pull_request
permissions:
  pull-requests: read
jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1
        with:
          only-changed-files: ""true""

on: pull_request
jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1
        with:
          only-changed-files: ""true""
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
zyborg/gh-action-buildnum,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: generate build number
      uses: zyborg/gh-action-buildnum@v1 
      with:
        gist_token: ${{ secrets.GIST_TOKEN }}
        set_env: true

    - name: print repo global build number
      run: echo Global Build Number is $BUILDNUM_FOR_GLOBAL

    - name: get existing build number
      uses: zyborg/gh-action-buildnum@v1
      id: lastBuildNum
      with:
        gist_token: ${{ secrets.GIST_TOKEN }}
        skip_bump: true

    - name: dump last build num
      run: |
        echo Global Build Number is ${{ steps.lastBuildNum.outputs.global_buildnum }}
        echo Workflow Build Number is ${{ steps.lastBuildNum.outputs.workflow_buildnum }}


/* THIS FILE IS AUTO-GENERATED AND MANAGED BY GITHUB ACTIONS. MANUAL MODIFICATIONS
** CAN BREAK THINGS IF YOU DO NOT KNOW WHAT YOU ARE DOING! *YOU* HAVE BEEN WARNED!
*/
{
  ""workflow_buildnums"": {
    ""test-action"": {
      ""version_buildnums"": {
        ""0.0.0"": {
          ""build_num"": 5
        }
      },
      ""build_num"": 13
    }
  },
  ""build_num"": 13
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
technote-space/create-pr-action,"on:
 schedule:
   - cron: 0 0 * * *
 pull_request:
   types: [opened, synchronize, reopened, closed]

name: Update packages
jobs:
 release:
   name: Update npm packages
   runs-on: ubuntu-latest
   steps:
     - name: Update npm packages
       uses: technote-space/create-pr-action@v2
       with:
         EXECUTE_COMMANDS: |
           npx npm-check-updates -u --packageFile package.json
           yarn install
           yarn upgrade
           yarn audit
         COMMIT_MESSAGE: \'chore: update npm dependencies\'
         COMMIT_NAME: \'GitHub Actions\'
         COMMIT_EMAIL: \'example@example.com\'
         PR_BRANCH_NAME: \'chore-npm-update-${PR_ID}\'
         PR_TITLE: \'chore: update npm dependencies\'

on:
 schedule:
   - cron: 0 0 * * *
 pull_request:
   types: [opened, synchronize, reopened, closed]

name: Update packages
jobs:
 release:
   name: Update composer packages
   runs-on: ubuntu-latest
   steps:
     - name: Update composer packages
       uses: technote-space/create-pr-action@v2
       with:
         EXECUTE_COMMANDS: |
           rm -f ""composer.lock""
           < ""composer.json"" jq -r \'.require | to_entries[] | select(.value | startswith(""^"")) | select(.key | contains(""/"")) | .key\' | tr \'\
\' \' \' | xargs -r php -d memory_limit=2G ""$(command -v composer)"" require --no-interaction --prefer-dist --no-suggest
           < ""composer.json"" jq -r \'.""require-dev"" | to_entries[] | select(.value | startswith(""^"")) | select(.key | contains(""/"")) | .key\' | tr \'\
\' \' \' | xargs -r php -d memory_limit=2G ""$(command -v composer)"" require --dev --no-interaction --prefer-dist --no-suggest
         COMMIT_MESSAGE: \'chore: update composer dependencies\'
         COMMIT_NAME: \'GitHub Actions\'
         COMMIT_EMAIL: \'example@example.com\'
         PR_BRANCH_NAME: \'chore-composer-update-${PR_ID}\'
         PR_TITLE: \'chore: update composer dependencies\'

on:
 schedule:
   - cron: 0 0 * * *
 pull_request:
   types: [opened, synchronize, reopened, closed]

name: Update packages
jobs:
 release:
   name: Update packages
   runs-on: ubuntu-latest
   steps:
     - name: Update packages
       uses: technote-space/create-pr-action@v2
       with:
         EXECUTE_COMMANDS: |
           npx npm-check-updates -u --packageFile package.json
           yarn install
           yarn upgrade
           yarn audit
           rm -f ""composer.lock""
           < ""composer.json"" jq -r \'.require | to_entries[] | select(.value | startswith(""^"")) | select(.key | contains(""/"")) | .key\' | tr \'\
\' \' \' | xargs -r php -d memory_limit=2G ""$(command -v composer)"" require --no-interaction --prefer-dist --no-suggest
           < ""composer.json"" jq -r \'.""require-dev"" | to_entries[] | select(.value | startswith(""^"")) | select(.key | contains(""/"")) | .key\' | tr \'\
\' \' \' | xargs -r php -d memory_limit=2G ""$(command -v composer)"" require --dev --no-interaction --prefer-dist --no-suggest
         COMMIT_MESSAGE: \'chore: update dependencies\'
         COMMIT_NAME: \'GitHub Actions\'
         COMMIT_EMAIL: \'example@example.com\'
         PR_BRANCH_NAME: \'chore-update-${PR_ID}\'
         PR_TITLE: \'chore: update dependencies\'

on:
  schedule:
    - cron: 0 0 * * *
  pull_request:
    types: [opened, synchronize, reopened, closed]
name: Update packages
jobs:
  release:
    name: Update npm packages
    runs-on: ubuntu-latest
    steps:
      - name: Update npm packages
        uses: technote-space/create-pr-action@v2
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          EXECUTE_COMMANDS: |
            npx npm-check-updates -u --packageFile package.json
            yarn install
            yarn upgrade
            yarn audit
          COMMIT_MESSAGE: \'chore: update npm dependencies\'
          COMMIT_NAME: \'GitHub Actions\'
          COMMIT_EMAIL: \'example@example.com\'
          PR_BRANCH_NAME: \'chore-npm-update-${PR_ID}\'
          PR_TITLE: \'chore: update npm dependencies\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
EndBug/version-check,"- id: check # This will be the reference for getting the outputs.
  uses: EndBug/version-check@v2 # You can choose the version/branch you prefer.

  with:
  
    diff-search: true

    file-name: ./your/own/dir/someName.json

    token: ${{ secrets.GITHUB_TOKEN }}

    file-url: https://unpkg.com/pkg/package.json

    assume-same-version: old

    static-checking: localIsNew

    github-api-url: https://git.contoso.com/api/v3

- name: Check if version has been updated
  id: check
  uses: EndBug/version-check@v2

- name: Log when changed
  if: steps.check.outputs.changed == \'true\'
  run: \'echo ""Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})""\'

- name: Log when unchanged
  if: steps.check.outputs.changed == \'false\'
  run: \'echo ""No version change :/""\'

- id: check
  uses: EndBug/version-check@v2
  with:
    file-url: https://unpkg.com/your-package@latest/package.json
    static-checking: localIsNew
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
ScottBrenner/generate-changelog-action,"- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    package-dir: \'root/to/my/package.json\'

- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    from-tag: v1.0
    to-tag: HEAD
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
antifree/json-to-variables,"{
    ""value"": ""value"",
    ""array"": [
        {
            ""value"": ""value 0""
        },
        ""value 1""
    ],
    ""obj"": {
        ""value1"": ""value1"",
        ""value2"": ""value2""
    }
}

- name: JSON to variables
  uses: antifree/json-to-variables@v1.0.1
  with:
    filename: \'test.json\'
    prefix: \'test\'
- name: Show output
  run: echo ""The time was ${{ env.test_value }}, ${{ env.test_array_0_value }}, ${{ env.test_obj_value1 }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
MrLuje/vs-marketplace-publisher,"name: Publish to VS Marketplace

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish release to marketplace
        id: publish
        uses: mrluje/vs-marketplace-publisher@v2
        with:
          pat: ${{ secrets.vs_pat }}

          manifestPath: vs-extension/vsixManifest.json

          useLatestReleaseAsset: true

name: Publish to VS Marketplace

env:
  config: Release
  solution: vs-extension.sln
  vsixContainer: ${{ github.workspace }}\\vs-extension.vsix

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: ""5.x""

      - name: Add VSTest to PATH
        uses: darenm/Setup-VSTest@v1

      - name: NuGet restore ${{ env.solution }}
        run: nuget restore ${{ env.solution }}

      - name: MSBuild ${{ env.solution }}
        run: |
          msbuild ${{ env.solution }} /p:Configuration=${{ env.config }} /p:TargetVsixContainer=${{ env.vsixContainer }} /p:DeployExtension=False /verbosity:minimal

      - name: Publish release to marketplace
        id: publish
        uses: mrluje/vs-marketplace-publisher@v2
        with:
          pat: ${{ secrets.vs_pat }}

          manifestPath: vs-extension/vsixManifest.json

          vsixPath: ${{ env.vsixContainer }}


",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
lovasoa/setup-emscripten,"uses: lovasoa/setup-emscripten@master
with:
  emscripten-version: '1.38.47'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/netbsd-vm,"
name: Test

on: [push]

jobs:
  test:
    runs-on: macos-12
    name: A job to run test in NetBSD
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: ""value2""
    steps:
    - uses: actions/checkout@v3
    - name: Test in NetBSD
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        prepare: |
          /usr/sbin/pkg_add curl

        run: |
          pwd
          ls -lah
          whoami
          env







...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: sshfs
        prepare: |
          /usr/sbin/pkg_add curl



...




...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          /usr/sbin/pkg_add curl



...



...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        nat: |
          ""8080"": ""80""
          ""8443"": ""443""
          udp:""8081"": ""80""
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        mem: 2048
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/netbsd-vm@v0
      with:
        release: 9.2
...
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/dragonflybsd-vm,"
name: Test

on: [push]

jobs:
  test:
    runs-on: macos-12
    name: A job to run test in DragonflyBSD
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: ""value2""
    steps:
    - uses: actions/checkout@v3
    - name: Test in DragonflyBSD
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        prepare: |
          pkg install -y socat

        run: |
          if [ -n ""test"" ]; then
            echo ""false""
          fi
          if [ ""test"" ]; then
            echo ""test""
          fi
          pwd
          ls -lah
          whoami
          env
          uname -a
          echo ""OK""






...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: sshfs
        prepare: |
          pkg install -y socat



...




...

    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        sync: rsync
        copyback: false
        prepare: |
          pkg install -y socat



...



...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        nat: |
          ""8080"": ""80""
          ""8443"": ""443""
          udp:""8081"": ""80""
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        envs: \'MYTOKEN MYTOKEN2\'
        usesh: true
        mem: 2048
...

...
    steps:
    - uses: actions/checkout@v3
    - name: Test
      id: test
      uses: vmactions/dragonflybsd-vm@v0
      with:
        release: 6.4.0
...
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
humbletim/setup-vulkan-sdk,"  -name: Prepare Vulkan SDK
   uses: humbletim/setup-vulkan-sdk@v1.2.0
   with:
     vulkan-query-version: 1.3.204.0
     vulkan-components: Vulkan-Headers, Vulkan-Loader
     vulkan-use-cache: true

  - name: Fetch Vulkan SDK version spec
    shell: bash
    run: |
      curl -o vulkan-sdk-config.json https://vulkan.lunarg.com/sdk/config/1.3.204.0/linux/config.json

  - name: Configure Vulkan SDK using the downloaded spec
    uses: humbletim/setup-vulkan-sdk@v1.2.0
    with:
      vulkan-config-file: vulkan-sdk-config.json
      vulkan-components: Vulkan-Headers, Vulkan-Loader
      vulkan-use-cache: true
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
humbletim/install-vulkan-sdk,"  -name: Install Vulkan SDK
   uses: humbletim/install-vulkan-sdk@v1.1.1
   with:
     version: 1.3.204.0
     cache: true
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jiro4989/build-deb-action,"inputs:
  package:
    description: \'Package name of debian package.\'
    required: true
  package_root:
    description: \'Directory of release files.\'
    required: true
  maintainer:
    description: \'Package maintainer name.\'
    required: true
  version:
    description: \'Package version.\'
    required: true
  installed_size:
    description: \'Package installed size. GitHub Actions set summarized byte size of `package_root` directory when this parameter is empty.\'
    default: \'\'
    required: false
  depends:
    description: \'Package dependencies.\'
    default: \'none\'
    required: false
  arch:
    description: \'Package architecture.\'
    default: \'amd64\'
    required: false
  desc:
    description: \'Package description.\'
    default: \'\'
    required: false
  compress_type:
    description: >
      Set the compression type used when building.
      Allowed types gzip, xz, zstd, none.
      Default is gzip.
    default: \'gzip\'
    required: false
  keep_ownership:
    description: >
      If set to true, it creates the package keeping files\' owner and group, otherwise they will be assigned to root
      Default is false.
    default: \'false\'
    required: false

outputs:
  file_name:
    description: \'File name of resulting .deb file.\'

name: build

on:
  push:
    tags:
      - \'v*.*.*\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: create sample script
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .debpkg/usr/lib/samplescript
          echo -e ""echo sample"" > .debpkg/usr/bin/samplescript
          chmod +x .debpkg/usr/bin/samplescript
          echo -e ""a=1"" > .debpkg/usr/lib/samplescript/samplescript.conf

          mkdir -p .debpkg/DEBIAN
          echo -e ""echo postinst"" > .debpkg/DEBIAN/postinst
          chmod +x .debpkg/DEBIAN/postinst
      - uses: jiro4989/build-deb-action@v3
        with:
          package: samplescript
          package_root: .debpkg
          maintainer: your_name
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: \'amd64\'
          depends: \'libc6 (>= 2.2.1), git\'
          desc: \'this is sample package.\'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ardalanamini/auto-changelog,"type(category): description [flag]

${{ github.token }}

feat    : New Features
fix     : Bug Fixes
build   : Build System & Dependencies
perf    : Performance Improvements
docs    : Documentation
test    : Tests
refactor: Refactors
chore   : Chores
ci      : CI
style   : Code Style
revert  : Reverts

Other Changes

${{ github.ref_name }}

""""

true

true

true

true

true

true

true

- name: Changelog
  uses: ardalanamini/auto-changelog@v4
  id  : changelog

- name: Changelog
  uses: ardalanamini/auto-changelog@v4
  id  : changelog
  with:
    github-token            : ${{ github.token }}
    commit-types            : |
      feat: New Features
      fix: Bug Fixes
      build: Build System & Dependencies
      perf: Performance Improvements
      docs: Documentation
      test: Tests
      refactor: Refactors
      chore: Chores
      ci: CI
      style: Code Style
      revert: Reverts
    default-commit-type     : Other Changes
    release-name            : v1.0.0
    release-name-prefix     : """"
    mention-authors         : true
    mention-new-contributors: true
    include-compare-link    : true
    include-pr-links        : true
    include-commit-links    : true
    semver                  : true
    use-github-autolink     : true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
QXIP/please-star-light,"name: Starring Partner
on:
  issues:
    types: [opened, reopened]
jobs:
  starcheck:
    runs-on: ubuntu-latest
    steps:
    - name: Please Star First
      uses: qxip/please-star-light@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        message: ""Please star this repository to motivate developers! :star:""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
gacts/github-slug,"- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    prefix: CI_

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    slug-maxlength: 80 # Use 'nolimit' to remove use of a max length (Default to 63)

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    short-length: 7 # By default it's up to git to decide, use 8 to have the v3.x behavior

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    short-length: 8 # Same as v3 and before

- name: Inject slug/short variables
  uses: rlespinasse/github-slug-action@v4
  with:
    prefix: CI_

Download action repository 'rlespinasse/github-slug-action@GIT_REFERENCE'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
canonical/has-signed-canonical-cla,"name: cla-check
on: [pull_request_target]

jobs:
  cla-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check if CLA signed
        uses: canonical/has-signed-canonical-cla@v1
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dessant/repo-lockdown,"name: \'Repo Lockdown\'

on:
  issues:
    types: opened
  pull_request_target:
    types: opened
  schedule:
    - cron: \'0 * * * *\'

permissions:
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/repo-lockdown@v3

on:
  issues:
    types: opened
  pull_request_target:
    types: opened

name: \'Repo Lockdown\'

on:
  issues:
    types: opened
  pull_request_target:
    types: opened
  schedule:
    - cron: \'0 * * * *\'

permissions:
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          github-token: ${{ github.token }}
          exclude-issue-created-before: \'\'
          exclude-issue-labels: \'\'
          issue-labels: \'\'
          issue-comment: \'\'
          skip-closed-issue-comment: false
          close-issue: true
          lock-issue: true
          issue-lock-reason: \'\'
          exclude-pr-created-before: \'\'
          exclude-pr-labels: \'\'
          pr-labels: \'\'
          pr-comment: \'\'
          skip-closed-pr-comment: false
          close-pr: true
          lock-pr: true
          pr-lock-reason: \'\'
          process-only: \'\'
          log-output: false

    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          exclude-issue-created-before: \'2018-01-01T00:00:00Z\'
          exclude-issue-labels: \'pinned, help-wanted\'
          process-only: \'issues\'

    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          exclude-pr-labels: \'pinned\'
          lock-pr: false
          process-only: \'prs\'

    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          issue-labels: \'off-topic\'
          issue-comment: >
            This repository does not accept bug reports,
            see the README for details.
          pr-comment: >
            This repository does not accept pull requests,
            see the README for details.

    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          issue-comment: >
            This repository does not accept bug reports,
            see the README for details.
          skip-closed-issue-comment: true
          pr-comment: >
            This repository does not accept pull requests,
            see the README for details.
          skip-closed-pr-comment: true

    steps:
      - uses: dessant/repo-lockdown@v3
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ammaraskar/gcc-problem-matcher,"    - uses: ammaraskar/gcc-problem-matcher@master
    - name: Build Project
      run: make
",0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
redhat-actions/podman-login,"name: Log in to Quay.io
on:
  push:

env:
  REGISTRY_USER: quayuser
  IMAGE_REGISTRY: quay.io
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  login:
    name: Log in to image registry
    runs-on: ubuntu-20.04
    steps:

      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}


name: Log in to ghcr.io
on:
  push:

env:
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  login:
    name: Log in to GitHub Container Registry
    runs-on: ubuntu-20.04
    steps:
      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}


name: Log in to ECR
on:
  push:

env:
  REGISTRY_USER: ${{ secrets.AWS_ACCESS_KEY_ID }}
  REGISTRY_PASSWORD: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IMAGE_REGISTRY: 123456789012.dkr.ecr.eu-west-1.amazonaws.com

jobs:
  login:
    name: Log in to AWS ECR Registry
    runs-on: ubuntu-20.04
    steps:
      - name: Log in to AWS ECR
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0
langroodi/doxygenize,"GENERATE_LATEX         = NO

.
\xe2\x94\x82     
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80src
\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80sourcefile1.c
\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80sourcefile2.c
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80docs
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80doc
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80Doxyfile

OUTPUT_DIRECTORY       = ./ # Relative path to root of your repository (e.g, ./)
INPUT                  = ./src # Relative path to root of your repository (e.g, ./src)
HTML_OUTPUT            = ./docs # Relative path to root of your repository

uses: langroodi/doxygenize@[version/tag/commit hash (i.e., v1)]

uses: actions/checkout@v3
uses: langroodi/doxygenize@[version/tag/commit hash (e.g., v1)]
with:
    doxygenconf: '[Configuration file path including the file name (e.g., ./doc/doxygen.conf)]'
    htmloutput: '[HTML output folder (e.g., ./doc/html/)]'
    ghpagesbranch: '[GitHub Pages branch name (e.g., master)]'
    ghpagesdir: '[GitHub Pages directory path (e.g., ./docs/)]'
    darkmode: '[true to enable Doxygen dark theme; otherwise use Doxygen default theme]'
    customheader: '[HTML header file URL (e.g., https://raw.githubusercontent.com/langroodi/doxygenize/master/header/woman_life_freedom.html)]'
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Difegue/action-megacmd,"- name: Download
        uses: Difegue/action-megacmd@master
        with:
          args: get https://mega.nz/#F!ABcD1E2F!gHiJ23k-LMno45PqrSTUvw /path/to/local/folder

- name: Upload 
        uses: Difegue/action-megacmd@master
        with:
          args: put /path/to/local/folder /exportedstuff/
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
tlylt/install-graphviz,"steps:
- uses: tlylt/install-graphviz@v1

name: Test install-graphviz

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    name: Test
    steps:
      - uses: tlylt/install-graphviz@main
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
redhat-plumbers-in-action/differential-shellcheck,"name: Differential ShellCheck
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write

      actions: read
      contents: read

    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: ShellCheck
        name: Differential ShellCheck
        uses: redhat-plumbers-in-action/differential-shellcheck@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ always() }}
        name: Upload artifact with ShellCheck defects in SARIF format
        uses: actions/upload-artifact@v3
        with:
          name: Differential ShellCheck SARIF
          path: ${{ steps.ShellCheck.outputs.sarif }}


- name: Differential ShellCheck
  uses: redhat-plumbers-in-action/differential-shellcheck@v4
  with:
    triggering-event: <name of triggering event>
    base: <sha1>
    head: <sha1>
    pull-request-base: <sha1>
    pull-request-head: <sha1>
    push-event-base: <sha1>
    push-event-head: <sha1>
    diff-scan: <true or false>
    strict-check-on-push: <true or false>
    external-sources: <true or false>
    severity: <minimal severity level>
    scan-directory: <list of paths>
    exclude-path: <list of paths>
    include-path: <list of paths>
    token: <GitHub token>


- id: ShellCheck
  name: Differential ShellCheck
  uses: redhat-plumbers-in-action/differential-shellcheck@v4

- if: ${{ always() }}
  name: Upload artifact with ShellCheck defects in SARIF format
  uses: actions/upload-artifact@v3
  with:
    name: Differential ShellCheck SARIF
    path: ${{ steps.ShellCheck.outputs.sarif }}

- if: ${{ always() }}
  name: Upload SARIF to GitHub using github/codeql-action/upload-sarif
  uses: github/codeql-action/upload-sarif@v2
  with:
    sarif_file: ${{ steps.ShellCheck.outputs.sarif }}
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jenkey2011/vuepress-deploy,"name: Build and Deploy
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: vuepress-deploy
      uses: jenkey2011/vuepress-deploy@master
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        TARGET_REPO: username/repo
        TARGET_BRANCH: master
        BUILD_SCRIPT: yarn && yarn build
        BUILD_DIR: blog/.vuepress/dist/
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
fuxingloh/multi-labeler,"on:
  pull_request_target:

  pull_request:

  issues:

  issue_comment:

permissions:
  contents: read # the config file
  issues: write # for labeling issues (on: issues)
  pull-requests: write # for labeling pull requests (on: pull_request_target or on: pull_request)
  statuses: write # to generate status
  checks: write # to generate status

jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: fuxingloh/multi-labeler@v2 # v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}} # optional, default to \'${{ github.token }}\'  
          config-path: .github/labeler.yml # optional, default to \'.github/labeler.yml\'
          config-repo: my-org/my-repo # optional, default to \'${{ github.repository }}\'


version: v1

labels:
  - label: ""feat""
    sync: true # remove label if match failed, default: false (pull_request/issue only)
    matcher:
      title: ""^feat:.*""
      body: ""/feat""
      comment: ""/feat""
      branch: ""^feat/.*""
      baseBranch: ""^feat/.*""
      commits: ""^feat:.*""
      author:
        - github-actions
        - fuxingloh
      files:
        any: [ ""app/*"" ]
        all: [ ""!app/config/**"" ]
        count:
          gte: 1
          lte: 1000

checks:
  - context: ""Status Check""
    url: ""https://go.to/detail""
    description:
      success: ""Ready for review & merge.""
      failure: ""Missing labels for release.""
    labels:
      any:
        - any
        - have
      all:
        - all
        - must
        - have

on:
  pull_request:
    types: [ opened, edited, synchronize, ready_for_review ]
    branches: [ master, main ]

jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: fuxingloh/multi-labeler@v1

version: v1

labels:
  - label: ""feat""
    matcher:
      title: ""^feat: .*""
      commits: ""^feat: .*""

  - label: ""fix""
    matcher:
      title: ""^fix: .*""
      commits: ""^fix: .*""

  - label: ""chore""
    matcher:
      title: ""^chore: .*""
      commits: ""^chore: .*""

  - label: ""docs""
    matcher:
      title: ""^docs: .*""
      commits: ""^docs: .*""

checks:
  - context: ""Semantic Pull Request""
    url: ""https://github.com/fuxingloh/multi-labeler/blob/main/.github/labeler.yml""
    description:
      success: Ready for review & merge.
      failure: Missing semantic label for merge.
    labels:
      any:
        - feat
        - fix
        - chore
        - docs

on:
  pull_request:
    types: [ opened, edited, synchronize, ready_for_review ]
    branches: [ master, main ]

jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: fuxingloh/multi-labeler@v1

version: v1

labels:
  - label: ""feat""
    matcher:
      title: ""^feat:.*""
      branch: ""^feat/.*""
      commits: ""^feat:.*""

  - label: ""fix""
    matcher:
      title: ""^fix:.*""
      branch: ""^fix/.*""
      commits: ""^fix:.*""

  - label: ""release""
    matcher:
      baseBranch: ""^release/.*""

on:
  issues:
    types: [ opened, edited ]

jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: fuxingloh/multi-labeler@v1

version: v1

labels:
  - label: ""bug""
    matcher:
      body: ""(\\\
|.)*- \\\\[x\\\\] bug(\\\
|.)*""

on:
  issue_comment:
    types: [ created, edited ]

jobs:
  labeler:
    name: Labeler
    runs-on: ubuntu-latest
    steps:
      - uses: fuxingloh/multi-labeler@v1

version: v1

labels:
  - label: ""coverage""
    matcher:
      comment: ""# \\\\[Codecov\\\\] .*""

  - label: ""stale""
    matcher:
      comment: ""/stale""

version: v1

labels:
  - label: ""feat""
    matcher:
      title: ""^feat:.*""

version: v1

labels:
  - label: ""bug""
    matcher:
      body: ""(\\\
|.)*- \\\\[x\\\\] bug(\\\
|.)*""

version: v1

labels:
  - label: ""stale""
    matcher:
      comment: ""/stale""

version: v1

labels:
  - label: ""feat""
    matcher:
      branch: ""^feat/.*""

version: v1

labels:
  - label: ""release""
    matcher:
      baseBranch: ""^release/.*""

version: v1

labels:
  - label: ""feat""
    matcher:
      commits: ""^feat: .*""

version: v1

labels:
  - label: ""single""
    matcher:
      author: ""fuxingloh""
  - label: ""any""
    matcher:
      author:
        - adam
        - claire

version: v1

labels:
  - label: ""github""
    sync: true
    matcher:
      files: "".github/**""

  - label: ""security""
    sync: true
    matcher:
      files: [ ""web/security/**"", ""security/**"" ]

version: v1

labels:
  - label: ""size: s""
    sync: true
    matcher:
      files:
        count:
          gte: 1
          lte: 4

  - label: ""size: m""
    sync: true
    matcher:
      files:
        count:
          gte: 5
          lte: 10

  - label: ""size: l""
    sync: true
    matcher:
      files:
        count:
          gte: 11

version: v1

labels:
  - label: ""ci""
    sync: true
    matcher:
      files:
        any: [ "".github/workflow/**"", "".circleci/**"" ]
        all: [ ""!app/**"" ]

  - label: ""attention""
    sync: true
    matcher:
      files:
        any: [ ""app/**"" ]
        count:
          neq: 1

version: v1

checks:
  - context: ""Release Drafter""
    url: ""https://go.to/detail""
    description:
      success: ""Ready for review & merge.""
      failure: ""Missing labels for release.""
    labels:
      any:
        - feat
        - fix
        - chore
        - docs 

version: v1

checks:
  - context: ""Merge check""
    description: ""Labels for merge.""
    labels:
      any: [ ""reviewed"", ""size:s"" ]
      all: [ ""app"" ]

version: v1

checks:
  - context: ""Merge check""
    description: ""Disable merging when \'DO NOT MERGE\' label is set""
    labels:
      none: [ ""DO NOT MERGE"" ]
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
GuillaumeFalourd/diff-action,"    steps:
      - uses: actions/checkout@v2.3.4
      - uses: GuillaumeFalourd/diff-action@v1
        with:
          first_file_path: path/to/file1.txt
          second_file_path: path/to/file2.txt
          expected_result: PASSED

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: GuillaumeFalourd/diff-action@v1
        with:
          first_file_path: path/to/file1.txt
          second_file_path: path/to/file2.txt
          expected_result: FAILED

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: GuillaumeFalourd/diff-action@v1
        with:
          first_file_path: path/to/file1.txt
          second_file_path: path/to/file2.txt
          specific_line: 3
          expected_result: PASSED

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: GuillaumeFalourd/diff-action@v1
        with:
          first_file_path: path/to/file1.txt
          second_file_path: path/to/file2.txt
          specific_line: 3
          expected_result: FAILED
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ouuan/pkgbuild-action,"      - name: Build Package
        uses: ouuan/pkgbuild-action@master
        id: build-package
        with:
          path: pkgname
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pkgname-${{ github.run_id }}
          path: ${{ steps.build-package.outputs.pkgfile }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
mikepenz/gradle-dependency-submission,"name: build
on:
  push:
    branches:
      - develop # run the action on your projects default branch

jobs:
  build:
    name: Dependencies
    runs-on: ubuntu-latest
    permissions: # The Dependency Submission API requires write permission
      contents: write
    steps:
      - name: \'Checkout Repository\'
        uses: actions/checkout@v3

      - name: Run snapshot action
        uses: mikepenz/gradle-dependency-submission@{latest}
        with:
          gradle-project-path: ""gradle-example""
          gradle-build-module: "":app""

- name: Root Gradle Dependency Submission
  uses: mikepenz/gradle-dependency-submission@{latest}
  with:
    use-gradlew: false
    gradle-build-module: |-
      :
    gradle-build-configuration: |-
      compileClasspath

- name: Gradle Dependency Submission
  uses: mikepenz/gradle-dependency-submission@{latest}
  with:
    gradle-project-path: |-
      gradle-example
    gradle-build-module: |-
      :app
      :simple-app
    gradle-build-configuration: |-
      debugCompileClasspath

$ npm install

$ npm run lint -- --fix

$ npm run build && npm run package

$ npm test
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
re-actors/alls-green,"---
on:
  pull_request:
  push:

jobs:
  build:
    ...

  docs:
    ...

  linters:
    ...

  package-linters:
    needs:
    - build
    ...

  tests:
    needs:
    - build
    ...

  check:
    if: always()

    needs:
    - docs
    - linters
    - package-linters
    - tests

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        allowed-failures: docs, linters
        allowed-skips: non-voting-flaky-job
        jobs: ${{ toJSON(needs) }}
...

---

...  # Some sections have been removed from the example to simplify it

jobs:
  tests:
    runs-on: ubuntu-latest

    matrix:
       python-version:
       - >-
         3.10
       - ~3.11.0-0

    continue-on-error: >-
      ${{ contains(matrix.python-version, \'~\') && true || false }}

    steps:
    - ...

  check:
    if: always()

    needs:
    - tests

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

...
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
matlab-actions/setup-matlab,"name: Run MATLAB Build on GitHub-Hosted Runner
on: [push]
jobs:
  my-job:
    name: Run MATLAB Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run build
        uses: matlab-actions/run-build@v1
        with:
          tasks: test

name: Run MATLAB Tests on GitHub-Hosted Runner
on: [push]
jobs:
  my-job:
    name: Run MATLAB Tests and Generate Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run tests and generate artifacts
        uses: matlab-actions/run-tests@v1
        with:
          test-results-junit: test-results/results.xml
          code-coverage-cobertura: code-coverage/coverage.xml

name: Run MATLAB Script on GitHub-Hosted Runner
on: [push]
jobs:
  my-job:
    name: Run MATLAB Script
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: myscript
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
fabriciomurta/ensure-nuget-source,"- uses: fabriciomurta/ensure-nuget-source@v1
  with:
    name: 'nuget.org'

    url: 'https://api.nuget.org/v3/index.json'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
NasAmin/trx-parser,"name: Test\r
on: [pull_request]\r
\r
jobs:\r
  Build:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Build & Test dotnet code\r
        run: |\r
          dotnet restore\r
          dotnet build -c Release no-restore\r
          dotnet test -c Release --no-restore --no-build --loger trx --results-directory ./TestResults\r
      - name: Parse Trx files\r
        uses: NasAmin/trx-parser@v0.1\r
        id: trx-parser\r
        with:\r
          TRX_PATH: ${{ github.workspace }}/TestResults #This should be the path to your TRX files\r
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}          \r
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jasongitmail/fast-webhook,"uses: jasongitmail/fast-webhook@v1
with:
  url: ${{ secrets.WEBHOOK_URL }}
  json: \'{""foo"": ""bar""}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
chrnorm/deployment-status,"name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    permissions:
      deployments: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          environment: production

      - name: Deploy my app
        run: |

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          state: \'success\'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          state: \'failure\'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
phoenix-actions/test-reporting,"on:
  pull_request:
  push:
jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     # checkout the repo
      - run: npm ci                   # install packages
      - run: npm test                 # run tests (configured to use jest-junit reporter)

      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report               # Set ID reference for step
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results

on:
  pull_request:
  push:
jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     # checkout the repo
      - run: npm ci                   # install packages
      - run: npm test                 # run tests (configured to use jest-junit reporter)

      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report               # Set ID reference for step
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results

      - name: Read output variables
        run: |
          echo ""url is ${{ steps.test-report.outputs.runHtmlUrl }}""

name: \'CI\'
on:
  pull_request:
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2         # checkout the repo
      - run: npm ci                       # install packages
      - run: npm test                     # run tests (configured to use jest-junit reporter)
      - uses: actions/upload-artifact@v2  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: jest-junit.xml

name: \'Test Report\'
on:
  workflow_run:
    workflows: [\'CI\']                     # runs after CI workflow
    types:
      - completed
jobs:
  report:
    runs-on: ubuntu-latest
    steps:
    - uses: phoenix-actions/test-reporting@v8
      id: test-report                     # Set ID reference for step
      with:
        artifact: test-results            # artifact name
        name: JEST Tests                  # Name of the check run which will be created
        path: \'*.xml\'                     # Path to test results (inside artifact .zip)
        reporter: jest-junit              # Format of test results

- uses: phoenix-actions/test-reporting@v8
  with:

    artifact: \'\'

    name: \'\'

    path: \'\'

    path-replace-backslashes: \'false\'

    reporter: \'\'

    only-summary: \'false\'

    list-suites: \'all\'

    list-tests: \'all\'

    output-to: \'checks\'

    max-annotations: \'10\'

    fail-on-error: \'true\'

    working-directory: \'\'

    token: \'\'

file_reporters:
  json: reports/test-results.json

<PropertyGroup>
  <VSTestLogger>trx%3bLogFileName=$(MSBuildProjectName).trx</VSTestLogger>
  <VSTestResultsDirectory>$(MSBuildThisFileDirectory)/TestResults/$(TargetFramework)</VSTestResultsDirectory>
</PropertyGroup>

file_reporters:
  json: reports/test-results.json

""scripts"": {
  ""test"": ""jest --ci --reporters=default --reporters=jest-junit""
},
""devDependencies"": {
  ""jest"": ""^26.5.3"",
  ""jest-junit"": ""^12.0.0""
},
""jest-junit"": {
  ""outputDirectory"": ""reports"",
  ""outputName"": ""jest-junit.xml"",
  ""ancestorSeparator"": "" \xe2\x80\xba "",
  ""uniqueOutputName"": ""false"",
  ""suiteNameTemplate"": ""{filepath}"",
  ""classNameTemplate"": ""{classname}"",
  ""titleTemplate"": ""{title}""
}

""scripts"": {
  ""test"": ""mocha --reporter json --reporter-option output=filename.json""
}

""scripts"": {
  ""test"": ""mocha --reporter json > test-results.json""
}

""scripts"": {
  ""test"": ""mocha test.js --reporter mochawesome --reporter-options reportDir=customReportDir,reportFilename=customReportFilename""
}
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
chrnorm/deployment-action,"jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      deployments: write


name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    permissions:
      deployments: write

    steps:
      - uses: actions/checkout@v1

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          environment: production

name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          environment: production

      - name: Deploy my app
        run: |

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: \'${{ github.token }}\'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'success\'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: \'${{ github.token }}\'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'failure\'

git tag v2.0.6
git tag v2 -f # force update the existing v2 major release tag

git push -f --tags
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
MirageNet/unity-runner,"name: Test project
on: [push]
jobs:
  requestActivationFile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Request manual activation file
        uses: MirageNet/unity-runner@3.1.0
        id: getManualLicenseFile
        with:
            entrypoint: /request_activation.sh

      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
            name: Manual Activation File
            path: ${{ steps.getManualLicenseFile.outputs.filePath }}

jobs:
  testRunnerInEditMode:
    name: Test edit mode \xf0\x9f\x93\x9d
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Activate license
        uses: MirageNet/unity-runner@3.1.0
        with:
          entrypoint: /activate.sh

      - name: Run tests
        uses: MirageNet/unity-runner@3.1.0
        with:
          args: -runTests -projectPath .
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0
benjlevesque/short-sha,"name: 'build-test'
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
      - run: echo $SHA
        env:
          SHA: ${{ env.SHA }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
GabrielAcostaEngler/signtool-code-sign,"runs-on: windows-latest
steps:
  uses: GabrielAcostaEngler/signtool-code-sign@main
  with:
    certificate: '${{ secrets.CERTIFICATE }}'
    cert-password: '${{ secrets.PASSWORD }}'
    cert-sha1: '${{ secrets.CERTHASH }}'
    cert-description: 'foo'
    folder: 'path/to/folder'
    recursive: true
    timestamp-server: 'http://timestamp.digicert.com'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
DigiPie/mongo-action,"name: mongo-action CI
on: [push]

jobs:
  test_mongo_action:
    runs-on: ubuntu-latest
    name: Test mongo-action
    steps:
      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017
      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo ""deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse"" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
      - name: Test mongo connection
        run: ""sudo mongosh localhost:27017""
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
pr-annotators/mypy-pr-annotator,"name: My Workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: ""3.8""
        
      - name: Install mypy
        run: |
          pip install mypy

      - name: Add mypy annotator
        uses: pr-annotators/mypy-pr-annotator@v1.0.0

      - name: Run mypy
        run: |
          mypy src/
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pypa/gh-action-pip-audit,"jobs:
  selftest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install
        run: python -m pip install .
      - uses: pypa/gh-action-pip-audit@v1.0.8

jobs:
  selftest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install
        run: |
          python -m venv env/
          source env/bin/activate
          python -m pip install .
      - uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          virtual-environment: env/

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: requirements.txt dev-requirements.txt

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: path/to/project/

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    virtual-environment: env/

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    local: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    vulnerability-service: osv

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: requirements.txt
    require-hashes: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: requirements.txt
    no-deps: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    summary: false

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    index-url: https://example.corporate.local/simple

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    extra-index-urls: |
      https://example.corporate.local/simple
      https://prod.corporate.local/simple

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    ignore-vulns: |
      GHSA-XXXX-YYYYYY
      PYSEC-AAAA-BBBBB

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    internal-be-careful-allow-failure: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    internal-be-careful-extra-flags: --not-a-real-pip-audit-flag

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: requirements.txt
    require-hashes: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    inputs: requirements.txt
    no-deps: true

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    virtual-environment: env/

- uses: pypa/gh-action-pip-audit@v1.0.8
  with:
    virtual-environment: env/
    local: true

jobs:
  pip-audit:
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9  # change to your required version of Python

      - name: \'Generate requirements.txt\'
        run: |
          pipx run pipfile-requirements Pipfile.lock > requirements.txt

      - uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: requirements.txt
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
snok/install-poetry,"- name: Install Poetry
  uses: snok/install-poetry@v1

- name: Install and configure Poetry
  uses: snok/install-poetry@v1
  with:
    version: 1.5.1
    virtualenvs-create: true
    virtualenvs-in-project: false
    virtualenvs-path: ~/my-custom-path
    installer-parallel: true

version: latest
virtualenvs-create: true
virtualenvs-in-project: false
virtualenvs-path: {cache-dir}/virtualenvs
installer-parallel: true

- name: Install and configure Poetry
  uses: snok/install-poetry@v1
  with:
    installation-arguments: --git https://github.com/python-poetry/poetry.git@69bd6820e320f84900103fdf867e24b355d6aa5d

- uses: snok/install-poetry@v1
- run: poetry config experimental.new-installer false

name: test

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: \'3.11\'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(\'**/poetry.lock\') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != \'true\'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
          coverage report

name: test

on: pull_request

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - run: python -m pip install black flake8 isort
      - run: |
          flake8 .
          black . --check
          isort .
  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ ""ubuntu-latest"", ""macos-latest"" ]
        python-version: [ ""3.7"", ""3.8"", ""3.9"", ""3.10"", ""3.11"" ]
        django-version: [""3"", ""4"" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(\'**/poetry.lock\') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != \'true\'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Install django ${{ matrix.django-version }}
        run: |
          source .venv/bin/activate
          pip install ""Django==${{ matrix.django-version }}""
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
          coverage report

name: coverage

on:
  push:
    branches:
      - master

jobs:
  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: \'3.11\'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(\'**/poetry.lock\') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != \'true\'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Test with pytest
        run: poetry run pytest --cov=<project-dir> --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
          file: ./coverage.xml
          fail_ci_if_error: true

defaults:
  run:
    shell: bash

- run: |
    source .venv/scripts/activate
    pytest --version
  if: runner.os == \'Windows\'
- run: |
    source .venv/bin/activate
    pytest --version
  if: runner.os != \'Windows\'

- run: |
    source $VENV
    pytest --version

name: test

on: pull_request

jobs:
  test-windows:
    strategy:
      matrix: [ ""ubuntu-latest"", ""macos-latest"", ""windows-latest"" ]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: \'3.11\'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(\'**/poetry.lock\') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - run: |
          source $VENV
          pytest --version

- name: Install Poetry
  uses: snok/install-poetry@v1
  with:
    virtualenvs-create: true
    virtualenvs-in-project: true

- name: Install django ${{ matrix.django-version }}
  run: |
    source .venv/bin/activate
    pip install ""Django==${{ matrix.django-version }}""
- name: Run tests
  run: |
    source .venv/bin/activate
    pytest tests/
    coverage report

- name: Install django ${{ matrix.django-version }}
  run: poetry add ""Django==${{ matrix.django-version }}""
- name: Run tests
  run: |
    poetry run pytest tests/
    poetry run coverage report

name: test

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: \'3.11\'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != \'true\'
        uses: snok/install-poetry@v1
",1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
remorses/pypi,"- name: Deploy package
  uses: remorses/pypi@master
  with:
    setupfile: ./setup.py
    username: ${{ secrets.pypi_username }}
    password: ${{\xc2\xa0secrets.pypi_password }}

",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
browser-actions/setup-geckodriver,"steps:
  - uses: browser-actions/setup-geckodriver@latest
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
  - run: geckodriver --version
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
snow-actions/eclint,"- uses: snow-actions/eclint@v1.0.1
  with:
    args: \'check\'

- uses: snow-actions/eclint@v1.0.1
  with:
    args: \'fix *.yml\'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
fabiocaccamo/create-matrix-action,"python-version {3.8}, django-version {3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
python-version {3.9}, django-version {3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
python-version {3.10}, django-version {3.2,4.0,4.1}, database {sqlite,mysql,postgres}
python-version {3.11}, django-version {4.1}, database {sqlite,mysql,postgres}


jobs:

  prepare:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create matrix
        id: create_matrix
        uses: fabiocaccamo/create-matrix-action@v3
        with:
          matrix: |
            python-version {3.8}, django-version {3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.9}, django-version {3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.10}, django-version {3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.11}, django-version {4.1}, database {sqlite,mysql,postgres}

    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

  test:

    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.prepare.outputs.matrix)}}


    steps:


      - name: Debug matrix
        run: |
          echo ""Python ${{ matrix.python-version }} + Django ${{ matrix.django-version }} + Database ${{ matrix.database }}""
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ciiiii/toml-editor,"- name: Edit Toml
  uses: ciiiii/toml-editor@1.0.0
  with:
    file: ""file/path/xx.toml""
    key: ""a.b.c""
    value: ""abc""

[params]
hello = """" # key = ""params.hello""

[params.config]
appId = """" # key = ""params.config.appId""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
JoseThen/comment-pr,"permissions:
  checks: read
  contents: read
  pull-requests: write

uses: JoseThen/comment-pr@v1.2.0
with:
  comment: \'This PR is the bees knees!\'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: JoseThen/comment-pr@v1.2.0
with:
  json: \'{ ""this"": ""pr"", ""is"": ""the"", ""bees"": ""knees""}\'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: JoseThen/comment-pr@v1.2.0
with:
  file_path: \'./tmp/pr-comment.md\'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
wearerequired/lint-action,"name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: write

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3


      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: phpcs

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true
          php_codesniffer_args: ""-n""

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: composer

      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --no-progress --no-ansi --no-interaction
          echo ""${PWD}/vendor/bin"" >> $GITHUB_PATH

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install ClangFormat
        run: sudo apt-get install -y clang-format

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          clang_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ""6.0.x""

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          dotnet_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          black: true
          black_auto_fix: true
          flake8: true
          flake8_auto_fix: false
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pdm-project/setup-pdm,"steps:
    ...
    - uses: pdm-project/setup-pdm@v3
      name: Setup PDM
      with:
        python-version: 3.9              # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64                # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: 2.7.4                   # The version of PDM to install. Leave it as empty to use the latest version from PyPI, or \'head\' to use the latest version from GitHub
        prerelease: false                # Allow prerelease versions of PDM to be installed
        enable-pep582: false             # Enable PEP 582 package loading globally
        allow-python-prereleases: false  # Allow prerelease versions of Python to be installed. For example if only 3.12-dev is available, 3.12 will fallback to 3.12-dev
        update-python: true              # Update the environment with the requested python version
    - name: Install dependencies
      run: pdm install                   # Then you can use pdm in the following steps.
    ...

outputs:
  python-version:
    description: ""The installed Python or PyPy version. Useful when given a version range as input.""
  python-path:
    description: ""The absolute path to the Python or PyPy executable.""
  pdm-version:
    description: ""The installed PDM version.""
  pdm-bin:
    description: ""The absolute path to the PDM executable.""

- uses: pdm-project/setup-pdm@v3
  with:
    python-version: 3.9
    cache: true

- uses: pdm-project/setup-pdm@v3
  with:
    python-version: 3.9
    cache: true
    cache-dependency-path: |
      ./pdm.lock
      ./pdm.new.lock

- uses: pdm-project/setup-pdm@v3
  with:
    python-version: 3.9
    cache: true
    cache-dependency-path: \'**/pdm.lock\'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
sersoft-gmbh/xcodebuild-action,"uses: sersoft-gmbh/xcodebuild-action@v2
with:
  project: MyApp.xcodeproj
  scheme: MyApp
  destination: platform=macOS
  action: test
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
SwiftDocOrg/swift-doc,"$ brew install swiftdocorg/formulae/swift-doc

$ brew upgrade swift-doc

$ brew uninstall swift-doc
$ brew untap swiftdocorg/formulae
$ brew install swiftdocorg/formulae/swift-doc

$ docker pull swiftdoc/swift-doc:latest
$ docker run -it swiftdoc/swift-doc

$ git clone https://github.com/SwiftDocOrg/swift-doc
$ cd swift-doc
$ make install

$ apt-get update
$ apt-get install -y libxml2-dev graphviz

$ swift doc generate path/to/SwiftProject --module-name SwiftProject
$ tree .build/documentation
$ documentation/
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Home
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 (...)
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 _Footer.md
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 _Sidebar.md

$ swift doc generate path/to/SwiftProject/Sources --module-name SwiftProject --output Documentation --format html
$ Documentation/
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 (...)
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 index.html

$ git clone https://github.com/SwiftDocOrg/SwiftSemantics.git

$ swift run swift-doc coverage SwiftSemantics/Sources --output ""dcov.json""
$ cat dcov.json | jq "".data.totals""
{
  ""count"": 207,
  ""documented"": 199,
  ""percent"": 96.1352657004831
}

$ cat dcov.json | jq "".data.symbols[] | select(.documented == false)""
{
  ""file"": ""SwiftSemantics/Supporting Types/GenericRequirement.swift"",
  ""line"": 67,
  ""column"": 6,
  ""name"": ""GenericRequirement.init?(_:)"",
  ""type"": ""Initializer"",
  ""documented"": false
}
...

$ swift run swift-doc diagram Alamofire/Source > Alamofire.gv
$ head Alamofire.gv
digraph Anonymous {
  ""Session"" [shape=box];
  ""NetworkReachabilityManager"" [shape=box];
  ""URLEncodedFormEncoder"" [shape=box,peripheries=2];
  ""ServerTrustManager"" [shape=box];
  ""MultipartFormData"" [shape=box];

  subgraph cluster_Request {
    ""DataRequest"" [shape=box];
    ""Request"" [shape=box];

$ dot -T svg Alamofire.gv > Alamofire.svg

name: Documentation

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Generate Documentation
        uses: SwiftDocOrg/swift-doc@master
        with:
          inputs: ""Sources""
          module-name: MyLibrary
          output: ""Documentation""
      - name: Upload Documentation to Wiki
        uses: SwiftDocOrg/github-wiki-publish-action@v1
        with:
          path: ""Documentation""
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

$ cd .node
$ npm install

$ npm run watch

$ git add Assets Sources/swift-doc/Generated
$ git commit
",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
slashmo/install-swift,"- name: Install Swift
  uses: slashmo/install-swift@v0.1.0
  with:
    version: 5.5

- name: Run Tests
  run: swift test # <-- uses Swift 5.5

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        swift: [5.5, swift-DEVELOPMENT-SNAPSHOT-2021-11-12-a, swift-5.6-DEVELOPMENT-SNAPSHOT-2022-01-09-a]
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest]
        fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Swift
      uses: slashmo/install-swift@v0.1.0
      with:
        version: ${{ matrix.swift }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run Tests
      run: swift test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
AckeeCZ/load-xcode-version,"uses: AckeeCZ/load-xcode-version@1.0

uses: AckeeCZ/load-xcode-version@1.0
with:
    xcode_version_location: 'xcode_version'
    autoselect_xcode: 'false'
",0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
yanglbme/gitee-pages-action,"name: Sync\r
\r
on:\r
  push:\r
    branches: [main]\r
  workflow_dispatch:\r
\r
jobs:\r
  build:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Sync to Gitee\r
        uses: wearerequired/git-mirror-action@master\r
        env:\r
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}\r
        with:\r
          source-repo: git@github.com:doocs/leetcode.git\r
          destination-repo: git@gitee.com:Doocs/leetcode.git\r
\r
      - name: Build Gitee Pages\r
        uses: yanglbme/gitee-pages-action@main\r
        with:\r
          gitee-username: yanglbme\r
          gitee-password: ${{ secrets.GITEE_PASSWORD }}\r
          gitee-repo: doocs/leetcode\r
          branch: main\r

on:\r
  push:\r
    branches: [main, master]\r

Run yanglbme/gitee-pages-action@main\r
  with:\r
    gitee-username: yanglbme\r
    gitee-password: ***\r
    gitee-repo: doocs/leetcode\r
    branch: main\r
    https: true\r
/usr/bin/docker run --name e28490f27de0ee43bb49109a40cea0e43202d2_d4911a --label e28490 --workdir /github/workspace --rm -e INPUT_GITEE-USERNAME -e INPUT_GITEE*** INPUT_GITEE-REPO -e INPUT_BRANCH -e INPUT_DIRECTORY -e INPUT_HTTPS -e HOME -e GITHUB_JOB -e GITHUB_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_REPOSITORY_OWNER -e GITHUB_RUN_ID -e GITHUB_RUN_NUMBER -e GITHUB_RETENTION_DAYS -e GITHUB_RUN_ATTEMPT -e GITHUB_ACTOR -e GITHUB_WORKFLOW -e GITHUB_HEAD_REF -e GITHUB_BASE_REF -e GITHUB_EVENT_NAME -e GITHUB_SERVER_URL -e GITHUB_API_URL -e GITHUB_GRAPHQL_URL -e GITHUB_REF_NAME -e GITHUB_REF_PROTECTED -e GITHUB_REF_TYPE -e GITHUB_WORKSPACE -e GITHUB_ACTION -e GITHUB_EVENT_PATH -e GITHUB_ACTION_REPOSITORY -e GITHUB_ACTION_REF -e GITHUB_PATH -e GITHUB_ENV -e RUNNER_OS -e RUNNER_ARCH -e RUNNER_NAME -e RUNNER_TOOL_CACHE -e RUNNER_TEMP -e RUNNER_WORKSPACE -e ACTIONS_RUNTIME_URL -e ACTIONS_RUNTIME_TOKEN -e ACTIONS_CACHE_URL -e GITHUB_ACTIONS=true -e CI=true -v ""/var/run/docker.sock"":""/var/run/docker.sock"" -v ""/home/runner/work/_temp/_github_home"":""/github/home"" -v ""/home/runner/work/_temp/_github_workflow"":""/github/workflow"" -v ""/home/runner/work/_temp/_runner_file_commands"":""/github/file_commands"" -v ""/home/runner/work/leetcode/leetcode"":""/github/workspace"" e28490:f27de0ee43bb49109a40cea0e43202d2\r
[2021-11-27 20:16:30] Welcome to use Gitee Pages Action \xe2\x9d\xa4\r
\r
\xf0\x9f\x93\x95 Getting Started Guide: https://github.com/marketplace/actions/gitee-pages-action\r
\xf0\x9f\x93\xa3 Maintained by Yang Libin: https://github.com/yanglbme\r
\r
[2021-11-27 20:16:34] Login successfully\r
[2021-11-27 20:16:35] Rebuild Gitee Pages successfully\r
[2021-11-27 20:16:35] Success, thanks for using @yanglbme/gitee-pages-action!\r
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
mdecoleman/pr-branch-name,"- uses: mdecoleman/pr-branch-name2.0.0
  id: vars
  with:
    repo-token: ${{ secrets.GITHUB_TOKEN }}
- run: echo ${{ steps.vars.outputs.branch }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
deep5050/cppcheck-action,"name: cppcheck-action-test
on: [push]

jobs:
  build:
    name: cppcheck-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
          
      - name: cppcheck
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          
        
      - name: publish report    
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: \'main\' # your branch name goes here

name: cppcheck-action
on: [push]

jobs:
  build:
    name: cppcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cppcheck
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          check_library:
          skip_preprocessor:
          enable:
          exclude_check:
          inconclusive:
          inline_suppression:
          force_language:
          force:
          max_ctu_depth:
          platform:
          std:
          output_file:
          other_options:

      - name: publish report    
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: \'main\' # your branch name goes here
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
RafikFarhad/clang-format-github-action,"name: Clang Format Checker
on: [push]
jobs:
  clang-format-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: RafikFarhad/clang-format-github-action@v3
        with:
          sources: ""src/**/*.h,src/**/*.c,test/**/*.c""
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Jimver/cuda-toolkit,"steps:
- uses: Jimver/cuda-toolkit@v0.2.11
  id: cuda-toolkit
  with:
    cuda: \'12.1.0\'

- run: echo ""Installed cuda version is: ${{steps.cuda-toolkit.outputs.cuda}}""

- run: echo ""Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}""

- run: nvcc -V
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
imciner2/run-lcov,"uses: imciner2/run-lcov@v1
with:
  input_directory: build/

uses: imciner2/run-lcov@v1
with:
  input_directory: build/
  exclude: \'""test/*"" ""*/helpers.h""\'

uses: imciner2/run-lcov@v1
with:
  input_directory: \'${{ runner.workspace }}/build\'
  exclude: \'""$GITHUB_WORKSPACE/tests/*"" ""$GITHUB_WORKSPACE/examples/*"" ""/usr/include/x86_64-linux-gnu/*""\'
  output_file: \'${{ runner.workspace }}/build/code_coverage.info\'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
redhat-actions/push-to-registry,"registry: quay.io/my-namespace
image: my-image
tags: v1 v1.0.0

tags: quay.io/my-namespace/my-image:v1 quay.io/my-namespace/my-image:v1.0.0

sha256:66ce924069ec4181725d15aa27f34afbaf082f434f448dc07a42daa3305cdab3

[ ""quay.io/username/spring-image:v1"", ""quay.io/username/spring-image:latest"" ]

name: Build and Push Image
on: [ push ]

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: my-app
        tags: latest ${{ github.sha }}
        containerfiles: |
          ./Containerfile

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/quay-user
        username: quay-user
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Print image url
      run: echo ""Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
christian-korneck/update-container-description-action,"name: Push README to Docker Hub
on: push
jobs:
  PushContainerReadme:
    runs-on: ubuntu-latest
    name: Push README to Docker Hub
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: my-user
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        with:
          destination_container_repo: my-user/my-repo
          provider: dockerhub
          short_description: 'my short description \xf0\x9f\x98\x8a'
          readme_file: 'README.md'

name: Push README to Quay.io
on: push
jobs:
  PushContainerReadme:
    runs-on: ubuntu-latest
    name: Push README to Quay.io
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Quay.io
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_APIKEY: ${{ secrets.APIKEY__QUAY_IO }}
        with:
          destination_container_repo: quay.io/my-user/my-repo
          provider: quay
          readme_file: 'README.md'

name: Push README to demo.goharbor.io
on: push
jobs:
  PushContainerReadme:
    runs-on: ubuntu-latest
    name: Push README to demo.goharbor.io
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: my-user
          DOCKER_PASS: ${{ secrets.HARBOR_PASS }}
        with:
          destination_container_repo: demo.goharbor.io/my-project/my-repo
          provider: harbor2
          readme_file: 'README.md'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0
codespell-project/codespell-problem-matcher,"    - uses: codespell-project/codespell-problem-matcher@v1
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ammaraskar/msvc-problem-matcher,"    - uses: ammaraskar/msvc-problem-matcher@master
    - name: Build Project
      run: msbuild project.sln 
",0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
danielTobon43/PCL-Build-Action,"The following subsystems were built:
--   common
--   kdtree
--   octree
--   search
--   geometry
--   io
--   visualization
--   sample_consensus
--   filters
--   2d
--   features
--   ml
--   segmentation
--   surface
--   registration
--   keypoints
--   tracking
--   recognition
--   stereo
--   apps
--   benchmarks: Disabled by default
--   outofcore
--   examples: Code examples are disabled by default.
--   people
--   simulation
--   global_tests: Disabled by default
--   tools

steps:
    - name: Clone repository
      uses: actions/checkout@v3
      
    - name: PCL Build Action
      uses: danielTobon43/PCL-Build-Action@v1

steps:
    - name: Clone repository
      uses: actions/checkout@v3
      
    - name: PCL Build Action
      uses: danielTobon43/PCL-Build-Action@v1
      with:
        build_type: Release (Release, Debug, RelWithDebInfo, etc.)

target_compile_options(${PROJECT_NAME} PRIVATE -Wno-cpp
    -mmmx
    -msse
    -msse2
    -msse3
    -mssse3
    -msse4.2
    -msse4.1
    -mno-sse4a
    -mno-avx
    -mno-avx2
    -mno-fma
    -mno-fma4
    -mno-f16c
    -mno-xop
    -mno-bmi
    -mno-bmi2
    -mrdrnd
    -mno-3dnow
    -mlzcnt
    -mfsgsbase
    -mpclmul
)
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
petarpetrovt/setup-sde,"- name: Setup SDE binaries
  uses: petarpetrovt/setup-sde@v2.2

- name: Setup SDE binaries
  uses: petarpetrovt/setup-sde@v2.2
  with:
    environmentVariableName: MY_CUSTOM_NAME # default value is `SDE_PATH`
    sdeVersion: 9.24.0 # possible values: 9.24.0 (default), 9.14.0, 9.7.0, 9.0.0, 8.69.1
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
AlbertHernandez/branch-name-action,"name: Branch Name
on:
  pull_request:
    types: [opened]
jobs:
  branch_name:
    runs-on: ubuntu-latest
    name: Branch Name
    steps:
      - uses: AlbertHernandez/branch-name-action@v1
        with:
          branch_pattern: \'feature|bug|chore|hotfix\'
          comment_for_invalid_branch_name: \'Ups! This branch name is not following the standards! You can see them here: https://github.com/AlbertHernandez\'
          fail_if_invalid_branch_name: \'true\'
          ignore_branch_pattern: \'master|beta\'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lucacome/docker-image-update-checker,"name: Check docker image

on:
  schedule:
    - cron:  \'0 4 * * *\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:1.21.0
          image: user/app:latest

      - name: Check result
        run: echo ""Needs updating: ${{ steps.check.outputs.needs-updating }}""


name: Check docker image

on:
  schedule:
    - cron:  \'0 4 * * *\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:1.21.0
          image: user/app:latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: user/app:latest
        if: steps.check.outputs.needs-updating == \'true\'

name: Check docker image for multiple platforms

on:
  schedule:
    - cron:  \'0 4 * * *\'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needs-updating: ${{ steps.check.outputs.needs-updating }}
    steps:
      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:1.21.0
          image: user/app:latest
          platforms: linux/amd64,linux/arm64

build:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.needs-updating == \'true\'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: user/app:latest
          platforms: linux/amd64,linux/arm64

name: Check docker image

on:
  schedule:
    - cron:  \'0 4 * * *\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:1.21.0
          image: user/app:latest
        env:
          DEBUG: true

name: Check docker image

on:
  schedule:
    - cron:  \'0 4 * * *\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check if update available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: nginx:1.21.0
          image: user/app:latest
        env:
          DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
eunchurn/action-publish,"- uses: eunchurn/action-publish@v1.1.1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    BRANCH_NAME: \'\' #optional defaults to master
    USER_NAME: \'\' #optional defaults to ""Automated publisher""
    USER_EMAIL: \'\' #optional defaults to ""actions@users.noreply.github.com""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
at-wat/setup-gh-pr-comment,"jobs:
  example:
    steps:
      - uses: at-wat/setup-gh-pr-comment@v0
      - run: gh-pr-comment ""title"" ""message""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jsdaniell/create-json,"{
    ""name"":""jsdaniell"",
    ""password"":""mypass""
}

{
    ""name"":""jsdaniell"",
    ""password"":""mypass""
}

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ""credentials.json""
        json: ${{ secrets.MY_JSON }}

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ""new-json-file.json""
        json: \'{""name"":""jsdaniell"", ""password"":""mypass""}\'

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ""credentials.json""
        json: ${{ secrets.CREDENTIALS_JSON }}
        dir: \'src/\'

    - name: create-json
      id: create-json-1 # First ID
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ""credentials.json""
        json: ${{ secrets.CREDENTIALS_JSON }}
        dir: \'src/\'
    - name: create-json
      id: create-json-2  # Second ID
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ""other.json""
        json: \'{""name"":""jsdaniell"", ""password"":""mypass""}\'
        dir: \'src/\'

name: Heroku CI - CD

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: \'1.14.6\'
      - run: cd src && go mod vendor
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: ""devdatatools-firebase-adminsdk.json""
          json: ${{ secrets.CREDENTIALS_JSON }}
          dir: ""src/""
      - run: git config --global user.email ""jose.daniell@outlook.com"" && git config --global user.name ""jsdaniell"" && git add . && git add --force src/devdatatools-firebase-adminsdk.json && git status && git commit -a -m ""Deploy Heroku Commit with the Credentials JSON created!""
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ""dev-data-tools-api-golang""
          heroku_email: ""jose.daniell@outlook.com""
          appdir: ""src""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
mfinelli/setup-imagemagick,"steps:
  - uses: mfinelli/setup-imagemagick@v2
  - run: magick input.jpg -resize 100x100 output.jpg

  - run: sudo apt-get install -y libfuse2
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
fudan-mse/latex-action,"- uses: xu-cheng/latex-action@v2
  with:
    root_file: |
      file1.tex
      file2.tex

name: Build LaTeX document
on: [push]
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: main.tex

- uses: xu-cheng/latex-action@v2
  with:
    root_file: main.tex
    latexmk_use_xelatex: true

- uses: xu-cheng/latex-action@v2
  with:
    root_file: main.tex
    latexmk_use_lualatex: true

- uses: xu-cheng/latex-action@v2
  with:
    root_file: main.tex
    latexmk_shell_escape: true
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
yuezk/publish-ppa-package,"gpg --output private.pgp --armor --export-secret-key <KEY_ID or EMAIL>

name: Publish PPA
uses: yuezk/publish-ppa-package@main
with:
    repository: \'ppa:yuezk/globalprotect-openconnect\'
    gpg_private_key: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
    gpg_passphrase: ${{ secrets.PPA_GPG_PASSPHRASE }}
    pkgdir: \'${{ github.workspace }}/artifacts/deb-build/globalprotect-openconnect*/\'
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
yuezk/publish-obs-package,"name: Publish OBS package
uses: yuezk/publish-obs-package@main
with:
    project: yuezk
    package: globalprotect-openconnect
    username: yuezk
    password: ${{ secrets.OBS_PASSWORD }}
    files: ./artifacts/obs/*
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
ZedThree/clang-tidy-review,"name: clang-tidy-review

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3


    - uses: ZedThree/clang-tidy-review@v0.12.0
      id: review

    - uses: ZedThree/clang-tidy-review/upload@v0.12.0
      id: upload-review

    - if: steps.review.outputs.total_comments > 0
      run: exit 1

name: clang-tidy-review
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: ZedThree/clang-tidy-review@v0.12.0
      id: review
      with:
        apt_packages: liblapack-dev
        cmake_command: cmake . -DCMAKE_EXPORT_COMPILE_COMMANDS=on

name: clang-tidy-review
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: my-container

    steps:
    - uses: actions/checkout@v3

    - name: Set base_dir
      run: echo ""base_dir=$(pwd)"" >> $GITHUB_ENV

    - uses: ZedThree/clang-tidy-review@v0.12.0
      id: review
      with:
        base_dir: ${{ env.base_dir }}

name: clang-tidy-review

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3


    - uses: ZedThree/clang-tidy-review@v0.12.0
      with:
        split_workflow: true

    - uses: ZedThree/clang-tidy-review/upload@v0.12.0

name: Post clang-tidy review comments

on:
  workflow_run:
    workflows: [""clang-tidy-review""]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: ZedThree/clang-tidy-review/post@v0.12.0
        with:
          lgtm_comment_body: \'\'
          annotations: false
          max_comments: 10

.
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 action.yml       # The `review` Action
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Dockerfile
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 post
    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 action.yml   # The `post` Action
    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Dockerfile
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 clang_tidy_review      # Common python package
        \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 clang_tidy_review
            \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 __init__.py
            \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 post.py        # Entry point for `post`
            \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 review.py      # Entry point for `review`
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
fregante/release-with-changelog,"       - name: Create release
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         run: gh release create ""$GITHUB_REF_NAME"" # GITHUB_REF_NAME is the tag name in `on.push.tags` workflows

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - uses: fregante/release-with-changelog@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: fregante/release-with-changelog@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        exclude: \'^Meta\'
        commit-template: \'- {title} \xe2\x86\x90 {hash}\'
        template: |

          {commits}

          {range}

          \xe2\x9d\xa4

{commits}

{range}

npm install release -g
for tag in $(git tag); do
\tgit checkout $tag && release;
done
git checkout origin/master
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
loopwerk/tag-changelog,"name: Create Release

on:
  push:
    tags:
      - \'*\'

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore

      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changes }}

- name: Create changelog text
  uses: loopwerk/tag-changelog@v1
  with:
    token: ${{ secrets.GITHUB_TOKEN }}
    config_file: .github/tag-changelog-config.js

module.exports = {
  types: [
    { types: [""feat"", ""feature""], label: ""\xf0\x9f\x8e\x89 New Features"" },
    { types: [""fix"", ""bugfix""], label: ""\xf0\x9f\x90\x9b Bugfixes"" },
    { types: [""improvements"", ""enhancement""], label: ""\xf0\x9f\x94\xa8 Improvements"" },
    { types: [""perf""], label: ""\xf0\x9f\x8f\x8e\xef\xb8\x8f Performance Improvements"" },
    { types: [""build"", ""ci""], label: ""\xf0\x9f\x8f\x97\xef\xb8\x8f Build System"" },
    { types: [""refactor""], label: ""\xf0\x9f\xaa\x9a Refactors"" },
    { types: [""doc"", ""docs""], label: ""\xf0\x9f\x93\x9a Documentation Changes"" },
    { types: [""test"", ""tests""], label: ""\xf0\x9f\x94\x8d Tests"" },
    { types: [""style""], label: ""\xf0\x9f\x92\x85 Code Style Changes"" },
    { types: [""chore""], label: ""\xf0\x9f\xa7\xb9 Chores"" },
    { types: [""other""], label: ""Other Changes"" },
  ],

  excludeTypes: [""other""],

  renderTypeSection: function (label, commits) {
    let text = `\
`;

    commits.forEach((commit) => {
      text += `- ${commit.subject}\
`;
    });

    return text;
  },

  renderChangelog: function (release, changes) {
    const now = new Date();
    return `# ${release} - ${now.toISOString().substr(0, 10)}\
` + changes + ""\
\
"";
  },
};
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
uesteibar/reviewer-lottery,"groups:
  - name: devs # name of the group
    reviewers: 2 # how many reviewers do you want to assign?
    internal_reviewers: 1 # how many reviewers do you want to assign when the PR author belongs to this group?
    usernames: # github usernames of the reviewers
      - uesteibar
      - tebs
      - rudeayelo
      - marciobarrios

  - name: qas # you can have multiple groups, it will evaluate them separately
    reviewers: 1
    usernames:
      - some_user
      - someoneelse

name: ""Reviewer lottery""
on:
  pull_request_target:
    types: [opened, ready_for_review, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: uesteibar/reviewer-lottery@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
rjstone/discord-webhook-notify,"- name: Test Success
    uses: rjstone/discord-webhook-notify@v1
    if: success()
    with:
        severity: info
        details: Test Succeeded!
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
- name: Test Failure
    uses: rjstone/discord-webhook-notify@v1
    if: failure()
    with:
        severity: error
        details: Test Failed!
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
- name: Test Cancelled
    uses: rjstone/discord-webhook-notify@v1
    if: cancelled()
    with:
        severity: warn
        details: Test Cancelled!
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

- name: Test Info
    uses: rjstone/discord-webhook-notify@v1
    with:
        severity: info
        details: Test succeeded.
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
- name: Test Warn
    uses: rjstone/discord-webhook-notify@v1
    with:
        severity: warn
        details: Test warning.
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
- name: Test Error
    uses: rjstone/discord-webhook-notify@v1
    with:
        severity: error
        details: Test error.
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

- name: Test Custom
    uses: rjstone/discord-webhook-notify@v1
    with:
        severity: info
        username: CustomUsername
        color: \'#ff00aa\'
        avatarUrl: https://github.githubassets.com/images/modules/logos_page/Octocat.png
        description: This is a custom description.
        details: \'Custom details: Somebody set up us the bomb.\'
        footer: This is a footer.
        text: This is where text goes.
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
",0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
fastify/github-action-merge-dependabot,"Error: Resource not accessible by integration

name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

  automerge:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3

permissions:
  pull-requests: write
  contents: write

steps:
  - uses: fastify/github-action-merge-dependabot@v3
    with:
      exclude: \'react,fastify\'

permissions:
  pull-requests: write
steps:
  - uses: fastify/github-action-merge-dependabot@v3
    with:
      approve-only: true

name: automerge

on:
  workflow_dispatch:
    inputs:
      pr-number:
        required: true

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          pr-number: ${{ github.event.inputs.pr-number }}

curl -X POST \\
  -H ""Accept: application/vnd.github.v3+json"" \\
  -H ""Authorization: token {token}"" \\
  https://api.github.com/repos/{owner}/{reponame}/actions/workflows/{workflow}/dispatches \\
  -d \'{""ref"":""{ref}"", ""inputs"":{ ""pr-number"": ""{number}""}}\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

  automerge:
    needs: build
    runs-on: ubuntu-latest
+    permissions:
+      pull-requests: write
+      contents: write
    steps:
-     - uses: fastify/github-action-merge-dependabot@v2.1.1
+     - uses: fastify/github-action-merge-dependabot@v3
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
pozetroninc/github-action-get-latest-release,"name: Build Docker Images
on: [push, repository_dispatch]

jobs:
  build:
    name: RedisTimeSeries
    runs-on: ubuntu-latest
    steps:
      - id: keydb
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: JohnSully
          repo: KeyDB
          excludes: prerelease, draft
      - id: timeseries
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: RedisTimeSeries/RedisTimeSeries
      - uses: actions/checkout@v3
      - uses: docker/build-push-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: pozetroninc/keydb-timeseries
          dockerfile: timeseries.dockerfile
          build_args: KEY_DB_VERSION=${{ steps.keydb.outputs.release }}, REDIS_TIME_SERIES_VERSION=${{ steps.timeseries.outputs.release }}
          tags: latest, ${{ steps.keydb.outputs.release }}_${{ steps.timeseries.outputs.release }}


with:
  repository: ${{ github.repository }}

with:
  token: ${{ secrets.GITHUB_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
JKarwatka/validate-yaml-schema-action,"name: Validate YAML Schema

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate YAML Schema
      uses: ansible/ansible-lint-action@master
      with:
        files-to-validate: [
          {
            path: path/to/yaml/file/or/directory
            schema: path/to/yaml/schema
          }
        ]
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
manyuanrong/setup-ossutil,"steps:
  - uses: actions/checkout@master
  - uses: manyuanrong/setup-ossutil@v2.0
    with:
      endpoint: ""oss.aliyuncs.com""
      access-key-id: ""your_key_id""
      access-key-secret: ""your_key_secret""
      sts-token: ""sts_token""
  - run: ossutil cp -rf test.txt oss://bucket/path
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
knowsuchagency/poetry-install,"...
- uses: actions/checkout@v1
- uses: actions/setup-python@v1
- uses: knowsuchagency/poetry-install@v1
  env:
    POETRY_VIRTUALENVS_CREATE: false

...
- uses: actions/checkout@v1
- uses: actions/setup-python@v1
- run: |
    pip install -U pip
    pip install poetry
    poetry install
  env:
    POETRY_VIRTUALENVS_CREATE: false
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jaumann/github-bumpversion-action,"name: Bump version
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        uses: jaumann/github-bumpversion-action@v0.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
syphar/restore-pip-download-cache,"- uses: syphar/restore-pip-download-cache@v1

name: CI

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - uses: syphar/restore-pip-download-cache@v1

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Test
      run: py.test

**/requirements*.txt
**/requirements/*.txt
**/Pipfile.lock
**/poetry.lock
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gi0baro/setup-poetry-bin,"- name: Install Poetry
  uses: gi0baro/setup-poetry-bin@v1

- name: Install and configure Poetry
  uses: gi0baro/setup-poetry-bin@v1
  with:
    virtualenvs-create: true
    virtualenvs-in-project: false
    virtualenvs-path: ~/my-custom-path

virtualenvs-create: true
virtualenvs-in-project: false
virtualenvs-path: {cache-dir}/virtualenvs

name: test

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Poetry
        uses: gi0baro/setup-poetry-bin@v1
        with:
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          poetry run pytest tests
          poetry run coverage report
",1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
fauguste/auto-cancellation-running-action,"name: auto cancellation running job
on: pull_request

jobs:
  cancel:
    name: auto-cancellation-running-action
    runs-on: ubuntu-latest
    steps:
      - uses: fauguste/auto-cancellation-running-action@0.1.4

npm run package
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
TreTuna/sync-branches,"name: Sync
on:
  push:
    branches:
      - main

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    name: Syncing branches
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Opening pull request
        id: pull
        uses: tretuna/sync-branches@1.4.0
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          FROM_BRANCH: ""main""
          TO_BRANCH: ""develop""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
fennecdjay/gwion-action,"  - name: Build Gwion
    uses: fennecdjay/gwion-action@v1

  - name: Build Gwion
    uses: fennecdjay/gwion-action@v1
    with:
      dir: .
      run: true
    env:
      USE_DEBUG: 1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
andreacomo/maven-gav-extractor,"name: Sample workflow

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Should extract GAV
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: temurin
    - name: Extract GAV
      id: extract
      uses: andreacomo/maven-gav-extractor@v2
    - name: Log GAV
      run: |
        echo ${{ steps.extract.outputs.group-id }}
        echo ${{ steps.extract.outputs.artifact-id }}
        echo ${{ steps.extract.outputs.version }}
        echo ${{ steps.extract.outputs.name }}
      shell: bash
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
danielealbano/lcov-action,"uses: danielealbano/lcov-action@v3
with:
  gcov_tool: /usr/bin/gcov-7

uses: danielealbano/lcov-action@v3
with:
  gcov_tool: /usr/bin/gcov-8

uses: danielealbano/lcov-action@v3

uses: danielealbano/lcov-action@v3
with:
  remove_patterns: 3rdparties,benchmarks

- name: Tests - Unit Tests
  working-directory: ${{github.workspace}}/build
  shell: bash
  run: cd tests/unit_tests && sudo ./cachegrand-tests --order lex

- name: Code Coverage - Generation
  uses: danielealbano/lcov-action@v3
  with:
    gcov_path: /usr/bin/gcov-9
    remove_patterns: 3rdparty,tests

- uses: codecov/codecov-action@v3
  with:
    files: ${{github.workspace}}/coverage.info
    flags: unittests # optional
    name: cachegrand-server
    fail_ci_if_error: false
    verbose: false
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
proudust/gh-describe,"- name: Git describe
  id: ghd
  uses: proudust/gh-describe@v1

- name: Git describe
  id: ghd
  uses: proudust/gh-describe@v1
- name: Check outputs
  run: |
    echo ""describe: ${{ steps.ghd.outputs.describe }}""
    echo ""tag     : ${{ steps.ghd.outputs.tag }}""
    echo ""distance: ${{ steps.ghd.outputs.distance }}""
    echo ""sha     : ${{ steps.ghd.outputs.sha }}""

gh extensions install proudust/gh-describe
gh describe

deno run --allow-run https://deno.land/x/gh_describe@v1.5.4/main.ts

deno install -n gh-describe --allow-run https://deno.land/x/gh_describe@v1.5.4/main.ts
gh-describe

gh-describe-x86_64-pc-windows-msvc.exe

./gh-describe-aarch64-apple-darwin
./gh-describe-x86_64-apple-darwin
./gh-describe-x86_64-unknown-linux-gnu

$ gh describe --help
  Usage:   gh-describe [commit-ish]
  Version: v1.5.4

  Description:

    Emulate `git describe --tags` for shallow clone repositories.

  Options:

    -h, --help     - Show this help.
    -V, --version  - Show the version number for this program.

  Options like `git describe`:

    --match       <pattern...>  - Only consider tags matching the given glob pattern.
    --no-match                  - Clear and reset the list of match patterns.
    --exclude     <pattern...>  - Do not consider tags matching the given glob pattern.
    --no-exclude                - Clear and reset the list of exclude patterns.

  Options for `gh`:

    -R, --repo  <repo>  - Target repository. Format: OWNER/REPO

  Other options:

    --default  <tag>      - If the name is not found, use this value.
    --runtime  <runtime>  - If installed by `gh extension install`, can specify the execution runtime.  (Values: ""deno"", ""node"")
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
harupy/auto-labeling,"<!-- pull_request_template.md -->

What kind of change does this PR introduce?

- [x] `bug-fix`
- [ ] `new-feature`
- [ ] `enhancement`

<!-- pull_request_template.md -->

What kind of change does this PR introduce?

- [ ] `bug-fix`
- [ ] `new-feature`
- [x] `enhancement`

name: Auto Labeling

on:
  issues:
    types:
      - opened
      - edited

on:
  pull_request:
    types:
      - opened
      - edited

on:
  schedule:
    - cron: \'*/10 * * * *\'

jobs:
  labeling:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: harupy/auto-labeling@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          label-pattern: \'- \\[(.*?)\\] ?`(.+?)`\' # matches \'- [x] `label`\'

inputs:
  github-token:
    description: \'GitHub token\'
    required: true

  label-pattern:
    description: >
      Pattern (regular expression) to extract label states and names (e.g. \'- \\[(.*?)\\] ?`(.+?)`\').
    required: true

  offset:
    description: >
      Only issues and pull requests updated at or after this offset (from the current time) will be labeled.
      Required only when running this action on the schedule event.
    required: false
    default: \'1m\' # means one month

  quiet:
    description: >
      Suppress logging output. Must be either ""true"" or ""false""
    required: false
    default: \'false\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
arma-actions/bom-check,"name: CI

on:
  push:
    branches:
      - master
  pull_request: ~

jobs:
  test-bom-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: arma-actions/bom-check@v1
        name: Check for BOM
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
arma-actions/workshop-upload,"on:
  push:
    tags:
    - 'v*.*.*'

jobs:
  build_addon:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set VERSION env
      run: echo VERSION=${GITHUB_REF:11} >> $GITHUB_ENV
    - name: Build addon with HEMTT
      uses: 16AAModTeam/hemtt@stable
      with:
        command: 'build --release'
    - uses: arma-actions/workshop-upload@v1
      with:
        appId: '107410'    # default
        itemId: '1643238133' # Id of item to update
        contentPath: 'releases/${{ env.VERSION }}/@armaforces_mods'
        changelog: 'Content of change notes'
      env:
        STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
        STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
minddocdev/docker-publish-action,"name: Publish Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: minddocdev/docker-publish-action@master
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

with:
  name: owner/repository/image
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  registry: docker.pkg.github.com

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  dockerfile: MyDockerFileName

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  workdir: mySubDirectory

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  context: myContextDirectory

- name: Publish to Registry
  uses: minddocdev/docker-publish-action@master
  env:
    MY_FIRST: variableContent
    MY_SECOND: variableContent
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildargs: MY_FIRST,MY_SECOND

name: Publish to Registry
on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: minddocdev/docker-publish-action@master
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        cache: ${{ github.event_name != 'schedule' }}

- name: Publish to Registry
  uses: minddocdev/docker-publish-action@master
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    extratags: firsttag,secondtag

docker build .
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
anton-yurchenko/git-release,"- Glob pattern support
- Unit Tests
- Log version

- Exception on margins larger than context of changelog
- Nil pointer exception in \'release\' package

- Refactor JavaScript wrapper

- Wrapper script: allow execution on Windows runners

- Action execution through Git: from Docker to NodeJS

[3.4.0]: https://github.com/anton-yurchenko/git-release/compare/v3.3.0...v3.4.0
[3.3.0]: https://github.com/anton-yurchenko/git-release/releases/tag/v3.3.0

on:
  push:
    tags:
    - ""v[0-9]+.[0-9]+.[0-9]+""

    - name: Release
      uses: docker://antonyurchenko/git-release:v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: build/*.zip

    - name: Release
      uses: anton-yurchenko/git-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: |
            build\\\\darwin-amd64.zip
            build\\\\linux-amd64.zip
            build\\\\windows-amd64.zip
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mathieu-bour/setup-sentry-cli,"- uses: mathieu-bour/setup-sentry-cli@main # WARNING: see the latest stable version instead!

- name: Setup Sentry CLI
  uses: mathieu-bour/setup-sentry-cli@v1
  with:
    version: latest # optional if 'latest'
    url: https://sentry.yourcompany.com # optional if you are using https://sentry.io
    token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
    organization: my-org
    project: my-project
",0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadolint/hadolint-action,"steps:
  - uses: actions/checkout@v3
  - uses: hadolint/hadolint-action@v3.1.0
    with:
      dockerfile: Dockerfile

- name: Update Pull Request
  uses: actions/github-script@v6
  if: github.event_name == 'pull_request'
  with:
    script: |
      const output = `
      \\`\\`\\`
      ${process.env.HADOLINT_RESULTS}
      \\`\\`\\`
      `;

      github.rest.issues.createComment({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
        body: output
      })
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
dieghernan/cff-validator,"on:
  push:
    paths:
      - CITATION.cff
  workflow_dispatch:

name: CITATION.cff
jobs:
  Validate-CITATION-cff:
    runs-on: ubuntu-latest
    name: Validate CITATION.cff
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate CITATION.cff
        uses: dieghernan/cff-validator@v3


  - name: Validate CITATION.cff
    uses: dieghernan/cff-validator@v3
    with:
      citation-path: ""examples/CITATION.cff""


cffr::cff_validate(""CITATION.cff"")
",0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peter-evans/autopep8,"      - name: autopep8
        id: autopep8
        uses: peter-evans/autopep8@v2
        with:
          args: --recursive --in-place --aggressive --aggressive .

      - name: Fail if autopep8 made changes
        if: steps.autopep8.outputs.exit-code == 2
        run: exit 1

name: Format python code
on: push
jobs:
  autopep8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: autopep8
        uses: peter-evans/autopep8@v2
        with:
          args: --recursive --in-place --aggressive --aggressive .
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          reviewers: peter-evans
          branch: autopep8-patches

name: autopep8
on: pull_request
jobs:
  autopep8:
    if: startsWith(github.head_ref, \'autopep8-patches\') == false && github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: autopep8
        id: autopep8
        uses: peter-evans/autopep8@v2
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Set autopep8 branch name
        id: vars
        run: |
          branch-name=""autopep8-patches/${{ github.head_ref }}""
          echo ""branch-name=$branch-name"" >> $GITHUB_OUTPUT
      - name: Create Pull Request
        if: steps.autopep8.outputs.exit-code == 2
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          reviewers: peter-evans
          branch: ${{ steps.vars.outputs.branch-name }}
      - name: Fail if autopep8 made changes
        if: steps.autopep8.outputs.exit-code == 2
        run: exit 1

name: autopep8
on: pull_request
jobs:
  autopep8:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: ${{ github.head_ref }}
      - name: autopep8
        id: autopep8
        uses: peter-evans/autopep8@v2
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Commit autopep8 changes
        if: steps.autopep8.outputs.exit-code == 2
        run: |
          git config --global user.name \'Peter Evans\'
          git config --global user.email \'peter-evans@users.noreply.github.com\'
          git commit -am ""Automated autopep8 fixes""
          git push
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Akryum/release-tag,"name: Create release

on:
  push:
    tags:
      - ""v*"" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # Fetch all tags

      - name: Create Release for Tag
        id: release_tag
        uses: Akryum/release-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
easingthemes/ssh-deploy,"ssh-keygen -m PEM -t rsa -b 4096

  - name: Deploy to Staging server
    uses: easingthemes/ssh-deploy@main
    with:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      ARGS: ""-rlgoDzvc -i""
      SOURCE: ""dist/""
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      REMOTE_USER: ${{ secrets.REMOTE_USER }}
      TARGET: ${{ secrets.REMOTE_TARGET }}
      EXCLUDE: ""/dist/, /node_modules/""
      SCRIPT_BEFORE: |
        whoami
        ls -al
      SCRIPT_AFTER: |
        whoami
        ls -al
        echo $RSYNC_STDOUT

name: Node CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: \'16.x\'
    - name: Install npm dependencies
      run: npm install
    - name: Run build task
      run: npm run build --if-present
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: ""-rlgoDzvc -i --delete""
          SOURCE: ""dist/""
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: ""/dist/, /node_modules/""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
Chocobo1/setup-ccache-action,"- name: Checkout repository
  uses: actions/checkout@v2

- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1

- name: Build C++ program
  run: |
    ./configure
    make

- name: Checkout repository
  uses: actions/checkout@v2
- name: Install dependencies
  run: |
    sudo apt update  # ensure indexes are up-to-date
    sudo apt install \\
      libboost-dev
- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    update_packager_index: false
- name: Build C++ program
  run: |
    cmake -B build ./
    cmake --build build

- name: Checkout repository
  uses: actions/checkout@v2
- name: Install dependencies
  run: |
    sudo apt update  # ensure indexes are up-to-date
    sudo apt install \\
      ccache \\
      libboost-dev
- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    install_ccache: false
    update_packager_index: false
- name: Build C++ program
  run: |
    cmake -B build ./
    ninja -C build

- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    prepend_symlinks_to_path: false
- name: Build C++ program
  run: |
    export PATH=""${{ env.ccache_symlinks_path }}:$PATH""
    cmake -B build ./
    make -C build

- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    ccache_options: |
      max_size=200M
      compression=false

- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    windows_compile_environment: msvc  # this field is required
- name: Build program
  run: |
    cmake `
      -B _build `
      -G ""Ninja"" `
      -DCMAKE_BUILD_TYPE=Release `
      -DCMAKE_CXX_COMPILER_LAUNCHER:FILEPATH=""${{ env.ccache_symlinks_path }}"" `
      .
    cmake --build _build

- name: Setup msys2
  uses: msys2/setup-msys2@v2
  with:
    install: |
      make
      mingw-w64-x86_64-toolchain
- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    windows_compile_environment: msys2  # this field is required
- name: Build program
  shell: msys2 {0}
  run: |
    cmake \\
      -B _build \\
      -G ""MSYS Makefiles"" \\
      .
    cmake --build _build

- name: Setup ccache
  uses: Chocobo1/setup-ccache-action@v1
  with:
    remove_stale_cache: false

permissions: {}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
BirthdayResearch/oss-governance-bot,"
on:
  pull_request_target:
    types: [ synchronize, opened, labeled, unlabeled ]
  issues:
    types: [ opened, labeled, unlabeled ]
  issue_comment:
    types: [ created ]

permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write
  checks: write

jobs:
  governance:
    name: Governance
    runs-on: ubuntu-latest
    steps:
      - uses: BirthdayResearch/oss-governance-bot@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}} # optional, default to \'${{ github.token }}\'
          config-path: .github/governance.yml # optional, default to \'.github/governance.yml\'


version: v1

issue:
  labels:
    - prefix: triage
      list: [ ""accepted"" ]
      multiple: false
      author_association:
        collaborator: true
        member: true
        owner: true
      needs:
        comment: |
          @$AUTHOR: This issue is currently awaiting triage.

          The triage/accepted label can be added by org members by writing /triage accepted in a comment.

    - prefix: kind
      list: [ ""feature"", ""bug"", ""question"" ]
      multiple: false
      needs:
        comment: |
          @$AUTHOR: There are no \'kind\' label on this PR. You need a \'kind\' label to generate the release note automatically.

          * `/kind feature`
          * `/kind bug`
          * `/kind question`

    - prefix: area
      list: [ ""ui-ux"", ""semantics"", ""translation"", ""security"" ]
      multiple: true
      needs:
        comment: |
          @$AUTHOR: There are no area labels on this issue. Adding an appropriate label will greatly expedite the process for us. You can add as many area as you see fit. **If you are unsure what to do you can ignore this!**

          * `/area ui-ux`
          * `/area semantics`
          * `/area translation`
          * `/area security`

    - prefix: os
      list: [ ""mac"", ""win"", ""linux"" ]
      multiple: true

    - prefix: priority
      multiple: false
      list: [ ""urgent-now"", ""important-soon"" ]
      author_association:
        collaborator: true
        member: true
        owner: true

  chat_ops:
    - cmd: /close
      type: close
      author_association:
        author: true
        collaborator: true
        member: true
        owner: true

    - cmd: /cc
      type: none

    - cmd: /assign
      type: assign
      author_association:
        collaborator: true
        member: true
        owner: true

    - cmd: /comment issue
      type: comment
      comment: |
        @$ISSUE_AUTHOR: Hey this is comment issue example for issue/pr author.
        @$AUTHOR: Hey this is comment issue example for sender author.

pull_request:
  labels:
    - prefix: kind
      multiple: false
      list: [ ""feature"", ""fix"", ""chore"", ""docs"", ""refactor"", ""dependencies"" ]
      needs:
        comment: |
          @$AUTHOR: There are no \'kind\' label on this PR. You need a \'kind\' label to generate the release automatically.

          * `/kind feature`
          * `/kind fix`
          * `/kind chore`
          * `/kind docs`
          * `/kind refactor`
          * `/kind dependencies`
        status:
          context: ""Kind Label""
          description:
            success: Ready for review & merge.
            failure: Missing kind label to generate release automatically.

    - prefix: priority
      multiple: false
      list: [ ""urgent-now"", ""important-soon"" ]
      author_association:
        collaborator: true
        member: true
        owner: true

  chat_ops:
    - cmd: /close
      type: close
      author_association:
        author: true
        collaborator: true
        member: true
        owner: true

    - cmd: /cc
      type: none # does not trigger anything

    - cmd: /request
      type: review
      author_association:
        collaborator: true
        member: true
        owner: true

    - cmd: /comment pr
      type: comment
      comment: |
        @$AUTHOR: Hey this is comment pr example.

version: v1

issue:
  labels:
  chat_ops:

pull_request:
  labels:
  chat_ops:

version: v1

issue:
  labels:
    - prefix: triage
      list: [ ""accepted"" ]
      author_association:
        author: false
        collaborator: true
        contributor: true
        first_timer: false
        first_time_contributor: false
        mannequin: false
        member: true
        none: false
        owner: true

version: v1

pull_request:
  labels:
    - prefix: kind
      multiple: false
      list: [ ""feature"", ""fix"", ""chore"", ""docs"", ""refactor"", ""dependencies"" ]
      needs:
        comment: |
          @$AUTHOR: There are no \'kind\' label on this PR. You need a \'kind\' label to generate the release automatically.

          * `/kind feature`
          * `/kind ...`
        status:
          context: ""Governance/Kind""
          description:
            success: Ready for review & merge.
            failure: Missing kind label to generate release automatically.

version: v1

issue:
  chat_ops:
    - cmd: /close
      type: close

version: v1

pull_request:
  chat_ops:
    - cmd: /request-review
      type: review

version: v1

issue:
  chat_ops:
    - cmd: /assign
      type: assign

version: v1

issue:
  chat_ops:
    - cmd: /cc
      type: none

version: v1

issue:
  chat_ops:
    - cmd: /comment me
      type: comment
      comment: |
        @$ISSUE_AUTHOR: Hey this is comment issue example for issue/pr author.
        @$AUTHOR: Hey this is comment issue example for sender author.

version: v1

issue:
  chat_ops:
    - cmd: /label me
      type: label
      label:
        add: kind/me
        remove: [ \'label/remove\', \'label/that\' ]

version: v1

issue:
  captures:
    - regex: ""- Version: *(.+)""
      github_release: true # validate against github_release
      label: \'version/$CAPTURED\'

npm i # npm 7 is used
npm run all # to build/check/lint/package
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions-cool/maintain-one-comment,"name: Maintain One Comment

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [assigned, opened, synchronize, edited]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: maintain-comment
        uses: actions-cool/maintain-one-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Hi \xf0\x9f\x98\x80
          emojis: '+1, laugh'
          body-include: '<!-- Created by actions-cool/maintain-one-comment -->'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0
casperdcl/push-dir,"    steps:
      - uses: actions/checkout@v3
      - run: build_site_command --output-dir static_site
      - uses: casperdcl/push-dir@v1
        with:
          message: update static site
          branch: gh-pages
          dir: static_site
          history: false
          cname: my.domain.com
          nojekyll: true

message:
  description: Commit message
  required: true
branch:
  description: Branch to push to
  required: true
dir:
  description: Directory to push
  default: .
  required: false
force:
  description: Set to ""true"" to force push
  required: false
history:
  description: |
    Set to ""false"" to discard any prior commits on the `branch`
    (Note: ""false"" will override `force` to ""true"")
  default: true
  required: false
cname:
  description: Text to inject into a `CNAME` file
  default: \'\'
  required: false
nojekyll:
  description: Set to ""true"" to add a `.nojekyll` file
  required: false
name:
  description: Git committer name
  required: false
email:
  description: Git committer email
  required: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
influxdata/influxdb-action,"steps:
  - name: Check out repo
    uses: actions/checkout@v2
  - name: Setup InfluxDB
    uses: influxdata/influxdb-action@v3
    with:
      influxdb_version: latest
      influxdb_org: influxdata
      influxdb_user: ci_user
      influxdb_password: password
      influxdb_bucket: dummy

steps:
  - name: Check out repo
    uses: actions/checkout@v2
  - name: Setup InfluxDB
    uses: influxdata/influxdb-action@v3
    with:
      influxdb_version: latest
      influxdb_start: false

steps:
  - name: Check out repo
    uses: actions/checkout@v2
  - name: Setup InfluxDB
    uses: influxdata/influxdb-action@v3
    with:
      influxdb_version: 2.0.7
      influxdb_org: influxdata
      influxdb_user: ci_user
      influxdb_password: password
      influxdb_bucket: dummy
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
cclauss/GitHub-Action-for-pylint,"Usage:  pylint [options] modules_or_packages

  Check that module(s) satisfy a coding standard (and more !).

    pylint --help

  Display this help message and exit.

    pylint --help-msg <msg-id>[,<msg-id>]

  Display help messages about given message identifiers and exit.


Options:
  --version             show program\'s version number and exit
  -h, --help            show this help message and exit
  --long-help           more verbose help.

  Master:
    --rcfile=<file>     Specify a configuration file.
    --init-hook=<code>  Python code to execute, usually for sys.path
                        manipulation such as pygtk.require().
    -E, --errors-only   In error mode, checkers without error messages are
                        disabled and for others, only the ERROR messages are
                        displayed, and no reports are done by default.
    --py3k              In Python 3 porting mode, all checkers will be
                        disabled and only messages emitted by the porting
                        checker will be displayed.
    -v, --verbose       In verbose mode, extra non-checker-related info will
                        be displayed.
    --ignore=<file>[,<file>...]
                        Add files or directories to the blacklist. They should
                        be base names, not paths. [current: CVS]
    --ignore-patterns=<pattern>[,<pattern>...]
                        Add files or directories matching the regex patterns
                        to the blacklist. The regex matches against base
                        names, not paths. [current: none]
    --persistent=<y_or_n>
                        Pickle collected data for later comparisons. [current:
                        yes]
    --load-plugins=<modules>
                        List of plugins (as comma separated values of python
                        modules names) to load, usually to register additional
                        checkers. [current: none]
    -j <n-processes>, --jobs=<n-processes>
                        Use multiple processes to speed up Pylint. Specifying
                        0 will auto-detect the number of processors available
                        to use. [current: 1]
    --limit-inference-results=<number-of-results>
                        Control the amount of potential inferred values when
                        inferring a single object. This can help the
                        performance when dealing with large functions or
                        complex, nested conditions.  [current: 100]
    --extension-pkg-whitelist=<pkg[,pkg]>
                        A comma-separated list of package or module names from
                        where C extensions may be loaded. Extensions are
                        loading into the active Python interpreter and may run
                        arbitrary code. [current: none]
    --suggestion-mode=<yn>
                        When enabled, pylint would attempt to guess common
                        misconfiguration and emit user-friendly hints instead
                        of false-positive error messages. [current: yes]
    --exit-zero         Always return a 0 (non-error) status code, even if
                        lint errors are found. This is primarily useful in
                        continuous integration scripts.

  Commands:
    --help-msg=<msg-id>
                        Display a help message for the given message id and
                        exit. The value may be a comma separated list of
                        message ids.
    --list-msgs         Generate pylint\'s messages.
    --list-conf-levels  Generate pylint\'s confidence levels.
    --full-documentation
                        Generate pylint\'s full documentation.
    --generate-rcfile   Generate a sample configuration file according to the
                        current configuration. You can put other options
                        before this one to get them in the generated
                        configuration.

  Messages control:
    --confidence=<levels>
                        Only show warnings with the listed confidence levels.
                        Leave empty to show all. Valid levels: HIGH,
                        INFERENCE, INFERENCE_FAILURE, UNDEFINED. [current:
                        none]
    -e <msg ids>, --enable=<msg ids>
                        Enable the message, report, category or checker with
                        the given id(s). You can either give multiple
                        identifier separated by comma (,) or put this option
                        multiple time (only on the command line, not in the
                        configuration file where it should appear only once).
                        See also the ""--disable"" option for examples.
    -d <msg ids>, --disable=<msg ids>
                        Disable the message, report, category or checker with
                        the given id(s). You can either give multiple
                        identifiers separated by comma (,) or put this option
                        multiple times (only on the command line, not in the
                        configuration file where it should appear only once).
                        You can also use ""--disable=all"" to disable everything
                        first and then reenable specific checks. For example,
                        if you want to run only the similarities checker, you
                        can use ""--disable=all --enable=similarities"". If you
                        want to run only the classes checker, but have no
                        Warning level messages displayed, use ""--disable=all
                        --enable=classes --disable=W"".

  Reports:
    -f <format>, --output-format=<format>
                        Set the output format. Available formats are text,
                        parseable, colorized, json and msvs (visual studio).
                        You can also give a reporter class, e.g.
                        mypackage.mymodule.MyReporterClass. [current: text]
    -r <y_or_n>, --reports=<y_or_n>
                        Tells whether to display a full report or only the
                        messages. [current: no]
    --evaluation=<python_expression>
                        Python expression which should return a note less than
                        10 (10 is the highest note). You have access to the
                        variables errors warning, statement which respectively
                        contain the number of errors / warnings messages and
                        the total number of statements analyzed. This is used
                        by the global evaluation report (RP0004). [current:
                        10.0 - ((float(5 * error + warning + refactor +
                        convention) / statement) * 10)]
    -s <y_or_n>, --score=<y_or_n>
                        Activate the evaluation score. [current: yes]
    --msg-template=<template>
                        Template used to display messages. This is a python
                        new-style format string used to format the message
                        information. See doc for all details.
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
peter-evans/create-or-update-project-card,"      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: 1

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My second column
          issue-number: 1

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          token: ${{ secrets.PAT }}
          project-location: my-org
          project-name: My project
          column-name: My second column
          issue-number: 1

on:
  issues:
    types: [opened]
jobs:
  createCard:
    runs-on: ubuntu-latest
    steps:
      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column

on:
  pull_request_target:
    types: [opened]
jobs:
  createCard:
    runs-on: ubuntu-latest
    steps:
      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ github.event.number }}

      - name: Create or Update Project Card
        id: coupc
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: 1
      - name: Check output
        run: echo ${{ steps.coupc.outputs.card-id }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
crazy-max/ghaction-container-scan,"name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest

name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          outputs: type=docker,dest=/tmp/image.tar
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          tarball: /tmp/image.tar

name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest
          severity_threshold: HIGH

name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest
          annotations: true

name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest
          dockerfile: ./Dockerfile
      -
        name: Upload SARIF file
        if: ${{ steps.scan.outputs.sarif != '' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and load
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: user/app:latest
      -
        name: Scan for vulnerabilities
        id: scan
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest
          dockerfile: ./Dockerfile
      -
        name: Build multi-platform and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: user/app:latest

permissions:
  contents: read

permissions:
  actions: read
  security-events: write

      -
        name: Remove dotnet
        run: sudo rm -rf /usr/share/dotnet
      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest

      -
        name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: user/app:latest
        env:
          TRIVY_TIMEOUT: 10m

Error: 2021-11-30T09:52:13.115Z\tFATAL\tscan error: unable to initialize a scanner: unable to initialize a docker scanner: failed to parse the image name: could not parse reference: ghcr.io/UserName/myimage:latest

-
  name: Docker meta
  id: meta
  uses: docker/metadata-action@v4
  with:
    images: ghcr.io/${{ github.repository }}
    tags: latest
-
  name: Build and push
  uses: docker/build-push-action@v4
  with:
    context: .
    push: true
    tags: ${{ steps.meta.outputs.tags }}
-
  name: Scan for vulnerabilities
  id: scan
  uses: crazy-max/ghaction-container-scan@v2
  with:
    image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
    dockerfile: ./Dockerfile

-
  name: Sanitize repo slug
  uses: actions/github-script@v6
  id: repo_slug
  with:
    result-encoding: string
    script: return 'ghcr.io/${{ github.repository }}'.toLowerCase()
-
  name: Build and push
  uses: docker/build-push-action@v4
  with:
    context: .
    push: true
    tags: ${{ steps.repo_slug.outputs.result }}:latest
-
  name: Scan for vulnerabilities
  id: scan
  uses: crazy-max/ghaction-container-scan@v2
  with:
    image: ${{ steps.repo_slug.outputs.result }}:latest
    dockerfile: ./Dockerfile
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0
hadialqattan/relies-on,"name: CD

on:
  push:
    tags:
      - ""v*.*.*""

jobs:
  check_ci_status:
    name: Check the CI Workflow\'s Status
    runs-on: ubuntu-latest
    steps:
      - uses: hadialqattan/relies-on@v1.0.0
        with:
          workflow: CI

  deployment:
    name: Deployment job
    needs: check_ci_status
    ...

owner:
  The username of the owner of the repository containing the workflow. [default=currect
  repository owner username]

repository:
  The name of the repository containing the workflow. [default=current repository name]

workflow: The name of the workflow that would be checked.

branch:
  The name of the branch where the workflow runs. [default=repository\'s default branch
  (most likely master or main)]

event: The type of the event that triggers the workflow. [default= ]

exclude_pull_requests: If true pull requests based runs are omitted. [default=true]
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
wemake-services/wemake-python-styleguide,"pip install wemake-python-styleguide

flake8 your_module.py

[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)

.. image:: https://img.shields.io/badge/style-wemake-000000.svg
   :target: https://github.com/wemake-services/wemake-python-styleguide
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
tj-actions/branch-names,"...

    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
        
      - name: Running on the default branch.
        if: steps.branch-name.outputs.is_default == \'true\'
        run: |
          echo ""Running on default: ${{ steps.branch-name.outputs.current_branch }}"" 
      
      - name: Running on a pull request branch.
        if: steps.branch-name.outputs.is_default == \'false\'
        run: |
          echo ""Running on pr: ${{ steps.branch-name.outputs.current_branch }}""
      
      - name: Running on a pull request branch.
        if: steps.branch-name.outputs.is_default == \'false\'
        run: |
          echo ""Base branch: ${{ steps.branch-name.outputs.base_ref_branch }}""
        
      - name: Running on any event
        run: |
          echo ""Default branch: ${{ steps.branch-name.outputs.default_branch }}""

on:
  push:
    branches:
      - main

...
    steps:
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7

      - name: Current branch name
        run: |
          echo ""${{ steps.branch-name.outputs.current_branch }}""

      - name: Running on the default branch.
        if: steps.branch-name.outputs.is_default == \'true\'
        run: |
          echo ""Running on default: ${{ steps.branch-name.outputs.current_branch }}""
      
      - name: Running on the default branch (i.e non tag based branch).
        if: steps.branch-name.outputs.is_tag == \'false\' && steps.branch-name.outputs.is_default == \'true\'
        run: |
          echo ""Running on branch: ${{ steps.branch-name.outputs.current_branch }}""
      
      - name: Get Ref brach name
        run: |
          echo ""${{ steps.branch-name.outputs.ref_branch }}""
      
      - name: Default branch name
        run: |
          echo ""${{ steps.branch-name.outputs.default_branch }}""

on:
  pull_request:
    branches:
      - main

...
    steps:
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7
      
      - name: Current branch name
        run: |
          echo ""${{ steps.branch-name.outputs.current_branch }}""

      - name: Running on a non tag based branch and a PR branch.
        if: steps.branch-name.outputs.is_default == \'false\'
        run: |
          echo ""Running on branch: ${{ steps.branch-name.outputs.current_branch }}""
      
      - name: Running on a pull request (i.e non tag based branch).
        if: steps.branch-name.outputs.is_tag == \'false\' && steps.branch-name.outputs.is_default == \'false\'
        run: |
          echo ""Running on branch: ${{ steps.branch-name.outputs.current_branch }}""
      
      - name: Get Ref branch name
        run: |
          echo ""${{ steps.branch-name.outputs.ref_branch }}""

      - name: Get Head Ref branch name (i.e The current pull request branch)
        run: |
          echo ""${{ steps.branch-name.outputs.head_ref_branch }}""

      - name: Get Base Ref branch name (i.e The target of a pull request.)
        run: |
          echo ""${{ steps.branch-name.outputs.base_ref_branch }}""
      
      - name: Default branch name
        run: |
          echo ""${{ steps.branch-name.outputs.default_branch }}""

on:
  push:
    tags:
      - \'*\'

...
    steps:
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7
        with:
          strip_tag_prefix: v # Optionally strip the leading `v` from the tag.
     
      - name: Running on a tag branch.
        if: steps.branch-name.outputs.is_tag == \'true\'
        run: |
          echo ""Running on: ${{ steps.branch-name.outputs.tag }}""
        
      - name: Get the current tag
        if: steps.branch-name.outputs.is_tag == \'true\'  # Replaces: startsWith(github.ref, \'refs/tags/\')
        run: |
          echo ""${{ steps.branch-name.outputs.tag }}""

on:
  pull_request:
    branches:
      - develop
    
 jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v7
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.branch-names.outputs.head_ref_branch }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
ishworkh/docker-image-artifact-upload,"- name: Upload an image
  uses: ishworkh/container-image-artifact-upload@v1.0.0
  with:
    image: ""test_image:latest""
    retention_days: ""2""

...
jobs:
  build_and_upload:
    - name: Checkout project
      uses: actions/checkout@v2
      
    - name: Build image
      run: |
        docker build -t test_image:latest -<<EOF
        FROM busybox
        RUN touch abc.txt
        EOF

    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v2.0.1
      with:
        image: ""test_image:latest""


...
jobs:
  build_and_upload:
    - name: Checkout project
      uses: actions/checkout@v2
      
    - name: Build image
      run: |
        docker build -t test_image:latest -<<EOF
        FROM busybox
        RUN touch abc.txt
        EOF

    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v2.0.1
      with:
        image: ""test_image:latest""
        retention_days: ""2""


jobs:
  build_and_upload:
    - name: Checkout project
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
  
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: false
        builder: ${{ steps.buildx.outputs.name }}
        tags: ""test_image:latest""
        load: true

    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v2.0.1
      with:
        image: ""test_image:latest""

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
ravsamhq/notify-slack-action,"steps:
  - uses: ravsamhq/notify-slack-action@v2
    if: always()
    with:
      status: ${{ job.status }} # required
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required

steps:
  - uses: ravsamhq/notify-slack-action@v2
    if: always()
    with:
      status: ${{ job.status }}
      token: ${{ secrets.GITHUB_TOKEN }}
      notification_title: ""{workflow} has {status_message}""
      message_format: ""{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>""
      footer: ""Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>""
      notify_when: ""failure""
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

steps:
  - uses: ravsamhq/notify-slack-action@v2
    if: always()
    with:
      status: ${{ job.status }}
      notification_title: ""{workflow} has {status_message}""
      message_format: ""{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>""
      footer: ""Linked Repo <{repo_url}|{repo}>""
      notify_when: ""failure""
      mention_users: ""U0160UUNH8S,U0080UUAA9N""
      mention_users_when: ""failure,warnings""
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

steps:
  - uses: ravsamhq/notify-slack-action@v2
    if: always()
    with:
      status: ${{ job.status }}
      notification_title: ""{workflow} has {status_message}""
      message_format: ""{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>""
      footer: ""Linked Repo <{repo_url}|{repo}>""
      notify_when: ""failure""
      mention_users: ""U0160UUNH8S,U0080UUAA9N""
      mention_users_when: ""failure,warnings""
      mention_groups: ""SAZ94GDB8""
      mention_groups_when: ""failure,warnings""
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

mention_groups: ""SAZ94GDB8,!channel""

steps:
  - run: echo ""${{ toJson(github) }}""

github.event.head_commit.author.name
github.event.head_commit.message

steps:
  - uses: ravsamhq/notify-slack-action@v2
    if: always()
    with:
      ...
      message_format: \'{emoji} ${{ github.event.head_commit.author.name }} ${{ github.event.head_commit.message }}\'
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

status:
  description: Job Status
  required: true

token:
  description: Github Token for accessing workflow url
  required: false
  default: """"

notification_title:
  description: Specify on the notification message title
  required: false
  default: ""New Github Action Run""

message_format:
  description: Specify on the notification message format
  required: false
  default: ""{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>""

footer:
  description: Specify the footer of the message
  required: false
  default: ""<{run_url}|View Run> | Developed by <https://www.ravsam.in|RavSam>""

notify_when:
  description: Specify on which events a slack notification is sent
  required: false
  default: ""success,failure,cancelled,warnings,skipped""

mention_users:
  description: Specify the slack IDs of users you want to mention.
  required: false
  default: """"

mention_users_when:
  description: Specify on which events you want to mention the users
  required: false
  default: ""success,failure,cancelled,warnings,skipped""

mention_groups:
  description: Specify the slack IDs of groups you want to mention
  required: false
  default: """"

mention_groups_when:
  description: Specify on which events you want to mention the groups
  required: false
  default: ""success,failure,cancelled,warnings,skipped""

icon_success:
  description: Specify on icon to be used when event is success
  required: false
  default: "":heavy_check_mark:""

icon_failure:
  description: Specify on icon to be used when event is failure
  required: false
  default: "":x:""

icon_cancelled:
  description: Specify on icon to be used when event is cancelled
  required: false
  default: "":x:""

icon_warnings:
  description: Specify on icon to be used when event is warnings
  required: false
  default: "":large_orange_diamond:""

icon_skipped:
  description: Specify on icon to be used when event is skipped
  required: false
  default: "":fast_forward:""

git clone https://github.com/ravsamhq/notify-slack-action.git

cd notify-slack-action

npm install
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
art049/mongodb-cluster-action,"steps:
  - uses: art049/mongodb-cluster-action@v0
    id: mongodb-cluster-action
  - run: ./script/test
    env:
      MONGO_URI: ${{ steps.mongodb-cluster-action.outputs.connection-string }}

steps:
  ...
  - uses: art049/mongodb-cluster-action@v0
    id: mongodb-cluster-action
    with:
      version: ""3.6""
  ...

steps:
  ...
  - uses: art049/mongodb-cluster-action@v0
    id: mongodb-cluster-action
    with:
      mode: replicaSet
  ...

steps:
  ...
  - uses: art049/mongodb-cluster-action@v0
    id: mongodb-cluster-action
    with:
      mode: sharded
  ...

git submodule add https://github.com/art049/mongodb-cluster-action.git .mongodb-cluster-action

includes:
  mongodb:
    taskfile: ./.mongodb-cluster-action/Taskfile.yml
    dir: .mongodb-cluster-action
    optional: true

task mongodb:standalone-docker
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jpetrucciani/bandit-check,"uses: jpetrucciani/bandit-check@main

uses: jpetrucciani/bandit-check@main
with:
  path: \'.\'

uses: jpetrucciani/bandit-check@main
with:
  bandit_flags: \'-lll -o output.json -f json\'
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
tj-actions/verify-changed-files,"...
    steps:
      - uses: actions/checkout@v2

      - name: Change text file
        run: |
          echo ""Modified"" > new.txt

      - name: Change file in directory
        run: |
          echo ""Changed"" > test_directory/new.txt

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: |
             *.txt
             test_directory
             action.yml
             **/*.py
             **/*.jpeg
             !*.sql

      - name: Run step only when any of the above files change.
        if: steps.verify-changed-files.outputs.files_changed == \'true\'
        run: |
          echo ""Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}""

...
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: |
             new.txt
             test_directory

      - name: Perform action when test_directory changes
        if: contains(steps.verify-changed-files.outputs.changed_files, \'test_directory\')
        run: |
          echo ""test_directory has changed.""

...
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
      
      - name: List all changed files tracked and untracked files
        run: |
          echo ""Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0
piotrpawlaczek/python-blacken,"uses: piotrpawlaczek/python-blacken@release/stable


uses: piotrpawlaczek/python-blacken@release/stable


with:
  line-length: '88'
  path: '.'
  sanity-check: 'safe'
  only-check: 'no'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ldeluigi/markdown-docs,"      - name: Generate HTML from Markdown
        uses: ldeluigi/markdown-docs@latest
        with:
          src: doc
          dst: generated

      - name: Generate HTML from Markdown
        uses: ldeluigi/markdown-docs@latest
        with:
          src: doc
          dst: generated
          title: Markdown Docs
          language: en
          icon: library
          primary-color: indigo
          secondary-color: indigo
          hide-repository: false

FROM deloo/markdown-docs AS builder

COPY docs/ /home/src
ENV WORKSPACE=/home
RUN makedocs ""src"" ""dst""

FROM ...

COPY --from=builder /home/dst /var/www/static/

ENV WORKSPACE=/home
ENV TITLE=Markdown Docs
ENV LANGUAGE=en
ENV ICON=library
ENV PRIMARY_COLOR=indigo
ENV SECONDARY_COLOR=indigo
ENV HIDE_REPOSITORY=false

docker build -t markdown-docs . --no-cache
docker run -e WORKSPACE=/github/workspace -v <YOUR-CURRENT-WORKING-DIRECTORY>:/github/workspace markdown-docs . result/
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
wow-actions/needs-more-info,"name: Needs More Info
on:
  pull_request:
    types: [opened, edited, reopened]
  issues:
    types: [opened, edited, reopened]
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/needs-more-info@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIG_FILE: .github/workflows/config/needs-more-info.yml

interface Config {
  /**
   * Add a list of people whose Issues/PRs will not be commented on.
   */
  excludeUsers?: string[]

  /**
   * Require Issues or PRs to contain more information than what is provided
   * in the templates. Will fail if the body is equal to a provided template.
   */
  checkTemplate?: boolean
  /**
   * Default mini length of titles to check against for lack of descriptiveness.
   */
  miniTitleLength?: number
  /**
   * Default titles to check against for lack of descriptiveness.
   */
  badTitles?: string[]
  /**
   * Default label to be added to issues or PRs with insufficient
   * information given.
   */
  labelToAdd?: string
  /**
   * Default reactions to be added to issues or PRs with insufficient
   * information given.
   *
   * Available reactions: ""-1"" | ""confused"" | ""+1"" | ""laugh"" | ""heart"" |
   * ""hooray"" | ""rocket"" | ""eyes"".
   *
   * Can be either a ,/space joined string or an reactions array.
   * - \'-1, confused\'
   * - \'-1 confused\'
   * - [\'-1\', \'confused\']
   */
  reactions?: string | string[]
  /**
   * Default message to comment on issues or PRs when have bad title.
   *
   * Can be either a string or an array(random pick a comment).
   */
  badTitleComment?: string | string[]
  /**
   * Default message to comment on issues or PRs when have bad body.
   *
   * Can be either a string or an array(random pick a comment).
   */
  badBodyComment?: string | string[]
  /**
   * Default message to comment on issues or PRs when have bad title or bad body.
   *
   * Can be either a string or an array(random pick a comment).
   */
  defaultComment?: string | string[]

  issue?: {
    /**
     * Require Issues to contain more information than what is provided in
     * the issue templates. Will fail if the issue\'s body is equal to a
     * provided template.
     */
    checkTemplate?: boolean
    /**
     * Mini length of titles to check against for lack of descriptiveness.
     */
    miniTitleLength?: number
    /**
     * Bad titles to check against for lack of descriptiveness.
     */
    badTitles?: string[]
    /**
     * Label to be added to Issues with insufficient information given.
     */
    labelToAdd?: string
    /**
     * Reactions to be added to issues with insufficient information given.
     *
     * Available reactions: ""-1"" | ""confused"" | ""+1"" | ""laugh"" | ""heart"" |
     * ""hooray"" | ""rocket"" | ""eyes"".
     *
     * Can be either a ,/space joined string or an reactions array.
     * - \'-1, confused\'
     * - \'-1 confused\'
     * - [\'-1\', \'confused\']
     */
    reactions?: string | string[]
    /**
     * Message to comment on issues when have bad title.
     *
     * Can be either a string or an array(random pick a comment).
     */
    badTitleComment?: string | string[]
    /**
     * Message to comment on issues when have bad body.
     *
     * Can be either a string or an array(random pick a comment).
     */
    badBodyComment?: string | string[]
  }

  pullRequest?: {
    /**
     * Require PRs to contain more information than what is provided in the PR
     * template. Will fail if the pull request\'s body is equal to the provided
     * template.
     */
    checkTemplate?: boolean
    /**
     * Mini length of titles to check against for lack of descriptiveness.
     */
    miniTitleLength?: number
    /**
     * Bad titles to check against for lack of descriptiveness.
     */
    badTitles?: string[]
    /**
     * Label to be added to PRs with insufficient information given.
     */
    labelToAdd?: string
    /**
     * Reactions to be added to PRs with insufficient information given.
     *
     * Available reactions: ""-1"" | ""confused"" | ""+1"" | ""laugh"" | ""heart"" |
     * ""hooray"" | ""rocket"" | ""eyes"".
     *
     * Can be either a ,/space joined string or an reactions array.
     * - \'-1, confused\'
     * - \'-1 confused\'
     * - [\'-1\', \'confused\']
     */
    reactions?: string | string[]
    /**
     * Message to comment on PRs when have bad title.
     *
     * Can be either a string or an array(random pick a comment).
     */
    badTitleComment?: string | string[]
    /**
     * Message to comment on PRs when have bad body.
     *
     * Can be either a string or an array(random pick a comment).
     */
    badBodyComment?: string | string[]
  }
}

checkTemplate: true
miniTitleLength: 8
labelToAdd: needs-more-info
reactions:
  - \'-1\'
  - confused

issue:
  badTitles:
    - update
    - updates
    - test
    - issue
    - debug
    - demo
  badTitleComment: |
    @{{ author }}
    We would appreciate it if you could provide us with more info about this issue!

  badBodyComment: |
    @{{ author }}
    We would appreciate it if you could provide us with more info about this issue!

pullRequest:
  badTitles:
    - update
    - updates
    - test
  badBodyComment: |
    @{{ author }}
    We would appreciate it if you could provide us with more info about this pr!

  badTitleComment: |
    @{{ author }}
    We would appreciate it if you could provide us with more info about this pr!
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
fregante/setup-git-user,"    steps:
      - uses: actions/checkout@v3
      - uses: fregante/setup-git-user@v2
      - run: git commit --message \'Something cool\'
      - run: git push

    steps:
      - uses: actions/checkout@v3
      - run: git config --global user.email ""you@example.com""
      - run: git config --global user.name ""Your Name""
      - run: git commit --message \'Something cool\'
      - run: git push
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
oxsecurity/megalinter,"---
name: MegaLinter

on:
  push: # Comment this line to trigger action only on pull-requests (not recommended if you don\'t pay for GH Actions)
  pull_request:
    branches: [master, main]

env: # Comment env block if you don\'t want to apply fixes
  APPLY_FIXES: all # When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI tool)
  APPLY_FIXES_EVENT: pull_request # Decide which event triggers application of fixes in a commit or a PR (pull_request, push, all)
  APPLY_FIXES_MODE: commit # If APPLY_FIXES is used, defines if the fixes are directly committed (commit) or posted in a PR (pull_request)

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # If you use VALIDATE_ALL_CODEBASE = true, you can remove this line to improve performances

      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter@v7
        env:
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == \'push\' && github.ref == \'refs/heads/main\' }} # Validates all source when push on main, else just the git diff with main. Override with true if you always want to lint all sources
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: Create Pull Request with applied fixes
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == \'all\' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == \'pull_request\' && (github.event_name == \'push\' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, \'skip fix\')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: ""[MegaLinter] Apply linters automatic fixes""
          title: ""[MegaLinter] Apply linters automatic fixes""
          labels: bot
      - name: Create PR output
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == \'all\' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == \'pull_request\' && (github.event_name == \'push\' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, \'skip fix\')
        run: |
          echo ""Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}""
          echo ""Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}""

      - name: Prepare commit
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == \'all\' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == \'commit\' && github.ref != \'refs/heads/main\' && (github.event_name == \'push\' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, \'skip fix\')
        run: sudo chown -Rc $UID .git/
      - name: Commit and push applied linter fixes
        if: steps.ml.outputs.has_updated_sources == 1 && (env.APPLY_FIXES_EVENT == \'all\' || env.APPLY_FIXES_EVENT == github.event_name) && env.APPLY_FIXES_MODE == \'commit\' && github.ref != \'refs/heads/main\' && (github.event_name == \'push\' || github.event.pull_request.head.repo.full_name == github.repository) && !contains(github.event.head_commit.message, \'skip fix\')
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: ""[MegaLinter] Apply linters fixes""
          commit_user_name: megalinter-bot
          commit_user_email: nicolas.vuillamy@ox.security


mega-linter:
  stage: test
  image: oxsecurity/megalinter:v7
  script: [ ""true"" ] # if script: [""true""] doesn\'t work, you may try ->  script: [ ""/bin/bash /entrypoint.sh"" ]
  variables:
    DEFAULT_WORKSPACE: $CI_PROJECT_DIR
  artifacts:
    when: always
    paths:
      - megalinter-reports
    expire_in: 1 week

  - job: MegaLinter
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self

      - script: docker pull oxsecurity/megalinter:v7
        displayName: Pull MegaLinter

      - script: |
          docker run -v $(System.DefaultWorkingDirectory):/tmp/lint \\
            --env-file <(env | grep -e SYSTEM_ -e BUILD_ -e TF_ -e AGENT_) \\
            -e SYSTEM_ACCESSTOKEN=$(System.AccessToken) \\
            -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) \\
            oxsecurity/megalinter:v7
        displayName: Run MegaLinter

      - task: PublishPipelineArtifact@1
        condition: succeededOrFailed()
        displayName: Upload MegaLinter reports
        inputs:
          targetPath: ""$(System.DefaultWorkingDirectory)/megalinter-reports/""
          artifactName: MegaLinterReport

image: atlassian/default-image:3
pipelines:
  default:
    - parallel:
      - step:
          name: Run MegaLinter
          image: oxsecurity/megalinter:v7
          script:
            - export DEFAULT_WORKSPACE=$BITBUCKET_CLONE_DIR && bash /entrypoint.sh
          artifacts:
            -  megalinter-reports/**

// Lint with MegaLinter: https://megalinter.io/
stage(\'MegaLinter\') {
    agent {
        docker {
            image \'oxsecurity/megalinter:v7\'
            args ""-u root -e VALIDATE_ALL_CODEBASE=true -v ${WORKSPACE}:/tmp/lint --entrypoint=\'\'""
            reuseNode true
        }
    }
    steps {
        sh \'/entrypoint.sh\'
    }
    post {
        always {
            archiveArtifacts allowEmptyArchive: true, artifacts: \'mega-linter.log,megalinter-reports/**/*\', defaultExcludes: false, followSymlinks: false
        }
    }
}

---

  - name: linting
    plan:
      - get: repo
      - task: linting
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: oxsecurity/megalinter
              tag: v7
          inputs:
            - name: repo
          run:
            path: bash
            args:
            - -cxe
            - |
              cd repo
              export DEFAULT_WORKSPACE=$(pwd)
              bash -ex /entrypoint.sh

---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: oxsecurity/megalinter
    tag: v7

inputs:
- name: repo


run:
  path: bash
  args:
  - -cxe
  - |
    cd repo
    export DEFAULT_WORKSPACE=$(pwd)
    bash -ex /entrypoint.sh

resources:

  - name: linting
    plan:
      - get: repo
      - task: linting
        file: repo/task-linting.yaml

kind: pipeline
type: docker
name: MegaLinter

workspace:
  path: /tmp/lint

steps:

- name: megalinter
  image: oxsecurity/megalinter:v7
  environment:
    DEFAULT_WORKSPACE: /tmp/lint

kind: pipeline
type: docker
name: MegaLinter

workspace:
  path: /tmp/lint

steps:

- name: megalinter
  image: oxsecurity/megalinter:v7
  environment:
    DEFAULT_WORKSPACE: /tmp/lint

trigger:
  event:
  - push

npx mega-linter-runner --flavor salesforce -e ""\'ENABLE=DOCKERFILE,MARKDOWN,YAML\'"" -e \'SHOW_ELAPSED_TIME=true\'

ENABLE: JAVASCRIPT,GROOVY
DISABLE_LINTERS: JAVASCRIPT_STANDARD
DISABLE_ERRORS_LINTERS: REPOSITORY_DEVSKIM

DISABLE: PHP

DISABLE_LINTERS:
  - PHP_PHPSTAN
  - PHP_PSALM

megalinter-reports/

PRE_COMMANDS:
  - command: npm install eslint-plugin-whatever
    cwd: ""root""        # Will be run at the root of MegaLinter docker image
    secured_env: true  # True by default, but if defined to false, no global variable will be hidden (for example if you need GITHUB_TOKEN)
  - command: echo ""pre-test command has been called""
    cwd: ""workspace""   # Will be run at the root of the workspace (usually your repository root)
    continue_if_failed: False  # Will stop the process if command is failed (return code > 0)
  - command: pip install flake8-cognitive-complexity
    venv: flake8 # Will be run within flake8 python virtualenv. There is one virtualenv per python-based linter, with the same name

POST_COMMANDS:
  - command: npm run test
    cwd: ""workspace""   # Will be run at the root of the workspace (usually your repository root)
    continue_if_failed: False  # Will stop the process if command is failed (return code > 0)

SECURED_ENV_VARIABLES:
  - MY_SECRET_TOKEN
  - ANOTHER_VAR_CONTAINING_SENSITIVE_DATA
  - OX_API_KEY
  - (MY.*VAR)  # Regex format

SECURED_ENV_VARIABLES=MY_SECRET_TOKEN,ANOTHER_VAR_CONTAINING_SENSITIVE_DATA,OX_API_KEY

TERRAFORM_TFLINT_UNSECURED_ENV_VARIABLES:
  - GITHUB_TOKEN # Can contain string only, not regex

[![MegaLinter](https://github.com/<OWNER>/<REPOSITORY>/workflows/MegaLinter/badge.svg?branch=main)](https://github.com/<OWNER>/<REPOSITORY>/actions?query=workflow%3AMegaLinter+branch%3Amain)

[![MegaLinter](https://github.com/nvuillam/npm-groovy-lint/workflows/MegaLinter/badge.svg?branch=main)](https://github.com/nvuillam/npm-groovy-lint/actions?query=workflow%3AMegaLinter+branch%3Amain)

.. |MegaLinter yes| image:: https://github.com/<OWNER>/<REPOSITORY>/workflows/MegaLinter/badge.svg?branch=main
   :target: https://github.com/<OWNER>/<REPOSITORY>/actions?query=workflow%3AMegaLinter+branch%3Amain

.. |MegaLinter yes| image:: https://github.com/nvuillam/npm-groovy-lint/workflows/MegaLinter/badge.svg?branch=main
   :target: https://github.com/nvuillam/npm-groovy-lint/actions?query=workflow%3AMegaLinter+branch%3Amain

PLUGINS:
  - https://raw.githubusercontent.com/kpj/jupyfmt/master/mega-linter-plugin-jupyfmt/jupyfmt.megalinter-descriptor.yml
  - file://.automation/test/mega-linter-plugin-test/test.megalinter-descriptor.yml
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vsoch/pull-request-action,"name: Pull Request on Branch Push
on:
  push:
    branches-ignore:
      - staging
      - launchpad
      - production
jobs:
  auto-pull-request:
    name: PullRequestAction
    runs-on: ubuntu-latest
    steps:
      - name: pull-request-action
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_PREFIX: ""update/""
          PULL_REQUEST_BRANCH: ""master""

name: Pull Request on Branch Push
on: [release]
jobs:
  pull-request-on-release:
    name: PullRequestAction
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Derive from branch name
        run: |
            PR_BRANCH_FROM=release-v$(cat VERSION)
            echo ""PULL_REQUEST_FROM_BRANCH=${PR_BRANCH_FROM}"" >> $GITHUB_ENV
      - name: pull-request-action
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BRANCH: ""master""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
plexsystems/container-structure-test-action,"name: ""Test Dockerfile structure""
on: pull_request

jobs:
  dockerfile-test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout source
      uses: actions/checkout@main

    - name: run structure tests
      uses: plexsystems/container-structure-test-action@v0.1.0
      with:
        image: my-image:latest
        config: tests.yaml
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
osism/ansible-lint-action,"ansible version: 5.5.0
ansible-lint version: 6.0.2

name: Check ansible syntax  # feel free to pick your own name

on: [push, pull_request]

jobs:
  check-ansible-syntax:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Lint Ansible Playbook
      uses: osism/ansible-lint-action@main
      with:
        targets: """"
        override-deps: |
          ansible==5.2.0
          ansible-lint==5.3.2

        args: """"

",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ammaraskar/sphinx-problem-matcher,"    - uses: ammaraskar/sphinx-problem-matcher@master
    - name: ""Build docs""
      run: |
        cd docs
        make html
",0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
fylein/python-pylint-github-action,"$ pylint <directory_name>

$ pylint --rcfile=.pylintrc <directory_name>

- name: Python Pylin GitHub Action
  uses: fylein/python-pylint-github-action@v1
  with:
    args: pip3 install -r requirements.txt && pylint --rcfile=.pylintrc <directory_name>
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
messense/maturin-action,"- uses: PyO3/maturin-action@v1
  with:
    command: build
    args: --release

mkdir -p .github/workflows
maturin generate-ci github > .github/workflows/CI.yml

- name: Setup QEMU
  uses: docker/setup-qemu-action@v1
- uses: PyO3/maturin-action@v1
  with:
    command: build
    args: --release

- uses: PyO3/maturin-action@v1
  with:
    args: --release -i python3.10

npm run all
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
saadmk11/changelog-ci,"name: Changelog CI

on:
  pull_request:
    types: [ opened ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run Changelog CI
        uses: saadmk11/changelog-ci@v1.1.2

name: Changelog CI

on:
  pull_request:
    types: [ opened ]

  workflow_dispatch:
    inputs:
      release_version:
        description: \'Set Release Version\'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run Changelog CI
        uses: saadmk11/changelog-ci@v1.1.2
        with:
          changelog_filename: CHANGELOG.rst
          config_file: changelog-ci-config.json
          committer_username: \'test\'
          committer_email: \'test@test.com\'
          release_version: ${{ github.event.inputs.release_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

![Changelog CI Status](https://github.com/<username>/<repository>/workflows/Changelog%20CI/badge.svg)

- name: changelog-ci
  uses: saadmk11/changelog-ci@v1.1.2
  id: changelog-ci

- name: Get Changelog Output
  run: |
    echo ""${{ steps.changelog-ci.outputs.changelog }}""
    echo ""${{ steps.changelog-ci.outputs.changelog }}"" >> $GITHUB_STEP_SUMMARY

with:
  config_file: changelog-ci-config.json

with:
  config_file: changelog-ci-config.yaml

{
  ""changelog_type"": ""commit_message"",
  ""header_prefix"": ""Version:"",
  ""commit_changelog"": true,
  ""comment_changelog"": true,
  ""include_unlabeled_changes"": true,
  ""unlabeled_group_title"": ""Unlabeled Changes"",
  ""pull_request_title_regex"": ""^Release"",
  ""version_regex"": ""v?([0-9]{1,2})+[.]+([0-9]{1,2})+[.]+([0-9]{1,2})\\\\s\\\\(\\\\d{1,2}-\\\\d{1,2}-\\\\d{4}\\\\)"",
  ""exclude_labels"": [""bot"", ""dependabot"", ""ci""],
  ""group_config"": [
    {
      ""title"": ""Bug Fixes"",
      ""labels"": [""bug"", ""bugfix""]
    },
    {
      ""title"": ""Code Improvements"",
      ""labels"": [""improvements"", ""enhancement""]
    },
    {
      ""title"": ""New Features"",
      ""labels"": [""feature""]
    },
    {
      ""title"": ""Documentation Updates"",
      ""labels"": [""docs"", ""documentation"", ""doc""]
    }
  ]
}

changelog_type: \'commit_message\' # or \'pull_request\'
header_prefix: \'Version:\'
commit_changelog: true
comment_changelog: true
include_unlabeled_changes: true
unlabeled_group_title: \'Unlabeled Changes\'
pull_request_title_regex: \'^Release\'
version_regex: \'v?([0-9]{1,2})+[.]+([0-9]{1,2})+[.]+([0-9]{1,2})\\s\\(\\d{1,2}-\\d{1,2}-\\d{4}\\)\'
exclude_labels:
  - bot
  - dependabot
  - ci
group_config:
  - title: Bug Fixes
    labels:
      - bug
      - bugfix
  - title: Code Improvements
    labels:
      - improvements
      - enhancement
  - title: New Features
    labels:
      - feature
  - title: Documentation Updates
    labels:
      - docs
      - documentation
      - doc
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ScottBrenner/cfn-lint-action,"name: Lint CloudFormation Templates

on: [push]

jobs:
  cloudformation-linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Cloud Formation Linter with Latest Version
        uses: scottbrenner/cfn-lint-action@v2

      - name: Print the Cloud Formation Linter Version & run Linter.
        run: |
          cfn-lint --version
          cfn-lint -t ./template.yml

name: Lint CloudFormation Templates

on: [push]

jobs:
  cloudformation-linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Testing with CFN Lint Command
        uses: scottbrenner/cfn-lint-action@v2
        with:
          command: cfn-lint -t ./template.yml

- name: Setup Cloud Formation Linter with Latest Version
  uses: scottbrenner/cfn-lint-action@v2

- name: Print the Cloud Formation Linter Version & run Linter.
  run: |
    shopt -s globstar # enable globbing
    cfn-lint --version
    cfn-lint -t ./**/*.yaml

- name: Print the Cloud Formation Linter Version & run Linter.
  run: |
    cfn-lint --version
    cfn-lint -t ./template.yaml

gh repo fork ScottBrenner/cfn-lint-action

npm install

node index.js
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
wemake-services/dotenv-linter,"pip install dotenv-linter

dotenv-linter .env .env.template

 SPACED=

KEY = VALUE

SECRET=""my value""

SECRET=Already defined ;(

kebab-case-name=1
snake_case_name=2

repos:
  - repo: https://github.com/wemake-services/dotenv-linter
    rev: 0.2.0  # Use the ref you want to point at
    hooks:
      - id: dotenv-linter
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
BobAnkh/auto-generate-changelog,"name: Generate changelog
on:
  release:
    types: [created, edited]

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: BobAnkh/auto-generate-changelog@v1.2.5
      with:
        REPO_NAME: \'<YourUserName>/<YourRepoName>\'
        ACCESS_TOKEN: ${{secrets.GITHUB_TOKEN}}
        PATH: \'CHANGELOG.md\'
        COMMIT_MESSAGE: \'docs(CHANGELOG): update release notes\'
        TYPE: \'feat:Feature,fix:Bug Fixes,docs:Documentation,refactor:Refactor,perf:Performance Improvements\'

usage: main.py [-h] [-m MODE] [-f FILE] [-o OUTPUT] [-t TOKEN]

optional arguments:
  -h, --help            show this help message and exit
  -m MODE, --mode MODE  choose to use local-dev mode or on github action mode.
                        Valid values are \'local\' or \'github\'
  -f FILE, --file FILE  configuration file to read from when running local-dev
                        mode
  -o OUTPUT, --output OUTPUT
                        output file when running local-dev mode
  -t TOKEN, --token TOKEN
                        Github Access Token
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
filipstefansson/uuid-action,"jobs:
  test:
    runs-on: ubuntu-latest
    name: Test UUID action
    steps:
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
        with:
          name: ${{ gihub.sha }}
      - name: Get the UUID
        run: echo ""UUID is ${{ steps.generate-uuid.outputs.uuid }}""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
erzz/dockle-action,"- name: Upload Report
  uses: actions/upload-artifact@v3
  if: always()
  with:
    name: Dockle Report
    path: dockle-report.json

- name: Upload SARIF file
  uses: github/codeql-action/upload-sarif@v2
  with:
    sarif_file: dockle-report.sarif

jobs:
  dockle:
    name: Dockle Container Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Run Dockle
        uses: erzz/dockle-action@v1
        with:
          image: alpine:latest

jobs:
  dockle:
    name: Dockle Container Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Dockle
        uses: erzz/dockle-action@v1
        with:
          image: alpine:latest
          exit-code: 1
          failure-threshold: fatal

jobs:
  dockle:
    name: Dockle Container Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.SA_JSON_KEY }}

      - name: Run Dockle
        uses: erzz/dockle-action@v1
        with:
          image: eu.gcr.io/my-project/my-image:v1.2.3
          report-format: sarif
          report-name: dockle-results
          failure-threshold: fatal
          exit-code: 1
          dockle-version: 0.4.11
          accept-extensions: pem

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: super-report.sarif
",0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
shogo82148/actions-goveralls,"- uses: actions/checkout@v3

- uses: actions/setup-go@v3
  with:
    go-version: '1.19'
- run: go test -v -coverprofile=profile.cov ./...

- uses: shogo82148/actions-goveralls@v1
  with:
    path-to-profile: profile.cov

on: [push, pull_request]
jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - '1.19'
          - '1.18'
          - '1.17'
          - '1.16'
          - '1.15'
          - '1.14'
          - '1.13'
          - '1.12'
          - '1.11'

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v3
      - run: go test -v -coverprofile=profile.cov ./...

      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          flag-name: Go-${{ matrix.go }}
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
dblock/create-a-github-issue,"on: [push]
name: Create an issue on push
permissions:
  contents: read
  issues: write 
jobs:
  stuff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dblock/create-a-github-issue@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

---
title: Someone just pushed
assignees: JasonEtco, matchai
labels: bug, enhancement
---
Someone just pushed, oh no! Here\'s who did it: {{ payload.sender.login }}.

- uses: dblock/create-a-github-issue@v3
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    ADJECTIVE: great

Environment variables are pretty {{ env.ADJECTIVE }}, right?

---
title: Weekly Radar {{ date | date(\'dddd, MMMM Do\') }}
---
What\'s everyone up to this week?

steps:
  - uses: actions/checkout@v3
  - uses: dblock/create-a-github-issue@v3
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      filename: .github/some-other-template.md

steps:
  - uses: actions/checkout@v3
  - uses: dblock/create-a-github-issue@v3
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      assignees: JasonEtco, octocat
      milestone: 1
      update_existing: true
      search_existing: all

steps:
  - uses: dblock/create-a-github-issue@v3
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    id: create-issue
  - run: \'echo number: ${{ steps.create-issue.outputs.number }}\'
  - run: \'echo status: ${{ steps.create-issue.outputs.status }}\'
  - run: \'echo url: ${{ steps.create-issue.outputs.url }}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
puneetmatharu/cmake-format-lint-action,"  - name: Format CMake files
    id: cmake-format
    uses: PuneetMatharu/cmake-format-lint-action@v1.0.4
    with:
      args: --config-files .cmake-format.json --in-place

name: Run cmake-format linter

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Format CMake files
      id: cmake-format
      uses: PuneetMatharu/cmake-format-lint-action@v1.0.4
      with:
        args: --config-files .cmake-format.json --in-place

    - name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_user_name: cmake-format-bot
        commit_message: 'Automated commit of cmake-format changes.'
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
getsentry/action-git-diff-suggestions,"- uses: getsentry/action-git-diff-suggestions@main
  with:
    message: \'eslint made the following change\'

name: test

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - run: yarn install

      - run: yarn lint

      - uses: getsentry/action-git-diff-suggestions@main
        with:
          message: eslint

      - run: yarn test
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
MayMeow/action-mattermost-notify,"Action Mattermost Notify 1.0.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  completion  Dump the shell completion script
  help        Display help for a command
  list        List commands
  send        Send a message to Mattermost

action-mattermost-notify send ""Your message"" --url https://your.mattermost.webhook.url

- uses: MayMeow/action-mattermost-notify@main # this using main branch instead of published version
  with:
    url: ${{ secrets.MATTERMOST_WEBHOOK }} # required
    message: ""Hello world from ${{ github.repository }}"" # required
    username: """" # use if you want to change username of message sender
    channel: """" # use if you want to set changel where message will be send
    icon: """" # url of sender\'s profile icon
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
wasmerio/setup-wasmer,"- name: Setup Wasmer
  uses: wasmerio/setup-wasmer@v2

- name: Publish to WAPM
  uses: wasmerio/wapm-publish@v1
  with:
    username: ${{ secrets.WAPM_USERNAME }}
    password: ${{ secrets.WAPM_PASSWORD }}
",1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hkusu/s3-upload-action,"- uses: hkusu/s3-upload-action@v2
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: 'ap-northeast-1'
    aws-bucket: ${{ secrets.AWS_BUCKET }}
    file-path: './myfile.txt'

- uses: hkusu/s3-upload-action@v2
  id: upload # specify some ID for use in subsequent steps
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: 'ap-northeast-1'
    aws-bucket: ${{ secrets.AWS_BUCKET }}
    file-path: './myfile.txt'
    output-file-url: 'true' # specify true
- name: Show URL
  run: echo '${{ steps.upload.outputs.file-url }}' # use this output

- uses: hkusu/s3-upload-action@v2
  id: upload # specify some ID for use in subsequent steps
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: 'ap-northeast-1'
    aws-bucket: ${{ secrets.AWS_BUCKET }}
    file-path: './myfile.txt'
    output-qr-url: 'true' # specify true
- name: Show URL
  run: echo '${{ steps.upload.outputs.qr-url }}' # use this output
",0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
DerJuulsn/todo-issue,"/**
 * TODO Should we reinvent the wheel here?
 * We already have a good one. But could it be even rounder?
 */
function getWheel() {
    // Returns you this pizza like thing
}

name: Create issues from TODOs

on:
  workflow_dispatch:
    inputs:
      importAll:
        default: 'false'
        required: false
        type: boolean
        description: Enable, if you want to import all TODOs. Runs on checked out branch! Only use if you're sure what you are doing.
  push:
    branches: # do not set multiple branches, todos might be added and then get referenced by themselves in case of a merge
      - main
      - master

permissions:
  issues: write
  repository-projects: read
  contents: read

jobs:
  todos:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run Issue Bot
        uses: derjuulsn/todo-issue@main
        with:
          excludePattern: '^(node_modules/)'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

// TODO make this button red [frontend]
// this button should be red to clearify something

//+TODO We have to do something about this
//-there is an error at line 28
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
carloscastrojumo/github-cherry-pick-action,"on:
  pull_request:
    branches:
      - main
    types: [""closed""]

jobs:
  cherry_pick_release_v1_0:
    runs-on: ubuntu-latest
    name: Cherry pick into release-v1.0
    if: ${{ contains(github.event.pull_request.labels.*.name, \'release-v1.0\') && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cherry pick into release-v1.0
        uses: carloscastrojumo/github-cherry-pick-action@v1.0.1
        with:
          branch: release-v1.0
          labels: |
            cherry-pick
          reviewers: |
            aReviewerUser
  cherry_pick_release_v2_0:
    runs-on: ubuntu-latest
    name: Cherry pick into release-v2.0
    if: ${{ contains(github.event.pull_request.labels.*.name, \'release-v2.0\') && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cherry pick into release-v2.0
        uses: carloscastrojumo/github-cherry-pick-action@v1.0.1
        with:
          branch: release-v2.0
          labels: |
            cherry-pick
          reviewers: |
            aReviewerUser
          title: \'[cherry-pick] {old_title}\'
          body: \'Cherry picking #{old_pull_request_id} onto this branch\'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: actions/checkout@v3
  - uses: carloscastrojumo/github-cherry-pick-action@v1.0.1
    id: new-issue
    with:
      branch: release-v2.0
      labels: cherry-pick
    - run: |
        echo ""${{ steps.new-issue.outputs.data }}""
        echo ""${{ steps.new-issue.outputs.number }}"" 
        echo ""${{ steps.new-issue.outputs.html_url }}""

on:
  pull_request_target:
    branches:
      - main
    types: [""closed""]
 ...
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
fjeremic/cron-first-interaction,"
name: ""First Time Contributor""
on:
  schedule:
  - cron: ""*/10 * * * *""

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - uses: fjeremic/cron-first-interaction@0.2.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        pr-message: |-
          Thank you for supporting the project $GITHUB_ACTOR, and congratulations on your
          first contribution! A project committer will shortly review your contribution. 
          In the mean time, if you haven\'t had a chance please skim over the 
          [contribution guidelines](https://example.com/) which all pull requests must adhere to.

          We hope to see you around!
        pr-label:
          - first contribution
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
fjeremic/cron-labeler,"
label1:
  - example/**/*

label2: example2/*

repo:
  - ./*
  
@domain/core:
  - package/core/*
  - package/core/**/*

test:
  - src/**/*.spec.js

name: ""Pull Request Labeler""
on:
  schedule:
  - cron: ""*/10 * * * *""

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - uses: fjeremic/cron-labeler@0.2.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
jpetrucciani/black-check,"uses: jpetrucciani/black-check@master

uses: jpetrucciani/black-check@master
with:
  path: \'.\'

uses: jpetrucciani/black-check@master
with:
  black_flags: \'--exclude ./env/\'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ewels/rich-codex,"![`cat docs/cat.txt | lolcat -S 1`](docs/img/cat.png)

on: [push]
jobs:
  rich_codex:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install your custom tools
        run: pip install lolcat
      - name: Generate terminal images with rich-codex
        uses: ewels/rich-codex@v1
        with:
          commit_changes: ""true""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
nf-core/setup-nextflow,"name: Example workflow
on: push
jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nf-core/setup-nextflow@v1
      - run: nextflow run ${GITHUB_WORKSPACE}

- name: Install Nextflow
  env:
    NXF_VER: ${{ matrix.NXF_VER }}
  run: |
    wget -qO- get.nextflow.io | bash
    sudo mv nextflow /usr/local/bin/
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
karancode/yamllint-github-action,"name: 'Yamllint GitHub Actions'
on:
  - pull_request
jobs:
  yamllint:
    name: 'Yamllint'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Yamllint'
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_file_or_dir: '<yaml_file_or_dir>'
          yamllint_strict: false
          yamllint_comment: true
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
GuoJuna/sync-repo-action,"
name: ""git repo sync""
on:
  push:
jobs:
  repo-sync:
    runs-on: ubuntu-latest
    steps:
    - name: repo-sync
      uses: guojuna/git-repo-sync@master
      with:
        source_repo_url: git@github.com:${{ github.repository }}.git
        source_branch: master
        dest_repo_url: git@gitee.com:charleszht/test001.git
        dest_branch: master
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

source_repo_url \xe9\x9c\x80\xe8\xa6\x81\xe5\x90\x8c\xe6\xad\xa5\xe7\x9a\x84\xe4\xbb\x93\xe5\xba\x93\xe5\x9c\xb0\xe5\x9d\x80

source_branch: \xe9\x9c\x80\xe8\xa6\x81\xe5\x90\x8c\xe6\xad\xa5\xe7\x9a\x84\xe4\xbb\x93\xe5\xba\x93\xe5\x88\x86\xe6\x94\xaf
dest_repo_url: \xe7\x9b\xae\xe6\xa0\x87\xe4\xbb\x93\xe5\xba\x93\xe5\x9c\xb0\xe5\x9d\x80
dest_branch: \xe7\x9b\xae\xe6\xa0\x87\xe4\xbb\x93\xe5\xba\x93\xe5\x88\x86\xe6\x94\xaf
ssh_private_key: \xe5\xb0\x86\xe6\x9c\xac\xe5\x9c\xb0 .ssh \xe6\x96\x87\xe4\xbb\xb6\xe5\xa4\xb9\xe4\xb8\xad\xe7\x9a\x84 id_rsa \xe6\xb7\xbb\xe5\x8a\xa0\xe5\x88\xb0\xe4\xbb\x93\xe5\xba\x93\xe7\x9a\x84secret\xe4\xb8\xad\xef\xbc\x88\xe5\x90\x8c\xe6\x97\xb6\xe9\x9c\x80\xe8\xa6\x81\xe5\xb0\x86\xe5\xaf\xb9\xe5\xba\x94\xe7\x9a\x84 id_rsa.pub \xe6\xb7\xbb\xe5\x8a\xa0\xe5\x88\xb0\xe7\x9b\xae\xe6\xa0\x87 git \xe4\xbb\x93\xe5\xba\x93\xe7\x9a\x84 ssh keys \xe4\xb8\xad\xef\xbc\x89
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
edplato/trufflehog-actions-scan,"
workflow ""Detect Secrets"" {
  on = ""push""
  resolves = [""edplato/trufflehog-actions-scan""]
}

action ""edplato/trufflehog-actions-scan"" {
  uses = ""edplato/trufflehog-actions-scan@master""
}


steps:
- uses: actions/checkout@v2
  with:
    fetch-depth: 0
    ref: ${{ github.head_ref }} // necessary for pull request workflow trigger
- name: trufflehog-actions-scan
  uses: edplato/trufflehog-actions-scan@master

steps:
- uses: actions/checkout@v2
  with:
    fetch-depth: 0
    ref: ${{ github.head_ref }} // necessary for pull request workflow trigger
- name: trufflehog-actions-scan
  uses: edplato/trufflehog-actions-scan@master
  with:
    scanArguments: ""--regex --entropy=False --max_depth=5 --rules /regexes.json"" # Add custom options here*

",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
imranismail/setup-kustomize,"on:
  push:
    branches:
      - master

jobs:
  create-deployment-branch:
    runs-on: ubuntu-latest
    needs:
      - publish-image
    steps:
      - uses: imranismail/setup-kustomize@v2
      - run: |
          kustomize edit set image app:${GITHUB_SHA}
          git add .
          git commit -m ""Set `app` image tag to `${GITHUB_SHA}`""
          git push
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
thehanimo/pr-title-checker,"{
  ""LABEL"": {
    ""name"": ""title needs formatting"",
    ""color"": ""EEEEEE""
  },
  ""CHECKS"": {
    ""prefixes"": [""fix: "", ""feat: ""],
    ""regexp"": ""docs\\\\(v[0-9]\\\\): "",
    ""regexpFlags"": ""i"",
    ""ignoreLabels"" : [""dont-check-PRs-with-this-label"", ""meta""]
  },
  ""MESSAGES"": {
    ""success"": ""All OK"",
    ""failure"": ""Failing CI test"",
    ""notice"": """"
  }
}

name: ""PR Title Checker""
on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
      - labeled
      - unlabeled

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pass_on_octokit_error: false
          configuration_path: .github/pr-title-checker-config.json #(optional. defaults to .github/pr-title-checker-config.json)

...
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pass_on_octokit_error: false
          remote_configuration_path: ""https://raw.githubusercontent.com/grpc/grpc/master/.github/pr_title_checker_config.json""
...

...
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pass_on_octokit_error: false
          github_configuration_owner: RocketChat #(optional. defaults to the owner of the repo in which the action is run)
          github_configuration_repo: Rocket.Chat #(optional. defaults to the repo in which the action is run)
          github_configuration_path: .github/pr-title-checker-config.json #(optional. defaults to .github/pr-title-checker-config.json)
          github_configuration_ref: <named branch, tag, or SHA> #(optional. defaults to the latest commit on the default branch or, if the repo specified is the same as the one on which the action is running, it defaults to the current context\'s sha)
          github_configuration_token: ${{ secrets.YOUR_TOKEN }} #(optional. defaults to GITHUB_TOKEN)
...

...
    steps:
      - uses: thehanimo/pr-title-checker@v1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pass_on_octokit_error: false
          local_configuration_path: .github/actions/enforce-pr-titles/config.json
...
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
shufo/auto-assign-reviewer-by-files,"---
""**/*.js"":
  - shufo

"".github/workflows/*.yml"":
  - shufo2

"".github/**/*.yml"":
  - foo
  - bar

"".github/**/*.md"":
  - team: baz

name: ""Auto Assign""
on:
  - pull_request

jobs:
  assign_reviewer:
    runs-on: ubuntu-latest
    steps:
      - uses: shufo/auto-assign-reviewer-by-files@v1.1.5
        with:
          config: "".github/assign-by-files.yml""
          token: ${{ secrets.GITHUB_TOKEN }}

""*.js"":
  - foo
"".github/*"":
  - bar
""**/*"":
  - shufo

- uses: shufo/auto-assign-reviewer-by-files@v1.1.5
  with:
    config: "".github/assign-by-files.yml""
    token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Renato66/auto-label,"<!-- pull_request_template.md -->

What kind of change does this PR introduce?

- [x] `bug-fix`
- [ ] `new-feature`
- [ ] `enhancement`

<!-- pull_request_template.md -->

What kind of change does this PR introduce?

- [ ] `bug-fix`
- [ ] `new-feature`
- [x] `enhancement`

name: Auto Labeling

on:
  issues:
    types:
      - opened
      - edited

on:
  pull_request:
    types:
      - opened
      - edited

on:
  schedule:
    - cron: \'*/10 * * * *\'

jobs:
  labeling:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: harupy/auto-labeling@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          label-pattern: \'- \\[(.*?)\\] ?`(.+?)`\' # matches \'- [x] `label`\'

inputs:
  github-token:
    description: \'GitHub token\'
    required: true

  label-pattern:
    description: >
      Pattern (regular expression) to extract label states and names (e.g. \'- \\[(.*?)\\] ?`(.+?)`\').
    required: true

  offset:
    description: >
      Only issues and pull requests updated at or after this offset (from the current time) will be labeled.
      Required only when running this action on the schedule event.
    required: false
    default: \'1m\' # means one month

  quiet:
    description: >
      Suppress logging output. Must be either ""true"" or ""false""
    required: false
    default: \'false\'
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
LASER-Yi/workflow-status,"name: 'release-version'
on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Build
        run: # Build scripts
        
      - name: Check CI
      \tid: check-ci
      \tuses: LASER-Yi/workflow-status@v0.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yml
          event: push
          branch: development
          
      - name: Release
      \tif: ${{ steps.check-ci.outputs.conclusion == 'success' }}
        run: # Release scripts
",1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
theleagueof/fontship,"name: Fontship
on: [push, pull_request]
jobs:
  fontship:
    runs-on: ubuntu-latest
    name: Fontship
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --prune --tags
      - name: Fontship
        uses: theleagueof/fontship@latest

$ alias fontship=\'docker run -it --volume ""$(pwd):/data"" --user ""$(id -u):$(id -g)"" theleagueof/fontship:latest\'

$ ./configure
$ make docker

$ ./configure
$ make
$ sudo make install

$ fontship make all

$ fontship make otf

$ fontship make static

$ fontship make variable

$ fontship make variable-ttf

$ fontship make FooBar-Black.otf

$ fontship make dist
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
yi-Xu-0100/traffic-to-badge,"inputs:
  my_token:
    description: >
      Set up a personal access token to obtain the secret repository traffic data.
    required: true
  static_list:
    description: >
      Set up a list of repositories to get.
      Only when github.repository with setting into first item,
      it can be correct to be current repository name.
    required: false
    default: ${{ github.repository }}
  traffic_branch:
    description: >
      If empty traffic data will be backed up to the branch named traffic.
    required: false
    default: traffic
  views_color:
    description: >
      Set a hex or named color value for the views badge background.
    required: false
    default: brightgreen
  clones_color:
    description: >
      Set a hex or named color value for the clones badge background.
    required: false
    default: brightgreen
  views_week_color:
    description: >
      Set a hex or named color value for the views per week badge background.
    required: false
    default: brightgreen
  clones_week_color:
    description: >
      Set a hex or named color value for the clones per week badge background.
    required: false
    default: brightgreen
  total_views_color:
    description: >
      Set a hex or named color value for the total views badge background.
    required: false
    default: brightgreen
  total_clones_color:
    description: >
      Set a hex or named color value for the total clones badge background.
    required: false
    default: brightgreen
  total_views_week_color:
    description: >
      Set a hex or named color value for the total views per week badge background.
    required: false
    default: brightgreen
  total_clones_week_color:
    description: >
      Set a hex or named color value for the total clones per week badge background.
    required: false
    default: brightgreen
  logo:
    description: >
      Insert a named logo or simple-icon to the left of the label.
    required: false
    default: github
  year:
    description: >
      Set a year number for license year beginning.
      If empty, it will no beginning year.
    required: false

outputs:
  traffic_branch:
    description: >
      Origin traffic data branch name
  traffic_path:
    description: >
      Path to generate traffic data

name: traffic2badge
on:
  push:
    branches:
      - main
  schedule:
    - cron: '1 0 * * *' #UTC

jobs:
  run:
    name: Make GitHub Traffic to Badge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.3.4

      - name: Get Commit Message
        id: message
        uses: actions/github-script@v3.1.0
        env:
          FULL_COMMIT_MESSAGE: '${{ github.event.head_commit.message }}'
        with:
          result-encoding: string
          script: |
            var message = `${process.env.FULL_COMMIT_MESSAGE}`;
            core.info(message);
            if (message != '') return message;
            var time = new Date(Date.now()).toISOString();
            core.info(time);
            return `Get traffic data at ${time}`;

      - name: Set Traffic
        id: traffic
        uses: yi-Xu-0100/traffic-to-badge@v1.4.0
        with:
          my_token: ${{ secrets.TRAFFIC_TOKEN }}
          year: 2021

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ steps.traffic.outputs.traffic_branch }}
          publish_dir: ${{ steps.traffic.outputs.traffic_path }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          full_commit_message: ${{ steps.message.outputs.result }}

      - name: Show Traffic Data
        run: |
          echo ${{ steps.traffic.outputs.traffic_branch }}
          echo ${{ steps.traffic.outputs.traffic_path }}
          cd ${{ steps.traffic.outputs.traffic_path }}
          ls -a

version: 2
updates:
  - package-ecosystem: 'github-actions'
    directory: '/'
    schedule:
      interval: 'daily'
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
everlytic/branch-merge,"on:
  push:
    branches:
      - ""release/*""
jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: everlytic/branch-merge@1.1.2
        with:
          github_token: ${{ github.token }}
          source_ref: ${{ github.ref }}
          target_branch: \'master\'
          commit_message_template: \'[Automated] Merged {source_ref} into target {target_branch}\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
JonasAlfredsson/docker-on-tmpfs,"- name: Run Docker on tmpfs
  uses: JonasAlfredsson/docker-on-tmpfs@v1
  with:
    tmpfs_size: 5
    swap_size: 4
    swap_location: '/mnt/swapfile'

vendor_id\t: GenuineIntel
cpu family\t: 6
model\t\t: 85
model name\t: Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz
cpu MHz\t\t: 2095.197
cache size\t: 36608 KB
flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt avx512cd avx512bw avx512vl xsaveopt xsavec xsaves md_clear
bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit

              total        used        free      shared  buff/cache   available
Mem:          6.8Gi       484Mi       5.3Gi       9.0Mi       1.0Gi       6.0Gi
Swap:         4.0Gi          0B       4.0Gi

NAME          TYPE SIZE USED PRIO
/mnt/swapfile file   4G   0B   -2

NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda       8:0    0   14G  0 disk
\xe2\x94\x94\xe2\x94\x80sda1    8:1    0   14G  0 part /mnt
sdb       8:16   0   86G  0 disk
\xe2\x94\x9c\xe2\x94\x80sdb1    8:17   0 85.9G  0 part /
\xe2\x94\x9c\xe2\x94\x80sdb14   8:30   0    4M  0 part
\xe2\x94\x94\xe2\x94\x80sdb15   8:31   0  106M  0 part /boot/efi

Filesystem      Size  Used Avail Use% Mounted on
/dev/root        84G   53G   31G  63% /
devtmpfs        3.4G     0  3.4G   0% /dev
tmpfs           3.4G  4.0K  3.4G   1% /dev/shm
tmpfs           695M  1.1M  694M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           3.4G     0  3.4G   0% /sys/fs/cgroup
/dev/sdb15      105M  5.2M  100M   5% /boot/efi
/dev/sda1        14G  4.1G  9.0G  32% /mnt
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
abhinavsingh/setup-bazel,"steps:
- uses: actions/checkout@v3
- uses: bazelbuild/setup-bazelisk@v2
- name: Mount bazel cache  # Optional
  uses: actions/cache@v3
  with:
    path: ""~/.cache/bazel""
    key: bazel
- run: bazel build //...

- name: Run tests
  run: bazel test tests/...
  shell: bash
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
wangchucheng/git-repo-sync,"name: <action-name>

on: 
  - push
  - delete

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Git Repo Sync
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: wangchucheng/git-repo-sync@v0.1.0
      with:
        target-url: <target-url>
        target-username: <target-username>
        target-token: <target-token>
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
actions-automation/pull-request-responsibility,"name: pull-request-responsibility

on:
  check_run:
  check_suite:
  create:
  delete:
  deployment:
  deployment_status:
  fork:
  gollum:
  issue_comment:
  issues:
  label:
  milestone:
  page_build:
  project:
  project_card:
  project_column:
  public:
  pull_request_target:
    types:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - opened
      - edited
      - closed
      - reopened
      - synchronize
      - ready_for_review
      - locked
      - unlocked
      - review_requested
      - review_request_removed
  push:
  registry_package:
  release:
  status:
  watch:
  schedule:
    - cron: \'*/15 * * * *\'
  workflow_dispatch:

jobs:
  pull-request-responsibility:
    runs-on: ubuntu-latest
    name: pull-request-responsibility
    steps:
      - uses: actions-automation/pull-request-responsibility@main
        with:
          actions: ""assign,copy-labels-linked,merge"" # The actions to run.
          token: ${{ secrets.GITHUB_TOKEN }}

token: ${{ secrets.BOT_TOKEN }}

reviewers: ""reviews"" # The team to pull reviewers from for `request`.
num_to_request: 3 # The number of reviewers that `request` should request on new PRs.

actions: ""request,assign,copy-labels-linked,merge"" # The actions to run.

- uses: actions-automation/pull-request-responsibility@main
  with:
    actions: ""request,assign,copy-labels-linked,merge"" # The actions to run.
    token: ${{ secrets.BOT_TOKEN }}
    reviewers: ""reviews"" # The team to pull reviewers from for `request`.
    num_to_request: 3 # The number of reviewers that `request` should request on new PRs.
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
snow-actions/tweet,"steps:
  - name: Tweet
    uses: snow-actions/tweet@v1.4.0
    with:
      status: |
        Released ${{ github.event.release.name }}
        ${{ github.event.release.html_url }}
    env:
      CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
      CONSUMER_API_SECRET_KEY: ${{ secrets.TWITTER_CONSUMER_API_SECRET_KEY }}
      ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

env:
  CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
  CONSUMER_API_SECRET_KEY: ${{ secrets.TWITTER_CONSUMER_API_SECRET_KEY }}
  ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
  ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
steps:
  - uses: actions/checkout@v3
  - name: Tweet summary
    id: summary
    uses: snow-actions/tweet@v1.4.0
    with:
      status: |
        Released ${{ github.event.release.name }}
        ${{ github.event.release.html_url }}
      media_paths: |
        1st.png
        2nd.png
  - name: Tweet details
    uses: snow-actions/tweet@v1.4.0
    with:
      status: |
        Additional information
      in_reply_to_status_id: ${{ fromJSON(steps.summary.outputs.response).id_str }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
lauchacarro/Azure-Storage-Action,"

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v1
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.0.100'
    - uses: lauchacarro/Azure-Storage-Action@master
      with:
        enabled-static-website: 'true'
        folder: 'MyFolder'
        index-document: 'index.html'
        error-document: '404.html' # For Angular apps with routing enabled, this must point to the index.html file because the requested routes don't exist phyiscally and blob storage would throw a 404.
        connection-string: ${{ secrets.CONNECTION_STRING }}

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
ArtemSBulgakov/buildozer-action,"name: Build
on: [push, pull_request]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          workdir: test_app
          buildozer_version: stable

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{ steps.buildozer.outputs.filename }}

name: Build
on:
  push:
    branches-ignore:
      - data
      - gh-pages
    tags:
      - \'**\'
  pull_request:
    branches-ignore:
      - data
      - gh-pages
jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: master
      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          repository_root: master
          workdir: test_app
          buildozer_version: stable
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: ${{ steps.buildozer.outputs.filename }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: data
          ref: data # Branch name
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      - name: Push binary to data branch
        if: github.event_name == \'push\'
        run: python master/.ci/move_binary.py ""${{ steps.buildozer.outputs.filename }}"" master data bin

env:
  APP_ANDROID_ARCH: armeabi-v7a

- name: Cache Buildozer global directory
  uses: actions/cache@v2
  with:
    path: .buildozer_global
    key: buildozer-global-${{ hashFiles(\'test_app/buildozer.spec\') }} # Replace with your path

- name: Build with Buildozer
  uses: ArtemSBulgakov/buildozer-action@v1
  id: buildozer
  with:
    command: buildozer android debug
    workdir: src
    buildozer_version: stable

- name: Upload artifacts
  uses: actions/upload-artifact@v2
  with:
    name: package
    path: ${{ steps.buildozer.outputs.filename }}

- name: Checkout
  uses: actions/checkout@v2
  with:
    path: data
    ref: data # Branch name

- name: Set up Python
  uses: actions/setup-python@v2
  with:
    python-version: 3.7
    architecture: x64

- name: Push binary to data branch
  if: github.event_name == \'push\'
  run: python master/.ci/move_binary.py ""${{ steps.buildozer.outputs.filename }}"" master data bin

git checkout --orphan data
echo # Branch `data` > README.md
git add README.md
git commit -m ""Add Readme""
git push origin data

pip install pre-commit
pre-commit install

pre-commit run --all-files
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
zofrex/mirror-branch,"name: Mirror branch

on:
  push:
    branches: [ release-candidate ]

jobs:
  mirror-to-master:
    runs-on: ubuntu-latest
    steps:
    - uses: zofrex/mirror-branch@v1

name: Mirror branch

on:
  push:
    branches: [ release ]

jobs:
  mirror-to-master:
    runs-on: ubuntu-latest
    steps:
    - uses: zofrex/mirror-branch@v1
      with:
        target-branch: deployment
",0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
HarshCasper/validate-issues-over-pull-requests,"name: Check if a PR has a valid Issue

on:
  pull_request_target:
    types: [ edited, synchronize, opened, reopened ]

jobs:
  checker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Issue Validator
        uses: HarshCasper/validate-issues-over-pull-requests@v0.1.1
        id: validator
        with:
          prbody: ${{ github.event.pull_request.body }}
          prurl: ${{ github.event.pull_request.url }}

name: PR has a valid Issue?

on:
  pull_request_target:
    types: [ edited, synchronize, opened, reopened ]

jobs:
  checker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Issue Validator
        uses: HarshCasper/validate-issues-over-pull-requests@v0.1.1
        id: validator
        with:
          prbody: ${{ github.event.pull_request.body }}
          prurl: ${{ github.event.pull_request.url }}
          
      - name: PR has a valid Issue
        if: ${{ steps.validator.outputs.valid == 1 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRNUM: ${{ github.event.pull_request.number }}
        run: |
          gh pr edit $PRNUM --add-label ""PR:Ready-to-Review""
          gh pr edit $PRNUM --remove-label ""PR:No-Issue""
          
      - name: PR has no valid Issue
        if: ${{ steps.validator.outputs.valid == 0 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRNUM: ${{ github.event.pull_request.number }}
        run: |
          gh pr comment $PRNUM --body ""PR is not linked to any issue, please make the corresponding changes in the body.""
          gh pr edit $PRNUM --add-label ""PR:No-Issue""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sibiraj-s/action-eslint,"name: Lint

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci # or yarn install
      - uses: sibiraj-s/action-eslint@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # optional
          eslint-args: '--ignore-path=.gitignore --quiet'
          extensions: 'js,jsx,ts,tsx'
          annotations: true

steps:
  - uses: sibiraj-s/action-eslint@v3
    with:
      ignore-path: .eslintignore
      ignore-pattern: |
        dist/
        lib/

steps:
  - uses: sibiraj-s/action-eslint@v3
    with:
      eslint-args: '--ignore-path=.gitignore --quiet'
      ignore-path: .eslintignore
      ignore-pattern: |
        dist/
        lib/

steps:
  - uses: action@v2
    with:
      working-dir: apps/website

steps:
  - uses: action@v2
    with:
      all-files: true

steps:
  - uses: action@v2
    with:
      all-files: true
      eslint-args: '--ignore-path=.gitignore --quiet'
      ignore-path: .eslintignore # will be ignored since ignore-path is already given in eslint-args

steps:
  - uses: actions/checkout@v3
  - uses: dorny/paths-filter@v2
    id: filter
    with:
      filters: |
        eslintrc:
          - '.eslintrc*'

  - name: Run eslint on changed files
    if: steps.filter.outputs.eslintrc == 'false'
    uses: sibiraj-s/action-eslint@v2
    with:
      all-files: ${{ steps.filter.outputs.eslintrc == 'true' }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
erclu/check-crlf,"name: Example usage

on: push

jobs:
  example-workflow:
    name: Example workflow using the Check CRLF action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository contents
        uses: actions/checkout@v1

      - name: Use action to check for CRLF endings
        uses: erclu/check-crlf@v1
        with: # omit this mapping to use default path
          path: ./a-custom-path
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
adamkdean/simple-slack-notify,"- uses: edge/simple-slack-notify@master
  env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

- name: Simple notification
  uses: edge/simple-slack-notify@master
  with:
    text: \'This is the simplest notification\'

- name: Channel specific notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#alerts\'
    text: \'Something is happening and someone should probably panic\'

- name: Panic inducing notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#alerts\'
    text: \'Something is happening and someone should probably panic\'
    color: \'danger\'

- name: Panic Bot notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#alerts\'
    username: \'Panic Bot\'
    text: \'Something is happening and someone should probably panic\'
    color: \'danger\'

- name: Specifying what to panic about notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#alerts\'
    username: \'Panic Bot\'
    text: \'Something is happening and someone should probably panic\'
    color: \'danger\'
    fields: |
      [{ ""title"": ""Reason to panic"", ""value"": ""Deployed failed halfway through"" }]

- name: Specifying what to panic about notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#alerts\'
    username: \'Panic Bot\'
    text: \'Something is happening and someone should probably panic\'
    color: \'danger\'
    fields: |
      [{ ""title"": ""Reason to panic"", ""value"": ""Deployed failed halfway through"", ""short"": true },
       { ""title"": ""Timestamp"", ""value"": ""${Date.now()}"", ""short"": true }]

- name: Environment variable notification
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#example\'
    text: \'${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) has finished\'
    fields: |
      [{ ""title"": ""Repository"", ""value"": ""${env.GITHUB_REPOSITORY}"", ""short"": true },
       { ""title"": ""Branch"", ""value"": ""${env.BRANCH}"", ""short"": true }]

- name: Build notification
  if: always()
  uses: edge/simple-slack-notify@master
  with:
    channel: \'#builds\'
    status: ${{ job.status }}
    success_text: \'${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build completed successfully\'
    failure_text: \'${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed\'
    cancelled_text: \'${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled\'
    fields: |
      [{ ""title"": ""Repository"", ""value"": ""${env.GITHUB_REPOSITORY}"", ""short"": true },
       { ""title"": ""Branch"", ""value"": ""${env.BRANCH}"", ""short"": true }]

- name: Extract branch name
  shell: bash
  run: echo ""::set-env name=BRANCH::$(echo ${GITHUB_REF#refs/heads/} | sed \'s/\\//_/g\')""

${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}

{ ""title"": ""Action URL"", ""value"": ""${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}""}

MIT License

Copyright (c) 2020 Adam K Dean <adamkdean@googlemail.com>
                   Edge Network Technologies Ltd <core@edge.network>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
andresz1/size-limit-action,"""scripts"": {
  ""postinstall"": ""lerna bootstrap"",
  ""build"": ""lerna run build""
},

""size-limit"": [
  {
    ""path"": ""dist/index.js"",
    ""limit"": ""4500 ms""
  }
]

name: ""size""
on:
  pull_request:
    branches:
      - master
jobs:
  size:
    runs-on: ubuntu-latest
    env:
      CI_JOB_NUMBER: 1
    steps:
      - uses: actions/checkout@v1
      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  build_script: custom-build
  skip_step: install

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  clean_script: cleanup

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  script: yarn dlx size-limit --json

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  build_script: custom-build
  skip_step: install
  directory: client/

with:
  github_token: ${{ secrets.GITHUB_TOKEN }}
  directory: packages/client/
  package_manager: yarn
",0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
depot/setup-action,"jobs:
  job-name:
    steps:
      - uses: depot/setup-action@v1
      - run: depot ...

jobs:
  job-name:
    steps:
      - uses: depot/setup-action@v1
        with:
          version: 1.2.3
      - run: depot ...

jobs:
  job-name:
    steps:
      - uses: depot/setup-action@v1
      - run: depot build ...
        env:
          DEPOT_TOKEN: ${{ secrets.DEPOT_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
szymansd/auto-release-notes,"{{features}}
{{chores}}

name: Test Action

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test-correct:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test action
        uses: szymansd/auto-release-notes@v1.0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          description_template_filepath: './.github/templates/deployment.md'

",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
mnao305/chrome-extension-upload,"name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish webextension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build
      run: |
        npm ci
        npm run build
    - name: Upload & release
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: dist/file.zip
        extension-id: hogefuga(extension id)
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}

name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish webextension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build
      run: |
        npm ci
        npm run build
    - name: Upload & release
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: dist/*.zip
        extension-id: hogefuga(extension id)
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}
        glob: true

name: Test

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish webextension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build
      run: |
        npm ci
        npm run build
    - name: Upload & release
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: dist/file.zip
        extension-id: hogefuga(extension id)
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}
        publish: false

name: Test

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish webextension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build
      run: |
        npm ci
        npm run build
    - name: Upload & release
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: dist/file.zip
        extension-id: hogefuga(extension id)
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}
        publish-target: trustedTesters
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
snok/latest-python-versions,"- uses: snok/latest-python-versions@v1
  id: get-python-versions
  with:
    min-version: 3.7
    max-version: 3.10  # not required - defaults to latest
    include-prereleases: true  # not required - defaults to false

${{ steps.get-python-versions.outputs.latest-python-versions }}

name: Test

on: pull_request

jobs:
  linting:
    ...

  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}
    steps:
    - uses: snok/latest-python-versions@v1
      id: get-python-versions-action
      with:
        min-version: 3.8
        include-prereleases: true

  test:
    needs: [linting, get-python-versions]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
amondnet/vercel-action,"{
  ""version"": 2,
  ""public"": false,
  ""github"": {
    ""enabled"": false
  }
}


{
  ""builds"": [
    { ""src"": ""{{Source for distribution}}"", ""use"": ""@vercel/static"" }
  ]
}

vercel

? Set up and deploy \xe2\x80\x9c~/web/my-lovely-project\xe2\x80\x9d? [Y/n] y
? Which scope do you want to deploy to? My Awesome Team
? Link to existing project? [y/N] y
? What\xe2\x80\x99s the name of your existing project? my-lovely-project
\xf0\x9f\x94\x97 Linked to awesome-team/my-lovely-project (created .vercel and added it to .gitignore)

{""orgId"":""example_org_id"",""projectId"":""example_project_id""}

name: deploy website
on: [pull_request]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-args: \'--prod\' #Optional
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 
          working-directory: ./sub-directory

name: deploy website
on: [pull_request]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional 
          vercel-args: \'--prod\' #Optional
          vercel-org-id: ${{ secrets.ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required 
          working-directory: ./sub-directory #Your Working Directory, Optional
          alias-domains: | #Optional
            staging.angular.vercel-action.amond.dev
            pr-{{PR_NUMBER}}.angular.vercel-action.amond.dev

 - name: Vercel Action
   uses: amondnet/vercel-action@v19
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
saulmaldonado/skip-workflow,"name: \'NodeJS CI\'
on:
  push:
    pull_request:
      - main
      - master
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
      
        id: skip-workflow # id used for referencing step
        
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'skip-workflow\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

      - name: Test
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm test

name: \'NodeJS CI\'
on:
  push:
    pull_request:
      - main
      - master
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: /^\\[skip-workflow\\]/i # matches with commits starting with \'[skip-workflow]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

      - name: Test
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm test

name: \'NodeJS CI\'
on:
  push:
    pull_request:
      - main
      - master

jobs:
  skip-workflow:
    runs-on: ubuntu-latest

    outputs: # job outputs
      skip: ${{ steps.skip-workflow.outputs.skip }}

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[skip-workflow]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: skip-workflow # needs is required for reference and to prevent both jobs running at the same time

    if: ${{ !needs.skip-workflow.outputs.skip }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

name: \'NodeJS CI\'
on:
  push:
    pull_request:
      - main
      - master
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[skip-workflow]\'
          search: \'[""commit_messages"", ""pull_request""]\' # search commits and pr title
          pr-message: \'title\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

      - name: Test
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm test

name: \'NodeJS CI\'
on:
  push:
    branches:
      - main
      - master
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[skip-workflow]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

      - name: Test
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm test

name: \'NodeJS CI\'
on:
  push:
    branches:
      - main
      - master
jobs:
  skip-workflow:
    runs-on: ubuntu-latest

    outputs:
      skip: ${{ steps.skip-workflow.outputs.skip }}

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[skip-workflow]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: skip-workflow # needs is required for reference and to prevent both jobs running at the same time

    if: ${{ !needs.skip-workflow.outputs.skip }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm install

      - name: Build
        if: ${{ !steps.skip-workflow.outputs.skip }}
        run: npm run build

name: \'NodeJS CI\'
on:
  push:
    branches:
      - main
      - master
jobs:
  skip-workflow:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: skip-workflow
        id: skip-workflow # id used for referencing step
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[skip-workflow]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: build
        run: npm run build

      - name: test
        run: npm run test

with:
  phrase: \'[skip-workflow]\' # searches for phrase anywhere in text
  phrase: \'/^\\[skip-workflow\\]/i\'

with:
  search: \'[""commit_messages"", ""pull_request""]\' # any combination

with:
  search: \'[""pull_request""]\' # pull_request must be included in search option input array

  pr-message: \'title\' # default
  pr-message: \'body\'
  pr-message: \'title & body\'

with:
  github-token: ${{ secrets.GITHUB_TOKEN }}

with:
  fail-fast: \'false\' # default
  fail-fast: \'true\'

steps:
  - uses: actions/checkout@v2

  - name: skip-workflow
    id: skip-workflow # id used for referencing step
    uses: saulmaldonado/skip-workflow@v1
    with:
      phrase: \'[skip-workflow]\'
      github-token: ${{ secrets.GITHUB_TOKEN }}

  - name: test
    if: ${{ !steps.skip-workflow.outputs.skip }} # conditionally run following steps

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2

      - name: run-deploy
      
        id: run-deploy # id used for referencing step
        
        uses: saulmaldonado/skip-workflow@v1
        with:
          phrase: \'[deploy]\'
          github-token: ${{ secrets.GITHUB_TOKEN }}


      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: npm install

      - name: Build
        run: npm run build
       
      - name: Test
        run: npm test

      - name: Deploy
        if: ${{ steps.run-deploy.outputs.skip }} # This step will only run if `[deploy]` is found
        run: npm run deploy

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
Niraj-Kamdar/manylinux-wheel-builder,"name: pypi deployer
on:
  push:
    tags:
      - ""v*"" # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  Linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: build and upload manylinux wheels
        uses: Niraj-Kamdar/manylinux-wheel-builder@master

Matrix-build:
  runs-on: ${{ matrix.os }}
  env:
    TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
    TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  strategy:
    matrix:
      os: [macos-latest, windows-latest]
      python-version: [3.6, 3.7, 3.8]
  steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: build wheel
      run: |
        pip install wheel
        python setup.py bdist_wheel
    - name: upload wheel
      run: |
        pip install twine
        twine upload dist/*
      continue-on-error: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
CyberAndrii/setup-steamcmd,"steps:
- name: Setup steamcmd
  uses: CyberAndrii/setup-steamcmd@v1

- name: Update app
  run: steamcmd +login anonymous +app_update 1337 validate +quit
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
korelstar/xmllint-problem-matcher,"    - uses: korelstar/xmllint-problem-matcher@v1
",0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
dropseed/changerelease,"name: changerelease
on:
  workflow_dispatch: {}
  push:
    paths: [CHANGELOG.md]
    branches: [master]
    tags: [""*""]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - uses: dropseed/changerelease@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: v
        changelog: CHANGELOG.md

name: changerelease
on:
  workflow_dispatch: {}
  push:
    paths: [CHANGELOG.md]
    branches: [master]
    tags: [""*""]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker://pandoc/core:2.14
      with:
        args: ""CHANGELOG.rst -f rst -t markdown -o CR_CHANGELOG.md""

    - uses: dropseed/changerelease@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: v
        changelog: CR_CHANGELOG.md
        remote_changelog: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
suo/flake8-github-action,"name: Lint

on:
  push:
    paths:
      - '*.py'

jobs:
  flake8_py3:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.4
          architecture: x64
      - name: Checkout PyTorch
        uses: actions/checkout@master
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8_py3'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
XAMPPRocky/get-github-release,"- uses: XAMPPRocky/get-github-release@v1
  with:
    matches: unknown-linux-gnu
    owner: rust-lang
    repo: mdbook
    token: ""${{ secrets.GITHUB_TOKEN }}""

npm install

npm start

npm run build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
domjtalbot/skip-commit,"chore: update documentation [skip test-job]

name: Example workflow

on: pull_request

jobs:
  skip-commit:
    runs-on: ubuntu-20.04
    outputs:
      should-skip: ${{ steps.skip-commit.outputs.should-skip == \'true\' }}
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 2

      - id: skip-commit
        name: Skip Commit
        uses: domjtalbot/skip-commit@v1.0.0
        with:
          filter: \'""\\[skip test-job\\]""\'
  
  test:
    if: ${{ needs.skip-commit.outputs.should-skip != \'true\' }}
    needs: [skip-commit]
    runs-on: ubuntu-20.04
    steps:
      - name: Tests
        runs: echo Running tests...
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions-cool/emoji-helper,"name: Emoji Helper

on:
  release:
    types: [published]

jobs:
  emoji:
    runs-on: ubuntu-latest
    steps:
      - uses: actions-cool/emoji-helper@v1.0.0
        with:
          type: 'release'
          emoji: '+1, laugh, heart, hooray, rocket, eyes'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nrwl/nx-set-shas,"
jobs:
  myjob:
    runs-on: ubuntu-latest
    name: My Job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
    
      - run: |
          echo ""BASE: ${{ env.NX_BASE }}""
          echo ""HEAD: ${{ env.NX_HEAD }}""

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v3
    
      - run: |
          echo ""BASE: ${{ steps.setSHAs.outputs.base }}""
          echo ""HEAD: ${{ steps.setSHAs.outputs.head }}""


- uses: nrwl/nx-set-shas@v3
  with:
    main-branch-name: \'\'

    set-environment-variables-for-job: \'\'

    error-on-no-successful-workflow: \'\'

    last-successful-event: \'\'

    working-directory: \'\'

    workflow-id: \'\'

jobs:
  myjob:
    runs-on: ubuntu-latest
    name: My Job
    permissions:
      contents: \'read\'
      actions: \'read\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
technote-space/package-version-check-action,"on: push
name: Check package version
jobs:
  checkVersion:
    name: Check package version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          BRANCH_PREFIX: release/

on:
 push:
   tags:
     - 'v*'
name: Publish Package
jobs:
  release:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          COMMIT_DISABLED: 1
      - name: Install Package dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Publish
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

on: push
name: Check package version
jobs:
  checkVersion:
    name: Check package version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH_PREFIX: release/
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
magefile/mage-action,"name: mage

on:
  pull_request:
  push:

jobs:
  mage:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
      -
        name: Run Mage
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: build

name: mage

on:
  pull_request:
  push:

jobs:
  mage:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
      -
        name: Run Mage
        uses: magefile/mage-action@v2
        with:
          install-only: true
      -
        name: Show Mage version
        run: mage --version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
preactjs/compressed-size-action,"name: Compressed Size

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: preactjs/compressed-size-action@v2

{
  ""scripts"": {
    ""postinstall"": ""lerna bootstrap"",
    ""build"": ""lerna run build""
  }
}

name: Compressed Size

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: preactjs/compressed-size-action@v2
      with:
+       build-script: ""ci""

name: Compressed Size
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: preactjs/compressed-size-action@v2
      with:
        repo-token: ""${{ secrets.GITHUB_TOKEN }}""
+       clean-script: ""clean""

// package.json
{
  ""scripts"": {
    // example - a simple nested node_modules setup:
    ""postinstall"": ""cd packages && npm i"",
    // between the two builds, we need to delete the inner node_modules:
    ""clean"": ""rm -rf packages/node_modules""
  }
}

name: Compressed Size
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: preactjs/compressed-size-action@v2
      with:
+       pattern: ""./build-output/**/*.{js,css,html,json}""
+       exclude: ""{./build-output/manifest.json,**/*.map,**/node_modules/**}""

with:
  pattern: ""**/dist/**/*.js""

  exclude: ""{**/*.map,**/node_modules/**}""

strip-hash: ""\\\\b\\\\w{5}\\\\.""

strip-hash: ""\\\\.(\\\\w{5})\\\\.chunk\\\\.js$""

minimum-change-threshold: 100

compression: ""none""
",0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
firebelley/godot-export,"on: 
  push:
    tags:
      - ""v*""

jobs:
  export_game:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Export Game
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0
  
    - name: export game
      id: export
      uses: firebelley/godot-export@v5.2.0
      with:
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true

    - name: create release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*

- name: use custom editor settings
  run: |
    mkdir -p ~/.config/godot
    cp ~/path/to/my/editor_settings-3.tres ~/.config/godot/

- name: install wine
  id: wine_install
  run: |
    sudo apt install wine64
    echo ""WINE_PATH=$(which wine64)"" >> $GITHUB_OUTPUT


- name: export game
  uses: firebelley/godot-export@v5.2.0
  with:
    wine_path: ${{ steps.wine_install.outputs.WINE_PATH }} # set the wine path here which is the output of the wine_install step
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Reedyuk/NPM-Version,"name: run npm-version pipeline
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        
      - name: 'change version'
        uses: reedyuk/npm-version@1.1.1
        with:
          version: '1.0.1'
          package: 'subproject-directory/'
          git-tag-version: 'true'
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
filipstefansson/set-npm-token-action,"uses: filipstefansson/set-npm-token-action@v1
with:
  token: ${{ secrets.NPM_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
willcaul/jest-github-action,"uses: willcaul/jest-github-action@v2
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: willcaul/jest-github-action@v2
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  test-command: ""yarn test""

uses: willcaul/jest-github-action@v2
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  changes-only: true

uses: willcaul/jest-github-action@v2
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  coverage-comment: false

uses: willcaul/jest-github-action@v2
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
with:
  working-directory: ""frontend""
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
daneden/enable-automerge-action,"name: Enable automerge on dependabot PRs

on:
  pull_request_target:

jobs:
  automerge:
    name: Enable automerge on dependabot PRs
    runs-on: ubuntu-latest
    steps:
      - name: Enable automerge on dependabot PRs
        uses: daneden/enable-automerge-action@v1
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          allowed-author: ""dependabot[bot]""

          merge-method: MERGE
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
PostHog/check-package-version,"- name: Check out repository
  uses: actions/checkout@v2

- name: Check package version
  id: cpv
  uses: PostHog/check-package-version@v2

- name: Echo output
  run: |
      echo ""Committed version: ${{ steps.cpv.outputs.committed-version }}""
      echo ""Published version: ${{ steps.cpv.outputs.published-version }}""
      echo ""Is new version: ${{ steps.cpv.outputs.is-new-version }}""

name: \'Autopublish\'

on:
    push:
        branches:
            - main
            - master

jobs:
    autopublish:
        name: Publish release if package.json version was bumped
        runs-on: ubuntu-20.04
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Check package version
              id: cpv
              uses: PostHog/check-package-version@v2

            - name: Echo versions
              run: |
                  echo ""Committed version: ${{ steps.cpv.outputs.committed-version }}""
                  echo ""Published version: ${{ steps.cpv.outputs.published-version }}""

            - name: Install dependencies
              if: steps.cpv.outputs.is-new-version == \'true\'
              run: npm ci

            - name: Publish new version
              if: steps.cpv.outputs.is-new-version == \'true\'
              run: npm publish
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
djn24/add-asset-to-release,"- name: Upload
  uses: djn24/add-asset-to-release@v1
  with:
    token: ${{secrets.GITHUB_TOKEN}}
    path: 'path/to/binary'
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
danielchabr/pr-labels-checker,"    permissions:
      pull-requests: read
      checks: write

name: Labels Check
on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
jobs:
  QA-check:
    if: github.base_ref == 'master'
    runs-on: ubuntu-latest
    steps:
      - uses: danielchabr/pr-labels-checker@v3
        id: checkLabel
        with:
          hasSome: QA:tested,QA:skipped
          githubToken: ${{ secrets.GITHUB_TOKEN }}
  Do_not_merge-check:
    if: github.base_ref == 'master'
    runs-on: ubuntu-latest
    steps:
      - uses: danielchabr/pr-labels-checker@v3
        id: checkLabel
        with:
          hasNone: do not merge,blocked
          githubToken: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
mujo-code/puppeteer-headful,"name: CI
on: push
jobs:
  installDependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        uses: actions/setup-node@v2
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ""true""
        with:
          args: install
      - name: Test Code
        uses: mujo-code/puppeteer-headful@16.6.0
        env:
          CI: ""true""
        with:
          args: npm test

browser = await puppeteer.launch({
  args: [\'--no-sandbox\'],
  executablePath: process.env.PUPPETEER_EXEC_PATH, // set by docker container
  headless: false,
  ...
});
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
palmerhq/changecast,"action ""Build"" {
  uses = ""palmerhq/changecast@v1.0.0""
  env = {
    DEPLOY_URL = {DEPLOY_URL}
  }
  secrets = [
    ""GITHUB_TOKEN"",
  ]
}

action ""Publish with Netlify"" {
  needs = ""Build""
  uses = ""netlify/actions/cli@master""
  args = ""deploy --dir=./changecast --prod""
  secrets = [
    ""NETLIFY_AUTH_TOKEN"",
    ""NETLIFY_SITE_ID"",
  ]
}

<script src=""{DEPLOY_URL}/widget.js"" defer=""true""></script>

<button data-toggle-changecast=""true"">What\'s new?</button>
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
technote-space/release-github-actions,"
on: create

name: Release
jobs:
  release:
    name: Release GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/release-github-actions@v6

yarn install
yarn build
yarn install --production

yarn install
yarn build
yarn pack
yarn install --production

rm -rdf .[!.]*
rm -rdf *.js
rm -rdf *.mjs
rm -rdf *.ts
rm -rdf *.cts
rm -rdf *.json
rm -rdf *.lock
rm -rdf *.yml
rm -rdf *.yaml
rm -rdf __tests__ docs src
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
streetsidesoftware/cspell-action,"name: \'Check spelling\'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:

jobs:
  spellcheck: # run the action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: streetsidesoftware/cspell-action@v3

- uses: streetsidesoftware/cspell-action@v3
  with:
    github_token: \'\'

    files: \'\'

    check_dot_files: explicit

    root: \'.\'

    inline: warning

    strict: true

    incremental_files_only: true

    config: \'.\'

    verbose: false

{
  ""usePnP"": true,
  ""import"": [""@cspell/dict-medicalterms/cspell-ext.json""]
}

\'use strict\';
require(\'./.pnp.js\').setup(); // or \'./.pnp.cjs\'

/** @type { import(""@cspell/cspell-types"").CSpellUserSettings } */
const cspell = {
  description: \'Yarn 2 Aware cspell config\',
  import: [\'@cspell/dict-medicalterms/cspell-ext.json\'],
};
module.exports = cspell;

outputs:
  success:
    description: |
      ""true"" if no spelling issues were found, otherwise ""false"".
  number_of_files_checked:
    description: |
      The actual number of files that were checked.
  number_of_issues:
    description: |
      The number of issues found.
  number_of_files_with_issues:
    description: |
      The number of files that had issues.
  files_with_issues:
    description: |
      List of files with issues. Use `fromJSON()` to decode.
      The files are relative to the repository root.
  results:
    description: |
      The JSON encoded results.

{
  ""success"": ""false"",
  ""number_of_files_checked"": ""3"",
  ""number_of_issues"": ""2"",
  ""number_of_files_with_issues"": ""1"",
  ""files_with_issues"": ""[\\""src/withErrors.ts\\""]"",
  ""result"": ""{\\""success\\"":false,\\""number_of_issues\\"":2,\\""number_of_files_checked\\"":3,\\""files_with_issues\\"":[\\""src/withErrors.ts\\""]}""
}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
expo/expo-github-action,"on:
  push:
    branches:
      - main
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: \xf0\x9f\x8f\x97 Setup repo
        uses: actions/checkout@v3

      - name: \xf0\x9f\x8f\x97 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: \xf0\x9f\x8f\x97 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: \xf0\x9f\x93\xa6 Install dependencies
        run: yarn install

      - name: \xf0\x9f\x9a\x80 Create update
        run: eas update --auto --non-interactive

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: \xf0\x9f\x8f\x97 Setup repo
        uses: actions/checkout@v3

      - name: \xf0\x9f\x8f\x97 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: \xf0\x9f\x8f\x97 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: \xf0\x9f\x93\xa6 Install dependencies
        run: yarn install

      - name: \xf0\x9f\x9a\x80 Build app
        run: eas build --non-interactive

on: [pull_request]
jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: \xf0\x9f\x8f\x97 Setup repo
        uses: actions/checkout@v3

      - name: \xf0\x9f\x8f\x97 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: \xf0\x9f\x8f\x97 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: \xf0\x9f\x93\xa6 Install dependencies
        run: yarn install

      - name: \xf0\x9f\x9a\x80 Create preview
        uses: expo/expo-github-action/preview@v8
        with:
          command: eas update --auto
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
snyk/release-notes-preview,"name: Release-Notes-Preview

on:
  pull_request:
    branches: [ master ]
  issue_comment:
    types: [ edited ]

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow --tags
    - uses: snyk/release-notes-preview@v1.6.1
      with:
        releaseBranch: master
      env:
        GITHUB_PR_USERNAME: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
BetaHuhn/repo-file-sync-action,"name: Sync Files
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Run GitHub File Sync
        uses: BetaHuhn/repo-file-sync-action@v1
        with:
          GH_PAT: ${{ secrets.GH_PAT }}

user/repository:
  - .github/workflows/test.yml
  - .github/workflows/lint.yml

user/repository2:
  - source: workflows/stale.yml
    dest: .github/workflows/stale.yml

uses: BetaHuhn/repo-file-sync-action@latest

uses: BetaHuhn/repo-file-sync-action@v1

user/repo:
  - path/to/file.txt
user/repo2@develop:
  - path/to/file2.txt

user/repo:
  - .github/workflows/build.yml
  - LICENSE
  - .gitignore

user/repo:
  - source: workflows/build.yml
    dest: .github/workflows/build.yml
  - source: LICENSE.md
    dest: LICENSE

user/repo:
  - source: workflows/
    dest: .github/workflows/

user/repo:
  - source: workflows/
    dest: .github/workflows/
    exclude: |
      node.yml
      lint.yml

user/repo:
  - source: .github/workflows/lint.yml
    replace: false

user/repo:
  - source: src/README.md
    template:
      user:
        name: \'Maxi\'
        handle: \'@BetaHuhn\'


Created by {{ user.name }} ({{ user.handle }})


Created by Maxi (@BetaHuhn)

user/repo:
  - source: .github/workflows/child.yml
    template: true

{% extends \'./parent.yml\' %}

{% block some_block %}
This is some content
{% endblock %}

user/repo:
  - source: workflows/
    dest: .github/workflows/
    deleteOrphaned: true

group:
  repos: |
    user/repo
    user/repo1
  files: 
    - source: workflows/build.yml
      dest: .github/workflows/build.yml
    - source: LICENSE.md
      dest: LICENSE

group:
  - files:
      - source: workflows/build.yml
        dest: .github/workflows/build.yml
      - source: LICENSE.md
        dest: LICENSE
    repos: |
      user/repo1
      user/repo2

  - files: 
      - source: configs/dependabot.yml
        dest: .github/dependabot.yml
    repos: |
      user/repo3
      user/repo4

group:
  repos: |
    foo/bar@de
    foo/bar@es
    foo/bar@fr
  files:
    - source: .github/workflows/
      dest: .github/workflows/

user/repository:
  - LICENSE
  - .gitignore

group:
  repos: |
    user/repo1
    user/repo2
  files:
    - source: .github/workflows/
      dest: .github/workflows/

- name: Run GitHub File Sync
  uses: BetaHuhn/repo-file-sync-action@v1
  with:
    GH_PAT: ${{ secrets.GH_PAT }}
    PR_LABELS: |
      file-sync
      automerge

- name: Run GitHub File Sync
  uses: BetaHuhn/repo-file-sync-action@v1
  with:
    GH_PAT: ${{ secrets.GH_PAT }}
    ASSIGNEES: BetaHuhn

- name: Run GitHub File Sync
  uses: BetaHuhn/repo-file-sync-action@v1
  with:
    GH_PAT: ${{ secrets.GH_PAT }}
    REVIEWERS: |
      BetaHuhn
      BetaHuhnBot
    TEAM_REVIEWERS: engineering

https://custom.host/user/repo:
  - path/to/file.txt


group:
  - files:
      - source: path/to/file.txt
        dest: path/to/file.txt
    repos: |
      https://custom.host/user/repo

uses: BetaHuhn/repo-file-sync-action@v1
with:
    GH_PAT: ${{ secrets.GH_PAT }}
    BRANCH_PREFIX: custom-branch

- name: Run GitHub File Sync
  uses: BetaHuhn/repo-file-sync-action@v1
  with:
    GH_PAT: ${{ secrets.GH_PAT }}
    COMMIT_BODY: ""Change-type: patch""

\xf0\x9f\x94\x84 synced local \'<filename>\' with remote \'<filename>\'

Change-type: patch

- name: Run GitHub File Sync
  uses: BetaHuhn/repo-file-sync-action@v1
  with:
    GH_PAT: ${{ secrets.GH_PAT }}
    PR_BODY: This is your custom PR Body

synced local file(s) with GITHUB_REPOSITORY.

This is your custom PR Body

\xe2\x96\xb6 Changed files

---

This PR was created automatically by the repo-file-sync-action workflow run xxx.

uses: BetaHuhn/repo-file-sync-action@v1
with:
    GH_PAT: ${{ secrets.GH_PAT }}
    FORK: file-sync-bot

group:
  - files:
      - source: configs/dependabot.yml
        dest: .github/dependabot.yml
      - source: workflows/dependencies/dependabot.yml
        dest: .github/workflows/dependabot.yml
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/running-at
      BetaHuhn/spaces-cli
      BetaHuhn/metadata-scraper
      BetaHuhn/ejs-serve
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js

  - files:
      - source: configs/FUNDING.yml
        dest: .github/FUNDING.yml
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/running-at
      BetaHuhn/spaces-cli
      BetaHuhn/qrgen
      BetaHuhn/metadata-scraper
      BetaHuhn/ejs-serve
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js

  - files:
      - source: workflows/versioning/release-scheduler.yml
        dest: .github/workflows/release-scheduler.yml
      - source: workflows/versioning/release.yml
        dest: .github/workflows/release.yml
      - source: configs/release.config.js
        dest: release.config.js
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/metadata-scraper
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js

  - files:
      - source: workflows/issues/stale.yml
        dest: .github/workflows/stale.yml
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/running-at
      BetaHuhn/spaces-cli
      BetaHuhn/qrgen
      BetaHuhn/metadata-scraper
      BetaHuhn/ejs-serve
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js

  - files:
      - source: workflows/node/lint.yml
        dest: .github/workflows/lint.yml
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/running-at
      BetaHuhn/spaces-cli
      BetaHuhn/metadata-scraper
      BetaHuhn/ejs-serve
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js

  - files:
      - source: LICENSE
        dest: LICENSE
    repos: |
      BetaHuhn/do-spaces-action
      BetaHuhn/running-at
      BetaHuhn/spaces-cli
      BetaHuhn/qrgen
      BetaHuhn/metadata-scraper
      BetaHuhn/ejs-serve
      BetaHuhn/feedback-js
      BetaHuhn/drkmd.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
chabad360/htmlproofer,"...
      - name: Check HTML
        uses: chabad360/htmlproofer@master
        with:
          directory: ""./public""

...
      - name: Check HTML
        uses: chabad360/htmlproofer@master
        with:
          directory: ""./public""
          arguments: --allow-missing-href
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
srealmoreno/label-sync-action,"- name: breaking-change \xf0\x9f\x92\xa5
  color: \'#D93F0B\'
  description:
    A change that changes the API or breaks backward compatibility for
    users.
  aliases: [breaking]

- name: bug \xf0\x9f\x90\x9e
  color: d73a4a
  description:
    Inconsistencies or issues which will cause a problem for users or implementors.

- name: documentation \xf0\x9f\x93\x9d
  color: 0075ca
  description: Solely about the documentation of the project.

[
  // Support comments
  {
    // My label
    ""name"": ""breaking-change \xf0\x9f\x92\xa5"",
    ""color"": ""#D93F0B"",
    ""description"":
      ""A change that changes the API or breaks backward compatibility for users."",
    ""aliases"": [
      ""breaking""
    ]
  },
  {
    ""name"": ""bug \xf0\x9f\x90\x9e"",
    ""color"": ""d73a4a"",
    ""description"":
      ""Inconsistencies or issues which will cause a problem for users or implementors.""
  },
  {
    ""name"": ""documentation \xf0\x9f\x93\x9d"",
    ""color"": ""0075ca"",
    ""description"": ""Solely about the documentation of the project.""
  }
]

name: \xe2\x99\xbb\xef\xb8\x8f Sync Labels

on:
  workflow_dispatch:

jobs:
  labels:
    name: \xe2\x99\xbb\xef\xb8\x8f Sync labels
    runs-on: ubuntu-20.04
    steps:
      - name: \xe2\xa4\xb5\xef\xb8\x8f Check out code from GitHub
        uses: actions/checkout@v3

      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          repositories: |
            owner/repository-1
            owner/repository-2

          config-file: |
            .github/labels-1.yml
            .github/labels-2.yml
            https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

          clean-labels: false

...
    steps:
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          config-file: https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          auto-discover-repos: true

          exclude-repos: repo-1
          exclude-repos: |
            repository-1
            repository-2
          exclude-repos: /^repository-1$/u

          account-type: org | user

          owner: owner

          exclude-forked-repos: true

          exclude-archived-repos: true

          exclude-private-repos: true

          exclude-disabled-repos: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ory/closed-reference-notifier,"// workaround for https://github.com/ory/kratos/issues/364
dsn = `${dsn}&multiStatements=true`

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

// This prevents regression of github.com/testUser/testRepo/pull/420!!
t.Skip()

on:
  schedule:
    - cron: ""0 7 * * *""

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore: .git
          issueLabels: closed reference
          issueLimit: 5

$ npx https://github.com/ory/closed-reference-notifier.git local/path/to/repo ignore,list

on:
  workflow_dispatch:
    inputs:
      issueLimit:
        description: maximum number of issues to create
        required: true
        default: ""5""

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issueLimit: ${{ github.event.inputs.issueLimit || \'5\' }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
actions-cool/issues-similarity-analysis,"name: Issues Similarity Analysis

on:
  issues:
    types: [opened, edited]

jobs:
  similarity-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: analysis
        uses: actions-cool/issues-similarity-analysis@v1
        with:
          filter-threshold: 0.5
          title-excludes: \'bug, not, 1234\'
          comment-title: \'### See\'
          comment-body: \'${index}. ${similarity} #${number}\'

  ""similar-issues"": [
    { ""number"": 6, ""title"": ""bug 2"", ""similarity"": 1 },
    { ""number"": 10, ""title"": ""bug"", ""similarity"": 0.85 },
    { ""number"": 8, ""title"": ""bug"", ""similarity"": 0.85 }
  ],
  ""similar-issues-found"": ""true"",
  ""similar-issues-number"": ""6,10,8""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
wow-actions/use-app-token,"jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: \'any other action\'
        with:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.BOT_TOKEN }}
        env:
          GIT_AUTHOR_NAME: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]@users.noreply.github.com

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: \'any other action\'
        with:
          GITHUB_TOKEN: ${{ env.BOT_TOKEN }}
        env:
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com



jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          secret: true
          clean: true
      - uses: \'any other action\'
        with:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        env:
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_NAME }}[bot]@users.noreply.github.com
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ludeeus/dockerfile-updater,"name: Update Dockerfiles

on:
  schedule:
    - cron:  \'40 16 * * *\'
jobs:
  deploy:
    name: Update Dockerfiles
    runs-on: ubuntu-latest
    steps:
      - name: \xf0\x9f\x93\xa5 Checkout the repository
        uses: actions/checkout@v2

      - name: \xf0\x9f\x93\xa4 Update Dockerfiles
        uses: ludeeus/dockerfile-updater@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
akosbalasko/coffee-readme,"<!--START_SECTION:buy-me-a-coffee-->
<!--END_SECTION:buy-me-a-coffe-->

name: Buy Me A Coffee Readme
on:
  workflow_dispatch:
  schedule:
    - cron: ""0 0 * * *""
jobs:
  bmac-readme:
    name: Update Buy Me A Coffee section in this repo\'s README
    runs-on: ubuntu-latest
    steps:
      - uses: akosbalasko/coffee-readme@main
        with:
          BUY_ME_A_COFFEE_TOKEN: ${{ secrets.BUY_ME_A_COFFEE_TOKEN }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN }}
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
codepunkt/npm-lockfile-changes,"name: NPM Lockfile Changes
on: [pull_request]

jobs:
  lockfile_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NPM Lockfile Changes
        uses: codepunkt/npm-lockfile-changes@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          collapsibleThreshold: 25
          failOnDowngrade: false
          path: package-lock.json
          updateComment: true

jobs:
  ...:
    runs-on: ...
    permissions:
      pull-requests: write
    steps: ...
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Dirrk/action-docs,"name: Generate action docs
on:
  - pull_request
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Update README.md from action.yml
      uses: Dirrk/action-docs@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
baptiste0928/cargo-install,"- name: Install cargo-hack from crates.io
  uses: baptiste0928/cargo-install@v2
  with:
    crate: cargo-hack
    version: ""^0.5""  # You can specify any semver range

- name: Install cargo-sort from git
  uses: baptiste0928/cargo-install@v2
  with:
    crate: cargo-sort
    git: https://github.com/devinr528/cargo-sort
    tag: v1.0.9  # `branch` and `commit` are also supported

- name: Run cargo hack
  run: cargo hack --version

cargo-install-<crate>-<version or commit>-<hash>
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
giboow/action-aws-cli,"- name: S3 Sync
  uses: giboow/action-aws-cli@v1
  with:
    args: s3 sync --delete --acl public-read localdir/ s3://remote-bucket/
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ""eu-west-3""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
SchoofsKelvin/event-utilities,"- name: Run utilities
  id: utils
  uses: SchoofsKelvin/event-utilities@v1
  with:
    artifact_prefix: ""my-extension""
    artifact_extension: ""vsix""
    append_sha: true
- name: Build extension
  run: vsce package -o ${{ steps.utils.outputs.artifact_name }}
- name: Upload a Build Artifact
  uses: actions/upload-artifact@v2.2.1
  with:
    name: ${{ steps.utils.outputs.artifact_name }}
    path: ${{ steps.utils.outputs.artifact_name }}
    if-no-files-found: error
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
jarylc/github-app-token,"jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        id: generate_token
        uses: jarylc/github-app-token@v3.0.1
        with:
          app: ${{ secrets.GH_APP_NAME }}
          key: ${{ secrets.GH_APP_KEY }}
      - name: Use Token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo ""The generated token is masked: ${TOKEN}""
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
msimerson/node-lts-versions,"  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: [ 14, 16, 18 ]
      fail-fast: false
    steps:

  test:
    needs: get-lts
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: ${{ fromJson(needs.get-lts.outputs.lts) }}
      fail-fast: false
    steps:
  get-lts:
    runs-on: ubuntu-latest
    steps:
      - id: get
        uses: msimerson/node-lts-versions@v1
    outputs:
      active: ${{ steps.get.outputs.active }}
      lts: ${{ steps.get.outputs.lts }}
      min: ${{ steps.get.outputs.min }}

\xe2\x9c\x97 node main.js
::setOutput name=active::[""14"",""16"",""18""]
::setOutput name=lts::[""16"",""18""]
::setOutput name=min::""16""

const ltsv = require(\'node-lts-versions\')
ltsv.fetch().then(() => {
    console.log(ltsv.json())
    console.log(ltsv.yaml())
    ltsv.print()
})

[""14"",""16"",""18""]

[ \'14\', \'16\', \'18\' ]

> Ver Codename  Latest Release      LTS Period
14  Fermium   v14.19.3  2022-05-17  2020-10-27 to 2023-04-26
16  Gallium   v16.15.0  2022-04-26  2021-10-26 to 2024-04-25
18  Hydrogen  v18.12.0  2022-10-25  2022-04-18 to 2024-10-17
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ahmadnassri/action-dependabot-auto-merge,"name: auto-merge

on:
  pull_request:

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          target: minor
          github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      target: patch
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      target: minor
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: actions/checkout@v2
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      github-token: ${{ secrets.mytoken }}

- match:
    dependency_type: all
    update_type: ""semver:minor"" # includes patch updates!

- match:
    dependency_name: aws-sdk
    update_type: semver:minor

- match:
    dependency_type: development
    update_type: semver:minor # includes patch updates!

- match:
    dependency_type: production
    update_type: security:minor # includes patch updates!

- match:
    dependency_type: production
    update_type: semver:patch

- match:
    dependency_type: all
    update_type: semver:${TARGET}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
jetli/wasm-pack-action,"- uses: jetli/wasm-pack-action@v0.4.0
  with:
    version: \'latest\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
treosh/lighthouse-ci-action,"name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://example.com/
            https://example.com/blog
          budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

[
  {
    ""path"": ""/*"",
    ""resourceSizes"": [
      {
        ""resourceType"": ""document"",
        ""budget"": 18
      },
      {
        ""resourceType"": ""total"",
        ""budget"": 200
      }
    ]
  }
]

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://exterkamp.codes/\'
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""assert"": {
      ""assertions"": {
        ""first-contentful-paint"": [""error"", { ""minScore"": 0.6 }]
      }
    }
  }
}

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls and upload data to private lhci server
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://example.com/\'
          serverBaseUrl: ${{ secrets.LHCI_SERVER_URL }}
          serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls with lighthouserc
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://example.com/\'
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""collect"": {
      ""numberOfRuns"": 1,
      ""settings"": {
        ""chromeFlags"": ""--disable-gpu --no-sandbox --no-zygote""
      }
    }
  }
}

{
  ""ci"": {
    ""collect"": {
      ""numberOfRuns"": 1,
      ""settings"": {
        ""configPath"": ""./lighthouse-config.js""
      }
    }
  }
}

module.exports = {
  extends: \'lighthouse:default\',
  settings: {
    emulatedFormFactor: \'desktop\',
    audits: [{ path: \'metrics/first-contentful-paint\', options: { scorePODR: 800, scoreMedian: 1600 } }],
  },
}

name: Lighthouse
on: push
jobs:
  static-dist-dir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse against a static dist dir
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""collect"": {
      ""staticDistDir"": ""./dist""
    }
  }
}

name: Lighthouse CI for Netlify sites
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Wait for the Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1.4
        id: netlify
        with:
          site_name: \'gallant-panini-bc8593\'
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.netlify.outputs.url }}
            ${{ steps.netlify.outputs.url }}/products/
          budgetPath: ./budget.json
          uploadArtifacts: true

name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse and test budgets
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://pr-$PR_NUMBER.staging-example.com/
            https://pr-$PR_NUMBER.staging-example.com/blog
          budgetPath: ./budgets.json
          temporaryPublicStorage: true
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

name: Lighthouse CI with a plugin
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install # install dependencies, that includes Lighthouse plugins
      - name: Audit URLs with Field Performance Plugin
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://www.example.com/
          configPath: \'.lighthouserc.json\'
          temporaryPublicStorage: true

{
  ""ci"": {
    ""collect"": {
      ""settings"": {
        ""plugins"": [""lighthouse-plugin-field-performance""]
      }
    }
  }
}

{
  ""devDependencies"": {
    ""lighthouse-plugin-field-performance"": ""^2.0.1""
  }
}

name: LHCI-output-webhook
on: push
jobs:
  output-webhook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use output for sending data to API.
        id: LHCIAction
        uses: ./
        with:
          urls: |
            https://treo.sh/
      - name: Webhook
          uses: denar90/webhook-action@0.1.1
          with:
            webhookUrl: ${{secrets.ACTION_WEBHOOK_URL}}
            data: \'{ ""links"": ${{steps.LHCIAction.outputs.links}}, ""manifest"": ${{steps.LHCIAction.outputs.manifest}} }\'

name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: [self-hosted, your-custom-label]
    steps:
      - uses: actions/checkout@v3
      - name: install Node.js

      - uses: browser-actions/setup-chrome@latest

      - run: chrome --version
        uses: actions/setup-node@v3
        with:
          node-version: ${{YOUR_REQUIRED_NODE_JS_VERSION}}

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://example.com/
            https://example.com/blog
        [...]


jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate URLs
        id: urls
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const globber = await glob.create(\'elements/*/demo/*.html\');
            const files = await globber.glob();
            const urls = files
              .map(x => x.match(/([\\w-]+)/)[1])
              .map(x => `${${{ env.DOMAIN }}}/components/${x}/demo/`)
              .join(\'\
\');
            core.setOutput(\'urls\', urls);

      - name: Lighthouse CI Action
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v8
        with:
          urls: |
            ${{ steps.urls.outputs.urls }}


urls: |
  https://example.com/
  https://example.com/blog
  https://example.com/pricing

uploadArtifacts: true

temporaryPublicStorage: true

budgetPath: ./budget.json

runs: 3

configPath: ./lighthouserc.json

serverBaseUrl: ${{ secrets.LHCI_SERVER_BASE_URL }}
serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}

basicAuthUsername: ${{ secrets.LHCI_SERVER_BASIC_AUTH_USERNAME }}
basicAuthPassword: ${{ secrets.LHCI_SERVER_BASIC_AUTH_PASSWORD }}

/Users/lighthouse-ci-action/.lighthouseci

{
  \'https://treo.sh/\': \'https://storage.googleapis.com/lighthouse-infrastructure.appspot.com/reports/1593981455963-59854.report.html\'
  ...
}

[
  {
    name: \'maxNumericValue\',
    expected: 61440,
    actual: 508455,
    values: [508455],
    operator: \'<=\',
    passed: false,
    auditProperty: \'total.size\',
    auditId: \'resource-summary\',
    level: \'error\',
    url: \'https://treo.sh/\',
    auditTitle: \'Keep request counts low and transfer sizes small\',
    auditDocumentationLink: \'https://developers.google.com/web/tools/lighthouse/audits/budgets\',
  },
  ...
]

[
  {
    ""url"": ""https://treo.sh/"",
    ""isRepresentativeRun"": true,
    ""htmlPath"": ""/Users/lighthouse-ci-action/.lighthouseci/treo_sh-_-2020_07_05_20_37_18.report.html"",
    ""jsonPath"": ""/Users/lighthouse-ci-action/.lighthouseci/treo_sh-_-2020_07_05_20_37_18.report.json"",
    ""summary"": { ""performance"": 0.99, ""accessibility"": 0.98, ""best-practices"": 1, ""seo"": 0.96, ""pwa"": 0.71 }
  }
]
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
generates/changeset-action,"name: Changeset
on:
  pull_request:
    types: [labeled]
jobs:
  changeset:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changeset
        uses: generates/changeset-action@v3.0.0
      - name: Commit Changes
        uses: generates/commit-action@v1.0.1
        with:
          token: ${{ secrets.GH_PAT }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lirantal/is-website-vulnerable,"npx is-website-vulnerable https://example.com [--json] [--js-lib] [--mobile|--desktop] [--chromePath] [--cookie] [--token]

$ npx is-website-vulnerable
Woops! You forgot to provide a URL of a website to scan.
? Please provide a URL to scan: \xe2\x80\xba https://example.com
...

git clone https://github.com/lirantal/is-website-vulnerable.git

cd is-website-vulnerable

docker build --no-cache -t lirantal/is-website-vulnerable:latest .

docker run --rm -e SCAN_URL=""https://www.google.com/"" lirantal/is-website-vulnerable:latest

docker run --rm lirantal/is-website-vulnerable:latest https://www.google.com --json

name: Test site for publicly known js vulnerabilities

on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Test for public javascript library vulnerabilities 
        uses: lirantal/is-website-vulnerable@main
        with:
          scan-url: ""https://yoursite.com""

npm install -g is-website-vulnerable
",0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
strumwolf/delete-deployment-environment,"name: \xf0\x9f\xa7\xbc Clean up environment
on:
pull_request:
  types:
    - closed
jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: \xf0\x9f\x8e\x9f Get GitHub App token
        uses: navikt/github-app-token-generator@a3831f44404199df32d8f39f7c0ad9bb8fa18b1c
        id: get-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: \xf0\x9f\x97\x91 Delete deployment environment
        uses: strumwolf/delete-deployment-environment@v2.2.3
        with:
          token: ${{ steps.get-token.outputs.token }}
          environment: pr-${{ github.event.number }}
          ref: ${{ github.ref_name }}

name: Delete Environment (default settings)

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name

name: Delete Deployments

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          onlyRemoveDeployments: true

name: Delete Deployments Ref

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          ref: my-branch
          onlyRemoveDeployments: true

name: Set deployements to inactive

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          onlyDeactivateDeployments: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
DanielTamkin/HasLabel,"
name: Has label

on:
 pull_request:
  types:
    - opened
    - synchronize
    - labeled
    - unlabeled
  branches:
    - main

jobs:
 haslabel:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2
    - name: Labeled to preview
      id: haslabel
      uses: DanielTamkin/HasLabel@v1.0.4
      with:
        contains: \'preview\'
    - name: Test action
      if: steps.haslabel.outputs.labeled-preview
      run: echo \'This pull_request has this label.\'
    - name: Test action ""no match""
      if: steps.haslabel.outputs.labeled-preview != \'true\'
      run: echo \'This pull_request does not have this label.\'
    - name: Test action ""unlabeled""
      if: steps.haslabel.outputs.unlabeled
      run: echo \'This pull_request had this label removed.\'




with:
  contains: \'label\' # a label contains this string
  exact: \'label\'    # a label contains exactly this string.


  - name: Test action ""no match""
    if: steps.haslabel.outputs.labeled-preview
    run: echo \'Handle a unlabeled event\'

  - name: Test action ""no match""
    if: steps.haslabel.outputs.unlabeled-preview
    run: echo \'Handle a unlabeled event\'

name: Preview

on:
 pull_request:
  types:
    - opened
    - synchronize
    - labeled
    - unlabeled
  branches:
    - master

jobs:
  haslabel:
    name: analyse labels
    runs-on: ubuntu-latest
    outputs:
      preview: ${{ steps.haslabel.outputs.labeled-preview }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Labeled to preview
        id: haslabel
        uses: DanielTamkin/HasLabel@v1.0.4
        with:
          contains: \'preview\'
  deploy:
    name: deploy
    needs: haslabel
    if: needs.haslabel.outputs.preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
christianvuerings/add-labels,"name: Add Label
on:
  pull_request:
    branches:
      - master
    types:
      - opened

jobs:
  add-label:
    name: Add Label
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: christianvuerings/add-labels@v1
        with:
          labels: |
            minor release
            bug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

npm i
npm i -g @zeit/ncc
ncc build index.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
geritol/match-tag-to-package-version,"name: Release

on:
  push:
    tags:
      - ""*""

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: match-tag-to-package-version
        id: match-tag-to-package-version
        uses: geritol/match-tag-to-package-version@0.2.0
        with:
          TAG_PREFIX: v # Optional, default prefix is """"
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
appleboy/gh-pages-action,"name: Deploy the static file to GitHub Page
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: deploy docs
      uses: ./
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        remote_url: https://github.com/appleboy/gh-pages-action.git

 D Dockerfile
 D LICENSE
 D README.md
 D action.yml
 D docs/index.html
 D entrypoint.sh
?? index.html
+ git add .
+ git commit -m commit 6b0497a3b6f0f975c605c28950dbe15dedf4e8f0
Author: Bo-Yi Wu <***.tw@gmail.com>
Date:   Sat Mar 7 20:25:50 2020 +0800

    chore: update

[gh-pages f156e8c] commit 6b0497a3b6f0f975c605c28950dbe15dedf4e8f0 Author: Bo-Yi Wu <***.tw@gmail.com> Date:   Sat Mar 7 20:25:50 2020 +0800
 7 files changed, 94 deletions(-)
 delete mode 100644 .github/workflows/ci.yml
 delete mode 100644 Dockerfile
 delete mode 100644 LICENSE
 delete mode 100644 README.md
 delete mode 100644 action.yml
 delete mode 100755 entrypoint.sh
 rename docs/index.html => index.html (100%)
+ git push origin HEAD:gh-pages
To https://github.com/***/gh-pages-action.git
   bd265c2..f156e8c  HEAD -> gh-pages

- name: deploy to target directory
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    target_directory: 2020

- name: exclude list
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    target_directory: ignore
    exclude: ignore.html

- name: deploy to target directory
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    commit_author: foo
    commit_author_email: bar@foobar.com
    target_directory: 2020
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
AnandChowdhary/release-scheduler,"name: Release Scheduler
on:
  schedule:
    - cron: ""0 0 * * 1""
jobs:
  releaseScheduler:
    runs-on: ubuntu-latest
    steps:
      - name: Run release-scheduler
        uses: koj-co/release-scheduler@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ishworkh/docker-image-artifact-download,"- name: Download an image
  uses: ishworkh/container-image-artifact-download@v1.0.0
  with:
    image: ""test_image:latest""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""


...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
        workflow_run_id: ""234343434234234""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
        workflow_event: ""dispatch_workflow""
        branch: ""main""
        commit_sha: ""8471d40bfc4d0abc8409ba9391bb592bd0f1deb4""
        workflow_conclusion: ""success""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        repository: ""owner/my-repo""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
lra/setup-kubeval,"- uses: lra/setup-kubeval@v1
- run: kubeval some.yaml

- uses: lra/setup-kubeval@v1
  with:
    version: 0.15.0
- run: cat some.yaml | kubeval
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions-cool/pr-welcome,"name: PR Welcome

on:
  pull_request_target:
    types: [opened, edited, reopened]

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions-cool/pr-welcome@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          refuse-issue-label: 'xxx'
          need-creator-authority: 'write'
          comment: |
            HI ~

            \xe4\xbd\xa0\xe5\xa5\xbd~
          emoji: '+1, -1, heart'
          reviewers: 'user1, user2'
          review-creator: false
          close: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
actions-cool/ci-notice,"name: CI Notice

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@main

      - uses: actions-cool/ci-notice@v1
        with:
          ci: |
            npm install
            npm run build
          notice-types: 'dingding, issue'
          dingding-token: ${{ secrets.DINGDING_TOKEN }}
          issue-labels: 'x1, x2'
          issue-assignees: 'people1, people2'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ludeeus/setup-homeassistant,"- name: \xf0\x9f\x91\xb7 Setup Home Assistant
  id: homeassistant
  uses: ludeeus/setup-homeassistant@main

name: home-assistant-check

on:
  pull_request:
    branches: 
    - main
  push:
    branches: 
    - main

jobs:
  check:
    name: With config-dir
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - stable
          - beta
          - dev
    steps:
      - name: \xf0\x9f\x93\xa5 Check out the repository
        uses: actions/checkout@v2

      - name: \xf0\x9f\x91\xb7 Setup Home Assistant
        id: homeassistant
        uses: ludeeus/setup-homeassistant@main
        with:
          tag: ${{ matrix.channel }}
          config-dir: test_configuration

      - name: \xe2\x9c\x85 Verify API Access
        run: | 
          curl -sSL -f -X GET \\
            -H ""Authorization: Bearer ${{ steps.homeassistant.outputs.token }}"" \\
            -H ""Content-Type: application/json"" \\
            ${{ steps.homeassistant.outputs.url }}/api/states

      - name: \xf0\x9f\x93\x9c Get logs
        run: docker logs ${{ steps.homeassistant.outputs.containername }}

uses: ludeeus/setup-homeassistant@xx.xx.x
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Logerfo/triage-action,"name: Triage
on: 
  issues:
    types: [opened, closed, milestoned, demilestoned]
  project_card:
    types: [created, deleted]
    
jobs:
  build:
    name: Triage
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/triage-action@0.0.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

name: Triage
on: 
  issues: 
    types: [opened, closed, milestoned, demilestoned] # The last two are not needed if milestone is set to false
  project_card: # Not needed if project is set to false
    types: [created, deleted]
    
jobs:
  build:
    name: Triage
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/triage-action@0.0.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # The `GITHUB_TOKEN` secret.
        label: triage # The triage label of your repository.
        project: true # Enable or disable the idea that adding an issue to a project drops its triage state.
        milestone: true # Enable or disable the idea that setting a milestone to an issue drops its triage state.
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Logerfo/close-action,"name: Close
on: 
  pull_request:
    types: [closed]
    
jobs:
  build:
    name: Close
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/close-action@0.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

name: Close
on: 
  pull_request:
    types: [closed]
    
jobs:
  build:
    name: Close
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/close-action@0.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # The `GITHUB_TOKEN` secret.
        comment: true # If `true`, will comment on the closing issue(s).
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
derekprior/add-autoresponse,"name: Issue Autoresponse

on:
  issues:
    types: [opened]

jobs:
  auto-response:
    runs-on: ubuntu-latest

    steps:
    - uses: derekprior/add-autoresponse@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        respondableId: ${{ github.event.issue.node_id }}
        response: ""Maintenance Mode!""
        author: ${{ github.event.issue.user.login }}
        exemptedAuthors: ""johnsmith, janedoe""

  
name: Auto message on pr merge

on:
  pull_request_target:
    types: [closed]

jobs:
  auto-response:
    runs-on: ubuntu-latest

    steps:
    - uses: derekprior/add-autoresponse@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        respondableId: ${{ github.event.pull_request.node_id }}
        response: ""Well Done !! Thank you @${{ github.event.pull_request.user.login }} for your contribution :)""
        author: ${{ github.event.pull_request.user.login }}
        exemptedAuthors: ""johnsmith, janedoe""
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
undergroundwires/bump-everywhere,"- uses: undergroundwires/bump-everywhere@master
  with:
    repository: \'\'

    user: \'\'

    commit-message: \'\'

    git-token: \'\'

    release-type: \'\'

    release-token: \'\'

    branch: \'\'

  args=(
    --repository ""undergroundwires/privacy.sexy""
    --user ""bot-user""
    --git-token ""GitHub PAT for pushes""
    --release-type ""prerelease""
    --release-token ""GitHub PAT for releases""
    --commit-message ""\xe2\xac\x86\xef\xb8\x8f bump to {{version}}""
    --branch \'custom branch name\'
  )
  docker run undergroundwires/bump-everywhere ""${args[@]}""

  git commit -m ""bumped version to 1.4.0"" --allow-empty
  git tag 1.4.0
  git push && git push origin 1.4.0

[![Auto-versioned by bump-everywhere](https://github.com/undergroundwires/bump-everywhere/blob/master/badge.svg?raw=true)](https://github.com/undergroundwires/bump-everywhere)
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gitopia/gitopia-mirror-action,"name: Mirror to Gitopia

on:
  push:
    branches:
      - \'**\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Push to Gitopia mirror
        uses: gitopia/gitopia-mirror-action@v0.5.0
        with:
          gitopiaWallet: ""${{ secrets.GITOPIA_WALLET }}""
          remoteUrl: ""gitopia://gitopia10j4ryjjna69hvsrahgvhwjv3dd46tt6xuprguq/gitopia-mirror-action""

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
sebastianpopp/discord-action,"name: Deploy
on: push
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: discord
      uses: sebastianpopp/discord-action@releases/v2
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: ${{ github.repository }} has been successfullly deployed.
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
c2corg/browserslist-update-action,"name: Update Browserslist database

on:
  schedule:
    - cron: \'0 2 1,15 * *\'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-browserslist-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure git
        run: |
          git config --global user.email ""action@github.com""
          git config --global user.name ""GitHub Action""
      - name: Update Browserslist database and create PR if applies
        uses: c2corg/browserslist-update-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: browserslist-update
          base_branch: main
          commit_message: \'build: update Browserslist db\'
          title: \'build: update Browserslist db\'
          body: Auto-generated by [browserslist-update-action](https://github.com/c2corg/browserslist-update-action/)
          labels: \'chores, github action\'

npm run lint
npm run build
npm run pack

npm run all
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
MobSF/mobsfscan,"$ mobsfscan
usage: mobsfscan [-h] [--json] [--sarif] [--sonarqube] [--html] [--type {android,ios,auto}] [-o OUTPUT] [-c CONFIG] [-w] [--no-fail] [-v] [path ...]

positional arguments:
  path                  Path can be file(s) or directories with source code

optional arguments:
  -h, --help            show this help message and exit
  --json                set output format as JSON
  --sarif               set output format as SARIF 2.1.0
  --sonarqube           set output format compatible with SonarQube
  --html                set output format as HTML
  --type {android,ios,auto}
                        optional: force android or ios rules explicitly
  -o OUTPUT, --output OUTPUT
                        output filename to save the result
  -c CONFIG, --config CONFIG
                        location to .mobsf config file
  -w, --exit-warning    non zero exit code on warning
  --no-fail             force zero exit code, takes precedence over --exit-warning
  -v, --version         show mobsfscan version

$ mobsfscan tests/assets/src/
- Pattern Match \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 3
- Semantic Grep \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 37

mobsfscan: v0.3.0 | Ajin Abraham | opensecurity.in
\xe2\x95\x92\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa4\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x95
\xe2\x94\x82 RULE ID      \xe2\x94\x82 android_webview_ignore_ssl                                                                                                                             \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 DESCRIPTION  \xe2\x94\x82 Insecure WebView Implementation. WebView ignores SSL Certificate errors and accept any SSL Certificate. This application is vulnerable to MITM attacks \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 TYPE         \xe2\x94\x82 RegexAnd                                                                                                                                               \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 PATTERN      \xe2\x94\x82 [\'onReceivedSslError\\\\(WebView\', \'\\\\.proceed\\\\(\\\\);\']                                                                                                  \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 SEVERITY     \xe2\x94\x82 ERROR                                                                                                                                                   \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 INPUTCASE    \xe2\x94\x82 exact                                                                                                                                                  \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 CVSS         \xe2\x94\x82 7.4                                                                                                                                                    \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 CWE          \xe2\x94\x82 CWE-295 Improper Certificate Validation                                                                                                                \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 OWASP-MOBILE \xe2\x94\x82 M3: Insecure Communication                                                                                                                             \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 MASVS        \xe2\x94\x82 MSTG-NETWORK-3                                                                                                                                         \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 REF          \xe2\x94\x82 https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#webview-server-certificate-verification                \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 FILES        \xe2\x94\x82 \xe2\x95\x92\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa4\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x95                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 File           \xe2\x94\x82 ../test_files/android_src/app/src/main/java/opensecurity/webviewignoressl/MainActivity.java \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match Position \xe2\x94\x82 1480 - 1491                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Line Number(s) \xe2\x94\x82 50                                                                                          \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match String   \xe2\x94\x82 .proceed();                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 File           \xe2\x94\x82 ../test_files/android_src/app/src/main/java/opensecurity/webviewignoressl/MainActivity.java \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match Position \xe2\x94\x82 1331 - 1357                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Line Number(s) \xe2\x94\x82 46                                                                                          \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match String   \xe2\x94\x82 onReceivedSslError(WebView                                                                  \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x95\x98\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa7\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9b                                       \xe2\x94\x82
\xe2\x95\x98\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa7\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9b

>>> from mobsfscan.mobsfscan import MobSFScan
>>> src = \'tests/assets/src/java/java_vuln.java\'
>>> scanner = MobSFScan([src], json=True)
>>> scanner.scan()
{
    \'results\': {
        \'android_logging\': {
            \'files\': [{
                \'file_path\': \'tests/assets/src/java/java_vuln.java\',
                \'match_position\': (13, 73),
                \'match_lines\': (19, 19),
                \'match_string\': \'            Log.d(""htbridge"", ""getAllRecords(): "" + records.toString());\'
            }],
            \'metadata\': {
                \'cwe\': \'CWE-532 Insertion of Sensitive Information into Log File\',
                \'owasp-mobile\': \'M1: Improper Platform Usage\',
                \'masvs\': \'MSTG-STORAGE-3\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#logs\',
                \'description\': \'The App logs information. Please ensure that sensitive information is never logged.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_certificate_pinning\': {
            \'metadata\': {
                \'cwe\': \'CWE-295 Improper Certificate Validation\',
                \'owasp-mobile\': \'M3: Insecure Communication\',
                \'masvs\': \'MSTG-NETWORK-4\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4\',
                \'description\': \'This App does not use TLS/SSL certificate or public key pinning to detect or prevent MITM attacks in secure communication channel.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_root_detection\': {
            \'metadata\': {
                \'cwe\': \'CWE-919 - Weaknesses in Mobile Applications\',
                \'owasp-mobile\': \'M8: Code Tampering\',
                \'masvs\': \'MSTG-RESILIENCE-1\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1\',
                \'description\': \'This App does not have root detection capabilities. Running a sensitive application on a rooted device questions the device integrity and affects users data.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_prevent_screenshot\': {
            \'metadata\': {
                \'cwe\': \'CWE-200 Information Exposure\',
                \'owasp-mobile\': \'M2: Insecure Data Storage\',
                \'masvs\': \'MSTG-STORAGE-9\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9\',
                \'description\': \'This App does not have capabilities to prevent against Screenshots from Recent Task History/ Now On Tap etc.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_safetynet_api\': {
            \'metadata\': {
                \'cwe\': \'CWE-353 Missing Support for Integrity Check\',
                \'owasp-mobile\': \'M8: Code Tampering\',
                \'masvs\': \'MSTG-RESILIENCE-1\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1\',
                \'description\': ""This App does not uses SafetyNet Attestation API that provides cryptographically-signed attestation, assessing the device\'s integrity. This check helps to ensure that the servers are interacting with the genuine app running on a genuine Android device. "",
                \'severity\': \'INFO\'
            }
        },
        \'android_detect_tapjacking\': {
            \'metadata\': {
                \'cwe\': \'CWE-200 Information Exposure\',
                \'owasp-mobile\': \'M1: Improper Platform Usage\',
                \'masvs\': \'MSTG-PLATFORM-9\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9\',
                \'description\': ""This app does not has capabilities to prevent tapjacking attacks. An attacker can hijack the user\'s taps and tricks him into performing some critical operations that he did not intend to."",
                \'severity\': \'INFO\'
            }
        }
    },
    \'errors\': []
}

---
- ignore-filenames:
  - skip.java

  ignore-paths:
  - __MACOSX
  - skip_dir

  ignore-rules:
  - android_kotlin_logging
  - android_safetynet_api
  - android_prevent_screenshot
  - android_detect_tapjacking
  - android_certificate_pinning
  - android_root_detection
  - android_certificate_transparency

  severity-filter:
  - WARNING
  - ERROR

String password = ""strong password""; // mobsf-ignore: hardcoded_password

name: mobsfscan

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: mobsfscan
      uses: MobSF/mobsfscan@main
      with:
        args: \'. --json\'

name: mobsfscan sarif
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  mobsfscan:
    runs-on: ubuntu-latest
    name: mobsfscan code scanning
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: mobsfscan
      uses: MobSF/mobsfscan@main
      with:
        args: \'. --sarif --output results.sarif || true\'
    - name: Upload mobsfscan report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif

stages:
    - test
mobsfscan:
    image: python
    before_script:
        - pip3 install --upgrade mobsfscan
    script:
        - mobsfscan .

language: python
install:
    - pip3 install --upgrade mobsfscan
script:
    - mobsfscan .

version: 2.1
jobs:
  mobsfscan:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - run:
          name: Install mobsfscan
          command: pip install --upgrade mobsfscan
      - run:
           name: mobsfscan check
           command: mobsfscan .

docker pull opensecurity/mobsfscan
docker run -v /path-to-source-dir:/src opensecurity/mobsfscan /src

docker build -t mobsfscan .
docker run -v /path-to-source-dir:/src mobsfscan /src
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
nearform/github-action-notify-release,"name: notify-release
on:
  workflow_dispatch:
  release:
    types: [published]
  issues:
    types: [closed]
  schedule:
    - cron: '30 8 * * *'
jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Notify release
        uses: nearform-actions/github-action-notify-release@v1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
ZanderZhao/gitbook-action,"name: 'Gitbook Action Build'
on:
  push:
    branches:
      - master  # trigger branch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout action
      uses: actions/checkout@v2
    - name: Gitbook Action           # https://github.com/ZanderZhao/gitbook-action/releases
      uses: ZanderZhao/gitbook-action@v1.2.4  # -> or ZanderZhao/gitbook-action@master.  If not use master click above, use latest please 
      with:                                   #    or fork this repo and use YourName/gitbook-action@master
        token: ${{ secrets.PERSONAL_TOKEN }}  # -> remember add this in settings/secrets as following

time_zone
git_name
git_email

source_repo
source_branch
source_dir
source_edit_time
source_token
source_git_name
source_hub

publish_repo
publish_commit_message
publish_hub
publish_branch
publish_dir
publish_commit_history
publish_cname
publish_push_force
publish_token
publish_git_name
publish_git_email
publish_remove_last_build

gitbook_cli_version
gitbook_version
gitbook_pdf
gitbook_pdf_dir
gitbook_pdf_name
gitbook_epub
gitbook_epub_dir
gitbook_epub_name
gitbook_mobi
gitbook_mobi_dir
gitbook_mobi_name
font_install
not_clean
prepare_install

source2_repo
source2_git_name
source2_token
source2_hub
source2_branch
source2_dir
source2_edit_time

publish2_repo
publish2_git_name
publish2_token
publish2_git_email
publish2_commit_message
publish2_hub
publish2_branch
publish2_commit_history
publish2_dir
publish2_cname
publish2_push_force
publish2_remove_last_build

publish3_repo
publish3_git_name
publish3_token
publish3_git_email
publish3_commit_message
publish3_hub
publish3_branch
publish3_commit_history
publish3_dir
publish3_cname
publish3_push_force
publish3_remove_last_build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
ecampidoglio/auto-release-draft,"    \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90      \xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97
    \xe2\x94\x82 v1 \xe2\x94\x82      \xe2\x95\x91 v2 \xe2\x95\x91           # Release Notes
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98      \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d
       \xe2\x94\x82           \xe2\x94\x82     \xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x96\xb6   - D
       \xe2\x96\xbc           \xe2\x96\xbc             - C
 A \xe2\x94\x80 \xe2\x94\x80 B \xe2\x94\x80 \xe2\x94\x80 C \xe2\x94\x80 \xe2\x94\x80 D

                \xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97           # Release Notes
                \xe2\x95\x91 v1 \xe2\x95\x91
                \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d           - D
                   \xe2\x94\x82     \xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x96\xb6   - C
                   \xe2\x96\xbc             - B
 A \xe2\x94\x80 \xe2\x94\x80 B \xe2\x94\x80 \xe2\x94\x80 C \xe2\x94\x80 \xe2\x94\x80 D             - A

name: Test
on:
  create:
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create a release draft for a version tag
        id: create-release-draft
        uses: ecampidoglio/auto-release-draft@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print the URL of the release draft
        if: steps.create-release-draft.outputs.release-url != ''
        run: echo ${{ steps.create-release-draft.outputs.release-url }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
gitleaks/gitleaks-action,"
  \xe2\x94\x8c\xe2\x94\x80\xe2\x97\x8b\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
  \xe2\x94\x82 \xe2\x94\x82\xe2\x95\xb2  \xe2\x94\x82
  \xe2\x94\x82 \xe2\x94\x82 \xe2\x97\x8b \xe2\x94\x82
  \xe2\x94\x82 \xe2\x97\x8b \xe2\x94\x8c\xe2\x94\x80\xe2\x94\xb4\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
  \xe2\x94\x94\xe2\x94\x80\xe2\x96\x91\xe2\x94\x80\xe2\x94\xa4  4 github actions   \xe2\x94\x82
      \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98


name: gitleaks
on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: ""0 4 * * *"" # run once a day at 4 AM
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
snow-actions/git-config-user,"      - uses: snow-actions/git-config-user@v1.0.0

      - uses: snow-actions/git-config-user@v1.0.0
        with:
          name: SnowCait
          email: SnowCait@example.com
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
mansona/npm-lockfile-version,"- uses: mansona/npm-lockfile-version@v1

on: push
jobs:
  test-app:
    name: Test app
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v2

      - uses: mansona/npm-lockfile-version@v1

      - name: Test
        run: npm test
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ihiroky/archive-action,"      - name: Create zip
        uses: ihiroky/archive-action@v1
        with:
          root_dir: path_to_arhive_root_directory
          file_path: path_to_archive.zip
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
brittonhayes/validate-yaml,"name: Validate YAML Schema

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate YAML Schema
      uses: ansible/ansible-lint-action@master
      with:
        files-to-validate: [
          {
            path: path/to/yaml/file/or/directory
            schema: path/to/yaml/schema
          }
        ]
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
technote-space/auto-card-labeler,"on:
  project_card:
    types: [moved]
name: Project Card Event
jobs:
  triage:
    name: Auto card labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/auto-card-labeler@v2

Project name1:
  Column name1:
    - 'Status: test1'
  Column name2:
    - 'Status: test2-1'
    - 'Status: test2-2'
Project name2:
  Column name3:
    - 'Status: test1'

Project name1:
  Column name1:
    - 'Status: test1'
  Column name2:
    - 'Status: test2-1'
    - 'Status: test2-2'
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
patrickedqvist/wait-for-vercel-preview,"steps:
  - name: Waiting for 200 from the Vercel Preview
    uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
    id: waitFor200
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
      max_timeout: 60
  - run: echo ${{steps.waitFor200.outputs.url}}

npm run build

npm test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
flood-io/is-published-on-npm,"- uses: actions/checkout@v2
- uses: actions/setup-node@v1

name: Publish Package

on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: flood-io/is-published-on-npm@v1
        id: is-published
      - run: npm publish
        if: ${{ steps.is-published.outputs.published == 'false' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

name: Release Package

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: flood-io/is-published-on-npm@v1
        id: is-published
      - name: Release
        if: ${{ steps.is-published.outputs.published == 'false' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.is-published.outputs.version }}
          release_name: Release ${{ steps.is-published.outputs.version }}
          draft: false
          prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
zkqiang/tencent-cos-action,"name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ""10.x""

      - name: Build project
        run: yarn && yarn build

      - name: Upload COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: delete -r -f / && upload -r ./dist/ /
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          region: ap-shanghai
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
ethomson/issue-dashboard,"- name: \'Generate Dashboard\'
  uses: ethomson/issue-dashboard@v1
  with:
    config: |
      title: \'Dashboard\'
      output:
        format: html
        filename: \'dashboard.html\'
      sections:
      - title: \'Pull Requests\'
        widgets:
        - type: \'table\'
          title: \'New Pull Requests (This Week)\'
          issue_query: \'repo:libgit2/libgit2 is:open is:issue created:>{{ date(""-7 days"") }} sort:created-asc\'
    token: ${{ github.token }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
edgarrc/action-7z,"- uses: edgarrc/action-7z@v1
  with:
    args: 7z a -t7z -mx=9 build.7z ./build/
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
bloodf/github-deploy-action,"jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      deployments: write


name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    permissions:
      deployments: write

    steps:
      - uses: actions/checkout@v3

      - uses: bloodf/github-deploy-action@v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          environment: production # or ${{env.ENVIRONMENT}}

name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: bloodf/github-deploy-action@v1
        name: Create GitHub deployment
        id: deployment
        with:
          environment-url: http://my-app-url.com
          environment: production # or ${{env.ENVIRONMENT}}

      - name: Deploy my app
        run: |

      - name: Update deployment status (success)
        if: success()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'success\'

      - name: Update deployment status (failure)
        if: failure()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'failure\'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
skjnldsv/check-actor-permission,"name: Check User Permission

on:
  issues:
    types: [opened, edited]
  release:
    types: [published]


jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: skjnldsv/check-actor-permission@v2
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
medyagh/setup-minikube,"    steps:
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest


- uses: medyagh/setup-minikube@latest
  with:
    cache: false

name: CI
on:
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: job1
    steps:
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
      - name: kubectl
        run: kubectl get pods -A

name: CI
on:
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: job1
    steps:
      - name: start minikube
        uses: medyagh/setup-minikube@latest
        id: minikube
        with:
          cache: false
          minikube-version: 1.24.0
          driver: docker
          container-runtime: containerd
          kubernetes-version: v1.22.3
          cpus: 4
          memory: 4000m
          cni: bridge
          addons: registry,ingress
          extra-config: \'kubelet.max-pods=10\'
          feature-gates: \'DownwardAPIHugePages=true\'
          mount-path: \'/Users/user1/test-files:/testdata\'
          wait: false
          insecure-registry: \'localhost:5000,10.0.0.0/24\'
          start-args: \'--delete-on-failure --subnet 192.168.50.0\'
      - name: kubectl
        run: kubectl get pods -A

name: CI
on:
  - push
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: build discover and deploy
    steps:
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      - name: Try the cluster!
        run: kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make build-image
          echo -n ""verifying images:""
          docker images
      - name: Deploy to minikube
        run: |
          kubectl apply -f deploy/deploy-minikube.yaml
      - name: Test service URLs
        run: |
          minikube service list
          minikube service discover --url
          echo -n ""------------------opening the service------------------""
          curl $(minikube service discover --url)/version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
s3krit/Matrix-Message,"name: Send a hello world to matrix every 5 minutes
on:
  schedule:
    - cron: \'*/5 * * * *\'
jobs:
  ping_matrix:
   runs-on: ubuntu-latest
   steps:
     - name: send message
       uses: s3krit/matrix-message-action@v0.0.3
       with:
         room_id: ${{ secrets.MATRIX_ROOM_ID }}
         access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
         message: ""Hello, world""
         server: ""matrix.org""
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jerray/publish-docker-action,"- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    tags: latest,newest,master

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    auto_tag: true

- id: build
  uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    auto_tag: true

- id: deploy
  env:
    NEW_VERSION: ${{ steps.build.outputs.tag }}
  run: |
    docker pull $NEW_VERSION

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    build_args: HTTP_PROXY=http://127.0.0.1,USER=nginx
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
sand4rt/ftp-deployer,"- name: FTP Deployer
  uses: sand4rt/ftp-deployer@v1.7
  with:
    sftp: false # optional
    host: ${{ secrets.FTP_HOST }} # e.g. ftp.host.com or sftp.host.com (without ftp:// or ftps://)
    port: 21 # optional, default is: 21
    username: ${{ secrets.FTP_USERNAME }} # FTP username
    password: ${{ secrets.FTP_PASSWORD }} # FTP password
    remote_folder: ${{ secrets.FTP_REMOTE_FOLDER }} # optional, remote path of your FTP server
    local_folder: dist # optional, local path, default is: dist
    cleanup: false # optional, remove existing files inside FTP remote folder
    include: '[]' # optional, e.g. '['dist']'
    exclude: '[]' # optional, e.g. '['node_modules/**', '.git/**', '*.env']'
    passive: true # optional
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
oplik0/openPGP-action,"uses: oplik0/openpgp-action@v3
with:
    text: example
    key: ${{ secrets.PUBLIC_KEY }}
    privateKey: ${{ secrets.PRIVATE_KEY }}
    passphrase: ${{ secrets.PASSPHRASE }}
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
chhpt/wechat-work-messenger,"- name: Notify WeChat Work
  env:
    BOT_KEY: ${{ secrets.BOT_KEY }}
    POST_MESSAGE: 'Markdown Message'
  uses: chhpt/wechat-work-messenger@v1.0.0
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
mateothegreat/action-release,"name: release
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Perform a semantic release
    runs-on: ubuntu-latest
    steps:
      - name: action-release
        uses: mateothegreat/action-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: youreawesome
          repo: nuts-and-bolts
          increment: patch
          committer_name: Matthew Davis
          committer_email: matthew@matthewdavis.io

name: release
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Perform a semantic release
    runs-on: ubuntu-latest
    steps:
      - name: action-release
        uses: mateothegreat/action-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: youreawesome
          repo: nuts-and-bolts
          increment: patch
          default: v0.0.0
          prefix: v
          branch: main
          release_name: MVP release \xf0\x9f\x8e\x89
          release_body: |
            This is the body of the release.
            Line 2 on and one \xf0\x9f\x91\x8f..
          release_notes: true
          committer_name: Matthew Davis
          committer_email: matthew@matthewdavis.io
      - name: Print the current and next version using outputs
        uses: actions/checkout@v2
        with:
          owner: mateothegreat
          repo: action-release
          current_version: ${{ steps.release.outputs.current_version }}
          next_version: ${{ steps.release.outputs.next_version }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
AlexxNB/chalogen,"npm i -g chalogen

chalogen

name: Generate Changelog

on:
  push:
    branches: [ main, master]

jobs:
  changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Update Changelog
        uses: AlexxNB/chalogen@master
        with:
          title: My project changelog 
      - name: Commit Changelog to repository
        uses: stefanzweifel/git-auto-commit-action@v4.13.0
        with:
          commit_message: 'docs(Changelog): Update Changelog'
          file_pattern: CHANGELOG.md
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ibakshay/greet-contributors-action,"
name: ""GreetContributor""
on:
  pull_request:
    types: [opened,synchronize]
    
jobs:
  GreetCommitter: 
    runs-on: ubuntu-latest
    steps:
    - name: ""Greet contributor""
      uses: ibakshay/greet-contributors-action@v3
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



name: ""GreetContributor""
on:
  pull_request:
    types: [opened,synchronize]
    
jobs:
  GreetCommitter:    
    runs-on: ubuntu-latest
    steps:
    - name: ""Greet contributor""
      uses: ibakshay/greet-contributors-action@v3
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        content: ""<Add your custom content here>""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
primer/figma-action,"name: Export SVG from Figma
on: [push]
jobs:
  all:
    name: Figma Export
    runs-on: ubuntu-latest
    steps:
      - uses: primer/figma-action@v1.0.0-alpha.3
        with:
          args: ""format=svg outputDir=./build/""
        env:
          FIGMA_FILE_URL: ""https://www.figma.com/file/ZFjrph2HUwFK8Q3uEtJIu1PT/yourfilename""
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}

./outputDir/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 format/
  |     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 componentName.format
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 data.json

{
  ""0:639"": {
    ""name"": ""plus"", // component name
    ""id"": ""0:639"", // component figma id
    ""key"": ""89696b0b52493acc8692546ac829bd4e334c63a2"", // component global figma id
    ""file"": ""FP7lqd1V00LUaT5zvdklkkZr"", // figma file key
    ""description"": ""keywords: add, new, more"", // figma component description
    ""width"": 12, // width of the component frame
    ""height"": 16, // height of the component frame
    ""image"": ""https://s3-us-west-2.amazonaws.com/figma-alpha-api/img/1/6d/1234"" // aws URL for the exported file
  }
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
Simek/yarn-lock-changes,"name: Yarn Lock Changes
on: [pull_request]

jobs:
  yarn_lock_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Yarn Lock Changes
        uses: Simek/yarn-lock-changes@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          collapsibleThreshold: 25
          failOnDowngrade: false
          path: yarn.lock
          updateComment: true
          groupByType: false

jobs:
  ...:
    runs-on: ...
    permissions:
      pull-requests: write
    steps:
      ...

remote: Repository not found.
Error: fatal: repository \'https://github.com/<your_user>/<your_repo>/\' not found
Error: The process \'/usr/bin/git\' failed with exit code 128

jobs:
  ...:
    runs-on: ...
    permissions:
      contents: read
    steps:
      ...
",1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Eun/http-server-action,"{
  ""appcache"": ""text/cache-manifest"",
  ""css"": ""text/css"",
  ""gif"": ""image/gif"",
  ""html"": ""text/html"",
  ""ico"": ""image/x-icon"",
  ""jpeg"": ""image/jpeg"",
  ""jpg"": ""image/jpeg"",
  ""js"": ""text/javascript"",
  ""json"": ""application/json"",
  ""png"": ""image/png"",
  ""txt"": ""text/plain"",
  ""xml"": ""text/xml""
}

steps:
  -
    name: Checkout code
    uses: actions/checkout@v4
  -
    name: Serve Files
    uses: Eun/http-server-action@v1
    with:
      directory: ${{ github.workspace }}
      port: 8080
      no-cache: false
      index-files: |
        [""index.html"", ""index.htm""]
      allowed-methods: |
        [""GET"", ""HEAD""]
      content-types: |
        {
          ""appcache"": ""text/cache-manifest"",
          ""css"": ""text/css"",
          ""gif"": ""image/gif"",
          ""html"": ""text/html"",
          ""ico"": ""image/x-icon"",
          ""jpeg"": ""image/jpeg"",
          ""jpg"": ""image/jpeg"",
          ""js"": ""text/javascript"",
          ""json"": ""application/json"",
          ""png"": ""image/png"",
          ""txt"": ""text/plain"",
          ""xml"": ""text/xml""
        }
      log: ""log.txt""
      logTime: ""false""
  -
    run: |
      curl -vvvv http://localhost:8080/index.html
      cat log.txt
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
johanholmerin/mutation-report-action,"- name: Mutation Annotation Report
  uses: johanholmerin/mutation-report-action@0.2.0
  if: ${{ always() }} # Upload even if tests don\'t pass testing threshold
  with:
    repo-token: \'${{ secrets.GITHUB_TOKEN }}\'
    report-json: \'./reports/mutation/mutation.json\' # Optional, default

""reporters"": [...other reporters, ""json""]
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
oke-py/npm-audit-action,"name: npm audit

on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  scan:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: npm ci
      - uses: oke-py/npm-audit-action@v2
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: oke-py
          issue_labels: vulnerability,test
          dedupe_issues: true
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ad-m/report-link-action,"on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 12 * * 0-5

jobs:
  build:
    name: Validate links
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Validate links
      uses: ad-m/report-link-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
korelstar/phplint-problem-matcher,"    - uses: korelstar/phplint-problem-matcher@v1
",0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions-cool/verify-files-modify,"name: Verify Files modify

on:
  pull_request_target:
    types: [opened, edited, reopened, synchronize, ready_for_review]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: verify-version
        uses: actions-cool/verify-files-modify@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          forbid-files: 'action.yml, LICENSE'
          forbid-paths: '.github/, dist/'
          assignees: 'xxx1, xxx2'
          comment: |
            Please don't modify this.
          close: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0
bodinsamuel/renovate-automatic-branch,"{
  ""baseBranches"": [
    ""chore/renovateBaseBranch""
  ],
}

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Renovate Automatic Branch
        uses: bodinsamuel/renovate-automatic-branch@v1
        with:
          github-token: YOUR_GITHUB_TOKEN
          repo-owner: YOUR_ORG
          repo-name: YOUR_REPO

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          docker run --rm -i \\
            -e RAB_GH_TOKEN=\'${{ secrets.PERSONAL_GITHUB_TOKEN }}\' \\
            -e RAB_OWNER=\'${{ github.repository_owner }}\' \\
            -e RAB_REPO=\'renovate-automatic-branch\' \\
            ghcr.io/bodinsamuel/renovate-automatic-branch:latest

name: Renovate
on:
  schedule:
    - cron: \'0 14 * * 5\' # e.g: Every friday afternoon

docker run --rm -i \\
  -e RAB_GH_TOKEN=\'${{ secrets.PERSONAL_GITHUB_TOKEN }}\' \\
  -e RAB_OWNER=\'${{ github.repository_owner }}\' \\
  -e RAB_REPO=\'renovate-automatic-branch\' \\
  ghcr.io/bodinsamuel/renovate-automatic-branch:latest

npm install -ED renovate-automatic-branch

import { run } from \'renovate-automatic-branch/run\';

run({
  ghToken: process.env.TOKEN,
  // [...]
})
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
cardinalby/google-api-fetch-token-action,"name: ""fetch-access-token""
on:
  schedule:
    - cron:  \'0 3 2 * *\' # At 03:00 on day-of-month 2

jobs:
  fetchToken:
    runs-on: ubuntu-latest
    steps:
      - uses: cardinalby/google-api-fetch-token-action@v1
        with:
          clientId: ${{ secrets.G_API_CLIENT_ID }}
          clientSecret: ${{ secrets.G_API_CLIENT_SECRET }}
          refreshToken: ${{ secrets.G_API_REFRESH_TOKEN }}
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
yinlinchen/amplify-preview-actions,"name: \'Amplify PR Preview\'
on:
  pull_request_target:
    types: [review_requested]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: set branchname env
      id: setenvname
      run: |
        echo ""##[set-output name=setbranchname;]$(echo ${GITHUB_HEAD_REF})""

    - name: deploy PR preview
      uses: yinlinchen/amplify-preview-actions@master
      with:
        branch_name: ${{ steps.setenvname.outputs.setbranchname }}
        amplify_command: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AmplifyAppId: ${{ secrets.AMPLIFYAPPID }}
        BackendEnvARN: ${{ secrets.BACKENDENVARN }}
        EnvironmentVariables: \'key1=value,key2=value\'
        AWS_REGION: \'us-east-1\'

aws amplify list-backend-environments --app-id=[app_id]

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor1"",
            ""Effect"": ""Allow"",
            ""Action"": ""amplify:StartJob"",
            ""Resource"": ""arn:aws:amplify:${Region}:${Account}:apps/{AppId}/branches/*/jobs/*""
        },
        {
            ""Sid"": ""VisualEditor2"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""amplify:DeleteBranch"",
                ""amplify:CreateBranch""
            ],
            ""Resource"": ""arn:aws:amplify:${Region}:${Account}:apps/{AppId}/branches/*""
        }
    ]
}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Matticusau/pr-helper,"---
title: My great article
author: octocat
---

name: PR Helper

on: [pull_request, pull_request_review, issue_comment]

jobs:
  prhelper_job:
    runs-on: ubuntu-latest
    steps:
    - name: Run PR Helper
      id: runprhelper
      uses: Matticusau/pr-helper@v1.2.4
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

name: PR Helper

on:
  pull_request:
    branches:
      - master
  pull_request_review:
    branches:
      - master
  issue_comment:
    branches:
      - master
jobs:
  ...

with:
  repo-token: ${{ secrets.GITHUB_TOKEN }}
  enable-prmerge-automation: true
  enable-prcomment-automation: true
  enable-prlabel-automation: true
  enable-prreviewer-frontmatter: false
  enable-welcomemessage: true
  welcome-message: ""Thanks for opening an issue! Make sure you\'ve followed CONTRIBUTING.md.""
  prmerge-requireallchecks: true
  prmerge-requirereviewcount: 1
  prmerge-method: \'merge\'
  prlabel-default: \'pr-onhold\'
  prlabel-ready: \'pr-ready\'
  prlabel-onhold: \'pr-onhold\'
  prlabel-reviewrequired: \'review-required\'
  prlabel-automerge: \'auto-merge\'

name: PR Merge on Schedule

on:
  schedule:
    - cron: \'* 1 * * *\'

jobs:
  prhelper_schedule:
    runs-on: ubuntu-latest
    steps:
    - name: Run PR Helper on Schedule
      id: runprhelperonschedule
      uses: Matticusau/pr-helper@v1.2.4
      with:
        repo-token: ${{ secrets.GHACTION_PAT }}
        enable-prmerge-automation: true
        enable-prcomment-automation: false
        enable-prlabel-automation: true
        enable-prreviewer-frontmatter: true
        enable-welcomemessage: false
        prmerge-requireallchecks: true
        prmerge-requirereviewcount: 1
        prmerge-method: \'merge\'
        prmerge-deletebranch: \'true\'
        prmerge-deletebranch-config: \'\'
        prmerge-pathcheck: true
        prmerge-allowpaths: \'{""any"":[""articles/**""]}\'
        prreviewer-authorkey: \'author\'
        prreviewer-githubuserfromauthorfile: true
        prreviewer-authorfilepath: \'_data/authors.yaml\'
        prlabel-default: \'pr-onhold\'
        prlabel-ready: \'pr-ready\'
        prlabel-onhold: \'pr-onhold\'
        prlabel-reviewrequired: \'review-required\'
        prlabel-automerge: \'auto-merge\'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Qard/heaviest-objects-in-the-universe,"npm install heaviest-objects-in-the-universe

const { moduleSizeTree } = require('heaviest-objects-in-the-universe')

const tree = await moduleSizeTree('./', {
  // Include devDependencies of root module
  // Default: false
  withDev: true,
  // Set the root to resolve the base path from
  // Default: process.cwd()
  cwd: process.cwd(),
  // Ignore given filenames in size checks and recursion
  // Default: [ '.git', 'node_modules' ]
  ignore: [ '.git', 'node_modules' ]
})

npm install --global heaviest-objects-in-the-universe
hoitu ./path/to/my/module

uses: qard/heaviest-objects-in-the-universe@v1
with:
  github-token: ${{ secrets.GITHUB_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
nashmaniac/create-issue-action,"- uses: nashmaniac/create-issue-action@v1.2
  name: Create Issue Action
  with:
    title: Build Failed
    token: ${{secrets.GITHUB_TOKEN}}
    assignees: ${{github.actor}}
    labels: worflow-failed
    body: Workflow failed for commit ${{github.sha}}
",0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
AthleticNet/comment-test-coverage,"name: test-pull-request
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Run Jasmine tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      - name: Comment Test Coverage
        uses: AthleticNet/comment-test-coverage@1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Karma Test Coverage
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
amancevice/setup-code-climate,"- uses: amancevice/setup-code-climate@v1
  with:
    cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}
- run: cc-test-reporter before-build
- run: cc-test-reporter after-build

- run: cc-test-reporter after-build
  if: ${{ github.event_name != 'pull_request' }}
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
azohra/shell-linter,"jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run ShellCheck
        uses: azohra/shell-linter@latest

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""setup.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""setup,deploy.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src/*.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          exclude-paths: ""src/setup.sh,tests/unit_tests"" 

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src/*.sh""
          severity: ""error""

      - name: Run ShellCheck
        uses: azohra/shell-linter@v0.6.0
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
HighwayThree/jira-extract-issue-keys,"env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: HighwayThree/jira-extract-issue-keys@master
with:
    is-pull-request: ${{ github.event_name == 'pull_request' }}
    parse-all-commits: ${{ github.event_name == 'push' }}
    commit-message: 'EXAMPLE-1 message'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
HighwayThree/jira-upload-deployment-info,"env:
  GITHUB_RUN_ID: ${{secrets.GITHUB_RUN_ID}}
  GITHUB_RUN_NUMBER: ${{secrets.GITHUB_RUN_NUMBER}}

uses: HighwayThree/jira-upload-deployment-info@master
with:
  client-id: \'${{ secrets.CLIENT_ID }}\'
  client-secret: \'${{ secrets.CLIENT_SECRET }}\'
  cloud-instance-base-url: \'${{ secrets.CLOUD_INSTANCE_BASE_URL }}\'
  issue-keys: ""${{ steps.jira_keys.outputs.jira-keys }}""
  display-name: ""Deployment Number 1""
  description: ""Test Deployment""
  last-updated: \'${{github.event.head_commit.timestamp}}\'
  label: \'Test Deployment Label\'
  state: \'${{env.DEPLOY_STATE}}\'
  environment-id: \'Test\'
  environment-display-name: \'Test\'
  environment-type: \'testing\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
Geertvdc/setup-hub,"steps:\r
- uses: actions/checkout@latest\r
- uses: geertvdc/setup-hub@master\r
\r
- run: hub --version\r

steps:\r
- uses: actions/checkout@v1\r
\r
- name: Install hub\r
    uses: geertvdc/setup-hub@master\r
    \r
- name: run hub commands\r
    env:\r
      GITHUB_USER: ${{ secrets.GITHUB_USER }}\r
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r
    run: |\r
         hub release\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
skx/github-action-tester,"on: pull_request
name: Pull Request
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Test
      uses: skx/github-action-tester@master

on:
  push:
    branches:
    - master
name: Push Event
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Test
      uses: skx/github-action-tester@master
      with:
        script: .github/fast-tests.sh
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
rickstaa/top-issues-action,"name: Top issues action.
on:
  schedule:
    - cron: \'0 0 */1 * *\'

jobs:
  ShowAndLabelTopIssues:
    name: Display and label top issues.
    runs-on: ubuntu-latest
    steps:
      - name: Run top issues action
        uses: rickstaa/top-issues-action@v1
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        with:
          label: true
          dashboard: true
          dashboard_show_total_reactions: true
          top_issues: true
          top_bugs: true
          top_features: true
          top_pull_requests: true
",0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
grassedge/git-pr-release-action,"name: Create a release pull-request
on:
  push:
    branches:
      - pre-production
jobs:
  release_pull_request:
    runs-on: ubuntu-latest
    name: release_pull_request
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: create-release-pr
        uses: grassedge/git-pr-release-action@v1.0
        with:
          base: production
          head: pre-production
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: a,b,c
          assign: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
hugo19941994/delete-draft-releases,"on:
  push:

name: Delete Draft Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:

name: Delete Draft Releases older than 5 days

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        with:
          threshold: 5d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
SvanBoxel/delete-merged-branch,"git clone git@github.com:SvanBoxel/delete-merged-branch.git

npm install

npm start

exclude: 
  - development
  - qa
  - feature-*
delete_closed_pr: true

name: delete branch on close pr
on: 
  pull_request:
    types: [closed]
  
jobs:
  delete-branch:
    runs-on: ubuntu-latest
    steps:
      - name: delete branch
        uses: SvanBoxel/delete-merged-branch@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
lucasvanmol/status-badges,"name: Update Status Badges
on:
  schedule:
    - cron: ""0 0 * * *""
  workflow_dispatch:

jobs:
  status_badges:
    runs-on: ubuntu-latest
    name: Update status badges
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check and update badges
        uses: lucasvanmol/status-badges@v1
        with:
          path: ""README.md""
          token: ${{ secrets.GITHUB_TOKEN }}

npm run test

npm run build

npm run lint
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Legion2/swagger-ui-action,"      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: openapi.json
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui

$ npm run package
$ git commit -a -m ""distribution""
$ npm version major/minor/patch
$ git push
$ git tag -fa v1 -m ""Update v1 tag""
$ git push origin v1 --force
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
makaroni4/prcop,"name: PRcop

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
      - ready_for_review
      - review_requested
      - review_request_removed
  pull_request_review_comment:
    types:
      - created
      - deleted

jobs:
  prcop:
    runs-on: ubuntu-latest
    name: PRcop
    steps:
      - name: Linting Pull Request
        uses: makaroni4/prcop@v1.0.31
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          config-file: "".github/workflows/prcop-config.json""

{
  ""linters"": [
    {
      ""name"": ""titleRegexp"",
      ""config"": {
        ""regexp"": ""^CK-[0-9]+"",
        ""errorMessage"": ""PR title does not contain Jira ticket. Add CK-XXXX in the beginning of the PR title.""
      }
    },
    {
      ""name"": ""descriptionRegexp"",
      ""config"": {
        ""regexp"": ""CK-[0-9]+"",
        ""errorMessage"": ""PR description does not contain a link to a Jira ticket.""
      }
    },
    {
      ""name"": ""descriptionMinWords"",
      ""config"": {
        ""minWordsCount"": 20,
        ""errorMessage"": ""Please, write a meaningful PR description \xe2\x80\x93 it\'ll help your reviewer greatly.""
      }
    },
    {
      ""name"": ""minComments"",
      ""config"": {
        ""minCommentsCount"": 1,
        ""errorMessage"": ""Please, comment on your code. It\'s a great change to share your knowledge with your team.""
      }
    }
  ],
  ""disableWord"": ""prcop:disable""
}
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
jitterbit/await-check-suites,"- uses: jitterbit/await-check-suites@v1
  with:
    repository: \'\'

    ref: \'\'

    token: \'\'

    waitForACheckSuite: \'\'

    intervalSeconds: \'\'

    timeoutSeconds: \'\'

    failStepIfUnsuccessful: \'\'

    appSlugFilter: \'\'

    onlyFirstCheckSuite: \'\'

- uses: jitterbit/await-check-suites@v1

- uses: jitterbit/await-check-suites@v1
  with:
    repository: jitterbit/git-ops
    ref: ${{ env.git_ops_commit_sha }}
    token: ${{ secrets.GITHUB_PAT }}

- uses: jitterbit/await-check-suites@v1
  with:
    appSlugFilter: github-actions
    onlyFirstCheckSuite: true

$ yarn
$ yarn all
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
SmartsquareGmbH/delete-old-packages,"uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  names: |
    package-1
    package-2

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  version-pattern: ""^\\\\d+\\\\.\\\\d+\\\\.\\\\d+-RC\\\\d+$"" # The regex needs to be escaped!
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  semver-pattern: ""<2.x""
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  keep: 5
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  token: ${{ secrets.GH_ACCESS_TOKEN }}
  organization: my-organization
  type: npm
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  rate-limit: true
  keep: 5
  names: |
    package
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
snok/container-retention-policy,"- uses: snok/container-retention-policy@v2
  with:
    image-names: dev, web, test*
    cut-off: two hours ago UTC+2
    timestamp-to-use: updated_at
    account-type: org
    org-name: google
    keep-at-least: 1
    skip-tags: latest
    token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: ""0 0 1 * *""  # every day at midnight


jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete \'dev\' containers older than a week
        uses: snok/container-retention-policy@v2
        with:
          image-names: python-dev, js-dev
          cut-off: A week ago UTC
          account-type: org
          org-name: my-org
          keep-at-least: 1
          untagged-only: true
          token: ${{ secrets.PAT }}

      - name: Delete all test containers older than a month, using a wildcard
        uses: snok/container-retention-policy@v2
        with:
          image-names: python-test*, js-test*
          cut-off: One month ago UTC
          account-type: org
          org-name: my-org
          keep-at-least: 1
          skip-tags: latest
          token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: \'0 0 0 * *\'  # the first day of the month

jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete old images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One month ago UTC
          keep-at-least: 1
          account-type: personal
          token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: \'0 0 0 * *\'  # the first day of the month

jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete old released images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One month ago UTC
          keep-at-least: 5
          filter-tags: ""v*.*.*""
          account-type: personal
          token: ${{ secrets.PAT }}
      - name: Delete old pre-release images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One week ago UTC
          keep-at-least: 1
          filter-tags: ""rc*"", ""dev*""
          account-type: personal
          token: ${{ secrets.PAT }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
andrewiggins/download-base-artifact,"name: Compare artifacts

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Build artifact
        run: echo ""$GITHUB_RUN_NUMBER"" > test-artifact.txt

      - uses: andrewiggins/download-base-artifact@v1
        with:
          artifact: ""test-artifact.txt""
          path: base

      - run: diff test-artifact.txt base/test-artifact.txt
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
mtanzi/action-automerge,"name: Update cms/master

on:
  push:
    branches:
      - master

jobs:
  update-cms-master:
    name: Merge master into release after a PR is merged
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: merge
        uses: mtanzi/action-automerge@v1
        id: merge
        with:
          github_token: ${{ github.token }}
          source: 'master'
          target: 'release'
          webhook_url: #if present add the Slack webhook

npm run-script build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
jazibjafri/issue-volunteer,"on: [issues, issue_comment]
jobs:
  volunteer:
    runs-on: ubuntu-latest
    name: A job to get volunteers
    steps:
      - uses: actions/checkout@master
      - name: issuevolunteer
        id: issuevolunteer
        uses: JazibJafri/issue-volunteer@v1
        with:
          repo-token: ""${{ secrets.GITHUB_TOKEN }}""
          volunteer-message: ""I will work""
          label-name: ""volunteered""
          label-color: ""001FFF""
          label-desc: ""Someone is working""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
octodemo/pr-gatekeeper,"approvals:
  minimum: 1     # optional, leave blank or a value greater than or equal to the Branch Protection Rules `Required no. of approvals`
  groups:        # optional
    - name: frontend # This would be the first team or group of reviewers
      minimum: 1 # optional, leaving this blank would make the review optional for this group. Uncommon, but possible
      from:
        - octocat1 # Ensure the username has no @ prefix
        - octocat2 # currently, only usernames are supported, no team names
    - name: backend
      minimum: 2
      from:
        - octocat4
        - octocat5

name: \'PR Gatekeeper\'

on:
  pull_request:
    types:
      [
        assigned,
        unassigned,
        opened,
        reopened,
        synchronize,
        review_requested,
        review_request_removed
      ]
  pull_request_review:

jobs:
  pr-gatekeeper:
    name: PR Gatekeeper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: octodemo/pr-gatekeeper@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
clowdhaus/terraform-min-max,"steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Extract Terraform min/max versions
    id: minMax
    uses: clowdhaus/terraform-min-max@main
    with:
      directory: .
outputs:
  minVersion: ${{ steps.minMax.outputs.minVersion }}
  maxVersion: ${{ steps.minMax.outputs.maxVersion }}

jobs:
  versionExtract:
    name: Extract Min/Max Versions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@main
        with:
          directory: tests/0.13
    outputs:
      minVersion: ${{ steps.minMax.outputs.minVersion }}
      maxVersion: ${{ steps.minMax.outputs.maxVersion }}

  versionEvaluate:
    name: Evaluate Min/Max Versions
    runs-on: ubuntu-latest
    needs: versionExtract
    strategy:
      matrix:
        version:
          - ${{ needs.versionExtract.outputs.minVersion }}
          - ${{ needs.versionExtract.outputs.maxVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform v${{ matrix.version }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.version }}

      - name: Initialize and validate v${{ matrix.version }}
        run: |
          cd tests/0.13
          terraform init
          terraform validate

  $ yarn
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
adriweb/xcode-notarize-please,"- name: ""Notarize Release Build""
  uses: adriweb/xcode-notarize-please@v1.1
  with:
    product-path: ""Export/Rings.app""
    appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
    appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
hyperledger-tooling/github-contributors-action,"make

make format
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
StephanThierry/ftp-delete-action,"name: Deploy via ftp
on: push
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo 
      uses: actions/checkout@v2
      

    - name: Clean ReactJS precache-manifest and logs
      uses: StephanThierry/ftp-delete-action@v2.1
      with:
        host: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        remoteFiles: ""precache-manifest.*.js;logs/*.log""
        remoteDirectories: ""/App_Data/TEMP""
        workingDir: ""/public_html""
        ignoreSSL: ""1""


",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
m19c/action-lerna,"workflow ""Main"" {
  on = ""push""
  resolves = [""Test""]
}

action ""Bootstrap"" {
  uses = ""MrBoolean/action-lerna@master""
  args = ""bootstrap""
}

action ""Test"" {
  uses = ""MrBoolean/action-lerna@master""
  needs = [""Bootstrap""]
  args = ""run test""
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
sudo-bot/action-scrutinizer,"  - uses: actions/checkout@v2
    with:
        fetch-depth: 10
  - name: Upload Scrutinizer coverage
    uses: sudo-bot/action-scrutinizer@latest

  - uses: actions/checkout@v2
    with:
        fetch-depth: 10
  - name: Upload Scrutinizer coverage
    uses: sudo-bot/action-scrutinizer@latest
    if: github.repository == \'sudo-bot/example-repo\'
    with:
        cli-args: ""--format=php-clover build/logs/clover.xml --revision=${{ github.event.pull_request.head.sha || github.sha }}""
",0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
cytopia/shell-command-retry-action,"on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    name: Pull docker image
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build docker image
        uses: cytopia/shell-command-retry-action@v0.1.2
          with:
            retries: 10
            pause: 10
            command: |
              docker build -t test .
            fail_command: |
              sudo sysctl -w net.ipv4.ip_forward=1 \\
              && sudo systemctl restart docker \\

version: 2
updates:
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
MilesChou/composer-action,"{
    ""require"": {
        ""php"": "">=5.5.9""
    },
    ""require-dev"": {
        ""phpunit/phpunit"": ""^4 | ^5 | ^6""
    }
}

- name: Composer install
  uses: docker://composer:1.9.1
  with:
    args: install
- name: PHPUnit testing
  uses: docker://php:5.5
  with:
    args: php vendor/bin/phpunit

- uses: MilesChou/composer-action@master
  with:
    args: install

- uses: MilesChou/composer-action/install@master

- uses: MilesChou/composer-action/5.5/install@master
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
pipeline-components/php-codesniffer,"phpcs PSR2:
  stage: linting
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  script:
    - phpcs -s -p --colors --extensions=php --standard=PSR2 .

php-compatibility 7.3:
  stage: test
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  variables:
    PHPVERSION: ""7.3""
  script:
    - >-
      phpcs -s -p --colors
      --standard=PHPCompatibility
      --extensions=php
      --runtime-set testVersion ${PHPVERSION} .
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ergebnis/composer-normalize-action,"$ composer normalize

name: ""Integrate""

on: ""push""

jobs:
  composer-normalize:
    name: ""composer-normalize""

    runs-on: ""ubuntu-latest""

    steps:
      - name: ""Checkout""
        uses: ""actions/checkout@v2""

      - name: ""Run composer normalize""
        uses: ""docker://ergebnis/composer-normalize-action:latest""

 name: ""Integrate""

 on: ""push""

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2.0.0""

       - name: ""Run composer normalize""
         uses: ""docker://ergebnis/composer-normalize-action:latest""
+        with:
+          args: ""--diff --dry-run --indent-size=2 --indent-style=space""

$ docker run --interactive --rm --tty --workdir=/app --volume ${PWD}:/app ergebnis/composer-normalize-action:latest

 name: Integrate

 on: push

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2""

       - name: ""Run composer normalize""
-        uses: ""docker://ergebnis/composer-normalize-action:latest""
+        uses: ""docker://ergebnis/composer-normalize-action:0.7.0""
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
tinovyatkin/action-php-codesniffer,"name: ""CI""

on:
  pull_request:
    paths:
      - ""**.php""
      - ""phpcs.xml""
      - "".github/workflows/phpcs.yml""

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # important!

      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: tinovyatkin/action-php-codesniffer@v1
        with:
          files: ""**.php"" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
timkrase/phpunit-coverage-badge,"      - name: Checkout code
        uses: actions/checkout@v2

    <coverage cacheDirectory="".phpunit.cache/code-coverage"" processUncoveredFiles=""true"">
        <include>
            <directory suffix="".php"">src</directory>
        </include>
        <report>
            <clover outputFile=""clover.xml"" />
        </report>
    </coverage>

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: false

      - name: Git push to image-data branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./output
          publish_branch: image-data
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: \'github-actions[bot]\'
          user_email: \'github-actions[bot]@users.noreply.github.com\'

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: ""!contains(github.event.head_commit.message, \'[ci]\')""
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
frankdejonge/use-github-token,"uses: frankdejonge/use-github-token
with:
  authentication: 'your_username:${{ secrets.YOUR_SECRET_TOKEN }}'

uses: frankdejonge/use-github-token
with:
  authentication: 'your_username:${{ secrets.YOUR_SECRET_TOKEN }}'
  name: 'Your Name'
  email: 'your-email@example.com'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
andrewmcodes/standardrb-action,"- name: StandardRB Linter
  uses: andrewmcodes/standardrb-action@v1.0.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: StandardRB

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: StandardRB Linter
      uses: andrewmcodes/standardrb-action@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
duderman/rubocop-annotate-action,"name: Rubocop

on: push

jobs:
  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - run: gem install rubocop --no-doc
      - run: rubocop --format progress --format json --out rubocop.json
        id: rubocop
      - uses: duderman/rubocop-annotate-action@v0.1.0
        with:
          path: rubocop.json
        if: ${{ failure() }}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
andrewmcodes-archive/rubocop-linter-action,"- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


versions:
  - rubocop-rails
  - rubocop-performance: ""1.5.1""
  - rubocop-minitest: ""latest""
  - rubocop-rspec: ""1.37.0""


check_name: ""RuboCop Results""

versions:
  - rubocop
  - rubocop-rails
  - rubocop-minitest
  - rubocop-performance: ""1.5.1""
  - rubocop-rspec: ""1.37.0""

rubocop_config_path: "".rubocop.yml""

rubocop_excluded_cops:
  - ""Style/FrozenStringLiteralComment""

rubocop_fail_level: ""warning""

rubocop_force_exclusion: true

bundle: false

check_scope: ""modified""

base_branch: ""origin/master""

uses: andrewmcodes/rubocop-linter-action@master

uses: andrewmcodes/rubocop-linter-action@v2.0.0

action_config_path:
  description: ""Define a path to your optional action config file.""
  required: false
  default: "".github/config/rubocop_linter_action.yml""

with:
  action_config_path: "".github/actions/config/rubocop.yml""

name: Linters

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: RuboCop Linter
        uses: andrewmcodes/rubocop-linter-action@v3.3.0
        with:
          action_config_path: "".github/config/rubocop_linter_action.yml"" # Note: this is the default location
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

check_scope: ""modified""

versions:
  - rubocop: ""0.88.0""

- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  with:
    exit_on_failure: true
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
skx/github-action-build,"on:
  release:
    types: [created]
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Generate
      uses: skx/github-action-build@master
      with:
        builder: .github/build
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
fjogeleit/yaml-update-action,"name: \'workflow\'
on:
  push:
    branches:
      - main

jobs:
  test-update-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'file.yaml\'
          propertyPath: \'file.version\'
          value: v1.0.1
          commitChange: false

env:
  IMAGE_NAME: image

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build app image
        run: docker build . --tag image

      - name: Log into registry
        run: echo ""${{ secrets.GITHUB_TOKEN }}"" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push app image
        id: image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$FILES_IMAGE_NAME
          VERSION=$(echo ""${{ github.ref }}"" | sed -e \'s,.*/\\(.*\\),\\1,\')
          [[ ""${{ github.ref }}"" == ""refs/tags/""* ]] && VERSION=$(echo $VERSION | sed -e \'s/^v//\')
          [ ""$VERSION"" == ""main"" ] && VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo ""::set-output name=version::$VERSION""

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          propertyPath: \'backend.version\'
          value: ${{ steps.image.outputs.version }}
          branch: deployment/${{ steps.image.outputs.version }}
          targetBranch: development
          createPR: true
          message: \'Update Image Version to ${{ steps.image.outputs.version }}\' 

jobs:
  test-multiple-value-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          branch: deployment/dev
          targetBranch: main
          createPR: \'true\'
          description: Test GitHub Action
          message: \'Update All Images\' 
          title: \'Version Updates \'
          changes: |
            {
              ""backend.version"": ""${{ steps.image.outputs.backend.version }}"",
              ""frontend.version"": ""${{ steps.image.outputs.frontend.version }}""
            }

jobs:
  test-multiple-file-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          branch: deployment/v1.0.1
          targetBranch: main
          createPR: \'true\'
          description: Test GitHub Action
          message: \'Update All Images\' 
          title: \'Version Updates \'
          changes: |
            {
              ""__tests__/fixtures/values.dev.yaml"": {
                ""backend.version"": ""v1.0.1""
              },
              ""__tests__/fixtures/values.stage.yaml"": {
                ""backend.version"": ""v1.0.1""
              },
              ""__tests__/fixtures/values.prod.yaml"": {
                ""backend.version"": ""v1.0.1""
              }
            }

env:
  IMAGE_NAME: image

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            path: main

      - name: Build app image
        run: docker build . --tag image
        working-directory: ./main

      - name: Log into registry
        run: echo ""${{ secrets.GITHUB_TOKEN }}"" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push app image
        id: image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$FILES_IMAGE_NAME
          ....
          echo ""::set-output name=version::$VERSION""

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: owner/target-repository
          path: infrastructure
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          propertyPath: \'backend.version\'
          value: ${{ steps.image.outputs.version }}
          repository: owner/target-repository
          branch: deployment/${{ steps.image.outputs.version }}
          targetBranch: development
          createPR: true
          message: \'Update Image Version to ${{ steps.image.outputs.version }}\'
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: infrastructure
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
actions/go-dependency-submission,"npm ci --ignore-scripts
npm rebuild && npm run all

name: Go Dependency Submission
on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  GOPROXY: \'\' # A Go Proxy server to be used
  GOPRIVATE: \'\' # A list of modules are considered private and not requested from GOPROXY

jobs:
  go-action-detection:
    runs-on: ubuntu-latest
    steps:
      - name: \'Checkout Repository\'
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "">=1.18.0""

      - name: Run snapshot action
        uses: actions/go-dependency-submission@v1
        with:
            go-mod-path: go-example/go.mod
            go-build-target: go-example/cmd/octocat.go
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
sajari/setup-cue,"permissions:
  contents: read
steps:
- uses: sajari/setup-cue@v1
  with:
    version: 0.4.0
    github-token: ${{ secrets.GITHUB_TOKEN }}
- run: cue version
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
baijunyao/action-slack-notify,"- name: Notify slack
  uses: baijunyao/action-slack-notify@v3.0.1
  if: always()
  with:
    slack_channel_id: your_channel_id
    slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
    github_context: ${{ toJson(github) }}
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
sue445/go-mod-tidy-pr,"name: go-mod-tidy-pr

on:
  schedule:
    - cron: ""0 0 * * 1"" # Weekly build
  workflow_dispatch:

jobs:
  go-mod-tidy-pr:
    name: go-mod-tidy-pr

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run go-mod-tidy-pr
        uses: sue445/go-mod-tidy-pr@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_name: GitHub Actions
          git_user_email: github-actions@example.cpm
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
de-vri-es/setup-git-credentials,"name: Rust
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: ${{secrets.GIT_CREDENTIALS}}
    - uses: actions/checkout@v1
    - name: Build
      run: cargo +stable build --color=always
    - name: Run tests
      run: cargo +stable test --color=always

https://$username:$token@github.com/
",1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
morphy2k/revive-action,"- name: Check out code into the Go module directory
  uses: actions/checkout@v2

- name: Run Revive Action by pulling pre-built image
  uses: docker://morphy/revive-action:v2

- name: Run Revive Action by building from repository
  uses: morphy2k/revive-action@v2

  with:
    config: revive/config.toml
    exclude: ""file.go;foo/bar.go;./foo/bar/...""
    path: ""./foo/...""
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
thatisuday/go-cross-build,"name: Generate release-artifacts

on:
  release:
    types: 
        - created

jobs:
  generate:
    name: Generate cross-platform builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Generate build files
        uses: thatisuday/go-cross-build@v1
        with:
            platforms: 'linux/amd64, darwin/amd64, windows/amd64'
            package: 'demo'
            name: 'program'
            compress: 'true'
            dest: 'dist'

./<dest>/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-darwin-amd64
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-linux-amd64
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 ...
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 <name>-windows-amd64.exe

./<dest>/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-darwin-amd64.tar.gz
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-linux-amd64.tar.gz
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 ...
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 <name>-windows-amd64.tar.gz
     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>.exe
     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
jmhodges/ensure-latest-go,"name: Keeping Go up to date
on:
  schedule:
    - cron: 47 4 * * *
  push:
    branches:
      - master
jobs:
  fresh_go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: master
      - uses: jmhodges/ensure-latest-go@v1.0.2
        id: ensure_go
      - run: echo ""##[set-output name=pr_title;]update to latest Go release ${{ steps.ensure_go.outputs.go_version}}""
        id: pr_title_maker
      - name: Create pull request
        uses: peter-evans/create-pull-request@v2
        with:
          title: ${{ steps.pr_title_maker.outputs.pr_title }}
          body: Auto-generated pull request created by the GitHub Actions [create-pull-request](https://github.com/peter-evans/create-pull-request) and [ensure-latest-go](https://github.com/jmhodges/ensure-latest-go).
          commit-message: ${{ steps.pr_title_maker.outputs.pr_title }}
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ensure-latest-go/patch-${{ steps.ensure_go.outputs.go_version }}

    steps:
    - name: Check out the code
      uses: actions/checkout@v1
    - name: Read Go versions
      run: echo ""##[set-output name=go_version;]$(cat .github/versions/go)""
      id: go_versions
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ steps.go_versions.outputs.go_version }}
      id: go

",1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
extractions/setup-just,"- uses: extractions/setup-just@v1

- uses: extractions/setup-just@v1
  with:
    just-version: '1.4.0'

- uses: extractions/setup-just@v1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- uses: extractions/setup-just@v1
  with:
    github-token: ${{ secrets.MY_GITHUB_TOKEN }}
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
rinx/setup-k3d,"on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)

on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
        with:
          agents: 3
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)

on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
        with:
          ingressPort: 8081
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
jiro4989/build-rpm-action,"inputs:
  summary:
    description: \'Package summary.\'
    required: true
  package:
    description: \'Package name of debian package.\'
    required: true
  package_root:
    description: \'Directory of release files.\'
    required: true
  maintainer:
    description: \'Package maintainer name.\'
    required: true
  vendor:
    description: \'Package vendor.\'
    default: \'\'
  version:
    description: \'Package version.\'
    required: true
  arch:
    description: \'Package architecture.\'
    default: \'x86_64\'
  desc:
    description: \'Package description.\'
    default: \'\'
  license:
    description: \'Package LICENSE.\'
  post:
    description: \'Package post.\'
    default: \'\'
 

name: build

on:
  push:
    tags:
      - \'v*.*.*\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: create sample script
        run: |
          mkdir -p .rpmpkg/usr/bin
          mkdir -p .rpmpkg/usr/lib/testbin
          echo -e ""echo hello"" > .rpmpkg/usr/bin/testbin
          echo -e ""echo hello2"" > .rpmpkg/usr/bin/testbin2
          echo -e ""a=1"" > .rpmpkg/usr/lib/testbin/testbin.conf
          chmod +x .rpmpkg/usr/bin/*

      - uses: jiro4989/build-rpm-action@v2
        with:
          summary: \'testbin is a test script\'
          package: testbin
          package_root: .rpmpkg
          maintainer: jiro4989
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: \'x86_64\'
          desc: \'test package\'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
aevea/release-notary,"name: Release
on:
  push:
    tags:
      - v*
jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release Notary Action
        uses: docker://aevea/release-notary:0.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    tags:
      - ""v*""

- name: Check out code into the Go module directory
  uses: actions/checkout@v1

- name: Release Notary Action
  uses: aevea/release-notary@v0.2.0 (substitute for current version)
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

release:
  stage: release
  variables:
    GITLAB_TOKEN: $RELEASE_TOKEN
  image:
    name: aevea/release-notary:latest
    entrypoint: [""""]
  script:
    - release-notary publish
  only:
    - tags

- curl -L -O https://github.com/aevea/release-notary/releases/download/v0.0.2/release-notary_v0.0.2_Linux_x86_64.tar.gz
- tar -xzf release-notary_v0.0.2_Linux_x86_64.tar.gz
- export GITHUB_TOKEN=yourtoken
- export GITHUB_REPOSITORY=owner/repo
- ./release-notary publish
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
potatoqualitee/azuright,"    - name: Install Azurite
      id: azuright
      uses: potatoqualitee/azuright@v1.1

on: [push]
jobs:
  test-everywhere:
    name: Test Action on all platforms
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install and cache PowerShell Modules
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Az.Storage

      - name: Install Azurite
        id: azuright
        uses: potatoqualitee/azuright@v1.1
        with:
          self-signed-cert: true

      - name: Test
        shell: pwsh
        run: |
          Import-Module Az.Storage
          $connstring = ""${{ steps.azuright.outputs.connstring }}""
          $blob = New-Object Azure.Storage.Blobs.BlobContainerClient($connstring, ""sample-container"")
          $blob.CreateIfNotExists()
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
little-core-labs/install-terraform,"name: Example installing Terraform

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
          version: 0.13.4
    - name: Terraform apply
      run: |
        terraform init
        terraform plan
        terraform apply -auto-approve


version: 2
updates:
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""

",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
luchihoratiu/debug-via-ssh,"- name: Start SSH session
  uses: luchihoratiu/debug-via-ssh@main
  with:
    NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    SSH_PASS: ${{ secrets.SSH_PASS }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
virgilio21/openldap-action,"steps:
- uses: virgilio21/openldap-action@v1
  with:
    adminPassword: 'supersecret'
    domain: 'spaghetti.com'  
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ItsKarma/aws-cli,"- name: S3 Sync
  uses: ItsKarma/aws-cli@v1.70.0
  with:
    args: s3 sync --delete --acl public-read localdir/ s3://remote-bucket/
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ""us-east-1""
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
Justintime50/homebrew-releaser,"on:
  release:
    types: [published]

jobs:
  homebrew-releaser:
    runs-on: ubuntu-latest
    name: homebrew-releaser
    steps:
      - name: Release my project to my Homebrew tap
        uses: Justintime50/homebrew-releaser@v1
        with:
          homebrew_owner: Justintime50
          homebrew_tap: homebrew-formulas

          formula_folder: formula

          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          commit_owner: homebrew-releaser
          commit_email: homebrew-releaser@example.com

          depends_on: |
            ""bash"" => :build
            ""gcc""

          install: \'bin.install ""src/my-script.sh"" => ""my-script""\'

          test: \'assert_match(""my script output"", shell_output(""my-script-command""))\'

          download_strategy: CurlDownloadStrategy

          custom_require: custom_download_strategy

          target_darwin_amd64: true
          target_darwin_arm64: false
          target_linux_amd64: true
          target_linux_arm64: false

          update_readme_table: true

          skip_commit: false

          debug: false

just --list

docker compose up -d --build
",1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
debianmaster/actions-k3s,"- uses: debianmaster/actions-k3s@master
  id: k3s
  with:
    version: 'latest'
- run: |
    kubectl get nodes
    kubectl get pods -A
    sleep 20
    kubectl get pods -A

name: k3s Testing
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: 'v1.21.2-k3s1'
    - run: |
        kubectl get nodes

name: Matrix Testing
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [latest,v1.21.2-k3s1,v1.20.8-k3s1,v1.19.12-k3s1]
    steps:
    - uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: ${{ matrix.k8s_version }}
    - name: Test on k3s
      run: |
        kubectl get nodes
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
UnwrittenMedia/helm3-push-action,"- ./
  - charts/
    - myapp/
      - values.yaml
      - Chart.yaml
      - ...
  - Dockerfile
  - ...

- ./
  - myapp/
    - values.yaml
    - Chart.yaml
    - ...

name: Create and upload chart
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: unwrittenmedia/helm3-push-action@v1.0.2
      env:
        SOURCE_DIR: 'charts'
        CHART_FOLDER: 'myapp'
        CHARTMUSEUM_URL: 'https://chartmuseum.url'
        CHARTMUSEUM_USER: 'myuser'
        CHARTMUSEUM_PASSWORD: 'mypassword'

name: Create and upload chart
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: unwrittenmedia/helm3-push-action@v1.0.2
      env:
        SOURCE_DIR: 'charts'
        CHART_FOLDER: 'myapp'
        FORCE: 'True'
        CHARTMUSEUM_URL: 'https://chartmuseum.url'
        CHARTMUSEUM_USER: '${{ secrets.CHARTMUSEUM_USER }}'
        CHARTMUSEUM_PASSWORD: '${{ secrets.CHARTMUSEUM_PASSWORD }}'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0
imjasonh/setup-ko,"name: CI
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
      - run: kotlinc myProgram.kt -include-runtime -d /tmp/hello.jar; java -jar /tmp/hello.jar
      - run: kotlin myScript.main.kts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
        with:
          install-native: true
      - run: kotlinc-native foo.kt
      - run: ./program.exe
        if: ${{ matrix.os == \'windows-latest\' }}
      - run: ./program.kexe
        if: ${{ matrix.os != \'windows-latest\' }}

    - uses: fwilhe2/setup-kotlin@main
      with:
        script: |
            //more kotlin script code here

      - uses: fwilhe2/setup-kotlin@main
        with:
          version: 1.8.10

      - run: |
            java.io.File(""."").listFiles().forEach {it -> println(it.getName().toString())}
        shell: kotlin -howtorun .main.kts {0}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
EmilienM/devstack-action,"    steps:
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.6

    steps:
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.6
        with:
          branch: stable/xena
          conf_overrides:
            CINDER_ISCSI_HELPER=tgtadm
          enabled_services: 's-account,s-container,s-object,s-proxy'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
newrelic/repolinter-action,"- uses: repolinter-action@v1
  with:
    directory: \'\'

    config_file: \'\'

    config_url: \'\'

    output_type: \'\'

    output_name: \'\'

    label_name: \'\'

    label_color: \'\'

    token: \'\'

    username: \'\'

    repository: \'\'


name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1



name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1
        with:
          config_url: https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json


name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1
        with:
          config_url: https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json
          output_type: issue
          output_name: \'[Bot] My Issue Title\'
          label_name: \'my-repolinter-label\'
          label_color: \'ffffff\'

name: Apply Repolinter
on:
  push:
    branches:
      - master

jobs:
  apply-repolinter:
    name: Apply Repolinter Somewhere Else
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: aperture-science-incorporated/companion-cube

      - name: Run Repolinter
        uses: newrelic/repolinter-action@develop
        with:
          output_type: issue
          repository: aperture-science-incorporated/companion-cube
          username: my-token-username
          token: ${{ secrets.MY_TOKEN }}

type:issue repo:<the current repo> creator:<username> label:<label-name> state:open sort:author-date-desc

<!-- repolinter-action-workflow-number:<GITHUB_RUN_NUMBER> -->
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
r7kamura/redocly-problem-matchers,"name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: r7kamura/redocly-problem-matchers@v1
      - uses: mhiew/redoc-lint-github-action@v2
        with:
          args: schema.oas.yml --format stylish
        env:
          NO_COLOR: '1'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
mhiew/redoc-lint-github-action,"jobs:
  test_job:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: openapi-lint 
        uses: mhiew/redoc-lint-github-action@v3
        with:
          args: 'test/petstore.yml'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
guyarb/golang-test-annotations,"name: pr

on:
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:
    branches: [ '**' ]

jobs:
  full_ci:
    strategy:
      matrix:
        go_version: [ 1.18.x ]

    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
        
      - name: run tests
        run: go test -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
          package-name: foobar # optional, if using custom package name, github.com/owner/repo stripped from the pathname by default
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0
matt-ball/newman-action,"- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: postman_collection.json
    environment: postman_environment.json

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: https://example.com/postman/collection.json
    environment: https://example.com/postman/environment.json

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    apiKey: ${{ secrets.postmanApiKey }}
    collection: 5922408-c22ef764-b464-424c-8702-750343478723
    environment: 5922408-228c7edd-fc15-4f68-9665-a35d7df6945b

name: Newman Run

on:
  pull_request:
    branches:
    - master

jobs:
  newman:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: matt-ball/newman-action@master
        with:
          apiKey: ${{ secrets.postmanApiKey }}
          collection: postman_collection.json
          environment: 5922408-228c7edd-fc15-4f68-9665-a35d7df6945b

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: postman_collection.json
    environment: postman_environment.json
    reporters: \'[""emojitrain""]\'
    delayRequest: 5000
    envVar: \'[{ ""key"": ""url"", ""value"": ""http://localhost:3000"" }]\'
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
biohuns/rpmbuild-centos8-action,"inputs:
  summary:
    description: \'Package summary.\'
    required: true
  package:
    description: \'Package name of debian package.\'
    required: true
  package_root:
    description: \'Directory of release files.\'
    required: true
  maintainer:
    description: \'Package maintainer name.\'
    required: true
  vendor:
    description: \'Package vendor.\'
    default: \'\'
  version:
    description: \'Package version.\'
    required: true
  arch:
    description: \'Package architecture.\'
    default: \'x86_64\'
  desc:
    description: \'Package description.\'
    default: \'\'
  license:
    description: \'Package LICENSE.\'
  post:
    description: \'Package post.\'
    default: \'\'
 

name: build

on:
  push:
    tags:
      - \'v*.*.*\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: create sample script
        run: |
          mkdir -p .rpmpkg/usr/bin
          mkdir -p .rpmpkg/usr/lib/testbin
          echo -e ""echo hello"" > .rpmpkg/usr/bin/testbin
          echo -e ""echo hello2"" > .rpmpkg/usr/bin/testbin2
          echo -e ""a=1"" > .rpmpkg/usr/lib/testbin/testbin.conf
          chmod +x .rpmpkg/usr/bin/*

      - uses: jiro4989/build-rpm-action@v2
        with:
          summary: \'testbin is a test script\'
          package: testbin
          package_root: .rpmpkg
          maintainer: jiro4989
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: \'x86_64\'
          desc: \'test package\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
kha7iq/pingme-action,"on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHANNELS: ${{ secrets.TELEGRAM_CHANNELS }}
          TELEGRAM_TITLE: \'Reference: ${{ github.ref }}\'
          TELEGRAM_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: telegram

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TITLE: \'Reference: ${{ github.ref }}\'
          PUSHOVER_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: pushover

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          PUSHBULLET_TOKEN: ${{ secrets.PUSHBULLET_TOKEN }}
          PUSHBULLET_DEVICE: ${{ secrets.PUSHBULLET_DEVICE }}
          PUSHBULLET_TITLE: \'Reference: ${{ github.ref }}\'
          PUSHBULLET_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: pushbullet

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNELS: ${{ secrets.SLACK_CHANNELS }}
          SLACK_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          SLACK_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: slack

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          ROCKETCHAT_USERID: ${{ secrets.ROCKETCHAT_USERID }}
          ROCKETCHAT_TOKEN: ${{ secrets.ROCKETCHAT_TOKEN }}
          ROCKETCHAT_SERVER_URL: ${{ secrets.ROCKETCHAT_SERVER_URL }}
          ROCKETCHAT_CHANNELS: ${{ secrets.ROCKETCHAT_CHANNELS }}
          ROCKETCHAT_TITLE: \'Reference: ${{ github.ref }}\'
          ROCKETCHAT_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: rocketchat

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_CHANNELS: ${{ secrets.DISCORD_CHANNELS }}
          DISCORD_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          DISCORD_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: discord

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
          EMAIL_HOST: \'smtp.gmail.com\'
          EMAIL_PORT: \'587\'
          EMAIL_SUBJECT: \'Reference: ${{ github.ref }}\'
          EMAIL_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: email

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TEAMS_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK }}
          TEAMS_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          TEAMS_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'   
        with:
          service: teams

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MATTERMOST_TOKEN: ${{ secrets.MATTERMOST_TOKEN }}
          MATTERMOST_SERVER_URL: ${{ secrets.MATTERMOST_SERVER_URL }}
          MATTERMOST_CHANNELS: ${{ secrets.MATTERMOST_CHANNELS }}
          MATTERMOST_TITLE: \'Reference: ${{ github.ref }}\'
          MATTERMOST_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: mattermost

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TWILLIO_TOKEN: ${{ secrets.TWILLIO_TOKEN }}
          TWILLIO_ACCOUNT_SID: ${{ secrets.TWILLIO_ACCOUNT_SID }}
          TWILLIO_SENDER: ${{ secrets.TWILLIO_SENDER }}
          TWILLIO_RECEIVER: ${{ secrets.TWILLIO_RECEIVER }}
          TWILLIO_TITLE: \'Reference: ${{ github.ref }}\'
          TWILLIO_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: twillio

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          GOTIFY_TOKEN: ${{ secrets.GOTIFY_TOKEN }}
          GOTIFY_URL: \'example.com\'
          GOTIFY_TITLE: \'Reference: ${{ github.ref }}\'
          GOTIFY_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: gotify

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          LINE_SECRET: ${{ secrets.LINE_SECRET }}
          LINE_TOKEN: ${{ secrets.LINE_TOKEN }}
          LINE_RECEIVER_IDS: \'ab1235xxx8\'
          LINE_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          LINE_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: line

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MATTERMOST_TOKEN: ${{ secrets.MATTERMOST_TOKEN }}
          MATTERMOST_SERVER_URL: ${{ secrets.MATTERMOST_SERVER_URL }}
          MATTERMOST_CHANNELS: ${{ secrets.MATTERMOST_CHANNELS }}
          MATTERMOST_TITLE: \'Reference: ${{ github.ref }}\'
          MATTERMOST_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: mattermost

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MASTODON_TOKEN: ${{ secrets.MASTODON_TOKEN }}
          MASTODON_SERVER: \'mastodon.social\'
          MASTODON_TITLE: \'Reference: ${{ github.ref }}\'
          MASTODON_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: mastodon

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TEXTMAGIC_USER: ${{ secrets.TEXTMAGIC_USER }}
          TEXTMAGIC_TOKEN: ${{ secrets.TEXTMAGIC_TOKEN }}
          TEXTMAGIC_TITLE: \'Reference: ${{ github.ref }}\'
          TEXTMAGIC_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
          TEXTMAGIC_RECEIVER:  ${{ secrets.TEXTMAGIC_RECEIVER }}
        with:
          service: textmagic

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          WECHAT_APPID: ${{ secrets.WECHAT_APPID }}
          WECHAT_APPSECRET: ${{ secrets.WECHAT_APPSECRET }}
          WECHAT_TOKEN: ${{ secrets.WECHAT_TOKEN }}
          WECHAT_ENCODINGAESKEY: ${{ secrets.WECHAT_ENCODINGAESKEY }}
          WECHAT_RECEIVER_IDS: ${{ secrets.WECHAT_RECEIVER_IDS }}
          WECHAT_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          WECHAT_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: wechat


on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          ZULIP_DOMAIN: ${{ secrets.ZULIP_DOMAIN }}
          ZULIP_BOT_EMAIL_ADDRESS: ${{ secrets.ZULIP_BOT_EMAIL_ADDRESS }}
          ZULIP_BOT_API_KEY: ${{ secrets.ZULIP_BOT_API_KEY }}
          ZULIP_MSG_TYPE: \'stream\'
          ZULIP_STREAM_NAME: \'general\'
          ZULIP_TOPIC: \'Reference: ${{ github.ref }}\'
          ZULIP_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: zulip
",0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gagoar/invoke-aws-lambda,"- name: Invoke foobarFunction Lambda
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'

- name: Invoke foobarFunction Lambda
  id: foobar
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'
- name: Store response payload to file
  run: echo \'${{ fromJSON(steps.foobar.outputs.response).Payload }}\' > invocation-response.json

- name: Invoke foobarFunction Lambda
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'
    Qualifier: someAlias

...
  with:
    ...
    Qualifier: 53

- name: Invoke foobarFunction Lambda
  id: foobar
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    LogType: Tail
    Payload: \'{ ""myParameter"": false }\'
- name: Store tail logs to file
  run: echo ""${{ fromJSON(steps.foobar.outputs.response).LogResult }}"" > invocation-logs.json
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
terraform-linters/setup-tflint,"name: Lint
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  tflint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      name: Checkout source code

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles(\'.tflint.hcl\') }}

    - uses: terraform-linters/setup-tflint@v3
      name: Setup TFLint
      with:
        tflint_version: v0.44.1

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact

- uses: terraform-linters/setup-tflint@v3

- uses: terraform-linters/setup-tflint@v3
  with:
    tflint_version: latest

- uses: terraform-linters/setup-tflint@v3
  with:
    github_token: ${{ secrets.MY_CUSTOM_GITHUB_TOKEN }}

- uses: terraform-linters/setup-tflint@v3
- uses: terraform-linters/tflint-load-config-action@v1
  with:
    source-repo: me/tflint-config
- run: tflint -f compact

- uses: terraform-linters/setup-tflint@v3
  with:
    tflint_wrapper: true

- id: tflint
  run: tflint -f compact

- run: echo ${{ steps.tflint.outputs.stdout }}
- run: echo ${{ steps.tflint.outputs.stderr }}
- run: echo ${{ steps.tflint.outputs.exitcode }}

npm version $inc && git push --follow-tags
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
michaelw90/PHP-Lint,"name: PHP Linting
on: pull_request
jobs:
  phplint:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v1
        - uses: michaelw90/PHP-Lint@master
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
lee-dohm/close-matching-issues,"steps:
  - uses: lee-dohm/close-matching-issues@v2
    with:
      query: 'label:weekly-issue'
      token: ${{ secrets.GITHUB_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
thenabeel/action-phpcs,"name: ""CI""

on:
  pull_request:
    paths:
      - ""**.php""
      - ""phpcs.xml""
      - "".github/workflows/phpcs.yml""

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # important!

      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: thenabeel/action-phpcs@v8
        with:
          files: ""**.php"" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
skymatic/semver-validation-action,"uses: skymatic/semver-validation-action@v1
with:
  version: ${{ github.event.release.tag_name }}

uses: skymatic/semver-validation-action@v1
with:
  version: 'v0.7.9'

uses: skymatic/semver-validation-action@v1
with:
  version: '0.7.9-beta.1'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
SAP/project-piper-action,"name: CI
on:
  push:
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: mavenBuild
        uses: SAP/project-piper-action@master
        with:
          command: mavenBuild
      - name: mavenExecuteStaticCodeChecks
        uses: SAP/project-piper-action@master
        with:
          command: mavenExecuteStaticCodeChecks

steps:
  karmaExecuteTests:
    installCommand: npm install --quiet --no-audit
    runCommand: npm test

@sap:registry=https://npm.pkg.github.com

npm install
npm run prepare

docker build . -f DevEnv.Dockerfile -t project-piper-action
docker run -it --rm project-piper-action bash
$ node index.js

INPUT_COMMAND=version INPUT_FLAGS=\'-v\' node index.js
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
joelanford/go-apidiff,"name: go-apidiff
on: [ pull_request ]
jobs:
  go-apidiff:
    if: github.event_name == \'pull_request\'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - uses: joelanford/go-apidiff@main

$ go install github.com/joelanford/go-apidiff@latest

$ go-apidiff --help
go-apidiff compares API compatibility of different commits of a Go repository.

By default, it compares just the module itself and prints only incompatible
changes. However it can be configured to print compatible changes and to search
for API incompatibilities in the dependency changes of the repository.

When used with just one argument, the passed argument is used for oldCommit,
and HEAD is used for newCommit.""

Usage:
  go-apidiff <oldCommit> [newCommit] [flags]

Flags:
      --compare-imports    Compare exported API differences of the imports in the repo.
  -h, --help               help for go-apidiff
      --print-compatible   Print compatible API changes
      --repo-path string   Path to root of git repository to compare (default ""/home/myuser/myproject"")

$ GO111MODULE=off go get golang.org/x/exp
$ cd $GOPATH/src/golang.org/x/exp/apidiff
$ go-apidiff --repo-path=../ 81c71964d733d2e3e2375a315c0e2fd4d162adc4 --print-compatible

golang.org/x/exp/apidiff
  Incompatible changes:
  - Report.Compatible: removed
  - Report.Incompatible: removed
  Compatible changes:
  - Change: added
  - Report.Changes: added
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
estroz/rerun-actions,"on:
  issue_comment:
    types: [created]

jobs:
  rerun_pr_tests:
    name: rerun_pr_tests
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-20.04
    steps:
    - uses: estroz/rerun-actions@main
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        comment_id: ${{ github.event.comment.id }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
wizhi/setup-buf,"name: Quality control pull requests

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: 0.32.0
      - run: buf check lint

  breaking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: 0.32.0
      - run: buf check breaking --against-input "".git#ref=${{ github.base_ref }}""

",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
textileio/cloudflare-update-dnslink,"- name: Update DNSLink
  env:
    CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
    RECORD_DOMAIN: ""textile.io""
    RECORD_NAME: ""_dnslink.subdomainname""
    CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
  id: dnslink
  uses: textileio/cloudflare-update-dnslink@master
  with:
    cid: ${{ steps.push.outputs.cid }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
katyo/publish-crates,"steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          path: './packages'
          args: --no-verify
          dry-run: true

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          dry-run: ${{ github.event_name != 'push' }}

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
aochmann/actions-download-artifact,"- name: Download artifact
  uses: aochmann/actions-download-artifact@1.0.0
  with:
    github_token: ${{secrets.GITHUB_TOKEN}}

    name: artifact_name

    latest: true

    path: extract_here

    repo: ${{github.repository}}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
GaboFDC/brakeman-linter-action,"- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    BRAKEMAN_ARGS: --force-scan

- name: Install gems
  run: |
    gem install brakeman -v 4.5.0
- name: brakeman report
  run: |
    brakeman -f json > tmp/brakeman.json
- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    REPORT_PATH: tmp/brakeman.json

name: Brakeman

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Brakeman
      uses: GaboFDC/brakeman-linter-action@v1.1.0
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Xotabu4/send-to-allure-server-action,"    - name: Send Results and Generate Allure Report
      uses: Xotabu4/send-to-allure-server-action@1
      if: ${{ always() }}
      with:
        allure-server-url: 'http://my-allure-server.com:5001/'
",0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
gautamkrishnar/blog-post-workflow,"<!-- BLOG-POST-LIST:START -->
<!-- BLOG-POST-LIST:END -->

name: Latest blog post workflow
on:
  schedule: # Run workflow automatically
    - cron: \'0 * * * *\' # Runs every hour, on the hour
  workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the GitHub Actions Workflow page directly
permissions:
  contents: write # To write the generated contents to the readme

jobs:
  update-readme-with-blog:
    name: Update this repo\'s README with latest blog posts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Pull in dev.to posts
        uses: gautamkrishnar/blog-post-workflow@v1
        with:
          feed_list: ""https://dev.to/feed/gautamkrishnar,https://www.gautamkrishnar.com/feed/""

<!-- STACKOVERFLOW:START -->
<!-- STACKOVERFLOW:END -->

name: Latest stack overflow activity
on:
  schedule:
    - cron: \'*/5 * * * *\'
  workflow_dispatch:
permissions:
  contents: write
  
jobs:
  update-readme-with-stack-overflow:
    name: Update this repo\'s README with latest activity from StackOverflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@v1
        with:
          comment_tag_name: ""STACKOVERFLOW""
          commit_message: ""Updated readme with the latest stackOverflow data""
          feed_list: ""https://stackoverflow.com/feeds/user/4214976""

name: Latest stack oveflow activity
on:
  workflow_dispatch:
  schedule:
    - cron:  \'0 * * * *\'
permissions:
      contents: write
jobs:
  update-readme-with-blog:
    name: Update this repo\'s README with latest activity from StackOverflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@v1
        with:
          comment_tag_name: ""STACKOVERFLOW""
          feed_list: ""https://stackoverflow.com/feeds/user/4214976""
          template: ""<tr><td>$title</td><td>$url</td></tr>""

<table>
  <tr><th>Title</th><th>Link</th></tr>
  <!-- STACKOVERFLOW:START --><!-- STACKOVERFLOW:END -->
</table>

name: Latest YouTube Videos
on:
  schedule:
    - cron: ""0 * * * *""
  workflow_dispatch:
permissions:
      contents: write

jobs:
  update-readme-with-youtube:
    name: Update this repo\'s README with latest videos from YouTube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@master
        with:
          feed_list: ""https://www.youtube.com/feeds/videos.xml?channel_id=UCtvnB6R__6vdyjUEbDgAWHw""
          custom_tags: ""channelId/yt:channelId/,videoId/yt:videoId/""
          date_format: ""mmm d, yyyy""
          template: \'<table><tr><td><a href=""$url""><img width=""140px"" src=""http://img.youtube.com/vi/$videoId/maxresdefault.jpg""></a></td>$newline<td><a href=""$url"">$title</a><br/>$date</td></tr></table>$newline\'
          committer_email: ""alwinjohn231@gmail.com""

name: Latest RadioGeek (Anchor)
on:
  schedule:
    - cron: \'0 0 * * FRI\'
  workflow_dispatch:

jobs:
  update-readme-with-anchor:
    name: Update this repo\'s README with latest RadioGeek podcast feed from Anchor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gautamkrishnar/blog-post-workflow@master
        with:
          comment_tag_name: ""RadioGeek-Anchor-feed""
          feed_list: ""https://anchor.fm/s/6048890/podcast/rss""
          max_post_count: 1000
          commit_message: ""\xf0\x9f\x94\xa5Update with lastest RadioGeek feed""
          committer_username: ""\xf0\x9f\xa4\x96RadioGeek-Bot""
          committer_email: ""<>""
          date_format: \'UTC: yyyy-mm-dd\'
          template: ""$newline #### - [$title]($url) $newline <details><summary>\xd8\xaa\xd9\x88\xd8\xb6\xdb\x8c\xd8\xad\xd8\xa7\xd8\xaa</summary> $description </details> $newline <hr /> $newline""
          item_exec: ""post.description = post.description.replace(\'\',\'\')""
          disable_html_encoding: true
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
dessant/issue-states,"name: \'Issue States\'

on:
  project_card:
    types: [created, edited, moved]

permissions:
  repository-projects: read
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/issue-states@v3

name: \'Issue States\'

on:
  project_card:
    types: [created, edited, moved]

permissions:
  repository-projects: read
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/issue-states@v3
        with:
          github-token: ${{ github.token }}
          open-issue-columns: \'\'
          closed-issue-columns: \'Closed, Done\'
          log-output: false

    steps:
      - uses: dessant/issue-states@v3
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
maxgfr/github-commit-push-file,"name: \'action-test\'
on:
  pull_request:
  push:

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create a file
        run: |
          echo ""GITHUB_SHA=${GITHUB_SHA}"" >> sha.txt
      - name: Commit and push the file
        uses: maxgfr/github-commit-push-file@main
        with:
          commit_name: \'fix: add new line to sha.txt\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
ShubhamTatvamasi/terraform-lint-action,"name: Terraform Lint

on: [push, pull_request]

jobs:
  terraform-lint:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Lint
      uses: ShubhamTatvamasi/terraform-lint-action@v1
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
miermontoto/waka-readme-stats,"<!--START_SECTION:waka-->
<!--END_SECTION:waka-->

name: Waka Readme

on:
  schedule:
    - cron: \'15 */12 * * *\'
  workflow_dispatch:
  
jobs:
  update-readme:
    name: Update Readme with Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: miermontoto/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

- uses: miermontoto/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SHOW_OS: ""False""
          SHOW_PROJECTS: ""False""

\xf0\x9f\x8c\x9e Morning    95 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   30.55% 
\xf0\x9f\x8c\x86 Daytime    78 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   25.08% 
\xf0\x9f\x8c\x83 Evening    112 commits    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   36.01% 
\xf0\x9f\x8c\x99 Night      26 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   8.36%


Monday       50 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.19% 
Tuesday      85 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   22.43% 
Wednesday    56 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   14.78% 
Thursday     44 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   11.61% 
Friday       28 commits     \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.39% 
Saturday     30 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.92% 
Sunday       86 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   22.69%


\xf0\x9f\x92\xac Languages:
JavaScript               5 hrs 26 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   61.97%
PHP                      1 hr 35 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.07%
Markdown                 1 hr 9 mins         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.3%
Python                   22 mins             \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   4.32%
XML                      8 mins              \xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   1.62%

\xf0\x9f\x92\xbb Operating systems:
Windows                  8 hrs 46 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   100.0%

\xf0\x9f\x93\x9a Repositories:
ctx_connector            4 hrs 3 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   46.33%
NetSuite-Connector       1 hr 31 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   17.29%
mango-web-master         1 hr 12 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.77%
cable                    54 mins             \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   10.41%
denAPI                   40 mins             \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.66%

\xe2\x8c\x9a\xef\xb8\x8e Timezone: Asia/Calcutta

\xf0\x9f\x93\x9d Editors:
WebStorm                 6 hrs 47 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   77.43%
PhpStorm                 1 hr 35 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.07%
PyCharm                  23 mins             \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   4.49%

Vue          8 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   25.0% 
Java         6 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.75% 
JavaScript   6 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.75% 
PHP          3 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   9.38% 
Python       2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25% 
Dart         2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25% 
CSS          2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25%

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0
gleich/gh_fsync,"replace:
  - before: project_name
    after: gh_fsync

files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md

files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2

replace:
  - before: project_name
    after: gh_fsync
files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2

commit_message: \xf0\x9f\x94\x84 Update file via sync

commit_message: \xf0\x9f\x94\x84 Update file via sync
replace:
  - before: project_name
    after: gh_fsync
files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2
  - path: LICENSE.md
    source: https://github.com/gleich/go_template/blob/master/LICENSE.md
    ignore_global_replace: true
    replace:
      - before: author_name
        after: Matthew Gleich

name: gh_fsync

on:
  push:
    branches:
      - master
  schedule:
    - cron: \'*/30 * * * *\' # Runs every 30 minutes

jobs:
  file_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: gh_fsync
        uses: gleich/gh_fsync@master

name: fsync

on:
  push:
    branches:
      - master
  schedule:
    - cron: \'*/30 * * * *\' # Runs every 30 minutes

jobs:
  file_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: gh_fsync
        uses: gleich/gh_fsync@master
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
nolar/setup-k3d-k3s,"jobs:
  some-job:
    steps:
      - uses: nolar/setup-k3d-k3s@v1

jobs:
  some-job:
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.21  # E.g.: v1.21, v1.21.2, v1.21.2+k3s1
          github-token: ${{ secrets.GITHUB_TOKEN }}

with:
  github-token: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: nolar/setup-k3d-k3s@v1

steps:
  - uses: nolar/setup-k3d-k3s@v1
    with:
      version: v1.21

steps:
  - uses: nolar/setup-k3d-k3s@v1
    with:
      version: v1.21.2+k3s1

jobs:
  some-job:
    strategy:
      fail-fast: false
      matrix:
        k8s: [ v1.21, v1.20, v1.19, v1.18 ]
    name: K8s ${{ matrix.k8s }}
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: ${{ matrix.k8s }}

jobs:
  some-job:
    name: Multi-cluster
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.20
          k3d-name: 1-20
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.21
          k3d-name: 1-21
      - run: kubectl version --context k3d-1-20 
      - run: kubectl version --context k3d-1-21 

jobs:
  some-job:
    name: Custom K3d version
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          k3d-tag: v4.4.8
      - run: k3d --version

jobs:
  some-job:
    name: Custom args
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          k3d-args: --servers 2 --no-lb
      - run: kubectl get nodes  # there must be two of them
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
up9cloud/action-rsync,"on: [push]
jobs:
  rsync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: up9cloud/action-rsync@master
        env:
          HOST: target.example.com
          KEY: ${{secrets.DEPLOY_SSH_KEY}}
          TARGET: /app/

kind: pipeline
type: docker
name: default

steps:
  - name: deploy
    when:
      branch:
        - master
      event: [push]
    image: sstc/action-rsync
    settings:
      key:
        from_secret: deploy_ssh_key
      host: target.example.com
      target: /app/

docker run -it --rm \\
  -v $(pwd):/app \\
  -w /app \\
  -e HOST=""target.example.com"" \\
  -e KEY=""$(cat ~/.ssh/id_rsa)""
  -e TARGET=""/app/"" \\
  sstc/action-rsync

docker run -it --rm \\
  -v $(pwd):/app \\
  -w /app \\
  -e PLUGIN_HOST=""target.example.com"" \\
  -e PLUGIN_KEY=""$(cat ~/.ssh/id_rsa)""
  -e PLUGIN_TARGET=""/app/"" \\
  sstc/action-rsync

on: [push]
jobs:
  rsync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to my \xe2\x9d\xa4\xef\xb8\x8f
      uses: up9cloud/action-rsync@master
      env:
        HOST: example.com
        KEY: ${{secrets.DEPLOY_SSH_KEY}}
        TARGET: /app/hello-service/

        VERBOSE: true
        USER: ubuntu
        ARGS: -az --exclude=/.git/
        SSH_ARGS: \'-p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\'
        SOURCE: ./public/

        PRE_SCRIPT: |
          echo start at:
          date -u
        POST_SCRIPT: ""echo done at: && date -u""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
CamiloGarciaLaRotta/watermelon-http-client,"uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  url: \'https://jsonplaceholder.typicode.com/todos?id=1\'

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  url: \'https://jsonplaceholder.typicode.com/todos\'
  method: post
  data: \'{ ""title"": ""dummy-todo"", ""userId"": 1, ""completed"": false }\'

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
url: \'https://countries.trevorblades.com/\'
  graphql: |
    {
      country(code: ""CO"") {
        name
        emoji
      }
    }

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  headers: \'{""Authorization"": ""bearer ${{ secrets.TOKEN }}"", ""Content-Type"": ""application/json"" }\'
  graphql: |
    mutation addRocketEmoji($reaction:AddReactionInput!) {
      addReaction(input:$reaction) {
        reaction {
          content
        }
        subject {
          id
        }
      }
    }
  variables: |
    {
      ""reaction"": {
        ""subjectId"":""${{ secrets.ISSUE_ID }}"",
        ""content"":""ROCKET""
      }
    }
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
SeokminHong/pages-action,"name: Publish page

on:
  push:
    branches: [main]
    paths:
      - packages/pages/**
      - .github/workflows/publish-page.yml

jobs:
  publish:
    name: Publish to Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: Deploy pages
        uses: SeokminHong/pages-action@v0.5
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: {{ page_name }}
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
XAMPPRocky/deploy-mdbook,"name: Deploy mdBook
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: XAMPPRocky/deploy-mdbook@v1.1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}

npm install

npm start

npm run build
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
actions-cool/pr-auto-label,"name: PR Auto Label

on:
  pull_request_target:
    types: [opened, edited]

jobs:
  set-labels:
    runs-on: ubuntu-latest
    steps:
      - name: pr-auto-label
        uses: actions-cool/pr-auto-label@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enum: 'fix, feat, docs'
          format: 'pr-${type}'
          extra: 'feat/feature, docs/doc'
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
actions-cool/release-helper,"name: \xf0\x9f\xa4\x96 Auto Make Release

on:
  create

jobs:
  release-helper:
    runs-on: ubuntu-latest
    steps:
      - name: make release
        if: github.event.ref_type == 'tag'
        uses: actions-cool/release-helper@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          trigger: 'tag'
          changelogs: 'CHANGELOG.en-US.md, CHANGELOG.zh-CN.md'
          branch: 'master'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0
gacts/purge-jsdelivr-cache,"jobs:
  purge-jsdelivr-cache:
    runs-on: ubuntu-20.04
    steps:
      - uses: gacts/purge-jsdelivr-cache@v1
        with:
          url: |
            https://cdn.jsdelivr.net/npm/jquery@3.2.0/dist/jquery.js
            https://cdn.jsdelivr.net/npm/jquery@3.3.0/dist/jquery.min.js
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
jcs090218/setup-emacs,"uses: jcs090218/setup-emacs@master
with:
  version: 24.5

steps:
  - uses: actions/checkout@v3

  - uses: purcell/setup-emacs@master
    if: matrix.os == \'ubuntu-latest\' || matrix.os == \'macos-latest\'
    with:
      version: ${{ matrix.emacs-version }}

  - uses: jcs090218/setup-emacs-windows@master
    if: matrix.os == \'windows-latest\'
    with:
      version: ${{ matrix.emacs-version }}

steps:
  - uses: actions/checkout@v3

  - uses: jcs090218/setup-emacs@master
    with:
      version: ${{ matrix.emacs-version }}

 steps:
   - uses: actions/checkout@v3

-  - uses: purcell/setup-emacs@master
-    if: matrix.os == \'ubuntu-latest\' || matrix.os == \'macos-latest\'
-    with:
-      version: ${{ matrix.emacs-version }}

-  - uses: jcs090218/setup-emacs-windows@master
-    if: matrix.os == \'windows-latest\'
+  - uses: jcs090218/setup-emacs@master
     with:
       version: ${{ matrix.emacs-version }}
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
chinthakagodawita/autoupdate,"name: autoupdate
on:
  push: {}
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-22.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        env:
          GITHUB_TOKEN: \'${{ secrets.GITHUB_TOKEN }}\'

name: autoupdate
on:
  push: {}
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-22.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          DRY_RUN: ""false""
          PR_FILTER: ""labelled""
          PR_LABELS: ""autoupdate,keep up-to-date,integration""
          EXCLUDED_LABELS: ""dependencies,wontfix""
          MERGE_MSG: ""Branch was auto-updated.""
          RETRY_COUNT: ""5""
          RETRY_SLEEP: ""300""
          MERGE_CONFLICT_ACTION: ""fail""

name: autoupdate
on:
  push: {}
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-18.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        id: autoupdate
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          MERGE_CONFLICT_ACTION: ""ignore""

      - run: echo \'Merge conflicts found!\'
        if: ${{ steps.autoupdate.outputs.conflicted }}

      - run: echo \'No merge conflicts\'
        if: ${{ !steps.autoupdate.outputs.conflicted }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
nerdyscout/kicad-exports,"name: example

on:
  push:
    paths:
    - '**.sch'
    - '**.kicad_pcb'
  pull_request:
    paths:
      - '**.sch'
      - '**.kicad_pcb'

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: nerdyscout/kicad-exports@v2.3.1
      with:
        config: any.kibot.yaml
        dir: docs
        schema: '*.sch'
        board: '*.kicad_pcb'
        verbose: 0
    - name: upload results
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs

git clone --recursive https://github.com/nerdyscout/kicad-exports /some/where/kicad-exports
cd /some/where/kicad-exports
make && make install

cd /my/kicad/example-project
kicad-exports -d $DIR_OUT -e $SCHEMA -b $BOARD -c $CONFIG 

kicad-exports -c any.kibot.yaml 

kicad-exports -c myconfig.kibot.yaml -v -s all

kicad-exports -c config/*.kibot.yaml -b myproject.kicad_pcb -e myproject.sch

kicad-exports -c config/bundle/documentation.default.kibot.lst

kicad-exports -x $COMMIT_HASH -b myproject.kicad_pcb
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ludeeus/action-shellcheck,"on:
  push:
    branches:
      - master

name: ""Trigger: Push action""
permissions: {}

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      env:
        SHELLCHECK_OPTS: -e SC2059 -e SC2034 -e SC1090

sample structure:
sample/directory/with/files/ignoreme/test.sh
sample/directory/with/files/ignoremetoo/test.sh
sample/directory/with/files/test.sh
sample/directory/with/files/ignorable.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        ignore_paths: >-
          ignoreme
          ignoremetoo
        ignore_names: ignorable.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        ignore_paths: ./sample/directory/with/files/ignorable.sh **/ignoreme/test.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        severity: error

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        check_together: \'yes\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       scandir: \'./scripts\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       additional_files: \'run finish\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       format: tty

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       version: v0.9.0
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
ttionya/Repository-Sync-Hub,"
steps:
  -
    name: Checkout
    uses: actions/checkout@v3
    with:
      fetch-depth: 0
  -
    name: Sync
    uses: ttionya/Repository-Sync-Hub@v1
    with:
      target_repository: 'git@github.com:ttionya/Repository-Sync-Hub-Test.git'
      ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}


steps:
  -
    name: Checkout
    uses: actions/checkout@v3
    with:
      fetch-depth: 0
      token: ${{ secrets.HTTP_ACCESS_TOKEN }}
  -
    name: Sync
    uses: ttionya/Repository-Sync-Hub@v1
    with:
      target_repository: 'https://github.com/ttionya/Repository-Sync-Hub-Test.git'
      http_access_name: 'ttionya'
      http_access_token: ${{ secrets.HTTP_ACCESS_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Bullrich/generate-release-changelog,"name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
saadmk11/github-actions-version-updater,"name: GitHub Actions Version Updater

on:
  schedule:
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}

name: GitHub Actions Version Updater

on:
  workflow_dispatch:
  schedule:
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}
          committer_username: \'Test\'
          committer_email: \'test@test.com\'
          commit_message: \'Commit Message\'
          pull_request_title: \'Pull Request Title\'
          ignore: \'actions/checkout@v2, actions/cache@v2\'
          skip_pull_request: \'false\'
          update_version_with: \'release-tag\'
          release_types: ""minor, patch""
          pull_request_user_reviewers: ""octocat, hubot, other_user""
          pull_request_team_reviewers: ""justice-league, other_team""
          pull_request_labels: ""dependencies, automated""
          extra_workflow_locations: ""path/to/directory, path/to/workflow.yaml""
          pull_request_branch: ""actions-update""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}
          lfs: false

      - name: Remove LFS hooks
        run: |
          rm .git/hooks/post-checkout
          rm .git/hooks/pre-push

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:

name: GitHub Actions Version Updater

on:
  workflow_dispatch:
  schedule:
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        id: gha-update
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}
          skip_pull_request: \'false\'
      - name: Get PR Number
        run: echo ""The PR Number is ${{ steps.gha-update.outputs.GHA_UPDATE_PR_NUMBER }}""
",1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
jetli/trunk-action,"- uses: jetli/trunk-action@v0.4.0
  with:
    version: \'latest\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
JamesSingleton/is-organization-member,"name: Is Organization Member Example

on:
  issues:
    types: [opened, labeled]

jobs:
  welcome:
    name: Welcome
    runs-on: ubuntu-latest
    steps:
      - name: Check if organization member
        id: is_organization_member
        if: github.event.action == \'opened\'
        uses: jamessingleton/is-organization-member@v1
        with:
          organization: testorg
          username: ${{ github.event.issue.user.login }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Comment
        if: |
          steps.is_organization_member.outputs.result == false
        run: echo User Does Not Belong to testorg
",0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
yuichielectric/dive-action,"name: ""Dive CI""

on: [push]

jobs:
  dive:
    runs-on: ubuntu-latest
    name: Analyze image efficiency
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build image
        run: docker build -t sample:latest .
      - name: Dive
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: ""sample:latest""
          config-file: ${{ github.workspace }}/.dive-ci.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

rules:
  lowestEfficiency: 0.95

  highestWastedBytes: 20MB

  highestUserWastedPercent: 0.20

Unable to find image \'wagoodman/dive:v0.9\' locally
v0.9: Pulling from wagoodman/dive
89d9c30c1d48: Pulling fs layer
5ac8ae86f99b: Pulling fs layer
f10575f61141: Pulling fs layer
89d9c30c1d48: Verifying Checksum
89d9c30c1d48: Download complete
f10575f61141: Verifying Checksum
f10575f61141: Download complete
5ac8ae86f99b: Verifying Checksum
5ac8ae86f99b: Download complete
89d9c30c1d48: Pull complete
5ac8ae86f99b: Pull complete
f10575f61141: Pull complete
Digest: sha256:2d3be9e9362ecdcb04bf3afdd402a785b877e3bcca3d2fc6e10a83d99ce0955f
Status: Downloaded newer image for wagoodman/dive:v0.9
  Using CI config: /.dive-ci
Image Source: docker://sample:latest
Fetching image... (this can take a while for large images)
Analyzing image...
  efficiency: 98.8091 %
  wastedBytes: 11697960 bytes (12 MB)
  userWastedPercent: 1.6116 %
Inefficient Files:
Count  Wasted Space  File Path
    6        4.9 MB  /var/cache/debconf/templates.dat
    4        3.2 MB  /var/cache/debconf/templates.dat-old
    6        1.2 MB  /var/lib/dpkg/status
    6        1.2 MB  /var/lib/dpkg/status-old
    5        400 kB  /var/log/dpkg.log
    5        211 kB  /var/log/apt/term.log
    6        107 kB  /etc/ld.so.cache
    6         83 kB  /var/cache/debconf/config.dat
    6         71 kB  /var/lib/apt/extended_states
    6         67 kB  /var/log/apt/eipp.log.xz
    5         54 kB  /var/cache/ldconfig/aux-cache
    4         40 kB  /var/cache/debconf/config.dat-old
    5         39 kB  /var/log/apt/history.log
    4         26 kB  /var/log/alternatives.log
    2        9.1 kB  /etc/mailcap
    2         903 B  /etc/group
    2         892 B  /etc/group-
    2         756 B  /etc/gshadow
    2         727 B  /var/lib/dpkg/triggers/File
    2           0 B  /usr/src
    6           0 B  /var/lib/dpkg/lock-frontend
    6           0 B  /var/lib/dpkg/lock
    5           0 B  /var/lib/apt/lists
    3           0 B  /var/lib/dpkg/triggers/Unincorp
    6           0 B  /var/lib/dpkg/updates
    5           0 B  /var/cache/apt/archives/lock
    6           0 B  /var/cache/debconf/passwords.dat
    5           0 B  /var/cache/apt/archives/partial
    2           0 B  /etc/.pwd.lock
    6           0 B  /tmp
    6           0 B  /var/lib/dpkg/triggers/Lock
Results:
  PASS: highestUserWastedPercent
  PASS: highestWastedBytes
  FAIL: lowestEfficiency: image efficiency is too low (efficiency=0.988091457351898 < threshold=0.99)
Result:FAIL [Total:3] [Passed:2] [Failed:1] [Warn:0] [Skipped:0]

",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
tvrcgo/upload-to-oss,"- name: Upload to oss
  id: upload_to_oss
  uses: tvrcgo/upload-to-oss@master
  with:
    key-id: ${{ secrets.OSS_KEY_ID }}
    key-secret: ${{ secrets.OSS_KEY_SECRET }}
    region: oss-cn-shenzhen
    bucket: tvrcgo
    assets: |
      a/**:/remote-a/
      b/**:/remote-b/
      c.txt:/rc.txt
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
s4u/setup-maven-action,"    steps:

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@< version >

      - run: mvn -V ...

    - uses: actions/cache
      with:
        path: |
          ${{ inputs.cache-path }}
          ${{ inputs.cache-path-add }}
        key: ${{ inputs.cache-prefix }}${{ runner.os }}-jdk${{ inputs.java-version }}-${{ inputs.java-distribution }}-maven${{ inputs.maven-version }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ inputs.cache-prefix }}${{ runner.os }}-jdk${{ inputs.java-version }}-${{ inputs.java-distribution }}-maven${{ inputs.maven-version }}-


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        maven: [ '3.8.8', '3.9.4' ]

    name: Maven ${{ matrix.maven }} sample

    steps:

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@< version >
        with:
          java-version: 8
          maven-version: ${{ matrix.maven }}

      - run: mvn -V ...
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
innovationnorway/setup-vault,"steps:
- uses: actions/checkout@v2
- uses: innovationnorway/setup-vault@v1
  with:
    version: \'~1.4\'
- run: vault version
",0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
anishathalye/proof-html,"- uses: anishathalye/proof-html@v2
  with:
    directory: ./site

tokens: |
  {""https://github.com"": ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"",
   ""https://twitter.com"": ""yyyyyyyyyyyyyyyyyyyyyyy""}

swap_urls: |
  {""^https://example.com/"": ""/""}

swap_urls: |
  {""^(https://github.com/.*)#.*$"": ""\\\\1""}

name: CI
on:
  push:
  schedule:
    - cron: \'0 8 * * 6\'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles(\'**/Gemfile.lock\') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - run: bundle exec jekyll build
      - uses: anishathalye/proof-html@v2
        with:
          directory: ./_site
          enforce_https: false
          tokens: |
            {""https://github.com"": ""${{ secrets.GITHUB_TOKEN }}""}
          ignore_url: |
            http://www.example.com/
            https://en.wikipedia.org/wiki/Main_Page
          ignore_url_re: |
            ^https://twitter.com/
          swap_urls: |
            {""^https://www.anishathalye.com/"": ""/""}

docker run --rm \\
    -e INPUT_DIRECTORY=build \\
    -v ""${PWD}/build:/build"" \\
    proof-html:latest
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/cf-tunnel,"
name: Test

on: [push]

jobs:
  testsolaris:
    runs-on: macos-latest
    name: Test a cf tunnel
    steps:
    - uses: actions/checkout@v2
    - name: Run establish a cf tunnel
      id: test
      uses: vmactions/cf-tunnel@v0.0.1
      with:
        protocol: tcp
        port: 22



",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
vmactions/ngrok-tunnel,"
name: Test

on: [push]

jobs:
  testsolaris:
    runs-on: macos-latest
    name: Test a ngrok tunnel
    env:
      NGROK_TOKEN : ${{ secrets.NGROK_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Run establish a ngrok tunnel
      id: test
      uses: vmactions/ngrok-tunnel@v0.0.1
      with:
        protocol: tcp
        port: 22



",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Deep-Symmetry/github-version-action,"uses: Deep-Symmetry/github-version-action@v1
with:
  var-name: \'project_version\'
  tag-var-name: \'version_tag\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
robvanderleek/create-issue-branch,"on:
  issues:
    types: [ assigned ]
  issue_comment:
    types: [ created ]
  pull_request:
    types: [ closed ]

jobs:
  create_issue_branch_job:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue Branch
        uses: robvanderleek/create-issue-branch@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

mode: chatops

silent: true

branchName: tiny

branchName: short

branchName: \'${issue.number}-${issue.title}\'

branchName: \'${issue.number}-${%SOME_VAR}-${issue.title}\'

branchName: \'${issue.number}-${issue.title[0,64]}\'

branchName: \'${issue.number}-${issue.title,}\'

branchName: \'${issue.number}-${issue.title^}\'

branchName: \'issue-${issue.number%4}\'

gitSafeReplacementChar: \'-\'

gitReplaceChars: \'ab/\'

autoCloseIssue: true

defaultBranch: \'dev\'

branches:
  - label: enhancement
    name: dev
  - label: bug
    name: staging

branches:
  - label:
      - enhancement
      - docs
    name: docs
  - label: enhancement
    name: dev

branches:
  - label: enhancement
    prefix: feature/
  - label: bug
    prefix: bugfix/

branches:
  - label: enhancement
    prefix: feature/${issue.user.login}/

branches:
  - label: question
    skip: true

branches:
  - label: enhancement
    prefix: feature/
  - label: bug
    prefix: bugfix/
  - label: \'*\'
    prefix: issues/

branches:
  - label: bug
    skip: false
  - label: \'*\'
    skip: true

openDraftPR: true

openPR: true

branches:
  - label: bug
    name: development
    prTarget: hotfix

openPR: true
branches:
  - label: release
    name: develop
    prTarget: release
    skipBranch: true

copyIssueDescriptionToPR: true
copyIssueLabelsToPR: true
copyIssueAssigneeToPR: true
copyIssueProjectsToPR: true
copyIssueMilestoneToPR: true

prSkipCI: true

conventionalPrTitles: true

conventionalStyle: semver

conventionalLabels:
  fix:
    bug: \':bug:\'
    dependencies: \':arrow_up:\'
    performance: \':zap:\'
    documentation: \':memo:\'
    security: \':lock:\'
  feature:
    enhancement: \':sparkles:\'
  breaking:
    breaking-change: \':boom:\'
    breaking change: \':boom:\'

conventionalLabels:
  fix:
    bug: \':ambulance:\'

conventionalLabels:
  feature:
    new-stuff: \':rocket:\'

Branch ${branchName} created!

commentMessage: \'Branch ${branchName} created for issue: ${issue.title}\'

experimental:
  branchNameArgument: true

""coverage""
:
""jest --collect-coverage""

 - run: yarn run coverage
 - run: bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_SECRET_TOKEN }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Sniddl/discord-commits,"- name: Discord Commits
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: \'avatar-with-link\'
          include-extras: true

{
    embed: false,
}

{
  embed: {
    title: ""{{ commit.title }}"",
    description: ""{{ commit.description }}"",
    author: {
      name: ""{{ commit.author.name }}""
    }
  }
}

{
  embed: {
    title: ""{{ commit.title }}"",
    description: ""{{ commit.description }}"",
    url: ""{{ commit.url }}""
  }
}

embed: {
  title: ""{{ commit.title }}"",
  description: ""{{ commit.description }}"",
  url: ""{{ commit.url }}"",
  author: {
    name: ""{{ commit.author.name }}""
  }
}

embed: {
  title: ""{{ commit.title }}"",
  description: ""{{ commit.description }}"",
  url: ""{{ commit.url }}"",
  author: {
    name: ""{{ commit.author.name }}"",
    icon_url: ""https://github.com/{{ commit.author.username }}.png""
  }
}

act -W tests/workflows -e tests/push.json
",0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
stefanbuck/github-issue-parser,"- uses: stefanbuck/github-issue-parser@v3
  id: issue-parser
  with:
    template-path: .github/ISSUE_TEMPLATE/bug-report.yml # optional but recommended

- run: cat ${HOME}/issue-parser-result.json

- run: echo $FAVORITE_DISH
  env:
    FAVORITE_DISH: ${{ steps.issue-parser.outputs.issueparser_favorite_dish }}

body:
  - type: input
    id: favorite_dish
    attributes:
      label: What\'s your favorite dish?
    validations:
      required: true

  - type: checkboxes
    id: favorite_color
    attributes:
      label:  What\'s your preferred color?
      options:
        - label: Red
        - label: Green
        - label: Blue


Pizza


- [x] Red
- [ ] Green
- [x] Blue

{
  ""favorite_dish"": ""Pizza"",
  ""favorite_color"": [""Red"", ""Blue""]
}

- run: echo $JSON_STRING > output.json
  env:
    JSON_STRING: ${{ steps.issue-parser.outputs.jsonString }}

- run: echo $FAV_DISH
  env:
    FAV_DISH: ${{ steps.issue-parser.outputs.issueparser_favorite_dish }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
redhat-plumbers-in-action/advanced-issue-labeler,"
- type: dropdown
  id: severity
  attributes:
    label: Severity impact
    description: Please choose the severity of the impact of this issue.
    multiple: false
    options:
      - \'None\'
      - \'Low\'
      - \'Medium\'
      - \'High\'
      - \'Urgent\'
      - \'Other\'
  validations:
    required: true


name: Issue labeler
on:
  issues:
    types: [ opened ]

permissions:
  contents: read

jobs:
  label-component:
    runs-on: ubuntu-latest

    permissions:
      issues: write

      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Parse issue form
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/bug.yml

      - name: Set labels based on severity field
        uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
        with:
          issue-form: ${{ steps.issue-parser.outputs.jsonString }}
          section: severity
          block-list: |
            None
            Other
          token: ${{ secrets.GITHUB_TOKEN }}


- type: dropdown
  id: animals
  attributes:
    label: Animals
    description: Please pick all animals you like.
    multiple: true
    options:
      - \'None\'
      - \'\xf0\x9f\xa6\x8d Gorilla\'
      - \'\xf0\x9f\x90\xb6 Dog\'
      - \'\xf0\x9f\x90\xba Wolf\'
      - \'\xf0\x9f\xa6\x8a Fox\'
      - \'\xf0\x9f\x90\xb4 Horse\'
      - \'\xf0\x9f\x90\x93 Rooster\'
      - \'\xf0\x9f\x90\xa6 Bird\'
      - \'\xf0\x9f\x90\xa7 Penguin\'
      - \'\xf0\x9f\x90\xb8 Frog\'
      - \'\xf0\x9f\x90\xac Dolphin\'
      - \'\xf0\x9f\x90\xa1 Blowfish\'
      - \'\xf0\x9f\x90\x9f Fish\'
      - \'\xf0\x9f\xa6\x88 Shark\'
      - \'\xf0\x9f\x90\x9b Bug\'
      - \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\'
      - \'\xf0\x9f\x90\x8a Crocodile\'
      - \'other\'
  validations:
    required: true


policy:
  - section:
      - id: [animals]
        block-list: [\'None\', \'Other\']
        label:
          - name: \'kind: amphibians\'
            keys: [\'\xf0\x9f\x90\xb8 Frog\']
          - name: \'kind: birds\'
            keys: [\'\xf0\x9f\x90\x93 Rooster\', \'\xf0\x9f\x90\xa6 Bird\', \'\xf0\x9f\x90\xa7 Penguin\']
          - name: \'kind: fish\'
            keys: [\'\xf0\x9f\x90\xa1 Blowfish\', \'\xf0\x9f\x90\x9f Fish\', \'\xf0\x9f\xa6\x88 Shark\']
          - name: \'kind: mammals\'
            keys: [\'\xf0\x9f\xa6\x8d Gorilla\', \'\xf0\x9f\x90\xb6 Dog\', \'\xf0\x9f\x90\xac Dolphin\', \'\xf0\x9f\x90\xba Wolf\', \'\xf0\x9f\xa6\x8a Fox\', \'\xf0\x9f\x90\xb4 Horse\']
          - name: \'kind: reptiles\'
            keys: [\'\xf0\x9f\x90\x8a Crocodile\']
          - name: \'invertebrates\'
            keys: [\'\xf0\x9f\x90\x9b Bug\', \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\'] 

name: Issue labeler
on:
  issues:
    types: [ opened ]

permissions:
  contents: read

jobs:
  label-component:
    runs-on: ubuntu-latest

    permissions:
      issues: write

      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Parse issue form
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/bug.yml

      - name: Set labels based on animals field
        uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
        with:
          issue-form: ${{ steps.issue-parser.outputs.jsonString }}
          token: ${{ secrets.GITHUB_TOKEN }}


- uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
  with:
    issue-form: <issue-form.json>
    template:   <template-name.yml>
    section:    <section-id>
    block-list: <block-list>
    token:      <GitHub token>


policy:
  - template: [\'bug.yml\', \'feature.yml\']
    section:
      - id: [\'severity\', \'priority\']
        block-list: []
        label:
          - name: \'Low\'
            keys: [\'Low\', \'None\']
          - name: \'Medium\'
            keys: [\'Medium\']
          - name: \'High\'
            keys: [\'High\']
          - name: \'Urgent\'
            keys: [\'Urgent\']
      - id: [animals]
        block-list: [\'None\', \'Other\']
        label:
          - name: \'amphibians\'
            keys: [\'\xf0\x9f\x90\xb8 Frog\']
          - name: \'birds\'
            keys: [\'\xf0\x9f\x90\x93 Rooster\', \'\xf0\x9f\x90\xa6 Bird\', \'\xf0\x9f\x90\xa7 Penguin\']
          - name: \'fish\'
            keys: [\'\xf0\x9f\x90\xa1 Blowfish\', \'\xf0\x9f\x90\x9f Fish\', \'\xf0\x9f\xa6\x88 Shark\']
          - name: \'mammals\'
            keys: [\'\xf0\x9f\xa6\x8d Gorilla\', \'\xf0\x9f\x90\xb6 Dog\', \'\xf0\x9f\x90\xac Dolphin\', \'\xf0\x9f\x90\xba Wolf\', \'\xf0\x9f\xa6\x8a Fox\', \'\xf0\x9f\x90\xb4 Horse\']
          - name: \'reptiles\'
            keys: [\'\xf0\x9f\x90\x8a Crocodile\']
          - name: \'invertebrates\'
            keys: [\'\xf0\x9f\x90\x9b Bug\', \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\']
",0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
xt0rted/slash-command-action,"on: issue_comment
name: Issue Comments
permissions:
  issues: write
jobs:
  check_comments:
    name: Check comments for /test
    runs-on: ubuntu-latest
    steps:
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          command: test
          reaction: ""true""
          reaction-type: ""eyes""
          allow-edits: ""false""
          permission-level: admin
      - name: Act on the command
        run: echo ""The command was \'${{ steps.command.outputs.command-name }}\' with arguments \'${{ steps.command.outputs.command-arguments }}\'""
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
linhbn123/rebase-pull-requests,"name: Rebase Pull Requests
on:
  push:
    branches: '**'
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: linhbn123/rebase-pull-requests@v1.0.1

name: Rebase Pull Requests
on:
  push:
    branches: [main]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: linhbn123/rebase-pull-requests@v1.0.1
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
artis3n/setup-conftest,"steps:
  - uses: artis3n/setup-conftest@v0

steps:
  - uses: artis3n/setup-conftest@v0
    with:
      conftest_version: 0.21.0

steps:
  - uses: artis3n/setup-conftest@v0
    with:
      conftest_wrapper: false

steps:
  - uses: artis3n/setup-conftest@v0

  - id: verify
    run: conftest verify ./

  - run: echo ${{ steps.verify.outputs.stdout }}
  - run: echo ${{ steps.verify.outputs.stderr }}
  - run: echo ${{ steps.verify.outputs.exitcode }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0
Khan/pull-request-workflow-cancel,"name: Pull Request Workflow Cancel Example
on: [pull_request]

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-workflow-cancel@1.0.0
        with:
          workflows: ""example.yml | second.yml""
        env:
          GITHUB_TOKEN: \'${{ secrets.GITHUB_TOKEN }}\'
      - uses: actions/checkout@v2
      - run: echo \'Running now\'
      - run: sleep 30
      - run: echo \'wasnt cancelled\'
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
YosysHQ/setup-oss-cad-suite,"steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    version: '2021-05-28'
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    python-override: true
- run: yosys --version

name: CI
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: YosysHQ/setup-oss-cad-suite@v2
      - run: yosys --version
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
EndBug/label-sync,"- name: breaking-change \xf0\x9f\x92\xa5
  color: \'#D93F0B\'
  description:
    A change that changes the API or breaks backward compatibility for
    users.
  aliases: [breaking]

- name: bug \xf0\x9f\x90\x9e
  color: d73a4a
  description:
    Inconsistencies or issues which will cause a problem for users or implementors.

- name: documentation \xf0\x9f\x93\x9d
  color: 0075ca
  description: Solely about the documentation of the project.

[
  // Support comments
  {
    // My label
    ""name"": ""breaking-change \xf0\x9f\x92\xa5"",
    ""color"": ""#D93F0B"",
    ""description"":
      ""A change that changes the API or breaks backward compatibility for users."",
    ""aliases"": [
      ""breaking""
    ]
  },
  {
    ""name"": ""bug \xf0\x9f\x90\x9e"",
    ""color"": ""d73a4a"",
    ""description"":
      ""Inconsistencies or issues which will cause a problem for users or implementors.""
  },
  {
    ""name"": ""documentation \xf0\x9f\x93\x9d"",
    ""color"": ""0075ca"",
    ""description"": ""Solely about the documentation of the project.""
  }
]

name: \xe2\x99\xbb\xef\xb8\x8f Sync Labels

on:
  workflow_dispatch:

jobs:
  labels:
    name: \xe2\x99\xbb\xef\xb8\x8f Sync labels
    runs-on: ubuntu-20.04
    steps:
      - name: \xe2\xa4\xb5\xef\xb8\x8f Check out code from GitHub
        uses: actions/checkout@v3

      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          repositories: |
            owner/repository-1
            owner/repository-2

          config-file: |
            .github/labels-1.yml
            .github/labels-2.yml
            https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

          clean-labels: false

...
    steps:
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          config-file: https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          auto-discover-repos: true

          exclude-repos: repo-1
          exclude-repos: |
            repository-1
            repository-2
          exclude-repos: /^repository-1$/u

          account-type: org | user

          owner: owner

          exclude-forked-repos: true

          exclude-archived-repos: true

          exclude-private-repos: true

          exclude-disabled-repos: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
Resnovas/label-mastermind,"
on:
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, edited, closed, reopened, synchronize]
  project_card:
    types: [created, moved, deleted]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

[
\t{
\t\t""root"": ""."",
\t\t""versioning"": {
\t\t\t""source"": ""milestones"",
\t\t\t""type"": ""SemVer""
\t\t},
\t\t""prereleaseName"": ""alpha"",
\t\t""sharedConfig"": {
\t\t\t""labels"": {
\t\t\t\t""bug"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^bug(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/(created|new|opened|made)( an| a)? bug/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""chore"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^chore(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""optimisation"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^opt(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^optimisation(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Revert|Deprecated|Removal)*optimisation/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""style"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^style(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Refactoring|Optimisation|Revert|Deprecated|Removal)*style/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""refactor"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^ref(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^refactor(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Optimisation|Revert|Deprecated|Removal)*refactoring/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""revert"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^revert(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Deprecated|Removal)*revert/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""deprecated"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^dep(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^deprecated(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Revert|Removal)*deprecated/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""removal"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^removal(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Revert|Deprecated)*removal/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""discussion"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^discussion(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""documentation"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^docs(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^documentation(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""feature"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^feat(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^enhance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^feature(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^enhancement(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fix"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^fix(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""workflow"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\(workflow\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""releaseMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?release-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?release-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""labelMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?label-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?label-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""variableMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?variable-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?variable-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""installer"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?action-masterminds.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\(installer\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityCritical"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""!:.*(critical|urgent)?|!?:.*(critical|urgent)""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""pr"": {
\t\t\t""labels"": {
\t\t\t\t""xs"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 0,
\t\t\t\t\t\t\t""max"": 10
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""s"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 10,
\t\t\t\t\t\t\t""max"": 30
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""m"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 40,
\t\t\t\t\t\t\t""max"": 100
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""l"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 100,
\t\t\t\t\t\t\t""max"": 500
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""xl"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 500,
\t\t\t\t\t\t\t""max"": 1000
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""xxl"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 1000
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fixConfirmed"": {
\t\t\t\t\t""requires"": 6,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a stable build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsReviewing"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""pendingReview"",
\t\t\t\t\t\t\t""value"": true
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsRejected"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""requestedChanges"",
\t\t\t\t\t\t\t""value"": true
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""issue"": {
\t\t\t""ref"": ""develop"",
\t\t\t""labels"": {
\t\t\t\t""android"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*android/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""aws"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*aws/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*amazon web service/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""google"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*google/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""ios"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*ios/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""ubuntu"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*ubuntu/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fedora"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*fedora/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""debian"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*debian/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""macos"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*macos/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""windows"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*windows/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""bugConfirmed"": {
\t\t\t\t\t""requires"": 8,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] bug Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on my application version/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have contacted support/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have asked the community/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fixConfirmed"": {
\t\t\t\t\t""requires"": 6,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a stable build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""project"": {
\t\t\t""ref"": ""develop"",
\t\t\t""labels"": {
\t\t\t\t""available"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Requested""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""pending"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Accepted""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""progress"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""In Progress""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Testing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""review"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Reviewing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""completed"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Completed""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""doNotDevelop"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Rejected""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsAccepted"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Accepted""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsDeveloping"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""In Progress""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsTesting"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Testing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsReviewing"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Reviewing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsStaging"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Staging""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsCompleted"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Completed""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsRejected"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Rejected""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityLow"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""Low Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityMedium"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""Medium Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityHigh"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""High Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityCritical"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""High Priority""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""!:.*(critical|urgent)?|!?:.*(critical|urgent)""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t}
\t}
]

/** @format */

import {
\tCondition,
\tIssueCondition,
\tPRCondition,
\tProjectCondition,
\tScheduleCondition
} from ""../src/conditions""
import { Repo } from ""../src/utils""

/**
 * Application interfaces
 */

export interface Options {
\tconfigPath: string
\tconfigJSON: Runners
\tshowLogs: boolean
\tdryRun: boolean
\tfillEmpty: boolean
\tskipDelete: boolean
\trepo?: Repo
}

export interface Runners {
\tlabels?: Labels
\trunners: Config[]
}

export interface Config {
\troot: string
\tversioning: {
\t\tsource: VersionSource
\t\ttype?: VersionType
\t}
\tretryLimit?: number
\tprereleaseName?: string
\tlabels?: { [key: string]: string }
\tsharedConfig?: SharedConfig
\tpr?: PullRequestConfig
\tissue?: IssueConfig
\tproject?: ProjectConfig
\tschedule?: ScheduleConfig
}

/**
 * Config types
 */

export type VersionSource = ""node"" | ""milestones"" | string
export type VersionType = ""SemVer""

export interface SharedConditions {
\trequires: number
\tconditions: Condition[]
}

export interface Label {
\tname: string
\tdescription: string
\tcolor: string
}

export interface Labels {
\t[key: string]: Label
}

export interface PRConditionConfig {
\trequires: number
\tconditions: PRCondition[]
}

export interface IssueConditionConfig {
\trequires: number
\tconditions: IssueCondition[]
}

export interface ProjectConditionConfig {
\trequires: number
\tconditions: ProjectCondition[]
}

export interface ScheduleConditionConfig {
\trequires: number
\tconditions: ScheduleCondition[]
}

export interface PullRequestConfig extends SharedConfig {
\tassignProject?: AssignProject[]
\tautomaticApprove?: AutomaticApprove
\tmanageRelease?: Release
\tduplicateHotfix?: { [title: string]: DuplicateHotfix }
\tsyncRemote?: SyncRemote[]
}

export interface IssueConfig extends SharedConfig {
\tassignProject?: AssignProject[]
\tcreateBranch?: { [label: string]: CreateBranch }
}

export interface ProjectConfig extends SharedConfig {
\tsyncRemote?: ExProjects[]
\topenBranch?: ProjectCreateBranch
\tassignMilestone?: { [milestone: string]: Milestones }
}

export interface ScheduleConfig extends SharedConfig {}

export type SharedConfigIndex =
\t| ""ref""
\t| ""enforceConventions""
\t| ""labels""
\t| ""stale""

export interface SharedConfig {
\tref?: string
\tenforceConventions?: EnforceConventions
\tstale?: Stale
\tlabels?: {
\t\t[key: string]:
\t\t\t| IssueConditionConfig
\t\t\t| ProjectConditionConfig
\t\t\t| PRConditionConfig
\t\t\t| ScheduleConditionConfig
\t\t\t| SharedConditions
\t}
}

export interface SharedConventionConditions {
\trequires: number
\tconditions: Condition[] | string
}
export interface SharedConventionsConfig extends SharedConventionConditions {
\tfailedComment: string
\tcontexts?: string[]
}

export interface CreateBranch {
\tbranchPrefix?: string
\tbranchSuffix?: string
\tbranchName: ""title"" | ""short"" | ""number""
}

export interface EnforceConventions {
\tonColumn?: Column[]
\tcommentHeader?: string
\tcommentFooter?: string
\tmoveToColumn?: string
\tconventions: SharedConventionsConfig[]
}

export interface Stale {
\tstaleLabel: string
\tstale?: StaleConfig
\tabandoned?: AbanondedConfig
\tconditions?: SharedConditions[]
}

export interface StaleConfig extends SharedConditions {
\tdays: number
\tcomment?: string
\tresolve?: string
\tcommentHeader?: string
\tcommentFooter?: string
}

export interface AbanondedConfig extends StaleConfig {
\tclose?: boolean
\tlock?: boolean
\tlabel: string
}

export interface AutomaticApprove {
\tcommentHeader?: string
\tcommentFooter?: string
\tconventions: SharedConventionsConfig[]
}

export interface Release extends PRConditionConfig {
\tlabels?: {
\t\tbuild: string
\t\tprerelease: string
\t\tpatch: string
\t\tminor: string
\t\tmajor: string
\t\tbreaking?: string
\t}
\tcreateTag?: boolean
\tcreateRelease?: CreateRelease
\tcreateMilestone?: CreateMilestone
\tcreatePackages?: string[] | string
\tcreateChangelog?: Changelog
}

export interface DuplicateHotfix {
\tprName: ""unchanged"" | ""number"" | string
\ttitlePrefix?: string
\tbranches: string[]
}
export interface SyncRemote {
\tlocalBranch: string
\tremoteBranch: string
\tlocalPath: string
\tremotePath: string
\tconditions: SharedConditions[]
}

export interface ReleaseChanges {
\tincludeIssues?: boolean
\tsections?: Sections[]
}

export interface Sections {
\ttitle: string
\tbody?: string
\tPRlabels: string[]
\tissueLabels?: string[]
\tincludeCommitter?: boolean
\tlinkPR?: boolean
}

export interface CreateRelease extends ReleaseChanges {
\ttagName?: string
\ttagPrefix?: string
\treleaseName?: string
\treleaseNamePrefix?: string
\treleaseNameSuffix?: string
\tdraft?: boolean
\tprerelease?: boolean
\tuseChangelog?: boolean
}
export interface Changelog extends ReleaseChanges {
\ttitle?: string
\tbody?: string
}

export interface CreateMilestone {
\tmilestone: ""version"" | string
\tdeadline?: string
}

export type Column = string | number

interface AssignProject extends IssueConditionConfig {
\towner?: string
\tuser?: string
\trepo?: string
\tproject: string
\tcolumn: string
}

interface ExProjects {
\tlocalProject: string
\towner?: string
\tuser?: string
\trepo?: string
\tproject: string
}
interface ProjectCreateBranch extends CreateBranch {
\tonProject?: string
\tonColumn?: string
}

interface Milestones {
\tonColumn: string
\tignoreLabels?: string[]
}

{
\t""type"": ""$and"",
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""creatorMatches"",
\t""pattern"": ""^foo""
}

{
\t""type"": ""descriptionMatches"",
\t""pattern"": ""foo.*bar""
}

{
\t""type"": ""hasLabel"",
\t""label"": ""Type - Bug"",
\t""value"": ""false""
}

{
\t""type"": ""isAbandoned"",
\t""stale"": 30
}

{
\t""type"": ""isLocked"",
\t""value"": true
}

{
\t""type"": ""isOpen"",
\t""value"": true
}

{
\t""type"": ""isStale"",
\t""stale"": 30
}

{
\t""type"": ""$only"",
\t""requires"": 1,
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""$or"",
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""branchMatches"",
\t""pattern"": ""^bugfix\\\\/""
}

{
\t""type"": ""changesSize"",
\t""min"": 0,
\t""max"": 100
}

{
\t""type"": ""filesMatch"",
\t""glob"": ""src/foo/**/*""
}

{
\t""type"": ""isApproved"",
\t""value"": true,
\t""required"": 1
}

{
\t""type"": ""isDraft"",
\t""value"": true
}

{
\t""type"": ""pendingReview"",
\t""value"": true
}

{
\t""type"": ""requestedChanges"",
\t""value"": true
}

{
\t""type"": ""onColumn"",
\t""project"": ""Isuues"",
\t""column"": ""New""
}
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
VeryGoodOpenSource/very_good_coverage,"uses: VeryGoodOpenSource/very_good_coverage@v2
with:
  path: \'/coverage/lcov.info\'
  min_coverage: 95
  exclude: \'**/*_observer.dart **/change.dart\'

uses: VeryGoodOpenSource/very_good_coverage@v2
with:
  path: \'my_project/coverage/lcov.info\'

- name: Check for existing and non-empty coverage file
  id: test_coverage_file
  run: if [ -s ""/coverage/lcov.info"" ]; then echo ""result=true"" >> $GITHUB_OUTPUT ; else echo ""result=false"" >> $GITHUB_OUTPUT; fi
- name: Very Good Coverage
  if: steps.test_coverage_file.outputs.result == \'true\'
  uses: VeryGoodOpenSource/very_good_coverage@v2
  with:
    path: \'/coverage/lcov.info\'

jobs:
  build:
    defaults:
      run:
        working-directory: my_project/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Very Good Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: /my_project/coverage/lcov.info
",0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Namchee/conventional-pr,"on:\r
  pull_request:\r
\r
jobs:\r
  cpr:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Validates the pull request\r
        uses: Namchee/conventional-pr@v(version)\r
        with:\r
          access_token: YOUR_GITHUB_ACCESS_TOKEN_HERE\r

on:\r
  pull_request_target:\r
\r
jobs:\r
  cpr:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Validates the pull request\r
        uses: Namchee/conventional-pr@v(version)\r
        with:\r
          access_token: YOUR_GITHUB_ACCESS_TOKEN_HERE\r
",0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
xiachufang/actions-feishu,"    - name: Send feishu message
      env:
        ACTIONS_FEISHU_TAG: \'v1.3.1\' # \xe6\x9b\xbf\xe6\x8d\xa2\xe6\xad\xa4\xe5\x8f\x98\xe9\x87\x8f, \xe6\x9c\x80\xe6\x96\xb0\xe8\xa7\x81 https://github.com/xiachufang/actions-feishu/releases
        INPUT_WEBHOOK: ""${{ secrets.FEISHU_ROBOT_WEBHOOK_URL }}""
        INPUT_MESSAGE_TYPE: ""post""
        INPUT_TITLE: ""I\'m title""
        INPUT_CONTENT: ""I\'m message body\
from: ${{ github.repository }}""
      run: |
        wget -q https://github.com/xiachufang/actions-feishu/releases/download/${{ env.ACTIONS_FEISHU_TAG }}/linux-amd64-actions-feishu.tar.gz
        tar zxf linux-amd64-actions-feishu.tar.gz feishu
        ./feishu
",0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
icepuma/rust-action,"name: Rust Example

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: icepuma/rust-action@master
        with:
          args: cd integration-test && cargo fmt -- --check && cargo clippy -- -Dwarnings && cargo test
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0
davidB/rust-cargo-make,"    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
    - uses: actions/checkout@v1
    - name: Run tests
      run: cargo make ci-flow

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
      with:
        version: \'0.23.0\'
    - uses: actions/checkout@v1
    - name: Run tests
      run: cargo make ci-flow
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
ok-nick/setup-aftman,"steps:
- uses: ok-nick/setup-aftman@v0.3.0

steps:
- uses: ok-nick/setup-aftman@v0.3.0
  with:
    version: v1.0.0 # name of git tag in aftman (uses latest by default)
    path: some_directory/my_project # path to project directory containing `aftman.toml`
    token: ${{ github.token }} # GitHub token to bypass rate limit (passed by default)
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
tim-actions/commit-body-check,"name: Sanity check
on: [pull_request]

jobs:
  commits_check_job:
    runs-on: ubuntu-latest
    name: Commits Check
    steps:
    - name: Get PR Commits
      id: 'get-pr-commits'
      uses: tim-actions/get-pr-commits@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Commit Body Check
      uses: tim-actions/commit-body-check@master
      with:
        commits: ${{ steps.get-pr-commits.outputs.commits }

",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
tferreira/matterfy,"- name: Mattermost Notification
  uses: tferreira/matterfy@releases/v1
  if: always()
  with:
    type: ${{ job.status }}
    job_name: \'*Lint Check*\'
    channel: \'random\'
    url: ${{ secrets.SLACK_WEBHOOK }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
jetli/wasm-bindgen-action,"- uses: jetli/wasm-bindgen-action@v0.2.0
  with:
    version: \'latest\'
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
jam1garner/contributors-only,"name: Non-Contributor Issue Closer
on:
  issues:
    types: [opened]
permissions:
  contents: write
  issues: write
jobs:
  autoclose:
    runs-on: ubuntu-latest
    steps:
      - name: Close Issue
        uses: jam1garner/contributors-only@v3
        with:
          comment: Auto-closing issue, user is not a contributor
",0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
LoliGothick/rustfmt-check,"format:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - run: echo ""date=$(date -d \'1 month ago\' +\'%Y-%m-%d\')"" >> $GITHUB_ENV
        - uses: dtolnay/rust-toolchain@master
          with:
              toolchain: nightly-${{ env.date }}
              components: rustfmt
        - uses: LoliGothick/rustfmt-check@master
          with:
              token: ${{ secrets.GITHUB_TOKEN }}
              toolchain: nightly-${{ env.date }}
              flags: --all
              options: --manifest-path=Cargo.toml
              args: --config-path=path/to/rustfmt.toml
              working-directory: my_crate
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hasura/comment-progress,"- uses: hasura/comment-progress@v2.3.0
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}

    repository: ""my-org/my-repo""

    number: ${{ github.event.number }}

    commit-sha: ${{ github.sha }}

    id: deploy-progress

    message: ""Thank you for opening this PR :pray:""

    fail: true

    append: true

    recreate: true

    delete: true

on:
  pull_request:
    types: [opened]

jobs:
  thank-user:
    runs-on: ubuntu-20.04
    name: Say thanks for the PR
    steps:
      - name: comment on the pull request
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: thank-you-comment
          message: ""Thank you for opening this PR :pray:""

on:
  push:
    branches:
      - main

jobs:
  commit-comment:
    runs-on: ubuntu-20.04
    name: Comment on commit with some info
    steps:
      - name: Comment on commit
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          commit-sha: ${{ github.sha }}
          id: commit-comment
          message: ""This is a commit comment :D.""

on:
  pull_request:
    types: [opened]

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    name: Deploy preview
    steps:
      - name: Notify about starting this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ""Starting deployment of this pull request.""

      - name: Deploy preview
        run: |
          echo ""deploy preview""

      - name: Notify about the result of this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ""Deployment of a preview for this pull request was successful.""
          append: true

on:
  workflow_dispatch:
    inputs:
      number:
        description: ""pull request number""
        required: true

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    name: Deploy preview
    steps:
      - name: Notify about starting this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.inputs.number }}
          id: deploy-preview
          message: ""Starting deployment of this pull request.""

      - name: Deploy preview
        run: |
          echo ""deploy preview""

      - name: Notify about the result of this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.inputs.number }}
          id: deploy-preview
          message: ""Deployment of a preview for this pull request was successful.""
          recreate: true

on:
  pull_request:
    types: [closed]

jobs:
  cleanup-automated-comments:
    runs-on: ubuntu-20.04
    name: Delete automated PR comments
    steps:
      - name: delete comment that contains a preview link
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: preview-url

npm install
npm run build

git add .
git commit -m ""generates dist for updated code""
",0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
kdheepak/panvimdoc,"name: panvimdoc
on: [push]
jobs:
  docs:
    runs-on: ubuntu-latest
    name: pandoc to vimdoc
    steps:
      - uses: actions/checkout@v2
      - uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${VIMDOC_PROJECT_NAME}
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ""Auto generate docs""
          branch: ${{ github.head_ref }}

touch doc/${VIMDOC_PROJECT_NAME}.txt
git commit -am ""Add empty doc""
git push

name: panvimdoc

on: [push]

jobs:
  docs:
    runs-on: ubuntu-latest
    name: pandoc to vimdoc
    steps:
      - uses: actions/checkout@v2
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${VIMDOC_PROJECT_NAME} # Output vimdoc project name (required)
          pandoc: ""README.md"" # Input pandoc file
          version: ""NVIM v0.8.0"" # Vim version number
          toc: true # Table of contents
          description: """" # Project Description
          demojify: false # Strip emojis from the vimdoc
          dedupsubheadings: true # Add heading to subheading anchor links to ensure that subheadings are unique
          treesitter: true # Use treesitter for highlighting codeblocks
          ignorerawblocks: true # Ignore raw html blocks in markdown when converting to vimdoc
          docmapping: false # Use h4 headers as mapping docs
          docmappingprojectname: true # Use project name in tag when writing mapping docs
          shiftheadinglevelby: 0 # Shift heading levels by specified number
          incrementheadinglevelby: 0 # Increment heading levels by specified number

- name: panvimdoc
  uses: kdheepak/panvimdoc@main
  with:
    vimdoc: panvimdoc

- name: panvimdoc
  uses: kdheepak/panvimdoc@vX.X.X

name: docs

on:
  push:
    branches: main

permissions:
  contents: write

jobs:
  publish-gh-page:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: pandoc markdown to html
        uses: docker://pandoc/latex:3.1
        with:
          args: >-
            --katex
            --from markdown+tex_math_single_backslash
            --to html5+smart
            --template=""./scripts/template.html5""
            --css=""/panvimdoc/css/theme.css""
            --css=""/panvimdoc/css/skylighting-solarized-theme.css""
            --toc
            --wrap=none
            --metadata title=""panvimdoc""
            doc/panvimdoc.md
            --lua-filter=scripts/include-files.lua
            --lua-filter=scripts/skip-blocks.lua
            -t html
            -o public/index.html
      - name: deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public

$ ./panvimdoc.sh
Usage: ./panvimdoc.sh --project-name PROJECT_NAME --input-file INPUT_FILE --vim-version VIM_VERSION --toc TOC --description DESCRIPTION --dedup-subheadings DEDUP_SUBHEADINGS --treesitter TREESITTER

Arguments:
  --project-name: the name of the project
  --input-file: the input markdown file
  --vim-version: the version of Vim that the project is compatible with
  --toc: \'true\' if the output should include a table of contents, \'false\' otherwise
  --description: a description of the project
  --dedup-subheadings: \'true\' if duplicate subheadings should be removed, \'false\' otherwise
  --demojify: \'false\' if emojis should not be removed, \'true\' otherwise
  --treesitter: \'true\' if the project uses Tree-sitter syntax highlighting, \'false\' otherwise
  --ignore-rawblocks: \'true\' if the project should ignore HTML raw blocks, \'false\' otherwise
  --doc-mapping: \'true\' if the project should use h4 headers as mapping docs, \'false\' otherwise
  --doc-mapping-project-name: \'true\' if tags generated for mapping docs contain project name, \'false\' otherwise
  --shift-heading-level-by: 0 if you don\'t want to shift heading levels , n otherwise
  --increment-heading-level-by: 0 if don\'t want to increment the starting heading number, n otherwise
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
Klemensas/action-autotag,"name: Create Tag

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: Klemensas/action-autotag@stable
      with:
        GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

- uses: actions/checkout@v2
- uses: Klemensas/action-autotag@stable

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    package_root: ""/path/to/subdirectory""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_prefix: ""v""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_suffix: "" (beta)""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_message: ""Custom message goes here.""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    changelog_structure: ""**{{messageHeadline}}** {{author}}\
""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    version: ""${{ steps.previous_step.outputs.version }}""
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
thomaseizinger/set-crate-version,"name: ""...""
on: ...

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    
    - name: Bump crate version
      uses: thomaseizinger/set-crate-version@master
      with:
        version: 1.0.0
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
rodrigogiraoserrao/python-black-check,"uses: RojerGS/python-black-check@master

uses: RojerGS/python-black-check@master
with:
  line-length: '81'
  path: '.'
  include: 'apps'
  exclude: '(/*.html|/*.mo|/*.po|/*.png|/*.rst)'
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
GetStream/verify-semantic-changelog-update,"name: \'Verify Semantic Changelog Update\'
on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
    branches:
      - master

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: GetStream/verify-semantic-changelog-update@X.X.X
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          types: |
            fix
            feat
          scopes: |
            {
              ""ui"": ""packages/ui"",
              ""core"": ""packages/core""
            }
          path: |
            changelog.md
",0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
Warchant/setup-mold,"uses: warchant/setup-mold@v1
with:
  version: 1.1.0
  make_default: true
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0
WtfJoke/setup-tectonic,"steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
  - run: tectonic main.tex

steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      tectonic-version: 0.12.0
  - run: tectonic main.tex

steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      biber-version: 2.16
  - run: biber --version

name: 'Build LaTex Document'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tectonic
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

name: 'Build LaTex Document'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Tectonic Cache
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tectonic
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

name: 'Build LaTex Document with Biber'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Tectonic Cache
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          biber-version: 'latest'
      - name: Run Tectonic + Biber
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

run: |
  tectonic --keep-intermediates --reruns 0 main.tex
  biber main
  tectonic main.tex
",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
NSCoder/rust-musl-action,"action ""build"" {
  env = {
      BUILD_TARGET = ""x86_64-unknown-linux-musl""
  }
  uses = ""juankaram/rust-musl-action@master""
  args = ""cargo build --target $BUILD_TARGET --release""
}
",0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
pyvista/setup-headless-display-action,"- name: Setup headless display
  uses: pyvista/setup-headless-display-action@v1

name: Tests that require virtual display

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - ""*""
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1

    - uses: pyvista/setup-headless-display-action@v1
      with:
        qt: true

name: Workflow that uses PyVista for plotting

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - ""*""
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install PyVista
        run: pip install pyvista

      - name: Use PyVista
        run: python -c ""import pyvista;pyvista.Sphere().plot(screenshot=\'${{ matrix.os }}-sphere.png\')""

      - uses: actions/upload-artifact@v2
        with:
          name: sphere
          path: ${{ matrix.os }}-sphere.png
",0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
gymshark/slack-notifier-action,"uses: gymshark/slack-notifier-action@v1.0.2
with:
  webhook_url: 'https://hooks.slack.com/services/ABC123/def456'

yarn build
",0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
wasmerio/wapm-publish,"- name: Setup Wasmer
  uses: wasmerio/setup-wasmer@v1

- name: Publish to WAPM
  uses: wasmerio/wapm-publish@v1
  with:
    username: ${{ secrets.WAPM_USERNAME }}
    password: ${{ secrets.WAPM_PASSWORD }}
    token: ${{ secrets.WAPM_TOKEN }}

npm i
WAPM_USERNAME=x WAPM_PASSWORD=y WAPM_TOKEN=z npm test
",1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
Numericas/matrix-action,"name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}
        if: failure()

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}
          message: Integration tests failed
        if: failure()

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          status: ${{ job.status }}
          message: Integration tests failed
        if: failure()
",0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
web3-storage/add-to-web3,"uses: web3-storage/add-to-web3@v2
id: web3
with:
  web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
  path_to_add: \'dist\'

- run: echo ${{ steps.web3.outputs.cid }}

- run: echo ${{ steps.web3.outputs.url }}
",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0
tianhaoz95/mirror-action,"name: Check Mirror Files
on: push
jobs:
  check-mirror-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: tianhaoz95/mirror-action@v1.0.1
        with:
          original: \'README.md\'
          mirror: \'docs/README.md\'
",0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
