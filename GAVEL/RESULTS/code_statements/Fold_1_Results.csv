,text,label,Dependency management_prediction,Dependency management_label,Support_prediction,Support_label,Testing_prediction,Testing_label,Reporting_prediction,Reporting_label,Mobile CI_prediction,Mobile CI_label,Community_prediction,Community_label,Security_prediction,Security_label,Chat_prediction,Chat_label,IDEs_prediction,IDEs_label,Monitoring_prediction,Monitoring_label,Code review_prediction,Code review_label,Code quality_prediction,Code quality_label,Publishing_prediction,Publishing_label,Project management_prediction,Project management_label,API management_prediction,API management_label,Open Source management_prediction,Open Source management_label,Mobile_prediction,Mobile_label,Code search_prediction,Code search_label,GitHub Sponsors_prediction,GitHub Sponsors_label,Continuous integration_prediction,Continuous integration_label,Deployment_prediction,Deployment_label,Container CI_prediction,Container CI_label,Localization_prediction,Localization_label,Utilities_prediction,Utilities_label,Desktop tools_prediction,Desktop tools_label,AI Assisted_prediction,AI Assisted_label,Time tracking_prediction,Time tracking_label,Code Scanning Ready_prediction,Code Scanning Ready_label,Backup Utilities_prediction,Backup Utilities_label,Learning_prediction,Learning_label
0,"- uses: actions/checkout@v3
  with:
    repository: \'\'

    ref: \'\'

    token: \'\'

    ssh-key: \'\'

    ssh-known-hosts: \'\'

    ssh-strict: \'\'

    persist-credentials: \'\'

    path: \'\'

    clean: \'\'

    sparse-checkout: \'\'

    sparse-checkout-cone-mode: \'\'

    fetch-depth: \'\'

    lfs: \'\'

    submodules: \'\'

    set-safe-directory: \'\'

    github-server-url: \'\'

- uses: actions/checkout@v3
  with:
    sparse-checkout: .

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      .github
      src

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false

- uses: actions/checkout@v3
  with:
    fetch-depth: 0

- uses: actions/checkout@v3
  with:
    ref: my-branch

- uses: actions/checkout@v3
  with:
    fetch-depth: 2
- run: git checkout HEAD^

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v3
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools

- uses: actions/checkout@v3
  with:
    ref: ${{ github.event.pull_request.head.sha }}

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m ""generated""
          git push
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4
  with:
    python-version: '3.10' 
- run: python my_script.py

steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4 
  with:
    python-version: 'pypy3.9' 
- run: python my_script.py

steps:
- uses: actions/checkout@v3
- uses: actions/setup-python@v4
  with:
    python-version: '3.9'
    cache: 'pip' # caching pip dependencies
- run: pip install -r requirements.txt
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
2,"name: Main workflow

on:
  pull_request:
  push:
  schedule:
    - cron: 0 1 * * MON

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - ""5.0""

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tree
        uses: actions/checkout@v3

      - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      - run: opam exec -- dune build

      - run: opam exec -- dune runtest

- name: Set-up OCaml ${{ matrix.ocaml-compiler }}
  uses: ocaml/setup-ocaml@v2
  with:
    ocaml-compiler: ${{ matrix.ocaml-compiler }}

steps:
  - uses: ocaml/setup-ocaml@v2
  - uses: ocaml/setup-ocaml@<SHA>
  - uses: ocaml/setup-ocaml@v2.0.0
  - uses: ocaml/setup-ocaml@master

version: 2
updates:
  - package-ecosystem: github-actions
    directory: /
    schedule:
      interval: weekly
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
3,"steps:
- uses: actions/checkout@v3

- run: mkdir -p path/to/artifact

- run: echo hello > path/to/artifact/world.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/world.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/ # or path/to/artifact

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/**/[abc]rtifac?/*

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: |
      path/output/bin/
      path/output/test-results
      !path/**/*.tmp

path/to/*/directory/foo?.txt =>
    \xe2\x88\x9f path/to/some/directory/foo1.txt
    \xe2\x88\x9f path/to/some/directory/foo2.txt
    \xe2\x88\x9f path/to/other/directory/foo1.txt

would be flattened and uploaded as =>
    \xe2\x88\x9f some/directory/foo1.txt
    \xe2\x88\x9f some/directory/foo2.txt
    \xe2\x88\x9f other/directory/foo1.txt

- uses: actions/upload-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact/
    if-no-files-found: error # \'warn\' or \'ignore\' are also available, defaults to `warn`

- uses: actions/upload-artifact@v3
  if: failure()
  with:
    name: my-artifact
    path: path/to/artifact/

- uses: actions/upload-artifact@v3
  with:
    path: path/to/artifact/world.txt

- run: echo hi > world.txt
- uses: actions/upload-artifact@v3
  with:
    path: world.txt

- run: echo howdy > extra-file.txt
- uses: actions/upload-artifact@v3
  with:
    path: extra-file.txt

- run: echo hello > world.txt
- uses: actions/upload-artifact@v3
  with:
    path: world.txt

    strategy:
      matrix:
          node-version: [8.x, 10.x, 12.x, 13.x]
    steps:
        - name: Create a file
          run: echo ${{ matrix.node-version }} > my_file.txt
        - name: Accidentally upload to the same artifact via multiple jobs
          uses: actions/upload-artifact@v3
          with:
              name: my-artifact
              path: ${{ github.workspace }}

          uses: actions/upload-artifact@v3
          with:
              name: my-artifact ${{ matrix.node-version }}
              path: ${{ github.workspace }}

  - run: |
      mkdir -p ~/new/artifact
      echo hello > ~/new/artifact/world.txt
  - uses: actions/upload-artifact@v3
    with:
      name: Artifacts-V3
      path: ~/new/**/*

    env:
      name: my-artifact
    steps:
    - run: |
        mkdir -p ${{ github.workspace }}/artifact
        echo hello > ${{ github.workspace }}/artifact/world.txt
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.name }}-name
        path: ${{ github.workspace }}/artifact/**/*

    steps:
    - run: | 
        mkdir testing
        echo ""This is a file to upload"" > testing/file.txt
        echo ""artifactPath=testing/file.txt"" >> $GITHUB_ENV
    - uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ${{ env.artifactPath }} # this will resolve to testing/file.txt at runtime

  - name: Create a file
    run: echo ""I won\'t live long"" > my_file.txt

  - name: Upload Artifact
    uses: actions/upload-artifact@v3
    with:
      name: my-artifact
      path: my_file.txt
      retention-days: 5

  - name: Tar files
    run: tar -cvf my_files.tar /path/to/my/directory

  - name: Upload Artifact
    uses: actions/upload-artifact@v3
    with:
      name: my-artifact
      path: my_files.tar
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
4,"- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch name to trigger deployment
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

      - name: Build
        run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    personal_token: ${{ secrets.PERSONAL_TOKEN }}
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_branch: your-branch  # default: gh-pages

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./out  # default: public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    destination_dir: subdir

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    exclude_assets: \'.github,exclude-file1,exclude-file2\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}   # Recommended for this usage
    exclude_assets: \'\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    exclude_assets: \'.github,exclude-file.txt,exclude-dir/**.txt\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    cname: github.com

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    enable_jekyll: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    allow_empty_commit: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    keep_files: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    external_repository: username/external-repository
    publish_branch: your-branch  # default: gh-pages
    publish_dir: ./public

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    force_orphan: true

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    user_name: \'github-actions[bot]\'
    user_email: \'github-actions[bot]@users.noreply.github.com\'

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    commit_message: ${{ github.event.head_commit.message }}

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public
    full_commit_message: ${{ github.event.head_commit.message }}

name: GitHub Pages

on:
  push:
    branches:
      - main
    tags:
      - \'v*.*.*\'

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Some build

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, \'refs/tags/\')
        run: |
          echo ""DEPLOY_TAG_NAME=deploy-${TAG_NAME}"" >> ""${GITHUB_OUTPUT}""

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          tag_name: ${{ steps.prepare_tag.outputs.DEPLOY_TAG_NAME }}
          tag_message: \'Deployment ${{ github.ref_name }}\'

$ # On a main branch
$ git tag -a ""v1.2.3"" -m ""Release v1.2.3""
$ git push origin ""v1.2.3""

$ # After deployment
$ git fetch origin
$ git tag
deploy-v1.2.3  # Tag on the gh-pages branch
v1.2.3         # Tag on the main branch

ssh-keygen -t rsa -b 4096 -C ""$(git config user.email)"" -f gh-pages -N """"

/usr/bin/git push origin gh-pages
remote: Write access to repository not granted.
fatal: unable to access \'https://github.com/username/repository.git/\': The requested URL returned error: 403
Error: Action failed with ""The process \'/usr/bin/git\' failed with exit code 128""

permissions:
  contents: write

version: 2
updates:
- package-ecosystem: ""github-actions""
  directory: ""/""
  schedule:
    interval: ""daily""
  labels:
  - ""CI/CD""
  commit-message:
    prefix: ci

name: GitHub Pages

on:
  push:
    branches:
      - main
  schedule:
    - cron: ""22 22 * * *""
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
    ...

- uses: peaceiris/actions-gh-pages@main # Bad example!
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- uses: peaceiris/actions-gh-pages@v3.9.3 # tag: Better
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

- uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # commit hash of v3.9.3: Best!
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./public

git clone https://github.com/peaceiris/actions-gh-pages.git
cd ./actions-gh-pages
git checkout v3.9.3
nvm install
nvm use
npm i -g npm
npm ci
npm run build
git diff ./lib/index.js # We will get zero exit code

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run format
      - run: npm run test
      - run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Get yarn cache
        id: yarn-cache
        run: echo ""YARN_CACHE_DIR=$(yarn cache dir)"" >> ""${GITHUB_OUTPUT}""

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(\'**/yarn.lock\') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn export

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(\'**/package-lock.json\') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm test
      - run: npm run generate

      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist


name: GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - \'.github/workflows/deploy.yml\'
      - \'website/**\'
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Get yarn cache
        id: yarn-cache
        run: echo ""YARN_CACHE_DIR=$(yarn cache dir)"" >> ""${GITHUB_OUTPUT}""

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-website-${{ hashFiles(\'**/yarn.lock\') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: \'3.8\'

      - name: Upgrade pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo ""dir=$(pip cache dir)"" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles(\'**/requirements.txt\') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - run: mkdocs build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: \'0.4.8\'

      - run: mdbook build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 -b beta _flutter
          echo ""${GITHUB_WORKSPACE}/_flutter/bin"" >> ${GITHUB_PATH}

      - name: Install
        run: |
          flutter config --enable-web
          flutter pub get

      - name: Build
        run: flutter build web

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'14\'

      - name: Setup Elm
        run: npm install elm --global

      - name: Make
        run: elm make --optimize src/Main.elm

      - name: Move files
        run: |
          mkdir ./public
          mv ./index.html ./public/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: macos-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/Publish_build
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles(\'**/Package.resolved\') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Setup JohnSundell/Publish
        run: |
          cd ${HOME}
          export PUBLISH_VERSION=""0.7.0""
          git clone https://github.com/JohnSundell/Publish.git
          cd ./Publish && git checkout ${PUBLISH_VERSION}
          mv ~/Publish_build .build || true
          swift build -c release
          cp -r .build ~/Publish_build || true
          echo ""${HOME}/Publish/.build/release"" >> ${GITHUB_PATH}

      - run: publish-cli generate

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Output
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
5,"name: remote ssh command
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: whoami

======CMD======
whoami
======END======
out: ***
==============================================
\xe2\x9c\x85 Successfully executed commands to all host.
==============================================

ssh-keygen -t rsa -b 4096 -C ""your_email@example.com""

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

cat .ssh/id_rsa.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

cat .ssh/id_ed25519.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

clip < ~/.ssh/id_rsa

clip < ~/.ssh/id_ed25519

ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey]

CASignatureAlgorithms +ssh-rsa

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

- name: executing remote ssh commands using password
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    port: ${{ secrets.PORT }}
    script: whoami

- name: executing remote ssh commands using ssh key
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    script: whoami

- name: multiple command
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    script: |
      whoami
      ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
-     host: ""foo.com""
+     host: ""foo.com,bar.com""
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
      script: |
        whoami
        ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
-     host: ""foo.com""
+     host: ""foo.com:1234,bar.com:5678""
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      script: |
        whoami
        ls -al

  - name: multiple host
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ""foo.com,bar.com""
+     sync: true
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
      script: |
        whoami
        ls -al

  - name: pass environment
    uses: appleboy/ssh-action@v1.0.0
+   env:
+     FOO: ""BAR""
+     BAR: ""FOO""
+     SHA: ${{ github.sha }}
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     envs: FOO,BAR,SHA
      script: |
        echo ""I am $FOO""
        echo ""I am $BAR""
        echo ""sha: $SHA""

  - name: stop script if command error
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     script_stop: true
      script: |
        mkdir abc/def
        ls -al

======CMD======
mkdir abc/def
ls -al

======END======
2019/11/21 01:16:21 Process exited with status 1
err: mkdir: cannot create directory \xe2\x80\x98abc/def\xe2\x80\x99: No such file or directory

+--------+       +----------+      +-----------+
| Laptop | <-->  | Jumphost | <--> | FooServer |
+--------+       +----------+      +-----------+

Host Jumphost
  HostName Jumphost
  User ubuntu
  Port 22
  IdentityFile ~/.ssh/keys/jump_host.pem

Host FooServer
  HostName FooServer
  User ubuntu
  Port 22
  ProxyCommand ssh -q -W %h:%p Jumphost

  - name: ssh proxy command
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     proxy_host: ${{ secrets.PROXY_HOST }}
+     proxy_username: ${{ secrets.PROXY_USERNAME }}
+     proxy_key: ${{ secrets.PROXY_KEY }}
+     proxy_port: ${{ secrets.PROXY_PORT }}
      script: |
        mkdir abc/def
        ls -al

  - name: ssh key passphrase
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     passphrase: ${{ secrets.PASSPHRASE }}
      script: |
        whoami
        ls -al

ssh example.com ssh-keygen -l -f /etc/ssh/ssh_host_ed25519_key.pub | cut -d \' \' -f2

  - name: ssh key passphrase
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.KEY }}
      port: ${{ secrets.PORT }}
+     fingerprint: ${{ secrets.FINGERPRINT }}
      script: |
        whoami
        ls -al
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
6,"- uses: actions/checkout@v2
- uses: sobolevn/misspell-fixer-action@master
- uses: peter-evans/create-pull-request@v2.4.4
  with:
    token: ${{ secrets.GITHUB_TOKEN }}

- uses: sobolevn/misspell-fixer-action@master
  with:
    options: '-rsvn src/'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
7,"      - uses: actions/checkout@v3


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        env:
          https_proxy: http://<proxy_address>:<port>

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo ""Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}""
          echo ""Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}""

      - run: |
          rm -rf temp-dir
          rm temp-file.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          add-paths: |
            *.java
            docs/*.md

    steps:
      - uses: actions/checkout@v3
      - name: Create commits
        run: |
          git config user.name \'Peter Evans\'
          git config user.email \'peter-evans@users.noreply.github.com\'
          date +%s > report.txt
          git commit -am ""Modify tracked file during workflow""
          date +%s > new-report.txt
          git add -A
          git commit -m ""Add untracked file during workflow""
      - name: Uncommitted change
        run: date +%s > report.txt
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5

      - name: Create or Update Project Card
        if: ${{ steps.cpr.outputs.pull-request-number }}
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}

jobs:
  createPullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make changes to pull request
        run: date +%s > report.txt

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: Update report
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: example-patches
          delete-branch: true
          title: \'[Example] Update report\'
          body: |
            Update report
            - Updated with *today\'s* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: peter-evans
          reviewers: peter-evans
          team-reviewers: |
            developers
            qa-team
          milestone: 1
          draft: false
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
8,"name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache Primes
      id: cache-primes
      uses: actions/cache@v3
      with:
        path: prime-numbers
        key: ${{ runner.os }}-primes

    - name: Generate Prime Numbers
      if: steps.cache-primes.outputs.cache-hit != \'true\'
      run: /generate-primes.sh -d prime-numbers

    - name: Use Prime Numbers
      run: /primes.sh -d prime-numbers

name: Caching Primes

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Restore cached Primes
      id: cache-primes-restore
      uses: actions/cache/restore@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ runner.os }}-primes
    .
    . //intermediate workflow steps
    .
    - name: Save Primes
      id: cache-primes-save
      uses: actions/cache/save@v3
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}

  - uses: actions/cache@v3
    with:
      path: |
        path/to/dependencies
        some/other/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Get Date
    id: get-date
    run: |
      echo ""date=$(/bin/date -u ""+%Y%m%d"")"" >> $GITHUB_OUTPUT
    shell: bash

  - uses: actions/cache@v3
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles(\'**/lockfiles\') }}

steps:
  - uses: actions/checkout@v3

  - uses: actions/cache@v3
    id: cache
    with:
      path: path/to/dependencies
      key: ${{ runner.os }}-${{ hashFiles(\'**/lockfiles\') }}

  - name: Install Dependencies
    if: steps.cache.outputs.cache-hit != \'true\'
    run: /install.sh

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d prime-numbers

      - name: Cache Numbers
        id: cache-numbers
        uses: actions/cache@v3
        with:
          path: numbers
          key: primes

      - name: Generate Numbers
        if: steps.cache-numbers.outputs.cache-hit != \'true\'
        run: ./generate-primes.sh -d numbers

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: prime-numbers
          key: primes

      - name: Generate Prime Numbers
        if: steps.cache-primes.outputs.cache-hit != \'true\'
        run: ./generate-primes -d prime-numbers
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
9,"steps:
- uses: actions/checkout@master
- uses: codecov/codecov-action@v3
  with:
    token: ${{ secrets.CODECOV_TOKEN }}
    files: ./coverage1.xml,./coverage2.xml # optional
    flags: unittests # optional
    name: codecov-umbrella # optional
    fail_ci_if_error: true # optional (default = false)
    verbose: true # optional (default = false)

name: Example workflow for Codecov
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.10'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.10
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml,!./cache
        flags: unittests
        name: codecov-umbrella
        verbose: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
10,"/.wordpress-org
/.git
/.github
/node_modules

.distignore
.gitignore

/.wordpress-org export-ignore
/.github export-ignore

/.gitattributes export-ignore
/.gitignore export-ignore

name: Deploy to WordPress.org
on:
  push:
    tags:
    - ""*""
jobs:
  tag:
    name: New tag
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Build # Remove or modify this step as needed
      run: |
        npm install
        npm run build
    - name: WordPress Plugin Deploy
      uses: 10up/action-wordpress-plugin-deploy@stable
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
        SLUG: my-super-cool-plugin # optional, remove if GitHub repo name matches SVN slug, including capitalization

name: Deploy to WordPress.org
on:
  release:
    types: [published]
jobs:
  tag:
    name: New release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build
      run: |
        npm install
        npm run build
    - name: WordPress Plugin Deploy
      id: deploy
      uses: 10up/action-wordpress-plugin-deploy@stable
      with:
        generate-zip: true
      env:
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.deploy.outputs.zip-path }}
        asset_name: ${{ github.event.repository.name }}.zip
        asset_content_type: application/zip
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
11,"name: Plugin asset/readme update
on:
  push:
    branches:
    - trunk
jobs:
  trunk:
    name: Push to trunk
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: WordPress.org plugin asset/readme update
      uses: 10up/action-wordpress-plugin-asset-update@stable
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
12,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\' # See \'Supported distributions\' for available options
    java-version: \'17\'
- run: java HelloWorldApp.java

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'zulu\' # See \'Supported distributions\' for available options
    java-version: \'17\'
- run: java HelloWorldApp.java

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'gradle\'
- run: ./gradlew build --no-daemon

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'maven\'
- name: Build with Maven
  run: mvn -B package --file pom.xml

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    cache: \'sbt\'
- name: Build with SBT
  run: sbt package

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\'
    java-version: \'17\'
    check-latest: true
- run: java HelloWorldApp.java

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ \'8\', \'11\', \'17\' ]
    name: Java ${{ matrix.Java }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: \'<distribution>\'
          java-version: ${{ matrix.java }}
      - run: java HelloWorldApp.java

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: \'<distribution>\'
          java-version: |
            8
            11
            15
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
13,"name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build
      run: ./gradlew build

 - uses: gradle/gradle-build-action@v2
   with:
     gradle-version: 6.5

name: Test latest Gradle RC
on:
  schedule:
    - cron: 0 0 * * * # daily
jobs:
  gradle-rc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: release-candidate
    - run: gradle build --dry-run # just test build configuration

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    
    - name: Setup and execute Gradle \'test\' task
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test

- uses: gradle/gradle-build-action@v2
  with:
    arguments: assemble
- uses: gradle/gradle-build-action@v2
  with:
    arguments: check

arguments: build
arguments: check --scan
arguments: some arbitrary tasks
arguments: build -PgradleProperty=foo
arguments: |
    build
    --scan
    -PgradleProperty=foo
    -DsystemProperty=bar

- uses: gradle/gradle-build-action@v2
  env:
    CI: true
  with:
    arguments: build

- uses: gradle/gradle-build-action@v2
  with:
    arguments: build
    build-root-directory: some/subdirectory

 - uses: gradle/gradle-build-action@v2
   with:
     arguments: build
     gradle-executable: /path/to/installed/gradle

cache-disabled: true

cache-read-only: ${{ github.ref != \'refs/heads/main\' && github.ref != \'refs/heads/release\' }}

gradle-home-cache-includes: |
    caches
    notifications
    jdks
gradle-home-cache-excludes: |
    caches/build-cache-1
    caches/keyrings

env:
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

gradle-home-cache-cleanup: true

generate-job-summary: false

name: Run Gradle on PRs
on: pull_request
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      id: gradle
      run: ./gradlew build --scan
    - name: ""Add Build Scan URL as PR comment""
      uses: actions/github-script@v5
      if: github.event_name == \'pull_request\' && failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: \'\xe2\x9d\x8c ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}\'
          })

jobs:   
  gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v3
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Run build with Gradle wrapper
      run: ./gradlew build --scan
    - name: Upload build reports
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports/

name: Submit dependency graph
on:
  push:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

name: Submit dependency graph
on:
  push:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate-and-submit
    - name: Run a build, generating the dependency graph from \'RuntimeClasspath\' configurations
      run: ./gradlew build -DDEPENDENCY_GRAPH_INCLUDE_CONFIGURATIONS=RuntimeClasspath

name: run-build-and-generate-dependency-snapshot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: generate # Only generate in this job
    - name: Run a build, generating the dependency graph snapshot which will be submitted
      run: ./gradlew build

name: submit-dependency-snapshot

on:
  workflow_run:
    workflows: [\'run-build-and-generate-dependency-snapshot\']
    types: [completed]

jobs:
  submit-snapshots:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve dependency graph artifact and submit
        uses: gradle/gradle-build-action@v2
      with:
        dependency-graph: download-and-submit
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
14,"- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
\r
- name: Build app for release\r
  run: msbuild src\\YourProjectFile.csproj -t:rebuild -verbosity:diag -property:Configuration=Release\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vs-version: \'[16.4,16.5)\'\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vs-prerelease: true\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    msbuild-architecture: x64\r

- name: Add msbuild to PATH\r
  uses: microsoft/setup-msbuild@v1.1\r
  with:\r
    vswhere-path: \'C:\\path\\to\\your\\tools\\\'\r

npm install\r
npm run build\r
npm run pack\r
","[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
15,"- name: Create installer
  uses: joncloud/makensis-action@v4
  with:
    arguments: ""/V3""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
16,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
17,"- name: Setup PHP with PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: imagick, swoole

- name: Setup PHP with specific version of PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'5.4\'
    extensions: swoole-1.9.3

- name: Setup PHP with pre-release PECL extension
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: xdebug-beta

- name: Setup PHP and disable opcache
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: :opcache

- name: Setup PHP without any shared extensions except mbstring
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: none, mbstring

- name: Setup PHP with intl
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: intl-70.1

- name: Setup PHP with fail-fast
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: oci8
  env:
    fail-fast: true

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: php-cs-fixer, phpunit

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: vimeo/psalm

- name: Setup PHP with tools
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: php-cs-fixer:3.5, phpunit:9.5
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Setup PHP with composer v2
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: composer:v2

- name: Setup PHP without composer
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: none

- name: Setup PHP with fail-fast
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: deployer
  env:
    fail-fast: true

- name: Setup PHP with Xdebug
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: xdebug

- name: Setup PHP with Xdebug 2.x
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'7.4\'
    coverage: xdebug2

- name: Setup PHP with PCOV
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    ini-values: pcov.directory=api #optional, see above for usage.
    coverage: pcov

- name: Setup PCOV
  run: |
    composer require pcov/clobber
    vendor/bin/pcov clobber

- name: Setup PHP with no coverage driver
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: none

- name: Setup PHP
  id: setup-php
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'

- name: Print PHP version
  run: echo ${{ steps.setup-php.outputs.php-version }}

steps:
- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    extensions: mbstring, intl
    ini-values: post_max_size=256M, max_execution_time=180
    coverage: xdebug
    tools: php-cs-fixer, phpunit

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [\'ubuntu-latest\', \'windows-latest\', \'macos-latest\']
        php-versions: [\'8.1\', \'8.2\', \'8.3\']
        phpunit-versions: [\'latest\']
        include:
          - operating-system: \'ubuntu-latest\'
            php-versions: \'8.0\'
            phpunit-versions: 9
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, intl
        ini-values: post_max_size=256M, max_execution_time=180
        coverage: xdebug
        tools: php-cs-fixer, phpunit:${{ matrix.phpunit-versions }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
- name: Setup nightly PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.3\'
    extensions: mbstring
    ini-values: post_max_size=256M, max_execution_time=180
    coverage: xdebug
    tools: php-cs-fixer, phpunit

steps:
- name: Setup PHP with debugging symbols
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    debug: true # specify true or false

jobs:
  run:
    runs-on: [ubuntu-latest, windows-latest]
    name: Setup PHP TS
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: \'8.2\'
      env:
        phpts: ts # specify ts or nts

- name: Setup PHP with latest versions
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    update: true # specify true or false

- name: Setup PHP with logs
  uses: shivammathur/setup-php@verbose
  with:
    php-version: \'8.2\'

jobs:
  run:
    runs-on: ubuntu-latest
    container: shivammathur/node:latest-${{ matrix.arch }}
    strategy:
      matrix:
        arch: [""amd64"", ""i386""]
    steps:
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: \'8.2\'

jobs:
  run:
    runs-on: self-hosted
    strategy:
      matrix:
        php-versions: [\'5.6\', \'7.0\', \'7.1\', \'7.2\', \'7.3\', \'7.4\', \'8.0\', \'8.1\', \'8.2\']
    name: PHP ${{ matrix.php-versions }}
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
      env:
        runner: self-hosted

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: \'8.2\'

act -P ubuntu-latest=shivammathur/node:latest

act -P ubuntu-22.04=shivammathur/node:2204

act -P ubuntu-20.04=shivammathur/node:2004

- name: Setup PHP with JIT in tracing mode
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    coverage: none
    ini-values: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M

- name: Get composer cache directory
  id: composer-cache
  run: echo ""dir=$(composer config cache-files-dir)"" >> $GITHUB_OUTPUT

- name: Cache dependencies
  uses: actions/cache@v3
  with:
    path: ${{ steps.composer-cache.outputs.dir }}
    key: ${{ runner.os }}-composer-${{ hashFiles(\'**/composer.lock\') }}
    restore-keys: ${{ runner.os }}-composer-

- name: Install dependencies
  run: composer install --prefer-dist

key: ${{ runner.os }}-composer-${{ hashFiles(\'**/composer.json\') }}

key: ${{ runner.os }}-composer-${{ matrix.prefer }}-${{ hashFiles(\'**/composer.lock\') }}
restore-keys: ${{ runner.os }}-composer-${{ matrix.prefer }}-

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    PACKAGIST_TOKEN: ${{ secrets.PACKAGIST_TOKEN }}

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
  env:
    COMPOSER_AUTH_JSON: |
      {
        ""http-basic"": {
          ""example.org"": {
            ""username"": ""${{ secrets.EXAMPLE_ORG_USERNAME }}"",
            ""password"": ""${{ secrets.EXAMPLE_ORG_PASSWORD }}""
          }
        }
      }

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'

- name: Run PHP code
  shell: php {0}
  run: |
    <?php
    $welcome = ""Hello, world"";
    echo $welcome;

- name: Setup problem matchers for PHP
  run: echo ""::add-matcher::${{ runner.tool_cache }}/php.json""

- name: Setup problem matchers for PHPUnit
  run: echo ""::add-matcher::${{ runner.tool_cache }}/phpunit.json""

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: phpstan

- name: Run PHPStan
  run: phpstan analyse src

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: psalm

- name: Run Psalm
  run: psalm --output-format=github

- name: Setup PHP
  uses: shivammathur/setup-php@v2
  with:
    php-version: \'8.2\'
    tools: cs2pr, phpcs

- name: Run phpcs
  run: phpcs -q --report=checkstyle src | cs2pr
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
18,"on: [push]

name: CI

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release --all-features

on: [push]

name: ARMv7 build

jobs:
  linux_arm7:
    name: Linux ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-gnueabihf
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
19,"steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'3.1.x\'
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- name: Setup dotnet
  uses: actions/setup-dotnet@v3
  with:
    dotnet-version: | 
      3.1.x
      5.0.x
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'6.0.x\'
    dotnet-quality: \'preview\'
- run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    global-json-file: csharp/global.json
- run: dotnet build <my project>
  working-directory: csharp

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
- run: dotnet restore --locked-mode

<PropertyGroup>
  <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
</PropertyGroup>

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
- run: dotnet restore --locked-mode

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    cache: true
    cache-dependency-path: subdir/packages.lock.json
- run: dotnet restore --locked-mode

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ \'2.1.x\', \'3.1.x\', \'5.0.x\' ]
    name: Dotnet ${{ matrix.dotnet }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Execute dotnet
        run: dotnet build <my project>

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ \'2.1.x\', \'3.1.x\', \'5.0.x\' ]
    name: Dotnet ${{ matrix.dotnet }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        id: stepid
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Create temporary global.json
        run: echo \'{""sdk"":{""version"": ""${{ steps.stepid.outputs.dotnet-version }}""}}\' > ./global.json
      - name: Execute dotnet
        run: dotnet build <my project>

steps:
- uses: actions/checkout@v3
- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: \'3.1.x\'
    source-url: https://nuget.pkg.github.com/<owner>/index.json
  env:
    NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
- run: dotnet build <my project>
- name: Create the package
  run: dotnet pack --configuration Release <my project>
- name: Publish the package to GPR
  run: dotnet nuget push <my project>/bin/Release/*.nupkg

- uses: actions/setup-dotnet@v3
  with:
    source-url: https://pkgs.dev.azure.com/<your-organization>/_packaging/<your-feed-name>/nuget/v3/index.json
  env:
    NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}} # Note, create a secret with this name in Settings
- name: Publish the package to Azure Artifacts
  run: dotnet nuget push <my project>/bin/Release/*.nupkg

- uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 3.1.x
- name: Publish the package to nuget.org
  run: dotnet nuget push */bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
  env:
    NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: 3.1.422
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 3.1.422

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: | 
          3.1.422
          5.0.408
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 5.0.408

    - uses: actions/setup-dotnet@v3
      id: stepid
      with:
        dotnet-version: | 
          3.1.422
          5.0.408
        global-json-file: ""./global.json"" # contains version 2.2.207
    - run: echo \'${{ steps.stepid.outputs.dotnet-version }}\' # outputs 2.2.207

build:
  runs-on: ubuntu-latest
  env:
    DOTNET_INSTALL_DIR: ""path/to/directory""
    NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  steps:
    - uses: actions/checkout@main
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: \'3.1.x\'
        cache: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
20,"on: push
name: Slack Notification Demo
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} # or a specific color like \'good\' or \'#ff00ff\'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: \'Post Content :rocket:\'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

on: push
name: Slack Notification Demo
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
","[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
21,"on:
  push:
    tags:
      - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
22,"name: publish to nuget\r
on:\r
  push:\r
    branches:\r
      - main # Default release branch, may also be named 'master' or 'develop'\r
jobs:\r
  publish:\r
    name: build, pack & publish\r
    runs-on: ubuntu-latest\r
    steps:\r
      - uses: actions/checkout@v2\r
\r
\r
      - name: publish on version change\r
        id: publish_nuget\r
        uses: brandedoutcast/publish-nuget@v2\r
        with:\r
          PROJECT_FILE_PATH: Core/Core.csproj\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
\r
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
23,"- uses: conda-incubator/setup-miniconda@v2
  with:
    activate-environment: whatever

- uses: conda-incubator/setup-miniconda@v2
  with:
    auto-activate-base: true
    activate-environment: """"

jobs:
  example-1:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu-latest"", ""macos-latest"", ""windows-latest""]
        python-version: [""3.7"", ""2.7""]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

jobs:
  example-2-linux:
    name: Ex2 Linux
    runs-on: ""ubuntu-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-mac:
    name: Ex2 Mac
    runs-on: ""macos-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Sh
        shell: sh -l {0}
        run: |
          conda info
          conda list
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list

  example-2-win:
    name: Ex2 Windows
    runs-on: ""windows-latest""
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: ""latest""
          activate-environment: foo
      - name: Bash
        shell: bash -el {0}
        run: |
          conda info
          conda list
      - name: PowerShell
        shell: powershell
        run: |
          conda info
          conda list
      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
      - name: Cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          conda info && conda list

jobs:
  example-3:
    name: Ex3 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
          python-version: 3.5
          condarc-file: etc/example-condarc.yml
          auto-activate-base: false
      - run: |
          conda info
          conda list

jobs:
  example-4:
    name: Ex4 Linux
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: foo
          python-version: 3.6
          channels: conda-forge,spyder-ide
          allow-softlinks: true
          channel-priority: flexible
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-5:
    name: Ex5 Miniforge for PyPy
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          allow-softlinks: true
          show-channel-urls: true
          use-only-tar-bz2: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show

jobs:
  example-6:
    name: Ex6 Mamba
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6
          mamba-version: ""*""
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment.yml
      - shell: bash -el {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort
      - shell: bash -el {0}
        run: mamba install jupyterlab

jobs:
  example-7:
    name: Ex7 Explicit
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: etc/example-explicit.conda.lock
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

jobs:
  example-10-miniforge:
    name: Ex10 (${{ matrix.os }}, Miniforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: etc/example-environment.yml
          miniforge-version: latest

jobs:
  example-10-mambaforge:
    name: Ex10 (${{ matrix.os }}, Mambaforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [""ubuntu"", ""macos"", ""windows""]
        include:
          - os: ubuntu
            environment-file: etc/example-environment-no-name.yml
            miniforge-variant: Mambaforge
            miniforge-version: 4.9.2-4
          - os: macos
            environment-file: etc/example-empty-channels-environment.yml
            miniforge-variant: Mambaforge-pypy3
          - os: windows
            environment-file: etc/example-explicit.Windows.conda.lock
            condarc-file: etc/example-condarc.yml
            miniforge-variant: Mambaforge
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          condarc-file: ${{ matrix.condarc-file }}
          environment-file: ${{ matrix.environment-file }}
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: ${{ matrix.miniforge-version }}
          use-mamba: true

jobs:
  example-11:
    name:
      Ex11 (os=${{ matrix.os }} architecture=${{ matrix.architecture }}
      miniconda-version=${{ matrix.miniconda-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [""windows-latest""]
        architecture: [""x86""]
        miniconda-version: [""latest""]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          architecture: ${{ matrix.architecture }}
          miniconda-version: $${{ matrix.miniconda-version }}
          auto-update-conda: true
          python-version: ""3.8""

jobs:
  caching-example:
    name: Caching
    runs-on: ""ubuntu-latest""
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles(\'etc/example-environment.yml\') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          channel-priority: strict
          environment-file: etc/example-environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

- name: Setup Mambaforge
  uses: conda-incubator/setup-miniconda@v2
  with:
    miniforge-variant: Mambaforge
    miniforge-version: latest
    activate-environment: anaconda-client-env
    use-mamba: true

- name: Get Date
  id: get-date
  run: echo ""today=$(/bin/date -u \'+%Y%m%d\')"" >> $GITHUB_OUTPUT
  shell: bash

- name: Cache Conda env
  uses: actions/cache@v2
  with:
    path: ${{ env.CONDA }}/envs
    key:
      conda-${{ runner.os }}--${{ runner.arch }}--${{
      steps.get-date.outputs.today }}-${{
      hashFiles(\'etc/example-environment-caching.yml\') }}-${{ env.CACHE_NUMBER
      }}
  env:
    CACHE_NUMBER: 0
  id: cache

- name: Update environment
  run:
    mamba env update -n anaconda-client-env -f
    etc/example-environment-caching.yml
  if: steps.cache.outputs.cache-hit != \'true\'

jobs:
  default-shell:
    name: Default shell
    runs-on: ""ubuntu-latest""
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: anaconda-client-env
          environment-file: etc/example-environment-caching.yml
      - run: conda info
      - run: conda list
      - run: conda config --show
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
24,"steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    name: my-artifact
    
- name: Display structure of downloaded files
  run: ls -R

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    name: my-artifact
    path: path/to/artifact
    
- name: Display structure of downloaded files
  run: ls -R
  working-directory: path/to/artifact

  - uses: actions/download-artifact@v3
    with:
      name: my-artifact
      path: ~/download/path

   current/working/directory/
      my-artifact/
          ... contents of my-artifact

   current/working/directory/
      ... contents of my-artifact

- uses: actions/download-artifact@v2
  with:
    name: my-artifact
    path: my-artifact

  etc/usr/artifacts/
      Artifact-A/
          ... contents of Artifact-A
      Artifact-B/
          ... contents of Artifact-B

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  with:
    path: path/to/artifacts
    
- name: Display structure of downloaded files
  run: ls -R
  working-directory: path/to/artifacts

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3

- name: Display structure of downloaded files
  run: ls -R

steps:
- uses: actions/checkout@v3

- uses: actions/download-artifact@v3
  id: download
  with:
    name: 'my-artifact'
    path: path/to/artifacts

- name: 'Echo download path'
  run: echo ${{steps.download.outputs.download-path}}

  - name: 'Tar files'
    run: tar -cvf my_files.tar /path/to/my/directory

  - name: 'Upload Artifact'
    uses: actions/upload-artifact@v2
    with:
      name: my-artifact
      path: my_files.tar    
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
25,"jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/<your-pypi-project-name>
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

- name: Publish package distributions to TestPyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    repository-url: https://test.pypi.org/legacy/

    if: github.event_name == \'push\' && startsWith(github.ref, \'refs/tags\')

- name: Publish package to TestPyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    repository-url: https://test.pypi.org/legacy/

- name: Publish package to PyPI
  uses: pypa/gh-action-pypi-publish@release/v1
  with:
    packages-dir: custom-dir/

   with:
     verify-metadata: false

   with:
     skip-existing: true

   with:
     verbose: true

  with:
    print-hash: true

  with:
    user: guido
    password: ${{ secrets.DEVPI_PASSWORD }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
26,"name: Lint Commit Messages
on: [pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: wagoid/commitlint-github-action@v5

You have commit messages with errors

\xe2\xa7\x97   input: wrong message
\xe2\x9c\x96   subject may not be empty [subject-empty]
\xe2\x9c\x96   type may not be empty [type-empty]

\xe2\x9c\x96   found 2 problems, 0 warnings
\xe2\x93\x98   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

\xe2\xa7\x97   input: chore: my message
\xe2\x9a\xa0   body must have leading blank line [body-leading-blank]

\xe2\x9a\xa0   found 0 problems, 1 warnings
\xe2\x93\x98   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

[
  {
    ""hash"": ""cb0f846f13b490c2fd17bd5ed0b6f65ba9b86c75"",
    ""message"": ""wrong message"",
    ""valid"": false,
    ""errors"": [""subject may not be empty"", ""type may not be empty""],
    ""warnings"": [],
  },
  {
    ""hash"": ""cb14483cbde23b61322ffb8d3fcdc87f514a3141"",
    ""message"": ""chore: my message\
\
some context without leading blank line"",
    ""valid"": true,
    ""errors"": [],
    ""warnings"": [""body must have leading blank line""],
  },
]

name: Lint Commit Messages
on: [pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: \'14\'
      - run: npm install
      - uses: wagoid/commitlint-github-action@v5
        env:
          NODE_PATH: ${{ github.workspace }}/node_modules
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
27,"repositories: |
  [
    {
      ""id"": ""central"",
      ""name"": ""Maven Central"",
      ""url"": ""https://repo1.maven.org/maven2"",
      ""releases"": {
        ""enabled"": ""true""
      },
      ""snapshots"": {
        ""enabled"": ""false""
      }
    }
  ]

- uses: whelk-io/maven-settings-xml-action@v20
  with:
    output_file: foo/custom.xml

- name: maven-settings-xml-action
  uses: whelk-io/maven-settings-xml-action@v20
  with:
    repositories: \'[{ ""id"": ""some-repository"", ""url"": ""http://some.repository.url"" }]\'
    plugin_repositories: \'[{ ""id"": ""some-plugin-repository"", ""url"": ""http://some.plugin.repository.url"" }]\'
    servers: \'[{ ""id"": ""some-server"", ""username"": ""some.user"", ""password"": ""some.password"" }]\'

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" 
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
          xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0
                              http://maven.apache.org/xsd/settings-1.0.0.xsd"">
  
    <activeProfiles>
        <activeProfile>github</activeProfile>
    </activeProfiles>
  
    <profiles>
        <profile>
            <id>github</id>
            <repositories>
                <repository>
                    <id>some-repository</id>
                    <url>http://some.repository.url</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>some-plugin-repository</id>
                    <url>http://some.plugin.repository.url</url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
  
    <servers>
        <server>
            <id>foo</id>
            <username>fu</username>
            <password>bar</password>
        </server>
    </servers>
  
</settings>

- name: maven-settings-xml-action
  uses: whelk-io/maven-settings-xml-action@v20
  with:
    repositories: >
      [
        {
          ""id"": ""some-repository"",
          ""name"": ""some-repository-name"",
          ""url"": ""http://some.repository.url"",
          ""releases"": {
            ""enabled"": ""true"",
            ""updatePolicy"": ""always"",
            ""checksumPolicy"": ""fail""
          },
          ""snapshots"": {
            ""enabled"": ""false"",
            ""updatePolicy"": ""always"",
            ""checksumPolicy"": ""fail""
          }
        }
      ]
    plugin_repositories: >
      [
        {
          ""id"": ""some-plugin-repository"",
          ""name"": ""some-plugin-repository-name"",
          ""url"": ""http://some.plugin.repository.url"",
          ""releases"": {
            ""enabled"": ""true""
          },
          ""snapshots"": {
            ""enabled"": ""false""
          }
        }
      ]
    servers: >
      [
        {
          ""id"": ""some-id"",
          ""username"": ""${env.USER}"",
          ""password"": ""${env.PASS}"",
          ""configuration"": {
            ""httpConfiguration"": {
              ""all"": {
                ""usePreemptive"": ""true""
              }
            }
          }
        }
      ]
    mirrors: >
      [
        {
          ""id"": ""nexus"",
          ""mirrorOf"": ""!my-org-snapshots,*"",
          ""url"": ""http://redacted/nexus/content/groups/public""
        }
      ]
    profiles: >
      [
        {
          ""id"": ""foo.profile"",
          ""name"": ""foo.profile"",
          ""url"": ""http://foo.bar.profile"",
          ""properties"": {
            ""foo"": ""property-1"",
            ""bar"": ""property-2""
          }
        }
      ]
    plugin_groups: >
      [
        ""some.plugin.group.id"",
        ""some.other.plugin.group.id""
      ]
    proxies: >
      [
        {
          ""id"": ""foo-proxy"",
          ""active"": ""true"",
          ""protocol"": ""http"",
          ""host"": ""https://proxy.example.com"",
          ""port"": ""443"",
          ""username"": ""foo"",
          ""password"": ""bar"",
          ""nonProxyHosts"": ""noproxy1.example.com|noproxy2.example.com""
        }
      ]
    active_profiles: >
      [
        ""some-profile""
      ]
    output_file: .m2/settings.xml

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" 
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
          xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0
                              http://maven.apache.org/xsd/settings-1.0.0.xsd"">
  
    <activeProfiles>
        <activeProfile>some-profile</activeProfile>
    </activeProfiles>
  
    <profiles>
        <profile>
            <id>github</id>
            <repositories>
                <repository>
                    <id>some-repository</id>
                    <name>some-repository-name</name>
                    <url>http://some.repository.url</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                        <checksumPolicy>fail</checksumPolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                        <updatePolicy>always</updatePolicy>
                        <checksumPolicy>fail</checksumPolicy>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>some-plugin-repository</id>
                    <name>some-plugin-repository-name</name>
                    <url>http://some.plugin.repository.url</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>foo.profile</id>
            <name>foo.profile</name>
            <url>http://foo.bar.profile</url>
            <properties>
                <foo>property-1</foo>
                <bar>property-2</bar>
            </properties>
        </profile>
    </profiles>
  
    <servers>
        <server>
            <id>foo</id>
            <username>fu</username>
            <password>bar</password>
            <privateKey>${user.home}/.ssh/id_dsa</privateKey>
            <passphrase>some_passphrase</passphrase>
            <filePermissions>664</filePermissions>
            <directoryPermissions>775</directoryPermissions>
            <configuration>
                <httpConfiguration>
                    <all>
                        <usePreemptive>true</usePreemptive>
                    </all>
                </httpConfiguration>
            </configuration>
        </server>
    </servers>
  
    <mirrors>
        <mirror>
            <id>nexus</id>
            <mirrorOf>!my-org-snapshots,*</mirrorOf>
            <url>http://redacted/nexus/content/groups/public</url>
        </mirror>
    </mirrors>
  
    <pluginGroups>
        <pluginGroup>some.plugin.group.id</pluginGroup>
        <pluginGroup>some.other.plugin.group.id</pluginGroup>
    </pluginGroups>

    <proxies>
        <proxy>
            <id>foo-proxy</id>
            <active>true</active>
            <protocol>http</protocol>
            <host>https://proxy.example.com</host>
            <port>443</port>
            <username>foo</username>
            <password>bar</password>
            <nonProxyHosts>noproxy1.example.com|noproxy2.example.com</nonProxyHosts>
        </proxy>
    </proxies>
  
</settings>
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
28,"name: delivery

on: [push, pull_request]

jobs:
  delivery:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Run Chef Delivery
      uses: actionshub/chef-delivery@main
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
29,"---
name: yamllint
""on"": [push, pull_request]
jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: Run yamllint
      uses: actionshub/yamllint@main
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
30,"name: markdownlint

on: [push, pull_request]

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Run mdl
      uses: actionshub/markdownlint@main

name: markdownlint

on: [push, pull_request]

jobs:
  mdl:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run Markdown Lint
        uses: actionshub/markdownlint@main
        with:
          filesToIgnoreRegex: ""node_modules\\\\/.*""

style \'.mdl.rb\'

all

rule \'MD013\', :line_length => 99999

exclude_rule \'MD033\'

rule \'MD007\', :indent => 4
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
31,"name: delivery

on: [push, pull_request]

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: install chef
      uses: actionshub/chef-install@main


jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: install chef
      uses: actionshub/chef-install@main
      with:
        channel: current
        project: inspec
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
32,"name: kitchen

on: [pull_request]

jobs:
  dokken:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['debian-8', 'debian-9', 'centos-7', 'fedora-latest', 'ubuntu-1604', 'ubuntu-1804']
        suite: ['default']
      fail-fast: false

    steps:
    - name: Check out code
      uses: actions/checkout@master
    - name: Install Chef
      uses: actionshub/chef-install@master
    - name: Dokken
      uses: actionshub/kitchen-dokken@creation
      env:
        suite: ${{ matrix.suite }}
        os: ${{ matrix.os }}
        CHEF_LICENSE: accept-no-persist
        KITCHEN_LOCAL_YAML: kitchen.dokken.yml
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
33,"name: kitchen

on: [pull_request]

jobs:
  dokken:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - centos-7
          - centos-8
        suite: [\'default\']
      fail-fast: false
    steps:
    - name: Check out code
      uses: actions/checkout@main
    - name: Install Chef
      uses: actionshub/chef-install@main
    - name: Test-Kitchen
      uses: actionshub/test-kitchen@main
      with:
        suite: ${{ matrix.suite }}
        os: ${{ matrix.os }}
      env:
        CHEF_LICENSE: accept-no-persist
        KITCHEN_LOCAL_YAML: kitchen.dokken.yml

name: kitchen
on: [pull_request]
jobs:
  macos:
    needs: [mdl, yamllint, delivery]
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main
      - name: Install Chef
        uses: actionshub/chef-install@main
      - name: Kitchen Converge
        uses: actionshub/test-kitchen@main
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: kitchen.macos.yml
          TERM: xterm-256color
        with:
          suite: adoptopenjdk-14
          os: macos
          action: converge
      - name: Source Profile for JAVA_HOME
        run: |
          source /etc/profile
          echo ""sourced profile for JAVA_HOME""
          echo ""New JAVA home after Chef run is: ${JAVA_HOME}""
      - name: Kitchen Verify
        uses: actionshub/test-kitchen@master
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: kitchen.macos.yml
          TERM: xterm-256color
        with:
          suite: adoptopenjdk-14
          os: macos
          action: verify
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
34,"name: Check Markdown links
on: push
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1

name: Check Markdown links

on: push

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        config-file: \'mlc_config.json\'
        folder-path: \'docs/markdown_files\'
        max-depth: 2

name: Check Markdown links

on:
  push:
    branches:
    - master
  schedule:
  - cron: ""0 9 * * *""

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        config-file: \'mlc_config.json\'
        folder-path: \'docs/markdown_files\'

<!-- markdown-link-check-disable -->
Disbale link checking in this section. Ignore this [Bad Link](https://exampleexample.cox)
<!-- markdown-link-check-enable -->

on: [pull_request]
name: Check links for modified files
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        use-verbose-mode: \'yes\'
        check-modified-files-only: \'yes\'


on: [pull_request]
name: Check links for modified files
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: \'yes\'
        folder-path: \'md/dir1, md/dir2\'
        file-path: \'./README.md, ./LICENSE, ./md/file4.markdown\'

{
  ""aliveStatusCodes"": [429, 200]
}

{
  ""httpHeaders"": [
    {
      ""urls"": [""https://github.com/"", ""https://guides.github.com/"", ""https://help.github.com/"", ""https://docs.github.com/""],
      ""headers"": {
        ""Accept-Encoding"": ""zstd, br, gzip, deflate""
      }
    }
  ]
}

name: Check .md links

on:
  push: [master]

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Check links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-verbose-mode: \'yes\'

- uses: gaurav-nelson/github-action-markdown-link-check@1.0.1

- uses: gaurav-nelson/github-action-markdown-link-check@v1

- uses: gaurav-nelson/github-action-markdown-link-check@44a942b2f7ed0dc101d556f281e906fb79f1f478
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
35,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-ruby@v1
  with:
    ruby-version: \'2.6\' # Version range or exact version of a Ruby version to use, using semvers version range syntax.
- run: ruby hello.rb

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        ruby: [ \'2.5\', \'2.6\' ]
    name: Ruby ${{ matrix.ruby }} sample
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - run: ruby hello.rb

name: Rails Unit Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: [\'5432:5432\']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Build and test with Rake
      env:
        PGHOST: 127.0.0.1
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle exec rails db:create
        bundle exec rails db:migrate
        bundle exec rails test
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
36,"- uses: actions/setup-node@v3
  with:
    node-version: \'\'

    node-version-file: \'\'

    check-latest: false

    architecture: \'\'

    token: \'\'

    cache: \'\'

    cache-dependency-path: \'\'

    registry-url: \'\'

    scope: \'\'

    always-auth: \'\'

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 18
- run: npm ci
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 16
    cache: \'npm\'
- run: npm ci
- run: npm test

steps:
- uses: actions/checkout@v3
- uses: actions/setup-node@v3
  with:
    node-version: 16
    cache: \'npm\'
    cache-dependency-path: subdir/package-lock.json
- run: npm ci
- run: npm test

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14, 16, 18 ]
    name: Node ${{ matrix.node }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm test

uses: actions/setup-node@v3
with:
  token: ${{ secrets.GH_DOTCOM_TOKEN }}
  node-version: 16
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
37,"name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

      - name: Build
        run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

- name: Setup Hugo
  uses: peaceiris/actions-hugo@v2
  with:
    hugo-version: \'0.110.0\'
    extended: true

- name: Setup Hugo
  uses: peaceiris/actions-hugo@v2
  with:
    hugo-version: \'latest\'

- uses: actions/cache@v2
  with:
    path: /tmp/hugo_cache
    key: ${{ runner.os }}-hugomod-${{ hashFiles(\'**/go.sum\') }}
    restore-keys: |
      ${{ runner.os }}-hugomod-

- name: Build
  run: hugo --minify

HUGO_VERSION=0.110.0

    - name: Read .env
      id: hugo-version
      run: |
        . ./.env
        echo ""HUGO_VERSION=${HUGO_VERSION}"" >> ""${GITHUB_OUTPUT}""

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: \'${{ steps.hugo-version.outputs.HUGO_VERSION }}\'
        extended: true

version: \'3\'

services:
  hugo:
    container_name: hugo
    image: ""peaceiris/hugo:v${HUGO_VERSION}""
    ports:
      - 1313:1313
    volumes:
      - ${PWD}:/src
    command:
      - server
      - --bind=0.0.0.0
      - --buildDrafts

name: GitHub Pages

on:
  push:
    branches:
      - master  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0         # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'
          extended: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: \'18\'
          cache: \'npm\'
          cache-dependency-path: \'**/package-lock.json\'

      - run: npm ci
      - run: hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/master\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'
          extended: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - run: gem install asciidoctor

      - name: Run Hugo
        run: |
          alias asciidoctor=""asciidoctor --attribute=experimental=true --attribute=icons=font""
          hugo --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == \'refs/heads/main\'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

name: GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Disable quotePath
        run: git config core.quotePath false

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: \'0.110.0\'

make build
make all

./release.sh
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
38,"steps:
- uses: actions/first-interaction@v1
  with:
    repo-token: ${{ secrets.GITHUB_TOKEN }}
    issue-message: '# Message with markdown.\
This is the message that will be displayed on users' first issue.'
    pr-message: 'Message that will be displayed on users' first pr. Look, a `code block` for markdown.'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
39,"permissions:
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'Message to comment on stale issues. If none provided, will not mark issues stale\'
          stale-pr-message: \'Message to comment on stale PRs. If none provided, will not mark PRs stale\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          days-before-stale: 30
          days-before-close: 5

name: \'Close stale issues and PR\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          stale-pr-message: \'This PR is stale because it has been open 45 days with no activity. Remove stale label or comment or this will be closed in 10 days.\'
          close-issue-message: \'This issue was closed because it has been stalled for 5 days with no activity.\'
          days-before-stale: 30
          days-before-close: 5
          days-before-pr-close: -1

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days.\'
          stale-pr-message: \'This PR is stale because it has been open 45 days with no activity. Remove stale label or comment or this will be closed in 10 days.\'
          close-issue-message: \'This issue was closed because it has been stalled for 5 days with no activity.\'
          close-pr-message: \'This PR was closed because it has been stalled for 10 days with no activity.\'
          days-before-issue-stale: 30
          days-before-pr-stale: 45
          days-before-issue-close: 5
          days-before-pr-close: 10

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          stale-issue-message: \'Stale issue message\'
          stale-pr-message: \'Stale pull request message\'
          stale-issue-label: \'no-issue-activity\'
          exempt-issue-labels: \'awaiting-approval,work-in-progress\'
          stale-pr-label: \'no-pr-activity\'
          exempt-pr-labels: \'awaiting-approval,work-in-progress\'
          only-labels: \'awaiting-feedback,awaiting-answers\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          start-date: \'2020-04-18T00:00:00Z\' # ISO 8601 or RFC 2822

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-issue-milestones: \'future,alpha,beta\'
          exempt-pr-milestones: \'bugfix,improvement\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-all-pr-milestones: true

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          any-of-labels: \'needs-more-info,needs-demo\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-issue-assignees: \'marco,polo\'
          exempt-pr-assignees: \'marco\'

name: \'Close stale issues and PRs\'
on:
  schedule:
    - cron: \'30 1 * * *\'

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v8
        with:
          exempt-all-pr-assignees: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
40,"username: GitHub-CI
icon_url: https://octodex.github.com/images/mona-the-rivetertocat.png

pretext: Triggered via {{eventName}} by {{actor}} {{or action ""action""}} {{ref}} `{{diffRef}}`
title: GitHub Actions
title_link: https://support.github.com

text: |
  *<{{workflowRunUrl}}|Workflow _{{workflow}}_ job _{{jobName}}_ triggered by _{{eventName}}_ is _{{jobStatus}}_>* for <{{refUrl}}|`{{ref}}`>
  {{#if description}}<{{diffUrl}}|`{{diffRef}}`> - {{description}}{{/if}}
  {{#if payload.commits}}
  *Commits*
  {{#each payload.commits}}
  <{{this.url}}|`{{truncate this.id 8}}`> - {{this.message}}
  {{/each}}
  {{/if}}

fallback: |-
  [GitHub] {{workflow}} #{{runNumber}} {{jobName}} is {{jobStatus}}

fields:
  - title: Job Steps
    value: ""{{#each jobSteps}}{{icon this.outcome}} {{@key}}\
{{/each}}""
    short: false
  - title: Workflow
    value: ""<{{workflowUrl}}|{{workflow}}>""
    short: true
  - title: Git Ref
    value: ""{{ref}} ({{refType}})""
    short: true
  - title: Run ID
    value: |-
      <{{workflowRunUrl}}|{{runId}}>
    short: true
  - title: Run Number
    value: ""{{runNumber}}""
    short: true
  - title: Actor
    value: ""{{actor}}""
    short: true
  - title: Job Status
    value: ""{{jobStatus}}""
    short: true

footer: >-
  <{{repositoryUrl}}|{{repositoryName}}> {{workflow}} #{{runNumber}}

colors:
  success: \'#5DADE2\'
  failure: \'#884EA0\'
  cancelled: \'#A569BD\'
  default: \'#7D3C98\'

icons:
  success: \':white_check_mark:\'
  failure: \':grimacing:\'
  cancelled: \':x:\'
  skipped: \':heavy_minus_sign:\'
  default: \':interrobang:\'
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
41,"on: push

jobs:
  test:
    runs-on: windows-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Choco help
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: -h
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
42,"name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  logLatestRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_release
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo \'latest release: ${{ steps.get_latest_release.outputs.data }}\'""

- uses: octokit/graphql-action@v2.x
  with:
    query: |
      query release($owner:String!,$repo:String!) {
        repository(owner:$owner,name:$repo) {
          releases(first:1) {
            nodes {
              name
              createdAt
              tagName
              description
            }
          }
        }
      }
    variables: |
      owner: ${{ github.event.repository.owner.name }}
      repo: ${{ github.event.repository.name }}
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: octokit/graphql-action@v2.x
    with:
      query: |
        query  pullRequest(
          $repo:String!
          $owner:String!) {
          repository(name:$repo, owner:$owner) { 
            pullRequests(last:1) {
              nodes {
                number
                mergeStateStatus
              }
            }
          }
        }
      owner: ${{ github.event.repository.owner.name }}
      repo: ${{ github.event.repository.name }}
      mediaType: |
        previews:
        - merge-info

query release($itemId: String!) {
  ...

itemId: ""randomId""

query release($itemid: String!) {
  ...

itemid: ""randomId""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
43,"name: Build and Deploy
on: [push]
permissions:
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy.

on:
  push:
    branches:
      - main

permissions:
  contents: write

ssh-keygen -t rsa -m pem -b 4096 -C ""youremailhere@example.com"" -N """"

- name: Deploy \xf0\x9f\x9a\x80
  uses: JamesIves/github-pages-deploy-action@v4
  with:
    folder: site
    ssh-key: ${{ secrets.DEPLOY_KEY }}

name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          clean: true
          clean-exclude: |
            special-file.txt
            some/*.txt
          ssh-key: ${{ secrets.DEPLOY_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

name: Build and Deploy
on: [push]
permissions:
  contents: write
jobs:
  build:
    runs-on: windows-latest # The first job utilizes windows-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Upload Artifacts \xf0\x9f\x94\xba # The project is then uploaded as an artifact named \'site\'.
        uses: actions/upload-artifact@v1
        with:
          name: site
          path: build

  deploy:
    concurrency: ci-${{ github.ref }}
    needs: [build] # The second job must depend on the first one to complete before running and uses ubuntu-latest instead of windows.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Download Artifacts \xf0\x9f\x94\xbb # The built project is downloaded into the \'site\' folder.
        uses: actions/download-artifact@v1
        with:
          name: site

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: \'site\' # The deployment folder should match the name of the artifact. Even though our project builds into the \'build\' folder the artifact name of \'site\' must be placed here.

- name: Install rsync \xf0\x9f\x93\x9a
  run: |
    apt-get update && apt-get install -y rsync

- name: Deploy \xf0\x9f\x9a\x80
  uses: JamesIves/github-pages-deploy-action@v4

name: Build and Deploy
permissions:
  contents: write
on:
  push:
    branches:
      - main
jobs:
  deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout \xf0\x9f\x9b\x8e\xef\xb8\x8f
        uses: actions/checkout@v3

      - name: Install and Build \xf0\x9f\x94\xa7 # This example project is built using npm and outputs the result to the \'build\' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm ci
          npm run build

      - name: Deploy \xf0\x9f\x9a\x80
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          clean: true
          clean-exclude: |
            special-file.txt
            some/*.txt
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
44,"steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'^1.13.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'>=1.17.0\'
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.18.0-rc.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.16.0-beta.1\' # The Go version to download (if necessary) and use.
  - run: go version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.16.1\' # The Go version to download (if necessary) and use.
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.14\'
      check-latest: true
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'stable\'
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'oldstable\'
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version: \'1.17\'
      check-latest: true
      cache-dependency-path: subdir/go.sum
  - run: go run hello.go

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v4
    with:
      go-version-file: \'path/to/go.mod\'
  - run: go version

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ \'1.14\', \'1.13\' ]
    name: Go ${{ matrix.go }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - run: go run hello.go

uses: actions/setup-go@v4
with:
  token: ${{ secrets.GH_DOTCOM_TOKEN }}
  go-version: \'1.18\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
45,"on: [""push"", ""pull_request""]

name: Test Coveralls

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: npm install, make test-coverage
      run: |
        npm install
        make test-coverage

    - name: Coveralls
      uses: coverallsapp/github-action@v2

on: [""push"", ""pull_request""]

name: Test Coveralls Parallel

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_number:
          - 1
          - 2
    steps:
    - uses: actions/checkout@3
    - name: Use Node.js 16.x
      uses: actions/setup-node@3
      with:
        node-version: 16.x

    - name: npm install
      run: npm install

    - name: Test ${{ matrix.test_number }}
      run: make test-coverage-${{ matrix.test_number }}
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@v2
      with:
        flag-name: run-${{ join(matrix.*, \'-\') }}
        parallel: true

  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
        carryforward: ""run-1,run-2""

on: [""push"", ""pull_request""]

github-token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
46,"steps:
- uses: actions/checkout@master
- uses: actions/setup-python@v1
- uses: dschep/install-poetry-action@v1.3
- run: poetry run my_script.py

- uses: dschep/install-poetry-action@v1.3
  with:
    version: 1.0.0a1

- uses: dschep/install-poetry-action@v1.3
  with:
    preview: true

- uses: dschep/install-poetry-action@v1.3
  with:
    create_virtualenvs: true
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
47,"steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>
    with:
      coverageCommand: npm run coverage
      debug: true

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: <code_climate_reporter_id>
    with:
      coverageCommand: yarn run coverage
      coverageLocations: |
        ${{github.workspace}}/*.lcov:lcov

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
      JACOCO_SOURCE_PATH: ""${{github.workspace}}/src/main/java""
    with:
      coverageCommand: mvn test
      coverageLocations: ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco

""scripts"": {
  ""coverage"": ""yarn client coverage && yarn server coverage""
}

SF:src/server.ts

// server/jest.config.js
module.exports = {
  ...
  coverageReporters: [[\'lcov\', { projectRoot: \'..\' }]]
  ...
};

steps:
  - name: Test & publish code coverage
    uses: paambaati/codeclimate-action@v5.0.0
    env:
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
    with:
      coverageCommand: yarn run coverage
      coverageLocations: |
        ${{github.workspace}}/client/coverage/lcov.info:lcov
        ${{github.workspace}}/server/coverage/lcov.info:lcov
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
48,"name: pre-commit

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.0

    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: flake8 --all-files
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
49,"name: PR Labeler
on:
  pull_request:
    types: [opened]

permissions:
  contents: read

jobs:
  pr-labeler:
    permissions:
      contents: read # for TimonVS/pr-labeler-action to read config file
      pull-requests: write # for TimonVS/pr-labeler-action to add labels in PR
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/pr-labeler.yml # optional, .github/pr-labeler.yml is the default value

feature: [\'feature/*\', \'feat/*\']
fix: fix/*
chore :hammer:: chore/*

feature: [\'feature/*\', \'feat/*\']
fix: \'fix/*\'
chore: \'chore/*\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
50,"name: Release Drafter

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$RESOLVED_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$RESOLVED_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
change-title-escapes: \'\\<*_&\' # You can add # and @ to disable mentions, and add ` to disable code blocks.
version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch
template: |

  $CHANGES

version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch

references:
  - master
  - v.+

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

categories:
  - title: \'\xe2\xac\x86\xef\xb8\x8f Dependencies\'
    collapse-after: 3
    labels:
      - \'dependencies\'

exclude-labels:
  - \'skip-changelog\'

include-labels:
  - \'app-foo\'

exclude-contributors:
  - \'myusername\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

autolabeler:
  - label: \'chore\'
    files:
      - \'*.md\'
    branch:
      - \'/docs{0,1}\\/.+/\'
  - label: \'bug\'
    branch:
      - \'/fix\\/.+/\'
    title:
      - \'/fix/i\'
  - label: \'enhancement\'
    branch:
      - \'/feature\\/.+/\'
    body:
      - \'/JIRA-[0-9]{1,4}/\'

yarn install

yarn test

yarn test:watch

docker compose run --rm app

git checkout master && git pull && npm version [major | minor | patch]
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
51,"name: 'Delete old artifacts'
on:
  schedule:
    - cron: '0 * * * *' # every hour

jobs:
  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 7days # Setting this to 0 will delete all artifacts

with:
  onlyPrefix: tmp_  

with:
  exceptPrefix: prod_
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
52,"- uses: thefringeninja/action-minver
  with:
    auto-increment: patch
    build-metadata: ${{ github.sha }}
    default-pre-release-phase: preview
    minimum-major-minor: 2.0.0
    tag-prefix: v
    verbosity: trace

name: Build

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: run minver
      id: version
      uses: thefringeninja/action-minver
    - name: output
      run: |
        echo ${{ steps.version.outputs.version }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
53,"on:
  push:
    tags:
    - \'v*\' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths my-artifact README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it\'s ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
54,"- name: Download artifact
  id: download-artifact
  uses: dawidd6/action-download-artifact@v2
  with:
    github_token: ${{secrets.GITHUB_TOKEN}}
    workflow: workflow_name.yml
    workflow_conclusion: success
    pr: ${{github.event.pull_request.number}}
    commit: ${{github.event.pull_request.head.sha}}
    branch: master
    event: push
    run_id: 1122334455
    run_number: 34
    name: artifact_name
    name_is_regexp: true
    path: extract_here
    repo: ${{ github.repository }}
    check_artifacts: false
    search_artifacts: false
    skip_unpack: false
    if_no_artifact_found: fail
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
55,"name: Releases

on: 
  push:
    tags:
    - \'*\'

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - uses: ncipollo/release-action@v1
      with:
        artifacts: ""release.tar.gz,foo/*.txt""
        bodyFile: ""body.md""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
56,"uses: DamianReeves/write-file-action@master
with:
  path: ${{ env.home}}/.bashrc
  contents: |
    Hello World!
  write-mode: append

name: Overwrite some file

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Overwrite file
        uses: ""DamianReeves/write-file-action@master""
        with:
          path: path/to/file.js
          write-mode: overwrite
          contents: |
            console.log(\'some contents\')
            
      - name: Commit & Push
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          force: true
          message: \'Overwritten by Github Actions - ${date}\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
57,"on:
  issue_comment:
    types: [created]

jobs:
  bot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Bot actions
        uses: zymap/bot@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # replace here to your token
        with:
          repo_owner: zymap  # replace here to your repo owner
          repo_name: bot     # replace here to your repo name
          rerun_cmd: rerun failure checks
          comment: ${{ github.event.comment.body }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
58,"- uses: actions/github-script@v6
  id: set-result
  with:
    script: return ""Hello!""
    result-encoding: string
- name: Get result
  run: echo ""${{steps.set-result.outputs.result}}""

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    script: return ""I will be string (not JSON) encoded!""

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    retries: 3
    script: |
      github.rest.issues.get({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
      })

- uses: actions/github-script@v6
  id: my-script
  with:
    result-encoding: string
    retries: 3
    retry-exempt-status-codes: 400,401
    script: |
      github.rest.issues.get({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
      })

- name: View context attributes
  uses: actions/github-script@v6
  with:
    script: console.log(context)

on:
  issues:
    types: [opened]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: \'\xf0\x9f\x91\x8b Thanks for reporting!\'
            })

on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\'Triage\']
            })

on: pull_request_target

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            // Get a list of all issues created by the PR opener
            // See: https://octokit.github.io/rest.js/#pagination
            const creator = context.payload.sender.login
            const opts = github.rest.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: \'all\'
            })
            const issues = await github.paginate(opts)

            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }

              if (issue.pull_request) {
                return // Creator is already a contributor.
              }
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Welcome**, new contributor!

                Please make sure you\'ve read our [contributing guide](CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly \xe2\x9c\xa8`
            })

on: pull_request

jobs:
  diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const diff_url = context.payload.pull_request.diff_url
            const result = await github.request(diff_url)
            console.log(result)

jobs:
  list-issues:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const query = `query($owner:String!, $name:String!, $label:String!) {
              repository(owner:$owner, name:$name){
                issues(first:100, labels: [$label]) {
                  nodes {
                    id
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              label: \'wontfix\'
            }
            const result = await github.graphql(query, variables)
            console.log(result)

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        with:
          script: |
            const script = require(\'./path/to/script.js\')
            console.log(script({github, context}))

module.exports = ({github, context}) => {
  return context.payload.client_payload.value
}

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        env:
          SHA: \'${{env.parentSHA}}\'
        with:
          script: |
            const script = require(\'./path/to/script.js\')
            await script({github, context, core})

module.exports = async ({github, context, core}) => {
  const {SHA} = process.env
  const commit = await github.rest.repos.getCommit({
    owner: context.repo.owner,
    repo: context.repo.repo,
    ref: `${SHA}`
  })
  core.exportVariable(\'author\', commit.data.commit.author.email)
}

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm install execa
      - uses: actions/github-script@v6
        with:
          script: |
            const execa = require(\'execa\')

            const { stdout } = await execa(\'echo\', [\'hello\', \'world\'])

            console.log(stdout)

export default function printStuff() {
  console.log(\'stuff\')
}

on: push

jobs:
  print-stuff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        with:
          script: |
            const { default: printStuff } = await import(\'${{ github.workspace }}/src/print-stuff.js\')

            await printStuff()

on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        env:
          FIRST_NAME: Mona
          LAST_NAME: Octocat
        with:
          script: |
            const { FIRST_NAME, LAST_NAME } = process.env

            console.log(`Hello ${FIRST_NAME} ${LAST_NAME}`)

on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_PAT }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\'Triage\']
            })
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
59,"uses: gradle/wrapper-validation-action@v1

name: ""Validate Gradle Wrapper""
on: [push, pull_request]

jobs:
  validation:
    name: ""Validation""
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
60,"- uses: burrunan/gradle-cache-action@v1
  name: Build PROJECT_NAME
  env:
    VARIABLE: VALUE
  with:
    job-id: jdk8
    arguments: build
    gradle-version: wrapper
    properties: |
      kotlin.js.compiler=ir
      kotlin.parallel.tasks.in.project=true

// settings.gradle.kts
val isCiServer = System.getenv().containsKey(""CI"")
// Cache build artifacts, so expensive operations do not need to be re-computed
buildCache {
   local {
       isEnabled = !isCiServer
   }
}

- uses: burrunan/gradle-cache-action@v1
  name: Cache .gradle
  env:
    VARIABLE: VALUE
  with:
    job-id: jdk8


    save-generated-gradle-jars: false

    remote-build-cache-proxy-enabled: false

    gradle-version: 6.5.1-custom

    read-only: ${{ github.ref != \'refs/heads/main\' }}

    arguments: build jacocoReport

    properties: |
      kotlin.js.compiler=ir
      kotlin.parallel.tasks.in.project=true

    build-root-directory: sub/directory

    execution-only-caches: true

    save-local-build-cache: false

    save-gradle-dependencies-cache: false

    gradle-dependencies-cache-key: |
      gradle/dependencies.kt
      buildSrc/**/Version.kt

    save-maven-dependencies-cache: false

    maven-local-ignore-paths: |
      org/example/
      com/example/

    concurrent: true

    gradle-build-scan-report: false

    gradle-distribution-sha-256-sum-warning: false

plugins {
    `gradle-enterprise`
}

val isCiServer = System.getenv().containsKey(""CI"")

if (isCiServer) {
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = ""https://gradle.com/terms-of-service""
            termsOfServiceAgree = ""yes""
            tag(""CI"")
        }
    }
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
61,"path: |
  tools
  src

pattern: |
  *.bash
  *.sh

exclude: |
  */.git/*
  ./.cache/*

name: reviewdog
on: [pull_request]
jobs:
  shellcheck:
    name: runner / shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Change reporter.
          path: ""."" # Optional.
          pattern: ""*.sh"" # Optional.
          exclude: ""./.git/*"" # Optional.
          check_all_files_with_shebangs: ""false"" # Optional.

*.sh text eol=lf
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
62,"name: build
on:
  pull_request:

jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build and Run Tests
        run: mvn test --batch-mode --fail-at-end
      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1

    report_paths: '**/build/test-results/test/TEST-*.xml'

test {
  reports {
    junitXml.enabled = true
  }
}
","[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
63,"    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.2
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
64,"name: Label PRs

on:
- pull_request
- issues

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: srvaroa/labeler@master
      env:
        GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

version: 1
issues: True
labels:
- label: ""WIP""
  title: ""^WIP:.*""

<label>: ""MyLabel""
<condition_name>: <condition_parameters>
<condition_name>: <condition_parameters>

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""
  mergeable: false

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""
- label: ""WIP""
  mergeable: false

version: 1
labels:
- label: ""unknown""
  negate: True
  branch: ""(master|hotfix)""

version: 1
labels:
- label: ""unknown""
  negate: True
  branch: ""master""
  title: ""(feat).*""

version: 1
labels:
- label: ""WIP""
  title: ""^WIP:.*""

version: 1
appendOnly: true
labels:
- label: ""WIP""
  title: ""^WIP:.*""

author-can-merge: True

authors: [""serubin""]

base-branch: ""master""

body: ""^patch.*""

branch: ""^feature/.*""

draft: True

draft: False

files: 
- ""cmd/.*_tests.go""

mergeable: True

mergeable: False

- label: ""S""
  size:
      below: 10
- label: ""M""
  size:
      above: 9
      below: 100
- label: ""L""
  size:
      above: 100

- label: ""L""
    size:
        exclude-files: [""yarn.lock""]
        above: 100

title: ""^WIP:.*""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
65,"name: Release Drafter

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

template: |

  $CHANGES

name-template: \'v$RESOLVED_VERSION \xf0\x9f\x8c\x88\'
tag-template: \'v$RESOLVED_VERSION\'
categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    labels:
      - \'feature\'
      - \'enhancement\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'
  - title: \'\xf0\x9f\xa7\xb0 Maintenance\'
    label: \'chore\'
change-template: \'- $TITLE @$AUTHOR (#$NUMBER)\'
change-title-escapes: \'\\<*_&\' # You can add # and @ to disable mentions, and add ` to disable code blocks.
version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch
template: |

  $CHANGES

version-resolver:
  major:
    labels:
      - \'major\'
  minor:
    labels:
      - \'minor\'
  patch:
    labels:
      - \'patch\'
  default: patch

references:
  - master
  - v.+

categories:
  - title: \'\xf0\x9f\x9a\x80 Features\'
    label: \'feature\'
  - title: \'\xf0\x9f\x90\x9b Bug Fixes\'
    labels:
      - \'fix\'
      - \'bugfix\'
      - \'bug\'

categories:
  - title: \'\xe2\xac\x86\xef\xb8\x8f Dependencies\'
    collapse-after: 3
    labels:
      - \'dependencies\'

exclude-labels:
  - \'skip-changelog\'

include-labels:
  - \'app-foo\'

exclude-contributors:
  - \'myusername\'

replacers:
  - search: \'/CVE-(\\d{4})-(\\d+)/g\'
    replace: \'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-$1-$2\'
  - search: \'myname\'
    replace: \'My Name\'

autolabeler:
  - label: \'chore\'
    files:
      - \'*.md\'
    branch:
      - \'/docs{0,1}\\/.+/\'
  - label: \'bug\'
    branch:
      - \'/fix\\/.+/\'
    title:
      - \'/fix/i\'
  - label: \'enhancement\'
    branch:
      - \'/feature\\/.+/\'
    body:
      - \'/JIRA-[0-9]{1,4}/\'

yarn install

yarn test

yarn test:watch

docker compose run --rm app

git checkout master && git pull && npm version [major | minor | patch]
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
66,"on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test
          working-directory: ./ #optional
          options: #optional
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
67,"name: \'Lock Threads\'

on:
  schedule:
    - cron: \'0 * * * *\'
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

concurrency:
  group: lock

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/lock-threads@v4

on:
  schedule:
    - cron: \'0 0 * * *\'

name: \'Lock Threads\'

on:
  schedule:
    - cron: \'0 0 * * *\'
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

concurrency:
  group: lock

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/lock-threads@v4
        with:
          github-token: ${{ github.token }}
          issue-inactive-days: \'365\'
          exclude-issue-created-before: \'\'
          exclude-issue-created-after: \'\'
          exclude-issue-created-between: \'\'
          exclude-issue-closed-before: \'\'
          exclude-issue-closed-after: \'\'
          exclude-issue-closed-between: \'\'
          include-any-issue-labels: \'\'
          include-all-issue-labels: \'\'
          exclude-any-issue-labels: \'\'
          add-issue-labels: \'\'
          remove-issue-labels: \'\'
          issue-comment: \'\'
          issue-lock-reason: \'resolved\'
          pr-inactive-days: \'365\'
          exclude-pr-created-before: \'\'
          exclude-pr-created-after: \'\'
          exclude-pr-created-between: \'\'
          exclude-pr-closed-before: \'\'
          exclude-pr-closed-after: \'\'
          exclude-pr-closed-between: \'\'
          include-any-pr-labels: \'\'
          include-all-pr-labels: \'\'
          exclude-any-pr-labels: \'\'
          add-pr-labels: \'\'
          remove-pr-labels: \'\'
          pr-comment: \'\'
          pr-lock-reason: \'resolved\'
          process-only: \'\'
          log-output: false

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-issue-created-before: \'2018-01-01T00:00:00Z\'
          exclude-any-issue-labels: \'upstream, help-wanted\'
          process-only: \'issues\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-any-pr-labels: \'wip\'
          process-only: \'prs\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          exclude-issue-created-between: \'2018-01-01T00:00:00Z/2019-12-31T23:59:59.999Z\'
          exclude-issue-closed-before: \'2018-01-01T00:00:00Z\'
          process-only: \'issues\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          include-any-issue-labels: \'incomplete, invalid\'
          include-all-pr-labels: \'qa: done, published\'


    steps:
      - uses: dessant/lock-threads@v4
        with:
          issue-inactive-days: \'180\'
          process-only: \'issues\'


    steps:
      - uses: dessant/lock-threads@v4
        with:
          add-issue-labels: \'outdated\'
          issue-comment: >
            This issue has been automatically locked since there
            has not been any recent activity after it was closed.
            Please open a new issue for related bugs.
          pr-comment: >
            This pull request has been automatically locked since there
            has not been any recent activity after it was closed.
            Please open a new issue for related bugs.

    steps:
      - uses: dessant/lock-threads@v4
        with:
          add-issue-labels: \'qa: done, archived\'
          remove-issue-labels: \'qa: primary, needs: user feedback\'

    steps:
      - uses: dessant/lock-threads@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
68,"jobs:
  test:
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build something requiring CL.EXE
        run: |
          cmake -G ""NMake Makefiles"" .
          nmake

jobs:
  test:
    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86
          - amd64_arm64
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Build something requiring CL.EXE
        run: |
          cmake -G ""NMake Makefiles"" .
          nmake

jobs:
  release:
    steps:
      - name: Configure build for amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - run: build # (for amd64)

      - name: Configure build for x86
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - run: build # (for x86)

      - name: Configure build for ARM64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64

      - run: build # (for ARM64)

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
69,"name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  logLatestRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo latest release: \'${{ steps.get_latest_release.outputs.data }}\'""

name: Check run
on:
  push:
    branches:
      - main

jobs:
  create-file:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: create_check_run
        with:
          route: POST /repos/{owner}/{repo}/check-runs
          owner: octokit
          repo: request-action
          name: ""Test check run""
          head_sha: ${{ github.sha }}
          output: | # The | is significant!
            title: Test check run title
            summary: A summary of the test check run
            images:
              - alt: Test image
                image_url: https://octodex.github.com/images/jetpacktocat.png
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: octokit/request-action@v2.x
        id: download_file
        with:
          route: GET /repos/OWNER/REPO/contents/README.md
          owner: octokit
          repo: request-action
          mediaType: | # The | is significant!
            format: raw
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: octokit/request-action@v2.x
        id: update_check_run
        with:
          route: PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}
          owner: octokit
          repo: request-action
          check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
          conclusion: ""success""
          status: ""completed""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Log latest release
on:
  push:
    branches:
      - main

jobs:
  handleError:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/{owner}/{repo}/releases/v0.9.9
          owner: octokit
          repo: request-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ""echo Release found: \'${{ steps.get_release.outputs.data }}\'""
      - run: ""echo Release could not be found. Request failed with status \'${{ steps.get_release.outputs.status }}\'""
        if: ${{ failure() }}

env:
  REQUEST_BODY: |
    Multi-line string with *special* characters:
    - ""\'`
with:
  body: ${{ toJSON(env.REQUEST_BODY) }}

  body: |
    |
    ${{ env.REQUEST_BODY }}


< 200 451ms
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
70,"./src/third_party/*
./src/ignored/*

name: Run clang-format Linter

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.16.2
      with:
        source: '.'
        exclude: './lib'
        extensions: 'h,cpp,c'
        clangFormatVersion: 16
        inplace: True
    - uses: EndBug/add-and-commit@v9
      with:
        author_name: Clang Robot
        author_email: robot@example.com
        message: 'Committing clang-format changes'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: test-clang-format

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.14
      with:
        source: '.'
        exclude: './third_party ./external'
        extensions: 'h,cpp'
        clangFormatVersion: 14
        style: chromium

docker build -t clang-format-lint github.com/DoozyX/clang-format-lint-action

docker run -it --rm --workdir /src -v $(pwd):/src clang-format-lint \\
    --clang-format-executable /clang-format/clang-format9 -r --exclude .git .
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
71,"user:
  description: \'Username of the owner of target GitHub repo (default: extracted from $GITHUB_REPOSITORY)\'
  required: false
project:
  description: \'Name of project on GitHub (default: extracted from $GITHUB_REPOSITORY)\'
  required: false
release_branch:
  description: \'Limit pull requests to the release branch, such as master or release (required, default: master)\'
  required: false
  default: \'master\'
output:
  description: \'Output file. To print to STDOUT instead, use blank as path. (required, default: CHANGELOG.md)\'
  required: false
  default: \'CHANGELOG.md\'
base:
  description: \'Optional base file to append generated changes to (default: HISTORY.md)\'
  required: false
token:
  description: \'To make more than 50 requests per hour your GitHub token is required. You can generate it at: https://github.com/settings/tokens/new<Paste>\'
  required: false
since_tag:
  description: \'Changelog will start after specified tag.\'
  required: false
due_tag:
  description: \'Changelog will end before specified tag.\'
  required: false
exclude_tags:
  description: \'Changelog will exclude specified tags (comma seperated)\'
  required: false
exclude_labels:
  description: \'Issues with the specified labels will be excluded from changelog. Default is ""duplicate,question,invalid,wontfix"".\'
  required: false
date_format:
  description: \'Date format. Default is %Y-%m-%d\'
  required: false
future_release:
  description: \'Put the unreleased changes in the specified release number.\'
  required: false
issue_line_labels:
  description: \'The specified labels will be shown in brackets next to each matching issue. Use ""ALL"" to show all labels. Default is [].\'
  required: false
github_site:
  description: \'The Enterprise GitHub site where your project is hosted if using GitHub Enterprise.\'
  required: false
github_api:
  description: \'The enterprise endpoint to use for your GitHub API if using GitHub Enterprise.\'
  required: false
exclude_tags_regex:
  description: \'Apply a regular expression on tag names so that they can be excluded, for example: --exclude-tags-regex "".*+d{1,}"".\'
  required: false

name: Changelog

on:
  pull_request:
    types: [closed]

  release:
    types: [published]

  issues:
    types: [closed, edited]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    name: Generate changelog for master branch
    steps:
      - uses: actions/checkout@v1

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.YOUR_GITHUB_TOKEN or GITHUB_TOKEN }}

      - name: Commit files
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_EMAIL: ${{ secrets.YOUR_GITHUB_EMAIL }}
        run: |
          git config --local user.email ""$CI_EMAIL""
          git config --local user.name ""$CI_USER""
          git add CHANGELOG.md && git commit -m \'Updated CHANGELOG.md\' && echo ""push=true"" >> $GITHUB_ENV || echo ""No changes to CHANGELOG.md""

      - name: Push changes
        if: env.push == \'true\'
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN or GITHUB_TOKEN }}
        run: |
          git push ""https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git"" HEAD:master

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
72,"on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: \'22.2\'
          elixir-version: \'1.9.4\'
      - run: mix deps.get
      - run: mix test

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [\'20.3\', \'21.3\', \'22.2\']
        elixir: [\'1.8.2\', \'1.9.4\']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - run: mix deps.get
      - run: mix test

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: [\'5432:5432\']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: \'22.2\'
          elixir-version: \'1.9.4\'
      - run: mix deps.get
      - run: mix test


use Mix.Config

config :app, App.Repo,
  database: ""my_app_test"",
  hostname: ""localhost"",
  pool: Ecto.Adapters.SQL.Sandbox

if System.get_env(""GITHUB_ACTIONS"") do
  config :app, App.Repo,
    username: ""postgres"",
    password: ""postgres""
end
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
73,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
74,"name: Publish Gem

on:
  push:
    branches:
      - ""*""
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Release Gem
        if: contains(github.ref, \'refs/tags/v\')
        uses: cadwallion/publish-rubygems-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RUBYGEMS_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}
          RELEASE_COMMAND: rake release
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
75,"steps:
- name: Checkout repository
  uses: actions/checkout@master
- name: Checkout submodules
  uses: textbook/git-checkout-submodule-action@master

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  uses: textbook/git-checkout-submodule-action@master
  with:
    remote: true

steps:
- name: Checkout repository and submodules
  uses: actions/checkout@v2
  with:
    submodules: recursive

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  run: git submodule update --init --recursive

steps:
- name: Checkout repository
  uses: actions/checkout@v2
- name: Checkout submodules
  uses: srt32/git-actions@v0.0.3
  with:
    args: git submodule update --init --recursive
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
76,"name: DEPLOY
on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: /var/www/html/
        remote_host: example.com
        remote_user: debian
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete --exclude="""" --include="""" --filter=""""
        path: src/
        remote_path: /var/www/html/
        remote_host: example.com
        remote_port: 5555
        remote_user: debian
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_HOST }}
        remote_port: ${{ secrets.DEPLOY_PORT }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: rsync deployments
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: src/
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_HOST }}
        remote_port: ${{ secrets.DEPLOY_PORT }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}
        remote_key_pass: ${{ secrets.DEPLOY_KEY_PASS }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
77,"name: bloom-release
on:
  push:
    tags:
      - \'[0-9]+.[0-9]+.[0-9]+\'

jobs:
  bloom-release:
    runs-on: ubuntu-latest
    steps:
      - name: bloom release
        uses: at-wat/bloom-release-action@v0
        with:
          ros_distro: kinetic melodic
          github_token_bloom: ${{ secrets.GITHUB_TOKEN_BLOOM }}
          github_user: @@MAINTAINER_LOGIN@@
          git_user: @@MAINTAINER_NAME@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          release_repository_push_url: https://github.com/${{ github.repository }}-release.git

name: bloom-release
on:
  push:
    paths:
      - package.xml
      - \'*/package.xml\'
    branches:
      - master

jobs:
  bloom-release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: bloom release
        uses: at-wat/bloom-release-action@v0
        with:
          ros_distro: kinetic melodic
          github_token_bloom: ${{ secrets.GITHUB_TOKEN_BLOOM }}
          github_user: @@MAINTAINER_LOGIN@@
          git_user: @@MAINTAINER_NAME@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          release_repository_push_url: https://github.com/${{ github.repository }}-release.git
          tag_and_release: true

      - name: create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bloom_release.outputs.version }}
          release_name: ${{ steps.bloom_release.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
78,"name: release-candidate
on:
  issues:
    types: [opened]

jobs:
  release-candidate:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release ')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: create release
        id: create_release
        uses: at-wat/catkin-release-action@v1
        with:
          issue_title: ${{ github.event.issue.title }}
          git_user: @@MAINTAINER_LOGIN@@
          git_email: @@MAINTAINER_EMAIL_ADDRESS@@
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: open pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.create_release.outputs.created_branch }}
          destination_branch: master
          pr_title: Release ${{ steps.create_release.outputs.version}}
          pr_body: close \\#${{ github.event.issue.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
79,"
on:
  push:
    branches:
      - feature-1

permissions:
  pull-requests: write

jobs:
  pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: pull-request
        run: |
          gh_pr_up() { gh pr create $* || gh pr edit $* }
          gh_pr_up --title ""My pull request"" --body ""Description""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
80,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'9.0.4\' # The JDK version to make available on the path.
    java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
    architecture: x64 # (x64 or x86) - defaults to x64
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v1
  with:
    java-version: \'4.0.0\'
    architecture: x64
    jdkFile: <path to jdkFile> # Optional - jdkFile to install java from. Useful for versions not found on Zulu Community CDN
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        java: [ 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

    - name: Publish to Apache Maven Central
      run: mvn deploy 
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}

<servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
</servers>

<servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
</servers>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
81,"steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-api-key: ${{ secrets.NuGetAPIKey }}
    nuget-version: \'5.x\'
- run: nuget restore MyProject.sln

name: NuGet Restore
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        nuget: [latest, preview, 4.x, 5.3.1]
    name: NuGet@${{ matrix.nuget }} sample
    steps:
      - uses: actions/checkout@master
      - name: Setup NuGet.exe
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ matrix.nuget }}
      - run: nuget restore MyProject.sln

steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-version: \'5.x\'
- uses: actions/cache@v1
  id: cache
  with:
    path: ~/.nuget/packages
    key: ${{ runner.os }}-nuget-${{ hashFiles(\'**/packages.lock.json\') }}
- name: NuGet Restore
  if: steps.cache.outputs.cache-hit != \'true\'
  run: nuget restore MyProject.sln

$ npm install

$ npm run build && npm run package

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

$ npm run package
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
82,"- name: Build production version of Master
  uses: Automattic/action-jetpack-build-to-branch@master
  with:
    pull_branch: \'master\'
    push_branch: \'master-built\'
    commit_message: \'Build master\'
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
83,"    steps:
      - uses: actions/checkout@v1
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open
      - run: echo ""Your PR is ${PR}""
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
84,"- any: [\'list\', \'of\', \'globs\']
  all: [\'list\', \'of\', \'globs\']

label1:
- example1/*

label1:
- any: [\'example1/*\']

label1:
- example/**

label2: example2/*

label3:
- \'**/*.txt\'


repo:
- \'*\'

\'@domain/core\':
- package/core/**

test:
- src/**/*.spec.js

source:
- any: [\'src/**\', \'!src/docs/*\']

frontend:
- any: [\'src/**/*.js\']
  all: [\'!src/main.js\']

AnyChange:
- \'**\'
- \'**/.*\'
- \'**/.*/**\'
- \'**/.*/**/.*\'

AnyChange:
- \'**\'

name: ""Pull Request Labeler""
on:
- pull_request_target

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@v4

    steps:
    - uses: actions/checkout@v3 # Uploads repository content to the runner
      with:
        repository: ""owner/repositoryName"" # The one of the available inputs, visit https://github.com/actions/checkout#readme to find more
    - uses: actions/labeler@v4

label1:
- path/to/folder/**/*
- path/to/folder/**/.*

label1:
- path/to/folder/**

name: ""Label Previous Pull Requests""
on:
  schedule:
    - cron: ""0 1 * * 1""

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/labeler@v4
      with:        
        pr-number: |
          1
          2
          3

name: ""My workflow""
on:
- pull_request_target

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - id: label-the-PR
      uses: actions/labeler@v4
      
    - id: run-frontend-tests
      if: contains(steps.label-the-PR.outputs.all-labels, \'frontend\')
      run: |
        echo ""Running frontend tests...""
  
    - id: run-backend-tests
      if: contains(steps.label-the-PR.outputs.all-labels, \'backend\')
      run: |
        echo ""Running backend tests...""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
85,"name: Required review check
on:
  pull_request_review:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  check:
    name: Checking required reviews
    runs-on: ubuntu-latest

    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    steps:
      - uses: Automattic/action-required-review@v3
        with:
          token: ${{ secrets.REQUIRED_REVIEWS_TOKEN }}
          requirements: |
            - paths: unmatched
              teams:
                - maintenance

- uses: Automattic/action-required-review
  with:
    requirements: |
      - name: Docs
        paths:
         - \'docs/\'
        teams:
          - documentation

      - name: Everything else
        paths: unmatched
        teams:
          - maintenance

    requirements-file: .github/required-review.yaml

    status: Required review

    fail: true

    request-reviews: true

    token: ${{ secrets.SOME_TOKEN }}

- name: Docs
  paths:
   - \'docs/**\'
  teams:
   - documentation

- name: Lockfiles
  paths:
   - \'packages/*/composer.lock\'
   - \'**.css\'
  consume: true
  teams:
   - everyone

- name: Some package
  paths:
   - \'packages/some-package/**\'
  teams:
   - some-package-team

- name: Front end
  paths:
   - \'**.jsx\'
   - \'**.css\'
  teams:
   - all-of:
      - front-end
      - design
   - maintenance

- name: Misc
  paths: unmatched
  teams:
    - maintenance
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
86,"  - uses: numworks/setup-msys2@v1
  - run: msys2do uname -a

  - uses: numworks/setup-msys2@v1
    with:
      msystem: MSYS

  - uses: numworks/setup-msys2@v1
    with:
      msystem: MSYS
  - run: msys2do makepkg-mingw -sCLfc --noconfirm --noprogressbar
  - run: msys2do pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
  - run: |
      set MSYSTEM=MINGW64
      msys2do <command to test the package>

  - uses: numworks/setup-msys2@v1
    with:
      path-type: inherit
  - run: msys2do <command>

  - uses: numworks/setup-msys2@v1
  - run: msys2do <command>
    env:
      MSYS2_PATH_TYPE: inherit

  - uses: numworks/setup-msys2@v1
    with:
      update: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
87,"- uses: actions/checkout@v3
  with:
    repository: \'\'

    ref: \'\'

    token: \'\'

    ssh-key: \'\'

    ssh-known-hosts: \'\'

    ssh-strict: \'\'

    persist-credentials: \'\'

    path: \'\'

    clean: \'\'

    sparse-checkout: \'\'

    sparse-checkout-cone-mode: \'\'

    fetch-depth: \'\'

    lfs: \'\'

    submodules: \'\'

    set-safe-directory: \'\'

    github-server-url: \'\'

- uses: actions/checkout@v3
  with:
    sparse-checkout: .

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      .github
      src

- uses: actions/checkout@v3
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false

- uses: actions/checkout@v3
  with:
    fetch-depth: 0

- uses: actions/checkout@v3
  with:
    ref: my-branch

- uses: actions/checkout@v3
  with:
    fetch-depth: 2
- run: git checkout HEAD^

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3

- name: Checkout tools repo
  uses: actions/checkout@v3
  with:
    repository: my-org/my-tools
    path: my-tools

- name: Checkout
  uses: actions/checkout@v3
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v3
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools

- uses: actions/checkout@v3
  with:
    ref: ${{ github.event.pull_request.head.sha }}

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m ""generated""
          git push
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
88,"name: My workflow
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: \'3.0\' # Not needed with a .ruby-version file
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [\'2.7\', \'3.0\', \'3.1\', head, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
    - run: bundle exec rake

name: My workflow
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    runs-on: ubuntu-latest
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: \'3.0\'
          bundler-cache: true # runs \'bundle install\' and caches installed gems automatically
      - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        cache-version: 1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
89,"    - name: Install Qt
      uses: jurplel/install-qt-action@v3

    tools: \'tools_ifw tools_qtcreator,qt.tools.qtcreator\'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: \'5.15.2\'
        host: \'windows\'
        target: \'desktop\'
        arch: \'win64_msvc2019_64\'
        dir: \'${{ github.workspace }}/example/\'
        install-deps: \'true\'
        modules: \'qtcharts qtwebengine\'
        archives: \'qtbase qtsvg\'
        cache: \'false\'
        cache-key-prefix: \'install-qt-action\'
        setup-python: \'true\'
        tools: \'tools_ifw tools_qtcreator,qt.tools.qtcreator\'
        set-env: \'true\'
        tools-only: \'false\'
        aqtversion: \'==3.1.*\'
        py7zrversion: \'==0.20.*\'
        extra: \'--external 7z\'
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
90,"    - name: Install Qt
      uses: jurplel/install-qt-action@v2

- name: Cache Qt
  id: cache-qt
  uses: actions/cache@v1
  with:
    path: ../Qt
    key: QtCache

- name: Install Qt
  uses: jurplel/install-qt-action@v2
  with:
    cached: ${{ steps.cache-qt.outputs.cache-hit }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
91,"name: push
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1

    - name: Unit tests
      run: make test

    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true

- uses: AndreMiras/coveralls-python-action@develop
  with:
    github-token: \'\'
    parallel: \'\'
    parallel-finished: \'\'
    debug: \'\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
92,"on:
  release:
    types: [created]
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Generate the artifacts
        uses: skx/github-action-build@master
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: \'example-*\'

  upload_artifacts:
    name: Upload Artifacts
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@release-1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create_release.outputs.id }}
          args: \'*.bin\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
93,"on: [push]

name: build

jobs:
  check:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy


      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

- name: Install minimal nightly
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: nightly

- name: Install minimal stable with clippy and rustfmt
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: stable
    components: rustfmt, clippy

- name: Install minimal nightly with clippy and rustfmt
  uses: actions-rs/toolchain@v1
  with:
    profile: minimal
    toolchain: nightly
    components: rustfmt, clippy
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
94,"name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
95,"---
name: Gitstamp
on: [push]
jobs:
  gitstamp:
    runs-on: ubuntu-latest
    name: Timestamp commit with Gitstamp
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Submit Gitstamp transaction
        uses: weavery/gitstamp-action@v1
        with:
          wallet-key: ${{ secrets.GITSTAMP_KEYFILE }}
          commit-link: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
96,"name: Release gem

on:
  repository_dispatch:
    types:
      - release-triggered

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: pact-foundation/release-gem@v0.0.11
      env:
        GEM_HOST_API_KEY: '${{ secrets.RUBYGEMS_API_KEY }}'
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        INCREMENT: '${{ github.event.client_payload.increment }}'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
97,"      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: my-event

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: username/my-repo
          event-type: my-event

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: username/my-repo
          event-type: my-event
          client-payload: \'{""ref"": ""${{ github.ref }}"", ""sha"": ""${{ github.sha }}""}\'

name: Repository Dispatch
on:
  repository_dispatch:
    types: [my-event]
jobs:
  myEvent:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - run: echo ${{ github.event.client_payload.sha }}

jobs:
  build:

  dispatch:
    needs: build
    strategy:
      matrix:
        repo: [\'my-org/repo1\', \'my-org/repo2\', \'my-org/repo3\']
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ matrix.repo }}
          event-type: my-event

No more than 10 properties are allowed; 14 were supplied.

client-payload: ${{ toJson(github) }}

client-payload: \'{""github"": ${{ toJson(github) }}}\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
98,"workflow ""on pull request merge, delete the branch"" {
  on = ""pull_request""
  resolves = [""branch cleanup""]
}

action ""branch cleanup"" {
  uses = ""jessfraz/branch-cleanup-action@master""
  secrets = [""GITHUB_TOKEN""]
}

action ""branch cleanup"" {
  uses = ""jessfraz/branch-cleanup-action@master""
  secrets = [""GITHUB_TOKEN""]

  env = {
    NO_BRANCH_DELETED_EXIT_CODE = ""0""
  }
}

$ make test
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
99,"      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

name: buildx

on:
  pull_request:
    branches: master
  push:
    branches: master
    tags:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Run Buildx
        run: |
          docker buildx build \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=false"" \\
            --file ./test/Dockerfile ./test

name: buildx

on:
  schedule:
    - cron: \'0 10 * * *\' # everyday at 10am
  pull_request:
    branches: master
  push:
    branches: master
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=crazymax/diun
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ ""${{ github.event_name }}"" = ""schedule"" ]; then
            VERSION=nightly
          fi

          TAGS=""--tag ${DOCKER_IMAGE}:${VERSION}""
          if [[ $VERSION =~ ^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$ ]]; then
            TAGS=""$TAGS --tag ${DOCKER_IMAGE}:latest""
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \\
            --build-arg VERSION=${VERSION} \\
            --build-arg BUILD_DATE=$(date -u +\'%Y-%m-%dT%H:%M:%SZ\') \\
            --build-arg VCS_REF=${GITHUB_SHA::8} \\
            ${TAGS} --file ./test/Dockerfile ./test
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build --output ""type=image,push=false"" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Login to DockerHub
        if: success() && github.event_name != \'pull_request\'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Docker Buildx (push)
        if: success() && github.event_name != \'pull_request\'
        run: |
          docker buildx build --output ""type=image,push=true"" ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Inspect image
        if: always() && github.event_name != \'pull_request\'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

name: buildx

on:
  pull_request:
    branches: master
  push:
    branches: master

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build \\
            --cache-from ""type=local,src=/tmp/.buildx-cache"" \\
            --cache-to ""type=local,dest=/tmp/.buildx-cache"" \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=false"" \\
            --tag crazymax/diun:latest \\
            --file ./Dockerfile-diun ./
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Docker Buildx (push)
        run: |
          docker buildx build \\
            --cache-from ""type=local,src=/tmp/.buildx-cache"" \\
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \\
            --output ""type=image,push=true"" \\
            --tag crazymax/diun:latest \\
            --file ./Dockerfile-diun ./
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect crazymax/diun:latest

version: 2
updates:
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
100,"with:
  hadolint_flags: --trusted-registry docker.io

with:
  hadolint_ignore: DL3009 DL3008

with:
  exclude: |
    /vendor/*
    Dockerfile.*

name: reviewdog
on: [pull_request]
jobs:
  hadolint:
    name: runner / hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          reporter: github-pr-review # Default is github-pr-check
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
101,"- name: Login to docker hub
  uses: actions-hub/docker/login@master
  env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

- name: Build :latest
  run: docker build -t ${GITHUB_REPOSITORY}:latest .

- name: Push to docker hub :latest
  uses: actions-hub/docker@master
  with:
    args: push ${GITHUB_REPOSITORY}:latest

name: Docker registry

on: [push]

jobs:
  github:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v1

      - name: Login to github registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY_URL: docker.pkg.github.com

      - name: Build :latest
        if: success()
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/app:latest .
        
      - name: Push to docker hub :latest
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push docker.pkg.github.com/${{ github.repository }}:latest

name: Docker registry

on: 
   push:
     tags:
       - 'v*'

jobs:
  github:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v1

      - name: Login to github registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY_URL: docker.pkg.github.com

      - name: Build :tag
        if: success()
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/app:${IMAGE_TAG} .

      - name: Push to docker hub :tag
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push docker.pkg.github.com/${{ github.repository }}:${IMAGE_TAG}

name: Deploy to docker hub

on:
   push:
     branches:    
      - master
     tags:
       - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@master

      - name: Login to docker hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        if: success()
        run: docker build -t ${GITHUB_REPOSITORY}:${IMAGE_TAG} .

      - name: Push to docker registry
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:${IMAGE_TAG}

name: Run docker CLI

on:
   push:
     branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Use Docker
        uses: actions-hub/docker/cli@master
        env:
          SKIP_LOGIN: true

      - run: docker --version
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
102,"name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')

name: Main

on:
  push:
    tags:
      - ""v*.*.*""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: echo ${{ github.sha }} > Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          files: Release.txt

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: echo ${{ github.sha }} > Release.txt
      - name: Test
        run: cat Release.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          files: |
            Release.txt
            LICENSE

name: Main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate Changelog
        run: echo ""# Good things have arrived"" > ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, \'refs/tags/\')
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: my_gh_org/my_gh_repo

permissions:
  contents: write

permissions:
  contents: write
  discussions: write
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
103,"steps:
- uses: actions/checkout@master
- uses: actions/setup-python@v1
- uses: dschep/install-pipenv-action@v1
- run: pipenv run my_script.py

- uses: dschep/install-pipenv-action@v1
  with:
    version: 2018.11.26
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
104,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-python@v1
- uses: BSFishy/pip-action@v1
  with:
    packages: |
      package1
      package2
- run: python main.py

- uses: BSFishy/pip-action@v1
  with:
    packages: package
    requirements: requirements.txt
    constraints: constraints.txt
    no-deps: true
    pre: true
    editable: editable
    platform: ':all:'
    upgrade: true
    extra: extra options

packages: package1         # python -m pip install package1
packages: package1==1.0.0  # python -m pip install package1==1.0.0

packages: package1 package2                # python -m pip install package1 package2
packages: package1==1.0.0 package2         # python -m pip install package1==1.0.0 package2
packages: package1==1.0.0 package2==1.2.3  # python -m pip install package1==1.0.0 package2==1.2.3

packages: |
  package1
packages: |
  package1==1.0.0
packages: |
  package1
  package2
packages: |
  package1==1.0.0
  package2
packages: |
  package1==1.0.0
  package2==1.2.3

packages: package1 == 1.0.0

packages: |
  package1 == 1.0.0

requirements: ''                    # python -m pip install package1
requirements: requirements.txt      # python -m pip install --requirement requirements.txt
requirements: src/requirements.txt  # python -m pip install --requirement src/requirements.txt

constraints: ''                   # python -m pip install package1
constraints: constraints.txt      # python -m pip install --constraint constraints.txt package1
constraints: src/constraints.txt  # python -m pip install --constraint src/constraints.txt package1

no-deps: true   # python -m pip install --no-deps package1
no-deps: false  # python -m pip install package1

pre: true   # python -m pip install --pre package1
pre: false  # python -m pip install package1

editable: ''                                              # python -m pip install package1
editable: path/to/SomeProject                             # python -m pip install --editable path/to/SomeProject
editable: git+http://repo/my_project.git#egg=SomeProject  # python -m pip install --editable git+http://repo/my_project.git#egg=SomeProject

platform: ''                         # python -m pip install package1
platform: linux_x86_64               # python -m pip install --platform linux_x86_64 package1
platform: linux_ubuntu_18_04_x86_64  # python -m pip install --platform linux_ubuntu_18_04_x86_64 package1

upgrade: true   # python -m pip install --upgrade package1
upgrade: false  # python -m pip install package1

extra: ''      # python -m pip install package1
extra: --user  # python -m pip install --user package1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
105,"name: \'Commit Message Check\'
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  pull_request_target:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  push:
    branches:
      - main
      - \'releases/*\'

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Check Commit Type
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'\\[[^]]+\\] .+$\'
          flags: \'gm\'
          error: \'Your first line has to contain a commit type like ""[BUGFIX]"".\'
      - name: Check Line Length
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'^[^#].{74}\'
          error: \'The maximum line length of 74 characters is exceeded.\'
          excludeDescription: \'true\' # optional: this excludes the description body of a pull request
          excludeTitle: \'true\' # optional: this excludes the title of a pull request
          checkAllCommitMessages: \'true\' # optional: this checks all commits associated with a pull request
          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true
      - name: Check for Resolves / Fixes
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: \'^.+(Resolves|Fixes): \\#[0-9]+$\'
          error: \'You need at least one ""Resolves|Fixes: #<issue number>"" line.\'

git clone https://github.com/gsactions/commit-message-checker.git
npm install
npm run build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
106,"- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    package-dir: \'root/to/my/package.json\'

- name: Changelog
  uses: scottbrenner/generate-changelog-action@master
  id: Changelog
  with:
    from-tag: v1.0
    to-tag: HEAD
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
107,"name: Kodi Addon-Check

on: [push, pull_request]

jobs:
  kodi-addon-checker:
    runs-on: ubuntu-latest
    name: Kodi addon checker
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Kodi addon checker validation
      id: kodi-addon-checker
      uses: xbmc/action-kodi-addon-checker@v1.1
      with:
        kodi-version: leia
        is-pr: false
        addon-id: ${{ github.event.repository.name }}

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
108,"name: Kodi Addon-Submitter

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-submitter:
    runs-on: ubuntu-latest
    name: Kodi addon submitter
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Generate distribution zip and submit to official kodi repository
      id: kodi-addon-submitter
      uses: xbmc/action-kodi-addon-submitter@v1.3
      with: # Replace all the below variables
        kodi-repository: repo-plugins
        kodi-version: leia
        addon-id: plugin.video.example
        kodi-matrix: false # Submit a Python 2/3 compatible addon to matrix branch in addition to the target branch
        sub-directory: false
      env: # Make sure you create the below secrets (GH_TOKEN and EMAIL)
        GH_USERNAME: ${{ github.actor }}
        GH_TOKEN: ${{secrets.GH_TOKEN}}
        EMAIL: ${{secrets.EMAIL}}

name: Kodi Addon-Submitter

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-submitter:
    runs-on: ubuntu-latest
    name: Kodi addon submitter
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Generate distribution zip and submit to official kodi repository
      id: kodi-addon-submitter
      uses: xbmc/action-kodi-addon-submitter@v1.3
      with: # Replace all the below values
        kodi-repository: repo-plugins
        kodi-version: leia
        addon-id: plugin.video.example
        kodi-matrix: false # Submit a Python 2/3 compatible addon to matrix branch in addition to the target branch
        sub-directory: false
      env: # Make sure you create the below secrets (GH_TOKEN and EMAIL)
        GH_USERNAME: ${{ github.actor }}
        GH_TOKEN: ${{secrets.GH_TOKEN}}
        EMAIL: ${{secrets.EMAIL}}
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Addon zip to github release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.kodi-addon-submitter.outputs.addon-zip }}
        asset_name: ${{ steps.kodi-addon-submitter.outputs.addon-zip }}
        asset_content_type: application/zip


.gitignore export-ignore
.gitattributes export-ignore
.github export-ignore
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
109,"$ yarn install

$ yarn test

$ docker build -t stale-issue-cleanup .
$ docker run --label stale-issue-cleanup --env-file test/local-docker.env stale-issue-cleanup

steps:
- uses: aws-actions/stale-issue-cleanup@v3
  with:
    issue-types: issues,pull_requests

    stale-issue-message: Stale issue message
    stale-pr-message: Stale pr message
    ancient-issue-message: Ancient issue message
    ancient-pr-message: Ancient pr message


    stale-issue-label: closing-soon
    exempt-issue-labels: awaiting-approval
    stale-pr-label: no-pr-activity
    exempt-pr-labels: awaiting-approval
    response-requested-label: response-requested
    closed-for-staleness-label: closed-for-staleness

    days-before-stale: 4
    days-before-close: 7
    days-before-ancient: 365
    minimum-upvotes-to-exempt: 10

    loglevel: DEBUG
    dry-run: true

    repo-token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
110,"name: CI Email Notification
on:
  check_suite:
    types: [completed]
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send CI Email Notification
        uses: jsiwek/ci-email-action@master
        env:
          CI_APP_NAME: ""Cirrus CI""
          BRANCH_REGEX: ""master|release/.*""
          SKIP_CONCLUSIONS: ""neutral,cancelled""
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_REPLY_TO: ${{ secrets.MAIL_REPLY_TO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
111,"name: Changelog
on:
  release:
    types:
      - created
jobs:
  changelog:
    runs-on: ubuntu-20.04
    steps:
      - name: ""\xe2\x9c\x8f\xef\xb8\x8f Generate release changelog""
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
112,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
    - name: Create local changes
      run: |
        ...
    - name: Commit files
      run: |
        git config --local user.email ""41898282+github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

name: Example
on: [pull_request, pull_request_target]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.head_ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        force_with_lease: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    - name: Commit files
      run: |
        git config --local user.email ""test@test.com""
        git config --local user.name ""Test""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PAT_TOKEN }}
        repository: Test/test
        force: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Commit files
      run: |
        git config --local user.email ""github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git tag -d $GITHUB_REF_NAME
        git tag $GITHUB_REF_NAME
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        force: true
        tags: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        persist-credentials: true
    - name: Create local changes
      run: |
        ...
    - name: Commit files
      run: |
        git config --local user.email ""41898282+github-actions[bot]@users.noreply.github.com""
        git config --local user.name ""github-actions[bot]""
        git commit -a -m ""Add changes""
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        ssh: true
        branch: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      - name: Commit files
        run: |
          git config --local user.email ""test@test.com""
          git config --local user.name ""Test""
          git commit -a -m ""Add changes""
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          repository: Test/test
          force_with_lease: true

Push to branch ***************
fatal: unsafe repository (\'/github/workspace\' is owned by someone else)
To add an exception for this directory, call:

\tgit config --global --add safe.directory /github/workspace

To https://github.com/Test/test_repository
 ! [rejected]        0.0.9 -> 0.0.9 (stale info)
error: failed to push some refs to \'https://github.com/Test/test_repository\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
113,"uses: heinrichreimer/github-changelog-generator-action@v2.1.1
with:
  token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
114,"- uses: stefanzweifel/git-auto-commit-action@v4

name: Format

on: push

jobs:
  format-code:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3


      - uses: stefanzweifel/git-auto-commit-action@v4

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    commit_message: Automated Change

    branch: feature-123

    commit_options: \'--no-verify --signoff\'

    file_pattern: \'*.php src/*.js tests/*.js\'

    repository: .

    commit_user_name: My GitHub Actions Bot # defaults to ""github-actions[bot]""
    commit_user_email: my-github-actions-bot@example.org # defaults to ""41898282+github-actions[bot]@users.noreply.github.com""
    commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

    tagging_message: \'v1.0.0\'

    status_options: \'--untracked-files=no\'

    add_options: \'-u\'

    push_options: \'--force\'
    
    skip_dirty_check: true    
    
    skip_fetch: true    
    
    skip_checkout: true

    disable_globbing: true

    create_branch: true

name: php-cs-fixer

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes

  - name: ""Run if changes have been detected""
    if: steps.auto-commit-action.outputs.changes_detected == \'true\'
    run: echo ""Changes!""

  - name: ""Run if no changes have been detected""
    if: steps.auto-commit-action.outputs.changes_detected == \'false\'
    run: echo ""No Changes!""

- uses: actions/checkout@v3
  with:
    ref: ${{ github.head_ref }}

- uses: actions/checkout@v3
  with:
    token: ${{ secrets.PAT }}

    - run: echo ""Commit Message 1"" >> commitmessage.txt
    - run: echo ""Commit Message 2"" >> commitmessage.txt
    - run: echo ""Commit Message 3"" >> commitmessage.txt

    - name: Set commit message
      id: commit_message_step
      run: |
        echo \'commit_message<<EOF\' >> $GITHUB_OUTPUT
        cat commitmessage.txt >> $GITHUB_OUTPUT
        echo \'EOF\' >> $GITHUB_OUTPUT

    - run: rm -rf commitmessage.txt

    - uses: stefanzweifel/git-auto-commit-action@v4
      id: commit
      with:
        commit_message: ${{ steps.commit_message_step.outputs.commit_message }}

name: Format PHP

on:
  push:
    branches:
      - main
  pull_request_target:

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}

        ref: ${{ github.head_ref }}

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4

name: Format PHP

on: [push, pull_request, pull_request_target]

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes

- uses: actions/checkout@master
  with:
    fetch-depth: 2


- name: Get last commit message
  id: last-commit-message
  run: |
    echo ""msg=$(git log -1 --pretty=%s)"" >> $GITHUB_OUTPUT

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    commit_message: ${{ steps.last-commit-message.outputs.msg }}
    commit_options: \'--amend --no-edit\'
    push_options: \'--force\'
    skip_fetch: true

- uses: actions/checkout@v3
  with:
    token: ${{ secrets.PAT }}

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply php-cs-fixer changes
        push_options: --force

- uses: stefanzweifel/git-auto-commit-action@v4
  with:
    file_pattern: \'*.md\'
    disable_globbing: true

npm install
yarn

npm run test
yarn test
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
115,"name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: \'{""answered"": {}}\'

Assuming the original need was handled, this will be automatically closed now.

{""answered"": {}}

\'{""answered"": {}}\'

{
    ""answered"": {
        ""delay"": ""P3DT12H30M5S"",
        ""message"": ""It seems the issue was answered, closing this now.""
    },
    ""validated"": {
        ""delay"": 300,
        ""message"": ""The issue could not be validated after 5 minutes. Closing now.""
    },
    ""waiting"": {
        ""delay"": 691200,
        ""message"": ""Closing after 8 days of waiting for the additional info requested.""
    },
    ""needs-tests"": {
      ""delay"": 691200,
      ""message"": ""This PR will be closed after waiting 8 days for tests to be added. Please create a new one with tests.""
    }
}

It seems the issue was answered, closing this now.

The issue could not be validated after 5 minutes. Closing now.

Closing after 10 days of waiting for the additional info requested.

This PR will be closed after waiting 8 days for tests to be added. Please create a new one with tests.

Assuming the original issue was solved, it will be automatically closed now.

name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: >
            {
                ""answered"": {
                    ""delay"": ""P3DT12H30M5S"",
                    ""message"": ""It seems the issue was answered, closing this now.""
                },
                ""validated"": {
                    ""delay"": 300,
                    ""message"": ""The issue could not be validated after 5 minutes. Closing now.""
                },
                ""waiting"": {
                    ""delay"": 691200,
                    ""message"": ""Closing after 8 days of waiting for the additional info requested.""
                }
            }

{
    ""$schema"": ""https://raw.githubusercontent.com/tiangolo/issue-manager/master/schema.json""
}

name: Issue Manager

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:

jobs:
  issue-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: tiangolo/issue-manager@0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: >
            {
                ""$schema"": ""https://raw.githubusercontent.com/tiangolo/issue-manager/master/schema.json"",
                ""answered"": {
                    ""delay"": ""P3DT12H30M5S"",
                    ""message"": ""It seems the issue was answered, closing this now."",
                    ""remove_label_on_comment"": false,
                    ""remove_label_on_close"": false
                },
                ""validated"": {
                    ""delay"": 300,
                    ""message"": ""The issue could not be validated after 5 minutes. Closing now."",
                    ""remove_label_on_comment"": true,
                    ""remove_label_on_close"": false
                },
                ""waiting"": {
                    ""delay"": 691200,
                    ""message"": ""Closing after 8 days of waiting for the additional info requested."",
                    ""remove_label_on_comment"": true,
                    ""remove_label_on_close"": true
                }
            }

on:
  schedule:
    - cron: ""0 0 * * *""
  issue_comment:
    types:
      - created
      - edited
  issues:
    types:
      - labeled
  pull_request_target:
    types:
      - labeled
  workflow_dispatch:
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
116,"uses: brunoborges/justextract@v1
with:
  file: fileName
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
117,"sonar.organization=<replace with your SonarCloud organization key>
sonar.projectKey=<replace with the key generated when setting up the project on SonarCloud>

sonar.sources=.

on:
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

uses: sonarsource/sonarcloud-github-action@master
with:
  projectBaseDir: my-custom-directory

- name: Analyze with SonarCloud
  uses: sonarsource/sonarcloud-github-action@master
  with:
    projectBaseDir: my-custom-directory
    args: >
      -Dsonar.organization=my-organization
      -Dsonar.projectKey=my-projectkey
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.sources=lib/
      -Dsonar.test.exclusions=tests/**
      -Dsonar.tests=tests/
      -Dsonar.verbose=true
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
118,"name: copy files
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: copy file
      uses: canastro/copy-file-action@master
      with:
        source: ""tests/a.txt""
        target: ""test-a.txt""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
119,"name: Release

on:
  push:
    tags:
      - ""v[0-9]+.[0-9]+.[0-9]+""

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: Roang-zero1/github-create-release-action@v3
        with:
          version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- name: Create GitHub release
  uses: Roang-zero1/github-create-release-action@v3
  with:
    version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
    prerelease_regex: ""^v2\\\\.[[:digit:]]+\\\\.[[:digit:]]+""
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  pull_request:
    types: closed

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && startsWith(github.head_ref, \'RC\')
    steps:
      - uses: actions/checkout@v3
      - name: Tag and prepare release
        id: tag_and_prepare_release
        uses: K-Phoen/semver-release-action@v1.3.1
        with:
          release_branch: master
          release_strategy: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release notes
        if: steps.tag_and_prepare_release.outputs.tag
        uses: Roang-zero1/github-create-release-action@v3
        with:
          created_tag: ${{ steps.tag_and_prepare_release.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- uses: actions/checkout@v3
- name: ""Refresh tags""
  id: tag
  run: git fetch --tags --force # Is currently required for v3 due to https://github.com/actions/checkout/issues/290
- uses: ericcornelissen/git-tag-annotation-action@v3
  id: tag-data
- name: Create GitHub release
  uses: Roang-zero1/github-create-release-action@v3
  with:
    version_regex: ^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+
    release_text: ${{ steps.tag-data.outputs.git-tag-annotation }}
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



Initial Release
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
120,"on: push
name: Build & Release
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: build
      run: |
        ./build.sh
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
    - name: Create release
      uses: Roang-zero1/github-create-release-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@v2
      with:
        args: ""dist/bin/ dist/shell/compiled.sh""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
121,"on: push
name: Build and release on push
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
122,"steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      script-path: path/to/script.cake

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      target: Task-To-Run

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      verbosity: Diagnostic

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      dry-run: true

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      arguments: |
        name: value
        configuration: Release

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: 0.30.0

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v1
    with:
      cake-version: tool-manifest

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: explicit
      cake-version: 0.38.5

steps:
  - name: Run the Cake script
    uses: cake-build/cake-action@v2
    with:
      cake-bootstrap: skip

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    steps:
      - name: Get the sources
        uses: actions/checkout@v1
      - name: Run the build script
        uses: cake-build/cake-action@v1
        with:
          target: Build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
123,"- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


versions:
  - rubocop-rails
  - rubocop-performance: ""1.5.1""
  - rubocop-minitest: ""latest""
  - rubocop-rspec: ""1.37.0""


check_name: ""RuboCop Results""

versions:
  - rubocop
  - rubocop-rails
  - rubocop-minitest
  - rubocop-performance: ""1.5.1""
  - rubocop-rspec: ""1.37.0""

rubocop_config_path: "".rubocop.yml""

rubocop_excluded_cops:
  - ""Style/FrozenStringLiteralComment""

rubocop_fail_level: ""warning""

rubocop_force_exclusion: true

bundle: false

check_scope: ""modified""

base_branch: ""origin/master""

uses: andrewmcodes/rubocop-linter-action@master

uses: andrewmcodes/rubocop-linter-action@v2.0.0

action_config_path:
  description: ""Define a path to your optional action config file.""
  required: false
  default: "".github/config/rubocop_linter_action.yml""

with:
  action_config_path: "".github/actions/config/rubocop.yml""

name: Linters

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: RuboCop Linter
        uses: andrewmcodes/rubocop-linter-action@v3.3.0
        with:
          action_config_path: "".github/config/rubocop_linter_action.yml"" # Note: this is the default location
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

check_scope: ""modified""

versions:
  - rubocop: ""0.88.0""

- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  with:
    exit_on_failure: true
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
124,"name: Publish Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

with:
  name: owner/repository/image
  username: ${{ github.actor }}
  password: ${{ secrets.GITHUB_TOKEN }}
  registry: ghcr.io

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  snapshot: true

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  default_branch: trunk

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  dockerfile: MyDockerFileName

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  workdir: mySubDirectory

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  context: myContextDirectory

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  env:
    MY_FIRST: variableContent
    MY_SECOND: variableContent
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildargs: MY_FIRST,MY_SECOND

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    buildoptions: ""--compress --force-rm""

- name: Set up Docker Buildx
  uses: docker/setup-buildx-action@v2
- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    platforms: linux/amd64,linux/arm64

name: Publish to Registry
on:
  push:
    branches:
      - master
  schedule:
    - cron: \'0 2 * * 0\' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        cache: ${{ github.event_name != \'schedule\' }}

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  no_push: ${{ github.event_name == \'push\' }}

- name: Publish to Registry
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    name: myDocker/repository
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    tags: ""latest,another""

name: Publish to Registry
on:    
  release:
      types: [published]
  push:
    branches:
      - master
  schedule:
    - cron: \'0 2 * * 0\' # Weekly on Sundays at 02:00
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: pre-step
      shell: bash
      run: echo ""release-version=$(echo ${GITHUB_REF:10})"" >> $GITHUB_OUTPUT
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: ""latest,${{ steps.pre-step.outputs.release-version }}""

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  tag_names: true

with:
  name: myDocker/repository
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  tag_semver: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
125,"on: 
  pull_request:
    types: [opened]

jobs:
  comment_job:
    runs-on: ubuntu-latest
    name: Label Pull requests
    steps:
      - name: Comment
        uses: camunda/camunda-comment-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
126,"jobs:
    build:
        steps:
            - name: Import Secrets
              id: import-secrets
              uses: hashicorp/vault-action@v2
              with:
                url: https://vault.mycompany.com:8200
                token: ${{ secrets.VAULT_TOKEN }}
                caCertificate: ${{ secrets.VAULT_CA_CERT }}
                secrets: |
                    secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
                    secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
                    secret/data/ci npm_token

            - name: Step following \'Import Secrets\'
              run: |
                ACCESS_KEY_ID = ""${{ env.AWS_ACCESS_KEY_ID }}""
                SECRET_ACCESS_KEY = ""${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }}""

            - name: Step following \'Import Secrets\'
              run: |
                touch secrets.json
                echo ""${{ toJson(steps.import-secrets.outputs) }}"" >> secrets.json

{
  ""ACCESS_KEY_ID"": ""MY_KEY_ID"",
  ""SECRET_ACCESS_KEY"": ""MY_SECRET_KEY"",
  ""NPM_TOKEN"": ""MY_NPM_TOKEN""
}

{""sub"": ""repo:<orgName>/*""}

repo:<orgName/repoName>:ref:refs/heads/branchName

jobs:
    retrieve-secret:
        permissions:
            contents: read
            id-token: write

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  role: <Vault JWT Auth Role Name>
  method: jwt
  jwtGithubAudience: sigstore # set the GitHub token\'s aud claim

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: approle
  roleId: ${{ secrets.VAULT_ROLE_ID }}
  secretId: ${{ secrets.VAULT_SECRET_ID }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  token: ${{ secrets.VAULT_TOKEN }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: github
  githubToken: ${{ secrets.GITHUB_TOKEN }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: jwt
  role: <Vault JWT Auth Role Name>
  jwtPrivateKey: ${{ secrets.JWT_PRIVATE_KEY }}
  jwtKeyPassword: ${{ secrets.JWT_KEY_PASS }}
  jwtTtl: 3600 # 1 hour, default value

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: kubernetes
  role: <Vault Kubernetes Auth Role Name>
  kubernetesTokenPath: /var/run/secrets/kubernetes.io/serviceaccount/token # default token path

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: userpass
  username: ${{ secrets.VAULT_USERNAME }}
  password: ${{ secrets.VAULT_PASSWORD }}

with:
  url: https://vault.mycompany.com:8200
  caCertificate: ${{ secrets.VAULT_CA_CERT }}
  method: ldap
  username: ${{ secrets.VAULT_USERNAME }}
  password: ${{ secrets.VAULT_PASSWORD }}

{{ Secret Path }} {{ Secret Key or Selector }} | {{ Env/Output Variable Name }}

with:
    secrets: secret/data/ci npmToken

NPMTOKEN=somelongtoken

steps:
    - name: Import Secrets
      id: secrets
    - name: Sensitive Operation
      run: ""my-cli --token \'${{ steps.secrets.outputs.npmToken }}\'""

with:
    secrets: secret/data/ci npmToken | NPM_TOKEN

NPM_TOKEN=somelongtoken

steps:
  - name: Import Secrets
    id: secrets
  - name: Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.NPM_TOKEN }}\'""


with:
    secrets: |
        secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
        secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY

with:
    secrets: |
        /cubbyhole/foo foo ;
        /cubbyhole/foo zip | MY_KEY ;

FOO=bar
MY_KEY=zap

steps:
  - name: Import Secrets
    id: secrets
  - name: Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.foo }}\'""
  - name: Another Sensitive Operation
    run: ""my-cli --token \'${{ steps.secrets.outputs.MY_KEY }}\'""

with:
    secrets: |
        secret/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
        secret/ci/aws secretKey | AWS_SECRET_ACCESS_KEY
    extraHeaders: |
      X-Secure-Id: ${{ secrets.SECURE_ID }}
      X-Secure-Secret: ${{ secrets.SECURE_SECRET }}

steps:
    - name: Import Secrets
      uses: hashicorp/vault-action
      with:
        url: https://vault-enterprise.mycompany.com:8200
        caCertificate: ${{ secrets.VAULT_CA_CERT }}
        method: token
        token: ${{ secrets.VAULT_TOKEN }}
        namespace: admin
        secrets: |
            secret/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
            secret/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
            secret/ci npm_token

$ npm install && npm run build

$ docker-compose up -d vault # Choose one of: vault, vault-enterprise, vault-tls depending on which tests you would like to run

$ export VAULT_HOST=<YOUR VAULT CLUSTER LOCATION> # localhost if undefined
$ export VAULT_PORT=<YOUR VAULT PORT> # 8200 if undefined
$ export VAULT_TOKEN=<YOUR VAULT TOKEN> # testtoken if undefined

$ npm test

$ npm run test:integration:basic # Choose one of: basic, enterprise, e2e, e2e-tls

act workflow_dispatch -j local-test

make local-test
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
127,"<!-- START doctoc -->
<!-- END doctoc -->

on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

<!-- START doctoc -->
<!-- param::isNotitle::true:: -->
<!-- param::isCustomMode::true:: -->

<!-- END doctoc -->

...


on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

on: pull_request
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          CREATE_PR: true

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

on: push
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          CREATE_PR: true
          TARGET_BRANCH_PREFIX: release/

on:
  schedule:
    - cron: ""0 23 * * *""
name: TOC Generator
jobs:
  generateTOC:
    name: TOC Generator
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/toc-generator@v4
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          CHECK_ONLY_DEFAULT_BRANCH: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
128,"runs-on: ubuntu-latest
steps:
- name: Install SSH key
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY }}
    name: id_rsa # optional
    known_hosts: ${{ secrets.KNOWN_HOSTS }}
    config: ${{ secrets.CONFIG }} # ssh_config; optional
    if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
- name: rsync over SSH
  run: rsync -r ./foo/ user@remote:bar/

runs-on: ubuntu-latest
steps:
- name: Install SSH key of bastion
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY_OF_BASTION }}
    name: id_rsa-bastion
    known_hosts: ${{ secrets.KNOWN_HOSTS_OF_BASTION }}
    config: |
      Host bastion
        HostName xxx.xxx.xxx.xxx
        User user-of-bastion
        IdentityFile ~/.ssh/id_rsa-bastion
- name: Install SSH key of target
  uses: shimataro/ssh-key-action@v2
  with:
    key: ${{ secrets.SSH_KEY_OF_TARGET }}
    name: id_rsa-target
    known_hosts: ${{ secrets.KNOWN_HOSTS_OF_TARGET }} # will be appended to existing .ssh/known_hosts
    config: |                                         # will be appended to existing .ssh/config
      Host target
        HostName yyy.yyy.yyy.yyy
        User user-of-target
        IdentityFile ~/.ssh/id_rsa-target
        ProxyCommand ssh -W %h:%p bastion
- name: SCP via port-forwarding
  run: scp ./foo/ target:bar/

rsync -r -e ""ssh bastion ssh"" ./foo/ target:bar/
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
129,"name: Automerge

on:
  push:

  schedule:
    - cron: 0 * * * *

  pull_request_review:
    types:
      - submitted

  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - edited
      - labeled
      - unlabeled
      - ready_for_review

  workflow_dispatch:
    inputs:
      pull-request:
        description: Pull Request Number
        required: false
      review:
        description: Review ID
        required: false

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - uses: reitermarkus/automerge@v2
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          merge-method: rebase
          do-not-merge-labels: never-merge
          required-labels: automerge
          pull-request: ${{ github.event.inputs.pull-request }}
          review: ${{ github.event.inputs.review }}
          dry-run: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
130,"name: Automatic Rebase
on:
  issue_comment:
    types: [created]
jobs:
  rebase:
    name: Rebase
    runs-on: ubuntu-latest
    if: >-
      github.event.issue.pull_request != '' && 
      (
        contains(github.event.comment.body, '/rebase') || 
        contains(github.event.comment.body, '/autosquash')
      )
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - name: Automatic Rebase
        uses: cirrus-actions/rebase@1.8
        with:
          autosquash: ${{ contains(github.event.comment.body, '/autosquash') || contains(github.event.comment.body, '/rebase-autosquash') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


... 
    - name: Checkout the latest code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
    - name: Automatic Rebase
      uses: cirrus-actions/rebase@1.8
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Automatic Rebase
      uses: cirrus-actions/rebase@1.8
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_NUMBER: 1245
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
131,"      - uses: peter-evans/rebase@v2

name: Rebase
on:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2

name: Rebase
on:
  push:
    branches: [main]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        with:
          base: main

      - uses: peter-evans/rebase@v2
        with:
          exclude-labels: |
            no-rebase
            dependencies

      - uses: peter-evans/rebase@v2
        with:
          head: 'my-org:*'

name: Slash Command Dispatch
on:
  issue_comment:
    types: [created]
jobs:
  slashCommandDispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Slash Command Dispatch
        uses: peter-evans/slash-command-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          commands: rebase
          permission: write
          issue-type: pull-request

name: rebase-command
on:
  repository_dispatch:
    types: [rebase-command]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        id: rebase
        with:
          head: ${{ github.event.client_payload.pull_request.head.label }}
      - name: Add reaction
        if: steps.rebase.outputs.rebased-count == 1
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray

name: Rebase
on:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  rebase:
    strategy:
      matrix:
        repo: ['my-org/repo1', 'my-org/repo2', 'my-org/repo3']
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/rebase@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ matrix.repo }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
132,"      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: \'+1\'

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: 557858210
          body: |
            **Edit:** Some additional info
          reactions: eyes

      - name: Add reactions
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: 557858210
          reactions: |
            heart
            hooray
            laugh

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        id: couc
        with:
          issue-number: 1
          body: |
            My comment
      - name: Check outputs
        run: |
          echo ""Comment ID - ${{ steps.couc.outputs.comment-id }}""

on:
  issue_comment:
    types: [created]
jobs:
  commentCreated:
    runs-on: ubuntu-latest
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: \'github-actions[bot]\'
        body-includes: Build output

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Build output
          ${{ steps.build.outputs.build-log }}
        edit-mode: replace

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: \'github-actions[bot]\'
        body-includes: This comment was written by a bot!

    - name: Create comment
      if: steps.fc.outputs.comment-id == \'\'
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          This comment was written by a bot!
        reactions: rocket

    - name: Update comment
      if: steps.fc.outputs.comment-id != \'\'
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          This comment has been updated!
        reactions: hooray

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body-path: \'comment-body.md\'

This is a test comment template
Render template variables such as {{ .foo }} and {{ .bar }}.

      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.4
        with:
          template: .github/comment-template.md
          vars: |
            foo: this
            bar: that

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 1
          body: ${{ steps.template.outputs.result }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
133,"name: Re-run Workflow

on:
  push:

  schedule:
    - cron: \'*/30 * * * *\'

  pull_request_target:
    types:
      - closed
      - labeled
      - unlabeled

  workflow_dispatch:

  workflow_run:
    workflows:
      - CI
    types:
      - completed

jobs:
  rerun-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Re-run pull request workflows
        uses: reitermarkus/rerun-workflow@v1
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          once-label: ci-requeue
          continuous-label: ci-retry
          trigger-labels: ci-trigger-1,ci-trigger-2
          workflow: ci.yml
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
134,"name: Automatic pull request review
on: [pull_request]
jobs:
  automate-pullrequest-review:
    runs-on: ubuntu-latest
    steps:
      - name: Approve pull request
        if: github.actor == 'dependabot[bot]'
        uses: andrewmusgrave/automatic-pull-request-review@0.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: APPROVE
          body: 'Thank you dependabot \xf0\x9f\x8e\x8a'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
135,"- name: PHP Copy Paste Detector
  uses: StephaneBour/actions-php-cpd@8.2
  with:
    args: \'./src\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
136,"name: Crowdin Action

on:
  push:
    branches: [ main ]

jobs:
  synchronize-with-crowdin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: crowdin action
        uses: crowdin/github-action@v1
        with:
          upload_sources: true
          upload_translations: true
          download_translations: true
          localization_branch_name: l10n_crowdin_translations
          create_pull_request: true
          pull_request_title: \'New Crowdin Translations\'
          pull_request_body: \'New Crowdin translations by [Crowdin GH Action](https://github.com/crowdin/github-action)\'
          pull_request_base_branch_name: \'main\'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

- name: crowdin action
  uses: crowdin/github-action@v1
  with:
    upload_sources: true
    upload_sources_args: \'--no-auto-update label=web\'

    upload_translations: true
    upload_language: \'uk\'
    auto_approve_imported: true
    import_eq_suggestions: true
    upload_translations_args: \'--auto-approve-imported --translate-hidden\'

    download_sources: true
    push_sources: true
    download_sources_args: \'--reviewed\'

    download_translations: true
    download_language: \'uk\'
    skip_untranslated_strings: true
    skip_untranslated_files: true
    export_only_approved: true
    push_translations: true
    commit_message: \'New Crowdin translations by GitHub Action\'
    download_translations_args: \'--all --skip-untranslated-strings\'

    localization_branch_name: l10n_crowdin_action
    create_pull_request: true
    pull_request_title: \'New Crowdin translations\'
    pull_request_body: \'New Crowdin pull request with translations\'
    pull_request_labels: \'enhancement, good first issue\'
    pull_request_assignees: \'crowdin-bot\'
    pull_request_reviewers: \'crowdin-user-reviewer\'
    pull_request_team_reviewers: \'crowdin-team-reviewer\'

    pull_request_base_branch_name: not_default_branch


    crowdin_branch_name: l10n_branch
    identity: \'path/to/your/credentials/file\'
    config: \'path/to/your/crowdin.yml\'
    dryrun_action: true

    github_base_url: github.com
    github_api_base_url: api.[github_base_url]
    github_user_name: Crowdin Bot
    github_user_email: support+bot@crowdin.com
    
    gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
    gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}

    token: ${{ secrets.CROWDIN_PERSONAL_TOKEN }} # A Personal Access Token (see https://crowdin.com/settings#api-key)
    project_id: ${{ secrets.CROWDIN_PROJECT_ID }} # The numeric project ID. Visit the Tools > API section in your Crowdin project
    source: \'path/to/your/file\'
    translation: \'file/export/pattern\'
    base_url: \'https://api.crowdin.com\'
    base_path: \'project-base-path\' # Default: \'.\'

- name: crowdin action
  uses: crowdin/github-action@v1
  with:
    command: \'pre-translate\'
    command_args: \'-l uk --method tm --branch main\'

project_id_env: CROWDIN_PROJECT_ID
api_token_env: CROWDIN_PERSONAL_TOKEN
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
137,"steps:
name: ASP.NET CI
on: [push]
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@master

    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1

    - name: Nuget Push
      run: nuget push *.nupkg
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
138,"steps:
name: ASP.NET CI
on: [push]
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@master

    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: MSBuild
      working-directory: src
      run: msbuild MyProject.csproj
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
139,"name: Release

on:
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged
    
    steps:
      - name: Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
140,"name: Release

on:
  pull_request:
    types: closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
141,"$ npm install

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

const core = require(\'@actions/core\');
...

async function run() {
  try { 
      ...
  } 
  catch (error) {
    core.setFailed(error.message);
  }
}

run()

npm run package

git add dist

$ git checkout -b v1
$ git commit -a -m ""v1 release""

$ git push origin v1

uses: actions/javascript-action@v1
with:
  milliseconds: 1000
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
142,"name: My workflow
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
    - run: bundle install
    - run: bundle exec rake

name: My workflow
on: [push]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos]
        ruby: [2.5, 2.6, 2.7, head, debug, jruby, jruby-head, truffleruby, truffleruby-head]
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - run: bundle install
    - run: bundle exec rake

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-
    - name: bundle install
      run: |
        bundle config deployment true
        bundle config path vendor/bundle
        bundle install --jobs 4
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
143,"    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        aws-region: us-east-2

jobs:
  deploy:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role-test
        aws-region: us-east-1
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-test-website-bucket
    - name: Configure AWS credentials from Production account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod
        aws-region: us-west-2
    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-prod-website-bucket

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName
    - name: Configure other AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::987654321000:role/my-second-role
        role-session-name: MySessionName
        role-chaining: true

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        role-duration-seconds: 1200
        role-session-name: MySessionName

    - name: Configure AWS Credentials for Beta Customers
      uses: aws-actions/configure-aws-credentials@v2
      with:
        audience: beta-customers
        aws-region: us-east-3
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
        role-session-name: MySessionName
        mask-aws-account-id: false

Parameters:
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: """"
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: ""sts.amazonaws.com""
    Type: String

Conditions:
  CreateOIDCProvider: !Equals 
    - !Ref OIDCProviderArn
    - """"

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If 
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList: 
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  Role:
    Value: !GetAtt Role.Arn 

      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-skip-session-tagging: true

      uses: aws-actions/configure-aws-credentials@v2
      with:
         inline-session-policy: \'{""Version"":""2012-10-17"",""Statement"":[{""Sid"":""Stmt1"",""Effect"":""Allow"",""Action"":""s3:List*"",""Resource"":""*""}]}\'

      uses: aws-actions/configure-aws-credentials@v2
      with:
         inline-session-policy: >-
          {
           ""Version"": ""2012-10-17"",
           ""Statement"": [
            {
             ""Sid"":""Stmt1"",
             ""Effect"":""Allow"",
             ""Action"":""s3:List*"",
             ""Resource"":""*""
            }
           ]
          }

      uses: aws-actions/configure-aws-credentials@v2
      with:
         managed-session-policies: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

      uses: aws-actions/configure-aws-credentials@v2
      with:
         managed-session-policies: |
          arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
          arn:aws:iam::aws:policy/AmazonS3OutpostsReadOnlyAccess

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2
  role-to-assume: my-github-actions-role

uses: aws-actions/configure-aws-credentials@v2
with:
  aws-region: us-east-2
  role-to-assume: my-github-actions-role
  http-proxy: ""http://companydomain.com:3128""

HTTP_PROXY=""http://companydomain.com:3128""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
144,"on:
  repository_dispatch:
    types: [test]

name: Broken Link Check
jobs:
  check:
    name: Broken Link Check
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/auto-cancel-redundant-job@v1
      - name: Broken Link Check
        uses: technote-space/broken-link-checker-action@v1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
145,"name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: \'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)\'
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == \'workflow_dispatch\' && inputs.debug_enabled }}

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        sudo: false

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 15

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        tmate-server-host: ssh.tmate.io
        tmate-server-port: 22
        tmate-server-rsa-fingerprint: SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs
        tmate-server-ed25519-fingerprint: SHA256:jfttvoypkHiQYUqUCwKeqd9d1fJj/ZiQlFOHVl6E9sI

name: CI
on: [push]
jobs:
  build:
    runs-on: [self-hosted, linux]
    steps:
    - uses: mxschmitt/action-tmate@v3
      with:
        install-dependencies: false
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
146,"name: ci

on:
  push:
    branches:
      - \'main\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: user/app:latest

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ""{{defaultContext}}:mysubdir""
          push: true
          tags: user/app:latest

      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: user/app:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}

name: ci

on:
  push:
    branches:
      - \'main\'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
147,"- name: Discord notification
  env:
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  uses: Ilshidur/action-discord@master
  with:
    args: \'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.\'
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
148,"name: Upload Website

on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-1'   # optional: defaults to us-east-1
        SOURCE_DIR: 'public'      # optional: defaults to entire repository
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
149,"- name: Invalidate CloudFront
  uses: chetan/invalidate-cloudfront-action@v2
  env:
    DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
    PATHS: ""/index.html""
    AWS_REGION: ""us-east-1""
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

PATHS=/index.html
PATHS=/ /index.html /foo/bar/baz

- name: checkout dist
  uses: actions/checkout@master
  with:
    ref: dist
    fetch-depth: 2

- name: get updated files
  run: |
    set +e
    FILES=$(git log --stat=""1000"" -1 | grep \'|\' | awk \'{print ""/""$1}\' | grep -e \'\\.html$\')
    set -e
    [ -z ""$FILES"" ] && touch .updated_files && exit 0
    for file in $FILES; do
      echo $file
      [[ ""$file"" == *""/index.html"" ]] && echo $file | sed -e \'s/\\/index.html$/\\//\'
    done | sort | uniq | tr \'\
\' \' \' > .updated_files

- name: invalidate
  uses: chetan/invalidate-cloudfront-action@v2
  env:
    PATHS_FROM: .updated_files
    AWS_REGION: \'us-east-1\'
    DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""cloudfront:CreateInvalidation"",
            ""Resource"": ""arn:aws:cloudfront::<account id>:distribution/<distribution ID>""
        }
    ]
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
150,"steps:
- uses: actions/checkout@v2

- uses: meeDamian/github-release@2.0
  with:
    token: ${{ secrets.GITHUB_TOKEN }}

steps:
    ...
    - name: Set enviroment for github-release
      run: |
        echo ::set-env name=RELEASE_TAG::""v1.0.0""
        echo ::set-env name=RELEASE_NAME::""$GITHUB_WORKFLOW""

    - uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        name: ${{ env.RELEASE_NAME }}
    ...

with:
  \xe2\x80\xa6
  files: release/

with:
  \xe2\x80\xa6
  files: release-v1.0.0:release/

with:
  \xe2\x80\xa6
  files: >
    release-v1.0.0-linux:release/linux/
    release-v1.0.0-mac:release/darwin/
    release-v1.0.0-windows:release/not-supported-notice
    checksums.txt      

steps:
- uses: actions/checkout@v2

- uses: meeDamian/github-release@2.0
  with:
    token: ${{ secrets.GITHUB_TOKEN }}
    tag: ${{ env.MY_CUSTOM_TAG }}
    name: My Creative Name
    body: >
      This release actually changes the fabric of the reality, so be careful 
      while applying, as error in database migration, can irrecoverably wipe 
      some laws of physics.  
    gzip: folders
    files: >
      Dockerfile
      action.yml
     .github/
      license:LICENSE
      work-flows:.github/

steps:
  uses: meeDamian/github-release@v2.0.2

steps:
  uses: meeDamian/github-release@2.0
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
151,"name: Label sponsors
on:
  pull_request:
    types: [opened]
  issues:
    types: [opened]
jobs:
  build:
    name: is-sponsor-label
    runs-on: ubuntu-latest
    steps:
      - uses: JasonEtco/is-sponsor-label-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: JasonEtco/is-sponsor-label-action@v1
        with:
          label: Sponsor Request \xe2\x9d\xa4\xef\xb8\x8f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

query ($owner: String!) { 
  user (login: $owner) {
    sponsorshipsAsMaintainer (first: 100) {
      nodes {
        sponsor {
          id
        }
      }
    }
  }
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
152,"name: List S3 Contents - Multi OS

on:
  push
jobs:
  listS3:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-10.14, windows-2016, ubuntu-18.04]
    steps:
      - uses: chrislennon/action-aws-cli@v1.1
      - run: aws s3 ls
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
153,"src/third_party/*
src/ignored/*

name: test-clang-format

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.5
      with:
        source: '.'
        exclude: './third_party ./external'
        extensions: 'h,cpp'
        clangFormatVersion: 9
        style: chromium
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
154,"jobs:
    my_job:
        ...
        steps:
            - uses: actions/checkout@v3
            - uses: webfactory/ssh-agent@v0.7.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - uses: webfactory/ssh-agent@v0.7.0
              with:
                  ssh-private-key: |
                        ${{ secrets.FIRST_KEY }}
                        ${{ secrets.NEXT_KEY }}
                        ${{ secrets.ANOTHER_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}

      - name: ssh-agent setup
        ...

      - name: Collect Git and SSH config files in a directory that is part of the Docker build context
        run: |
          mkdir root-config
          cp -r ~/.gitconfig  ~/.ssh root-config/
  
      - name: Docker build 
        ...

COPY root-config /root/
RUN sed \'s|/home/runner|/root|g\' -i.bak /root/.ssh/config

stuff = { git = ""ssh://git@github.com/myorg/stuff.git"", branch = ""main"" }

      - name: Update cargo config to use Git CLI
        run: Set-Content -Path $env:USERPROFILE\\.cargo\\config.toml ""[net]`ngit-fetch-with-cli = true""

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true

env ""INPUT_SSH-PRIVATE-KEY=\\`cat file\\`"" node index.js

set /P INPUT_SSH-PRIVATE-KEY=< file
node index.js

${env:INPUT_SSH-PRIVATE-KEY} = (Get-Content .\\test-keys -Raw); node index.js
node index.js
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
155,"jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}        
    - name: Print new build number
      run: echo ""Build number is $BUILD_NUMBER""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}        
    
    - name: Another step as an example
      uses: actions/hello-world-docker-action@v1
      with:
        who-to-greet: ${{ steps.buildnumber.outputs.build_number }}

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}
          
  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
    - name: Another step as an example
      uses: actions/hello-world-docker-action@v1
      with:
        who-to-greet: ${{needs.job1.outputs.build_number}}

git tag build-number-500
git push origin build-number-500

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{ secrets.github_token }}
        prefix: client
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
156,"name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: write

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2


      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: phpcs

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true
          php_codesniffer_args: ""-n""

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ""7.4""
          coverage: none
          tools: composer

      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --no-progress --no-ansi --no-interaction
          echo ""${PWD}/vendor/bin"" >> $GITHUB_PATH

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install ClangFormat
        run: sudo apt-get install -y clang-format

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          clang_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ""6.0.x""

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          dotnet_format: true

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          black: true
          black_auto_fix: true
          flake8: true
          flake8_auto_fix: false
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
157,"name: sassdoc
on:
 push:
   branches:
     - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Build
      uses: codevise/sassdoc-action@v1
      with:
        input: ./src
        output: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
158,"name: jsdoc
on:
 push:
   branches:
     - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Build
      uses: codevise/documentation-js-action@v1
      with:
        input: ./src
        output: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
159,"workflow ""PR Checklist"" {
  on = ""pull_request""
  resolves = [""Create PR Comment""]
}

action ""Create PR Comment"" {
  uses = ""cognisant/code-review-checklist@master""
  secrets = [""GITHUB_TOKEN""]
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
160,"jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@github.com:owner/repo.git
        BRANCH: gh-pages
        FOLDER: build
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        KNOWN_HOSTS_FILE: resources/known_hosts # Needed if target repo is not on github.com

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: public/site
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: public/site
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TARGET_DIR: www

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@main
      with:
        node-version: 16.x
    - name: npm install and build
      run: |
        npm install
        npm run build

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@github.com:owner/repo.git
        BRANCH: gh-pages
        FOLDER: build
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}

name: Deploy to GitHub Pages
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@main
      with:
        node-version: 16.x
    - name: npm install and build
      run: |
        npm install
        npm run build

    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@mydomain.com:path/to/repo.git
        BRANCH: artifacts
        FOLDER: dist
        SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        KNOWN_HOSTS_FILE: resources/known_hosts # Path relative to the root of the repository

> ssh-keyscan github.com
github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==

jobs:
  deploy:
    - uses: s0/git-publish-subdir-action@develop
      env:
        MESSAGE: ""This updates the content to the commit {sha} that had the message:\
{msg}""

**/*
!.git

target_dir/**/*
!.git

**/*
!.git
!foobar/**/*

folder/*
!folder/a
ini*al2

folder/*
!folder/a
ini*al2

jobs:
  deploy:
    - uses: s0/git-publish-subdir-action@develop
      env:
        CLEAR_GLOBS_FILE: "".clear-target-files""

initial1
initial2
folder/a
folder/b

folder/a
initial1

> cd /tmp
> ssh-keygen -t ed25519
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/sam/.ssh/id_ed25519): temp-deploy-key
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in temp-deploy-key.
Your public key has been saved in temp-deploy-key.pub.
The key fingerprint is:
SHA256:tQBSeWjZ4Er4YYjK4XQ4npfiK2xJPJLbGjTsYJq/9JI sam@optimus
The key\'s randomart image is:
+--[ED25519 256]--+
|    ..+*         |
| ..o o=.o        |
|.=o.+.... .      |
|B =+.o   o .     |
|+% oo   S .      |
|X=+              |
|B=+.             |
|oBE.             |
|+ooo.            |
+----[SHA256]-----+
> cat temp-deploy-key.pub
ssh-ed25519 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX user@localhost
> cat temp-deploy-key
-----BEGIN OPENSSH PRIVATE KEY-----
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=
-----END OPENSSH PRIVATE KEY-----
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
161,"name: scp files
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: copy file via ssh password
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: ""tests/a.txt,tests/b.txt""
        target: your_server_target_folder_path

ssh-keygen -t rsa -b 4096 -C ""your_email@example.com""

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

cat .ssh/id_rsa.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

cat .ssh/id_ed25519.pub | ssh b@B \'cat >> .ssh/authorized_keys\'

clip < ~/.ssh/id_rsa

clip < ~/.ssh/id_ed25519

ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey]

CASignatureAlgorithms +ssh-rsa

ssh-keygen -t ed25519 -a 200 -C ""your_email@example.com""

- name: copy file via ssh password
  uses: appleboy/scp-action@v0.1.4
  with:
    host: example.com
    username: foo
    password: bar
    port: 22
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

- name: copy file via ssh key
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    port: ${{ secrets.PORT }}
    key: ${{ secrets.KEY }}
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

- name: copy file via ssh key
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    port: ${{ secrets.PORT }}
    key: ${{ secrets.KEY }}
    source: ""tests/*.txt,!tests/a.txt""
    target: your_server_target_folder_path

  uses: appleboy/scp-action@v0.1.4
  with:
-   host: ""example.com""
+   host: ""foo.com,bar.com""
    username: foo
    password: bar
    port: 22
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path

  uses: appleboy/scp-action@v0.1.4
  with:
    host: ""example.com""
    username: foo
    password: bar
    port: 22
-   source: ""tests/*.txt""
+   source: ""tests/*.txt,!tests/a.txt,!tests/b.txt""
    target: your_server_target_folder_path

  deploy:
    name: deploy artifact
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - run: echo hello > world.txt

    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: world.txt

    - uses: actions/download-artifact@v3
      with:
        name: my-artifact
        path: distfiles

    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: distfiles/*
        target: your_server_target_folder_path

- name: remove the specified number of leading path elements
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOST }}
    username: ${{ secrets.USERNAME }}
    key: ${{ secrets.KEY }}
    port: ${{ secrets.PORT }}
    source: ""tests/a.txt,tests/b.txt""
    target: your_server_target_folder_path
    strip_components: 1

foobar
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 tests
    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 a.txt
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 b.txt

foobar
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 a.txt
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 b.txt

  changes:
    name: test changed-files
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        since_last_remote_commit: true
        separator: "",""

    - name: copy file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: ${{ steps.changed-files.outputs.all_changed_files }}
        target: your_server_target_folder_path

  - name: ssh key with passphrase
    uses: appleboy/scp-action@v0.1.4
    with:
      host: ${{ secrets.HOST }}
      username: ${{ secrets.USERNAME }}
      key: ${{ secrets.SSH2 }}
+     passphrase: ${{ secrets.PASSPHRASE }}
      port: ${{ secrets.PORT }}
      source: ""tests/a.txt,tests/b.txt""
      target: your_server_target_folder_path

New-ItemProperty -Path ""HKLM:\\SOFTWARE\\OpenSSH"" -Name DefaultShell -Value ""$env:Programfiles\\Git\\bin\\bash.exe"" -PropertyType String -Force

  - name: Copy to Windows
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: \'your_source_path\'
-       target: \'C:\\path\\to\\target\'
+       target: \'/c/path/to/target/\'
+       tar_dereference: true
+       rm: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
162,"---
name: Pull request labeler
on:
  schedule:
    - cron: '*/5 * * * *'
jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      - uses: paulfantom/periodic-labeler@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          LABEL_MAPPINGS_FILE: .github/labeler.yml
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
163,"    - name: Link Checker
      uses: peter-evans/link-checker@v1

    - name: Link Checker
      uses: peter-evans/link-checker@v1
      with:
        args: -v -r *

on:
  schedule:
  - cron: '0 0 1 * *'
name: Check markdown links
jobs:
  linkChecker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Link Checker
        uses: peter-evans/link-checker@v1
      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v2
        with:
          title: Link Checker Report
          content-filepath: ./link-checker/out.md
          labels: report, automated issue

on: push
jobs:
  linkChecker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Link Checker
      id: lc
      uses: peter-evans/link-checker@v1
    - name: Fail if there were link errors
      run: exit ${{ steps.lc.outputs.exit_code }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
164,"      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: An example issue
          content-filepath: ./example-content/output.md
          labels: |
            report
            automated issue

      - name: Create Issue From File
        id: ciff
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: An example issue
          content-filepath: ./example-content/output.md

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-name: My project
          column-name: My column
          issue-number: ${{ steps.ciff.outputs.issue-number }}
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
165,"name: CI UWP

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2

    - name: Restore packages
      run: msbuild .\\dev\\CustomMayd.Services.Serialization\\CustomMayd.Services.Serialization.sln -t:restore

    - name: Debug Build UWP app
      run: msbuild .\\dev\\CustomMayd.Services.Serialization\\CustomMayd.Services.Serialization.sln /p:Configuration=Debug /p:AppxBundlePlatforms=""x86|x64|ARM"" /p:AppxPackageDir="".\\AppxPackages"" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload
      
    - name: VSTest
      run: vstest.console.exe /Platform:x64 .\\test\\CustomMayd.Services.Serialization.Tests\\AppxPackages\\CustomMayd.Services.Serialization.Tests_1.0.0.0_Debug_Test\\CustomMayd.Services.Serialization.Tests_1.0.0.0_x86_Debug.appx



","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
166,"steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-api-key: ${{ secrets.NuGetAPIKey }}
    nuget-version: \'5.x\'
- run: nuget restore MyProject.sln

name: NuGet Restore
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        nuget: [latest, preview, 4.x, 5.3.1]
    name: NuGet@${{ matrix.nuget }} sample
    steps:
      - uses: actions/checkout@master
      - name: Setup NuGet.exe
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: ${{ matrix.nuget }}
      - run: nuget restore MyProject.sln

steps:
- uses: actions/checkout@master
- uses: nuget/setup-nuget@v1
  with:
    nuget-version: \'5.x\'
- uses: actions/cache@v1
  id: cache
  with:
    path: ~/.nuget/packages
    key: ${{ runner.os }}-nuget-${{ hashFiles(\'**/packages.lock.json\') }}
- name: NuGet Restore
  if: steps.cache.outputs.cache-hit != \'true\'
  run: nuget restore MyProject.sln

$ npm install

$ npm run build && npm run package

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

$ npm run package
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
167,"jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
    - uses: actions/checkout@v3
    - uses: nikeee/docfx-action@v1.0.0
      name: Build Documentation
      with:
        args: path/to/your/docfx.json

    - uses: maxheld83/ghpages@master
      name: Publish Documentation on GitHub Pages
      env:
        BUILD_DIR: _site # docfx's default output directory is _site
        GH_PAT: ${{ secrets.GH_PAT }} # See https://github.com/maxheld83/ghpages

    - uses: nikeee/docfx-action@v1.0.0
      with:
        args: <something>
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
168,"name: Deployment

""on"":
  - push
  - pull_request

jobs:
  deploy_ghpages:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - run: echo $GITHUB_SHA >> public/index.html
      - uses: maxheld83/ghpages@v0.3.0
        env:
          BUILD_DIR: public/
          GH_PAT: ${{ secrets.GH_PAT }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
169,"on: [push, pull_request]

jobs:
  armv7_job:
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          githubToken: ${{ github.token }}

          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        run: |
          echo ""The uname output was ${{ steps.runcmd.outputs.uname }}""

on: [push, pull_request]

jobs:
  build_job:
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: ppc64le
            distro: alpine_latest
          - arch: s390x
            distro: fedora_latest
          - arch: none
            distro: none
            base_image: riscv64/busybox
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          githubToken: ${{ github.token }}

          setup: |
            mkdir -p ""${PWD}/artifacts""

          dockerRunArgs: |
            --volume ""${PWD}/artifacts:/artifacts""

          env: | # YAML, but pipe character is necessary
            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}

          shell: /bin/sh

          install: |
            case ""${{ matrix.distro }}"" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y git
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          run: |
            cp $(which git) ""/artifacts/${artifact_name}""
            echo ""Produced artifact at /artifacts/${artifact_name}""

      - name: Show the artifact
        run: |
          ls -al ""${PWD}/artifacts""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
170,"name: ""Push Notification""
on: [push, pull_request, create]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: irc push
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'push\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}
            ${{ join(github.event.commits.*.message) }}
      - name: irc pull request
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'pull_request\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} opened PR ${{ github.event.pull_request.html_url }}
      - name: irc tag created
        uses: rectalogic/notify-irc@v1
        if: github.event_name == \'create\' && github.event.ref_type == \'tag\'
        with:
          channel: ""#mychannel""
          server: ""irc.libera.chat""          
          nickname: my-github-notifier
          message: |
            ${{ github.actor }} tagged ${{ github.repository }} ${{ github.event.ref }}
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
171,"      - name: Cache compilation
        uses: actions/cache@v1
        with:
          path: ~/.ccache
          key: ccache
      - name: Setup ccache
        uses: alexjurkiewicz/setup-ccache@master
        with:
          max-size: 150M
          extra-config: |
            keep_comments_cpp = true
      - name: Compile program
        run: make all

compression = true
compression_level = 9
log_file = /tmp/ccache.log
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
172,"name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/mything
        asset_name: mything
        tag: ${{ github.ref }}
        overwrite: true
        body: ""This is my release text""

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: mything
            asset_name: mything-linux-amd64
          - os: windows-latest
            artifact_name: mything.exe
            asset_name: mything-windows-amd64
          - os: macos-latest
            artifact_name: mything
            asset_name: mything-macos-amd64

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --locked
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}

name: Publish
on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/my*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_name: owner/repository-name
        repo_token: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN }}
        file: target/release/mything
        asset_name: mything
        tag: ${{ github.ref }}
        overwrite: true
        body: ""This is my release text""

name: Publish

on:
  push:
    tags:
      - \'*\'

jobs:

  build:
    name: Publish binaries
    runs-on: ubuntu-latest
         
    steps:
      - uses: actions/checkout@v3

      - name: Read release.md and use it as a body of new release
        id: read_release
        shell: bash
        run: |
          r=$(cat path/to/release.md)                       # <--- Read release.md (Provide correct path as per your repo)
          r=""${r//\'%\'/\'%25\'}""                               # Multiline escape sequences for %
          r=""${r//$\'\
\'/\'%0A\'}""                             # Multiline escape sequences for \'\
\'
          r=""${r//$\'\\r\'/\'%0D\'}""                             # Multiline escape sequences for \'\\r\'
          echo ""RELEASE_BODY=$r"" >> $GITHUB_OUTPUT          # <--- Set environment variable

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}  # <--- Use environment variables that was created earlier


permissions:
  contents: write
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
173,"- name: ""bug""
  color: ""d73a4a""
  description: ""Something isn\'t working""
- name: ""documentation""
  color: ""0075ca""
  description: ""Improvements or additions to documentation""
- name: ""duplicate""
  color: ""cfd8d7""
  description: ""This issue or pull request already exists""
- name: ""enhancement""
  color: ""a22eef""
- name: ""wontfix_it""
  color: ""000000""
  description: ""This will not be worked on""
  from_name: ""wontfix""

name: github

on:
  push:
    branches:
      - \'main\'
    paths:
      - \'.github/labels.yml\'
      - \'.github/workflows/labels.yml\'

jobs:
  labeler:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Run Labeler
        uses: crazy-max/ghaction-github-labeler@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          yaml-file: .github/labels.yml
          exclude: |
            help*
            *issue
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
174,"name: Close Pull Request\r
\r
on:\r
  pull_request_target:\r
    types: [opened]\r
\r
jobs:\r
  run:\r
    runs-on: ubuntu-latest\r
    steps:\r
    - uses: superbrothers/close-pull-request@v3\r
      with:\r
        comment: ""We do not accept PRs. If you have any questions, please feel free to contact us.""\r
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
175,"name: Close All Pull Requests

on:
  push:
  pull_request:
  schedule:
    - cron: \'0 0 * * *\'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - uses: crondaemon/close-pr@v1
      with:
        comment: ""We do not accept PRs. If you have any questions, please feel free to contact us.""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
176,"jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action

uses: styfle/cancel-workflow-action@0.9.1

name: Cancel
on: [push]
jobs:
  cancel:
    name: \'Cancel Previous Runs\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action
        with:
          workflow_id: 479426

name: Cancel
on:
  workflow_run:
    workflows: [""CI""]
    types:
      - requested
jobs:
  cancel:
    runs-on: ubuntu-latest
    steps:
    - uses: styfle/cancel-workflow-action
      with:
        workflow_id: ${{ github.event.workflow.id }}

on:
  pull_request:
    types: [closed]
jobs:
  cleanup:
    name: \'Cleanup After PR Closed\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Cancel build runs
        uses: styfle/cancel-workflow-action
        with:
          ignore_sha: true
          workflow_id: 479426

name: Cancel
on: [push]
jobs:
  cancel:
    name: \'Cancel Previous Runs\'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action
        with:
          all_but_latest: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action
        with:
          access_token: ${{ github.token }}
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
177,"on: push
name: clang-format Code Formatter
jobs:
  lint:
    name: clang-format Code Formatter
    runs-on: ubuntu-latest
    steps:
    - name: Clang Code Formatter
      uses: antoinealb/clang-format-action@clang9
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
178,"name: \'My Workflow\'

on:
  release:
    types: [published]

jobs:
  deploy:
    name: \'Deploy to Netlify\'
    steps:
      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.MY_TOKEN_SECRET }}
          NETLIFY_DEPLOY_TO_PROD: true

name: \'Netlify Deploy\'

on:
  release:
    types: [\'published\']

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: ""Prod deploy v${{ github.ref }}""
          NETLIFY_DEPLOY_TO_PROD: true

name: \'Netlify Preview Deploy\'

on:
  pull_request:
    types: [\'opened\', \'edited\', \'synchronize\']

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


name: \'Netlify Previews\'

on:
  push:
    branches-ignore: 
      - master

jobs:
  deploy:
    name: \'Deploy\'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: nelonoel/branch-name@v1.0.1
      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          deploy_alias: ${{ env.BRANCH_NAME }}
      
      - name: Status check
        uses: Sibz/github-status-action@v1.1.1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: ${{ env.NETLIFY_PREVIEW_URL }}

- name: Deploy to Netlify
  uses: jsmrcaga/action-netlify-deploy@v2.0.0
  with:
    NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    NETLIFY_DEPLOY_MESSAGE: ""Deployed from GitHub action""
    NETLIFY_DEPLOY_TO_PROD: true
    install_command: ""echo Skipping installing the dependencies""
    build_command: ""echo Skipping building the web files""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
179,"- name: Setup .NET Core # Required to execute ReportGenerator
  uses: actions/setup-dotnet@v3
  with:
    dotnet-version: 6.x
    dotnet-quality: 'ga'

- name: ReportGenerator
  uses: danielpalme/ReportGenerator-GitHub-Action@5.1.23
  with:
    reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
    targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
    reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
    sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
    historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
    plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
    assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
    title: '' # Optional title.
    tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
    license: '' # Optional license for PRO version. Get your license here: https://reportgenerator.io/pro
    customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
    toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.

- name: Upload coverage report artifact
  uses: actions/upload-artifact@v2.2.3
  with:
    name: CoverageReport # Artifact name        
    path: coveragereport # Directory containing files to upload
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
180,"uses: RalfG/python-wheels-manylinux-build@v0.7.1
with:
  python-versions: 'cp310-cp310 cp311-cp311'

uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2010_x86_64
with:
  python-versions: 'cp310-cp310 cp311-cp311'
  build-requirements: 'cython numpy'
  system-packages: 'lrzip-devel zlib-devel'
  pre-build-command: 'sh pre-build-script.sh'
  package-path: 'my_project'
  pip-wheel-args: '-w ./dist --no-deps'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
181,"label1:
  - example/**/*

label2: example2/*

repo:
  - ./*
  
@domain/core:
  - package/core/*
  - package/core/**/*

test:
  - src/**/*.spec.js

name: ""Pull Request Labeler""
on:
- pull_request

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@v2
      with:
        repo-token: ""${{ secrets.GITHUB_TOKEN }}""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
182,"uses: actions/python-wheels-manylinux-build@v0.1
with:
  python-versions: 'cp36-cp36m cp37-cp37m'
  build-requirements: 'cython numpy'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
183,"workflow ""Example Workflow"" {
  on = ""push""
  resolves = [""Lint""]
}

action ""Lint"" {
  uses = ""lgeiger/black-action@master""
  args = "". --check""
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
184,"...
...
strategy:
      matrix:
        mongodb-version: [""4.0"", ""4.2""]
...
...
- name: Launch MongoDB
  uses: wbari/start-mongoDB@v0.2
  with:
    mongoDBVersion: ${{ matrix.mongodb-version }}
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
185,"name: Zip Files

on:
  release:
    types: [published]

jobs:
  zip-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: vimtor/action-zip@v1
        with:
          files: dist/ manifest.json
          dest: result.zip

- uses: vimtor/action-zip@v1
  with:
    files: dist/ manifest.json
    recursive: false
    dest: result.zip

- uses: actions/upload-artifact@v1
  with:
    name: my-artifact
    path: ${{ github.workspace }}/result.zip
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
186,"<parent>
    <groupId>no.digipost</groupId>
    <artifactId>digipost-open-super-pom</artifactId>
    <version>12</version>
</parent>

name: Release

on:
  push:
    tags:
    - '*'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Set release version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - name: Release to Central Repository
        uses: digipost/action-maven-publish@1.1.0
        with:
          sonatype_secrets: ${{ secrets.sonatype_secrets }}
          release_version: ${{ env.RELEASE_VERSION }}
          perform_release: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
187,"name: comment-on-pr example
on: pull_request
jobs:
  example:
    name: sample comment
    runs-on: ubuntu-latest
    steps:
      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ""Check out this message!""
          check_for_duplicate_msg: false  # OPTIONAL
          delete_prev_regex_msg: ""[0-9]""  # OPTIONAL
          duplicate_msg_pattern: ""[A-Z]""  # OPTIONAL
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
188,"jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
        target: [default, google_apis]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          ndk: 21.0.6113669
          cmake: 3.10.2.4988404
          script: ./gradlew connectedCheck

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 23, 29]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != \'true\'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo ""Generated AVD snapshot for caching.""

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
","[0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
189,"name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps: (your tests go here)

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Release Gem
        uses: discourse/publish-rubygems-action@v2
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
          RELEASE_COMMAND: rake release
          GIT_EMAIL: ci@example.com
          GIT_NAME: Your CI
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
190,"name: Tagging main using pyproject.toml
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Tag main using pyproject.toml
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout main
      uses: actions/checkout@v3
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat pyproject.toml \\
          | grep --extended-regexp ""^version ="" \\
          | grep --extended-regexp --only-matching ""[0-9]+\\.[0-9]+.[0-9]+[-\\.\\+a-zA-Z0-9]*"" \\
          | head --lines=1)
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tag main depending on the value in pyproject.toml
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}

...
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat Cargo.toml \\
          | grep --extended-regexp ""^version ="" \\
          | grep --extended-regexp --only-matching ""[0-9]+\\.[0-9]+.[0-9]+[-\\.\\+a-zA-Z0-9]*"" \\
          | head --lines=1)
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tagging repo using version specified in Cargo.toml
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}

...
    - name: The new tag
      id: computed-tag
      run: |
        set -e
        TAG=$(cat mix.exs \\
          | grep --line-buffer ""version: "" \\
          | grep --extended-regexp --only-matching ""\\""[-0-9\\.\\+a-zA-Z]+\\"""" \\
          | grep --extended-regexp --only-matching ""[-0-9\\.\\+a-zA-Z]+"")
        echo ""tag=v$TAG"" >> ""$GITHUB_OUTPUT""
    - name: Tagging repo using version specified in mix.exs
      uses: djordon/git-autotag-action@v0.7.0-beta1
      with:
        tag: ${{ steps.computed-tag.outputs.tag }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
191,"name: Bump version
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: \'0\'

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0 # Don\'t use @master or @v1 unless you\'re happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don\'t want to set write permissions use a PAT token
        WITH_V: false

name: Bump version
on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: \'0\'

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0 # Don\'t use @master or @v1 unless you\'re happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don\'t want to set write permissions use a PAT token
        WITH_V: true
        PRERELEASE: true

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
192,"steps:
  - name: Checkout repository
    uses: actions/checkout@v3
  - name: Read package.json
    id: package
    uses: juliangruber/read-file-action@v1
    with:
      path: ./package.json
  - name: Echo package.json
    run: echo ""${{ steps.package.outputs.content }}""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
193,"uses: nick-fields/retry@v2
with:
  timeout_minutes: 10
  max_attempts: 3
  shell: pwsh
  command: dir

uses: nick-fields/retry@v2
with:
  timeout_minutes: 10
  max_attempts: 3
  command: npm run some-typically-slow-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npm run some-typically-fast-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  retry_on: timeout
  command: npm run some-typically-fast-script

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  retry_on: error
  command: npm run some-typically-fast-script

- uses: nick-fields/retry@v2
  id: retry
  with:
    timeout_seconds: 15
    max_attempts: 3
    continue_on_error: true
    command: node -e \'process.exit(99);\'
- name: Assert that step succeeded (despite failing command)
  uses: nick-fields/assert-action@v1
  with:
    expected: success
    actual: ${{ steps.retry.outcome }}
- name: Assert that action exited with expected exit code
  uses: nick-fields/assert-action@v1
  with:
    expected: 99
    actual: ${{ steps.retry.outputs.exit_code }}

- uses: nick-fields/retry@v2
  id: retry
  continue-on-error: true
  with:
    timeout_seconds: 15
    max_attempts: 3
    retry_on: error
    command: node -e \'process.exit(99);\'
- name: Assert that action failed
  uses: nick-fields/assert-action@v1
  with:
    expected: failure
    actual: ${{ steps.retry.outcome }}
- name: Assert that action exited with expected exit code
  uses: nick-fields/assert-action@v1
  with:
    expected: 99
    actual: ${{ steps.retry.outputs.exit_code }}
- name: Assert that action made expected number of attempts
  uses: nick-fields/assert-action@v1
  with:
    expected: 3
    actual: ${{ steps.retry.outputs.total_attempts }}

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npm run some-flaky-script-that-outputs-something
  on_retry_command: npm run cleanup-flaky-script-output

uses: nick-fields/retry@v2
with:
  timeout_seconds: 15
  max_attempts: 3
  command: npx jest
  new_command_on_retry: npx jest --onlyFailures

name: Multi-line multi-command Test
uses: ./
with:
  timeout_minutes: 1
  max_attempts: 2
  command: |
    Get-ComputerInfo
    Get-Date

name: Multi-line single-command Test
uses: ./
with:
  timeout_minutes: 1
  max_attempts: 2
  shell: cmd
  command: >-
    echo ""this is
 a test""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
194,"name: Remove old artifacts

on:
  schedule:
    - cron: '0 1 * * *'

jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 month' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
195,"name: Compress Images\r
on:\r
  pull_request:\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
jobs:\r
  build:\r
    if: github.event.pull_request.head.repo.full_name == github.repository\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
\r
      - name: Compress Images\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r

with:\r
  jpegQuality: \'80\'\r
  jpegProgressive: false\r
  pngQuality: \'80\'\r
  webpQuality: \'80\'\r

with:\r
  ignorePaths: \'node_modules/**,build\'\r

with:\r
  compressOnly: true\r

name: Compress Images\r
on:\r
  workflow_dispatch:\r
  schedule:\r
    - cron: \'00 23 * * 0\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: true\r
      - name: Create New Pull Request If Needed\r
        if: steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Compressed Images Nightly\r
          branch-suffix: timestamp\r
          commit-message: Compressed Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

if: github.event.pull_request.head.repo.full_name == github.repository\r

name: Compress Images on Push to main branch\r
on:\r
  push:\r
    branches:\r
      - main\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Checkout Repo\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: true\r
      - name: Create New Pull Request If Needed\r
        if: steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Compressed Images\r
          branch-suffix: timestamp\r
          commit-message: Compressed Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

name: Compress images\r
on:\r
  pull_request:\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
  push:\r
    branches:\r
      - main\r
    paths:\r
      - \'**.jpg\'\r
      - \'**.jpeg\'\r
      - \'**.png\'\r
      - \'**.webp\'\r
  workflow_dispatch:\r
  schedule:\r
    - cron: \'00 23 * * 0\'\r
jobs:\r
  build:\r
    name: calibreapp/image-actions\r
    runs-on: ubuntu-latest\r
    if: |\r
      github.repository == \'example/example_repo\' &&\r
      (github.event_name != \'pull_request\' ||\r
       github.event.pull_request.head.repo.full_name == github.repository)\r
    steps:\r
      - name: Checkout Branch\r
        uses: actions/checkout@v3\r
      - name: Compress Images\r
        id: calibre\r
        uses: calibreapp/image-actions@main\r
        with:\r
          githubToken: ${{ secrets.GITHUB_TOKEN }}\r
          compressOnly: ${{ github.event_name != \'pull_request\' }}\r
      - name: Create Pull Request\r
        if: |\r
          github.event_name != \'pull_request\' &&\r
          steps.calibre.outputs.markdown != \'\'\r
        uses: peter-evans/create-pull-request@v4\r
        with:\r
          title: Auto Compress Images\r
          branch-suffix: timestamp\r
          commit-message: Compress Images\r
          body: ${{ steps.calibre.outputs.markdown }}\r

- name: calibreapp/image-actions\r
    uses: docker://calibreapp/github-image-actions\r
    env:\r
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r

- name: Compress Images\r
  uses: calibreapp/image-actions@main\r
  with:\r
    githubToken: ${{ secrets.GITHUB_TOKEN }}\r
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
196,"name: Get release branch
on: create

jobs:
  get-release:
    name: Get the release branch version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: valadas/get-release-branch-version@v1
        id: branchVersion
      - name: Dump the version info
        env:
          MAJOR: ${{ steps.branchVersion.major }}
          MINOR: ${{ steps.branchVersion.minor }}
          PATCH: ${{ steps.branchVersion.patch }}
          MANIFEST_SAFE_VERSION_STRING: ${{ steps.branchVersion.manifestSafeVersionString }}
        run: ""echo major: $MAJOR minor: $MINOR patch: $PATCH manifestSafeVersionString: $MANIFEST_SAFE_VERSION_STRING""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
197,"name: Set manifest versions
on: [push] # You can act on other events depending on your needs

jobs:
  setManifestVersions:
    name: Set Manifest Versions
    runs-on: ubuntu-latest # The action is javascript based so can be used in any environment that has node.js
    
    steps:
      - uses: valadas/set-dnn-manifest-versions@v1
        with:
          version: 01.02.03 # Must be a nn.nn.nn formatted string, can be takin from other actions outputs such as https://github.com/valadas/get-release-branch-version or https://github.com/valadas/dnn-platform-get-version

...

- uses: valadas/set-dnn-manifest-versions@v1
  with:
    version: 02.03.04
    glob: |-
      ./my-mono-repo/modules/**/*.dnn
      \\!somemodule/*.dnn

...

- uses: valadas/set-dnn-manifest-versions@v1
  with:
    version: 04.05.06
    skipFile: './build/unversionedManifests.txt' # Will version all manifests except the ones listed in the glob patterns in the lines of the provided text file.
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
198,"jobs:
  build:
    steps:

      - uses: lukka/get-cmake@latest

      - name: Setup vcpkg (it does not install any package yet)
        uses: lukka/run-vcpkg@v11




      - name: Run CMake consuming CMakePreset.json and run vcpkg to build dependencies
        uses: lukka/run-cmake@v10
        with:

          configurePreset: \'ninja-multi-vcpkg\'

          buildPreset: \'ninja-multi-vcpkg\'


\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
|  If running in GH Runner,|   Environment variables:
|  set the env vars:       |   - If any env var is
|  - VCPKG_BINARY_SOURCES  |     already defined
|  - ACTIONS_CACHE_URL     |     it will not be overridden.
|  - ACTIONS_RUNTIME_TOKEN |
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
\xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
|  Skipped by default.     |
\xe2\x94\x82  Compute cache key from: \xe2\x94\x82   Inputs:
\xe2\x94\x82  - vcpkg Git commit      \xe2\x94\x82   - `vcpkgGitCommitId`
\xe2\x94\x82  - platform and OS       \xe2\x94\x82   - `doNotCache`: set to false
\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98     to run this block.
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 \xe2\x94\x82 Locate vcpkg.json.      \xe2\x94\x82   - `vcpkgJsonGlob`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98   - `vcpkgJsonIgnores`
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 | Skipped by default.     |   - `vcpkgDirectory`
 \xe2\x94\x82 Restore vcpkg           \xe2\x94\x82   - `doNotCache`: set to false
 \xe2\x94\x82 from the GH cache.      \xe2\x94\x82     to run this block.
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90   Inputs:
 \xe2\x94\x82 If vcpkg is not a       \xe2\x94\x82   - `vcpkgDirectory`
 \xe2\x94\x82 submodule, fetch it     \xe2\x94\x82   - `vcpkgGitCommitId`
 \xe2\x94\x82                         \xe2\x94\x82   - `vcpkgGitURL`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98   - `doNotUpdateVcpkg`
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
 \xe2\x94\x82 Rebuild vcpkg executable\xe2\x94\x82   Inputs:
 \xe2\x94\x82 if not in sync with     \xe2\x94\x82   - `vcpkgGitCommitId`
 \xe2\x94\x82 sources.                \xe2\x94\x82   - `vcpkgGitURL`
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              \xe2\x96\xbc
  <Is `runVcpkgInstall:true`>\xe2\x94\x90    Inputs:
          \xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80        No\xe2\x94\x82   - `runVcpkgInstall`
              \xe2\x94\x82 Yes          \xe2\x94\x82
              \xe2\x96\xbc              \xe2\x94\x82
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90 \xe2\x94\x82
 \xe2\x94\x82 Launch `vcpkg install`  \xe2\x94\x82 \xe2\x94\x82   Inputs:
 \xe2\x94\x82 where vcpkg.json has    \xe2\x94\x82 \xe2\x94\x82   - `runVcpkgFormatString`
 \xe2\x94\x82 been located.           \xe2\x94\x82 \xe2\x94\x82   Environment variables:
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98 \xe2\x94\x82   - `VCPKG_DEFAULT_TRIPLET` is used. If not yet
              \xe2\x94\x82              \xe2\x94\x82     set, it is set to the current platform.
              \xe2\x94\x82              \xe2\x94\x82   - `VCPKG_INSTALLED_DIR` is used as value for
              \xe2\x94\x82              \xe2\x94\x82     `--x-install-root` when running `vcpkg install`.
              \xe2\x94\x82              \xe2\x94\x82     Check out the `runVcpkgFormatString` input.
              \xe2\x96\xbc              \xe2\x94\x82   - `VCPKG_BINARY_SOURCES` is used. If not yet 
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90 \xe2\x94\x82      set, it is set to leverage the GitHub Action
 \xe2\x94\x82 Set `VCPKG_ROOT` and    \xe2\x94\x82 \xe2\x94\x82      cache storage for Binary Caching artifacts.
 \xe2\x94\x82 `VCPKG_DEFAULT_TRIPLET` \xe2\x94\x82 \xe2\x94\x82
 \xe2\x94\x82 workflow-wide env vars. \xe2\x94\x82 \xe2\x94\x82
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98 \xe2\x94\x82
              \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80 \xe2\x94\x98
              \xe2\x96\xbc
 \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
 | Skipped by default.     |
 \xe2\x94\x82 If no cache-hit,        \xe2\x94\x82  Inputs:
 \xe2\x94\x82 store vcpkg onto        \xe2\x94\x82  - `doNotCache`: set to false to
 \xe2\x94\x82 GH cache.               \xe2\x94\x82    run this block.
 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xac\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98
              |
              \xe2\x96\xbc
              \xe2\xac\xac
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
199,"- uses: lots0logs/gh-action-get-changed-files@2.2.2
  with:
    token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
200,"- uses: maxkomarychev/oction-create-issue@v0.7.1
  id: my_step_id
  with:
    token: <token value>
    title: <title value>
- name: Print outputs
  run: |
    echo ${{ steps.my_step_id.outputs.id }}
    echo ${{ steps.my_step_id.outputs.number }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
201,"steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '3.7.7'
    channel: 'stable'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable' # or: 'beta', 'dev' or 'master'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '1.22.x'
    channel: 'dev'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '2.x'
    channel: 'any'
- run: flutter --version

steps:
- uses: actions/checkout@v3
- uses: actions/setup-java@v2
  with:
    distribution: 'zulu'
    java-version: '11'
- uses: subosito/flutter-action@v2
  with:
    flutter-version: '3.7.7'
- run: flutter pub get
- run: flutter test
- run: flutter build apk
- run: flutter build appbundle

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
    - run: flutter build ios --release --no-codesign

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
- run: flutter pub get
- run: flutter test
- run: flutter build web

jobs:
 build:
   runs-on: windows-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'beta'
     - run: flutter config --enable-windows-desktop
     - run: flutter build windows

jobs:
 build:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'stable'
     - run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
     - run: flutter config --enable-linux-desktop
     - run: flutter build linux

jobs:
 build:
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v3
     - uses: subosito/flutter-action@v2
       with:
         channel: 'stable'
         architecture: x64
     - run: flutter config --enable-macos-desktop
     - run: flutter build macos

steps:
- uses: actions/checkout@v3
- uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
    cache: true
    cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
    cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
    architecture: x64 # optional, x64 or arm64
- run: flutter --version

steps:
- uses: actions/checkout@v3
- id: flutter-action
  uses: subosito/flutter-action@v2
  with:
    channel: 'stable'
- run: |
    echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
    echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
    echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
    echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
    echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
  shell: bash
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
202,"- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'

fastlane beta option1:value1 option2:value2

- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'
    options: \'{ ""option1"": ""value1"", ""option2"": ""value2"" }\'

- uses: actions/checkout@v2
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
    working-directory: \'ios\'
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: \'beta\'
    subdirectory: \'ios\'

- uses: actions/checkout@v3
- uses: ruby/setup-ruby@v1
  with:
    ruby-version: \'3.0\'
    bundler-cache: true
- uses: maierj/fastlane-action@v3.0.0
  with:
    lane: beta
    env: staging
","[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
203,"- name: Build Chain ${{ matrix.java-version }}
  id: build-chain
  uses: ginxo/github-action-build-chain@BXMSPROD-1025
  with:
    definition-file: https://raw.githubusercontent.com/${GROUP}/droolsjbpm-build-bootstrap/${BRANCH}/.ci/pull-request-config.yaml
  env:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

pre: string | multiline string

pre: export VARIABLE_NAME=value

pre: |
  export VARIABLE_NAME=value
  echo $VARIABLE_NAME

post:
  success: string | multiline string
  failure: string | multiline string
  always: string | multiline string

post:
  success: echo \'final message in case of no errors\'
  failure: echo \'final message in case of any error\'
  always: echo \'final message always printed\'

post:
  success: |
    echo \'final message in case of no errors 1\'
    echo \'final message in case of no errors 2\'
  failure: |
    echo \'final message in case of any error\'
    echo \'final message in case of any error 2\'
  always: |
    echo \'final message always printed\'
    echo \'final message always printed 2\'

archive-artifacts:
  path: **/dashbuilder-runtime.war

archive-artifacts:
  path: path/to/artifact-folder/

archive-artifacts:
  path: path/**/[abc]rtifac?/*

archive-artifacts:
  path: |
    path/output/bin/
    path/output/test-results
    !path/**/*.tmp

archive-artifacts:
  path: |
    path/output/bin/
    path2/output2/bin2/@success
    path/output/test-results@failure
    !path/**/*.tmp@always

    path/to/*/directory/foo?.txt =>
        \xe2\x88\x9f path/to/some/directory/foo1.txt
        \xe2\x88\x9f path/to/some/directory/foo2.txt
        \xe2\x88\x9f path/to/other/directory/foo1.txt

    would be flattened and uploaded as =>
        \xe2\x88\x9f some/directory/foo1.txt
        \xe2\x88\x9f some/directory/foo2.txt
        \xe2\x88\x9f other/directory/foo1.txt

archive-artifacts:
  path: path/to/artifact/
  if-no-files-found: error # \'warn\' or \'ignore\' are also available, defaults to `warn`

archive-artifacts:
  name: my-artifacts
  path: **/dashbuilder-runtime.war

archive-artifacts:
  path: world.txt

archive-artifacts:
  path: extra-file.txt

archive-artifacts:
  path: world.txt

archive-artifacts:
  path: ""~/new/**/*""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: ""none""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: ""all""

archive-artifacts:
  path: ""~/new/**/*""
  dependencies: |
    projectX
    projectY

  - project: kiegroup/appformer
    clone:
      - appformer-integration-test
      - folderx/appformer-unit-test

  - project: group/projectx
    clone: another-folder

- project: E
  dependencies:
    - project: D
  mapping:
    dependencies:
      default:
        - source: 7.x
          target: main
      C:
        - source: main
          target: 7.x
        - source: 7.x
          target: 7.x
      D:
        - source: main
          target: 7.x
        - source: 7.x
          target: 7.x
    dependant:
      default:
        - source: main
          target: 7.x
    exclude:
      - A
      - B

docker build .

docker build --build-arg OPENJDK_VERSION=11 .

$ npm install -g @kie/build-chain-action
$ build-chain help
Usage: build-chain [options] [command]

A CLI tool to perform the build chain github actions

Options:
  -h, --help      display help for command

Commands:
  build           Execute different flows
  tools           A bunch of utility tools
  help [command]  display help for command

$ build-chain build help
Usage: build-chain build [options] [command]

Execute different flows

Options:
  -h, --help                 display help for command

Commands:
  cross_pr [options]         Execute cross pull request build chain workflow
  full_downstream [options]  Execute full downstream build chain workflow
  single_pr [options]        Execute single pull request build chain workflow
  branch [options]           Execute branch build chain workflow
  help [command]             display help for command

$ build-chain build cross_pr --help
Usage: build-chain build cross_pr [options]

Execute cross pull request build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_202211229567"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build cross_pr -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build full_downstream --help
Usage: build-chain build full_downstream [options]

Execute full downstream build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_2022112295741"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build full_downstream -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build single_pr --help
Usage: build-chain build single_pr [options]

Execute single pull request build chain workflow

Options:
  -u, --url <event_url>                  pull request event url
  -p, --startProject <project>           The project to start the build from
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_2022112295912"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build single_pr -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -u https://github.com/kiegroup/kie-wb-distributions/pull/1068

$ build-chain build branch --help
Usage: build-chain build branch [options]

Execute branch build chain workflow

Options:
  -p, --startProject <project>           The project to start the build from
  -b, --branch <branch>                  The branch to get the project from
  --fullProjectDependencyTree            Checks out and execute the whole tree instead of the upstream build (default: false)
  -c, --command <commands...>            The command(s) to execute for every project. This will override definition file configuration (just
                                         dependency tree will be taken into account)
  -g, --group <group>                    The group to execute flow. It will take it from project argument in case it\'s not specified
  -f, --defintionFile <path_or_url>      The definition file, either a path to the filesystem or a URL to it
  -o, --outputFolder <path>              The folder path to store projects. Default is of the format \'build_chain_yyyymmddHHMMss\' (default:
                                         ""build_chain_202211221013"")
  --token <token...>                     The GITHUB_TOKEN. It can be set as an environment variable instead. You can specify multiple tokens
  -d, --debug                            Set debugging mode to true (default: false)
  --skipExecution                        A flag to skip execution and artifacts archiving for all projects. Overrides skipProjectExecution (default:
                                         false)
  --skipProjectExecution <projects...>   A flag to skip execution and artifacts archiving for certain projects only
  --skipParallelCheckout                 Checkout the project sequentially (default: false)
  --enableParallelExecution              Parallely execute projects (default: false)
  -t, --customCommandTreatment <exp...>  Each exp must be of the form <RegEx||ReplacementEx>. Regex defines the regular expression for what you want
                                         to replace with the ReplacementEx
  --skipProjectCheckout <projects...>    A list of projects to skip checkout.
  --skipCheckout                         skip checkout for all projects. Overrides skipProjectCheckout (default: false)
  -fae, --fail-at-end                    Only fail the build afterwards; allow all non-impacted builds to continue (default: false)
  -h, --help                             display help for command

$ build-chain build branch -f https://raw.githubusercontent.com/kiegroup/droolsjbpm-build-bootstrap/main/.ci/pull-request-config.yaml -p=kiegroup/lienzo-tests -b=main

$ build-chain build resume

$ build-chain build resume -w bc

$ build-chain tools help
Usage: build-chain tools [options] [command]

A bunch of utility tools

Options:
  -h, --help              display help for command

Commands:
  project-list [options]  Prints the projects that will be built given a starting project ordered by precedence
  plan                    Execute build chain without actually cloning or executing projects (like a dry run)
  resume [options]        Resume execution from first point of failure
  help [command]          display help for command

$ build-chain build cross_pr -f definition_file -u event_url

$ build-chain tools plan cross_pr -f definition_file -u event_url

-ghi, --defaultGithubId <id>                default github id
-ghti, --defaultGithubTokenId <token id>    default github token id used to get token from env
-gha, --defaultGithubApiUrl <api url>       default github api url to use
-ghs, --defaultGithubServeUrl <server url>  default github server url to use
-gli, --defaultGitlabId <id>                default gitlab id
-glti, --defaultGitlabTokenId <token id>    default gitlab token id used to get token from env
-gla, --defaultGitlabApiUrl <api url>       default gitlab api url to use
-gls, --defaultGitlabServeUrl <server url>  default gitlab server url to use

version: 2.3

dependencies:
  - project: middleware/build-configurations
    platform: rh-gitlab
    mapping:
      dependencies:
        default:
          - source: master
            target: main
      dependant:
        default:
          - source: main
            target: master
  - project: business-automation/eng-jenkins-scripts
    platform: rh-gerrit
    dependencies:
      - project: middleware/build-configurations
      - project: kiegroup/drools
  
  - project: kiegroup/drools
    platform: github-public

default:
  build-command:
    current: echo ""default current""

build:
  - project: business-automation/eng-jenkins-scripts
    build-command:
      current: echo ""business-automation/eng-jenkins-scripts""

platforms:
  - id: rh-gitlab
    type: gitlab
    tokenId: RH_GITLAB_TOKEN
    serverUrl: https://gitlab.xxxx.com
    apiUrl: https://gitlab.xxxx.com/api/v4

  - id: rh-gerrit
    type: gerrit
    tokenId: RH_GERRIT_TOKEN
    serverUrl: https://gerrit.xxxx.com
    apiUrl: https://gerrit.xxxx.com/r/a

{
  name: string; // name of the test case. typically you can name it corresponding to the issue
  cmd: string; // the build-chain cli command used to reproduce the issue
  description?: string; // further description of the issue
  env?: Record<string, string>; // any env setup needed
  shouldFail?: boolean; // whether the expected result after execution of build-chain is success or failure. by default it expects success
  matchOutput?: string[] // any particular strings to match in the output
  dontMatchOutput?: string[] // any particular strings we want to make sure aren\'t there in the output
}

{
  name: string; // name of the test case. typically you can name it corresponding to the issue
  event: string | PullRequestPayload; // it can either be a link to a PR or a JSON object similar to a pull request event payload
  description?: string; // further description of the issue
  env?: Record<string, string>; // any env setup needed
  shouldFail?: boolean; // whether the expected result after execution of build-chain is success or failure. by default it expects success
  matchOutput?: string[] // any particular strings to match in the output
  dontMatchOutput?: string[] // any particular strings we want to make sure aren\'t there in the output
  
  // it accepts all the inputs that are needed to run build-chain as a github action
  ""definition-file"": string;
  ""flow-type"": string;
  ""starting-project?"": string;
  ""skip-execution""?: string;
  ""skip-project-execution""?: string;
  ""skip-checkout""?: string;
  ""skip-project-checkout""?: string;
  ""skip-parallel-checkout""?: string;
  ""custom-command-treatment""?: string;
  ""additional-flags""?: string;
  ""logger-level""?: string;
  ""annotations-prefix""?: string;
}

      - name: ""Run build-chain""
        id: build-chain
        uses: kiegroup/github-action-build-chain@main
        with:
          definition-file: whatever-the-file-url/path
        env:
          GITHUB_TOKEN_GOOD_BAD: ""${{ secrets.MY_GH_TOKEN }}""
          GITHUB_TOKEN_GOOD: ""${{ secrets.GITHUB_TOKEN }}""
          CIFS_ZID_USER: ""${{ secrets.CIFS_ZID_USER }}""
          CIFS_ZID_KEY: ""${{ secrets.CIFS_ZID_KEY }}""

npm install
npm run build:cli
./build/index.js build ...

npm test

npm run test:report

npm run test:e2e

ACT_LOG=true npm run test:e2e
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
204,"steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'11\' # The OpenJDK version to make available on the path
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v3
  with:
    distribution: \'temurin\' # See \'Supported distributions\' for available options
    java-version: \'11\'
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'11\' # The OpenJDK version to make available on the path
    architecture: \'x64\' # defaults to \'x64\'
- run: java -cp java HelloWorldApp

steps:
- uses: actions/checkout@v2
- uses: joschi/setup-jdk@v2
  with:
    java-version: \'4.0.0\'
    architecture: x64
    jdkFile: <path to jdkFile> # Optional - jdkFile to install java from. Useful for versions not found on Zulu Community CDN
- run: java -cp java HelloWorldApp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ \'8\', \'11\', \'13\' ]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: joschi/setup-jdk@v2
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - run: java -cp java HelloWorldApp

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: joschi/setup-jdk@v2
      with:
        java-version: \'8\'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

    - name: Set up Apache Maven Central
      uses: joschi/setup-jdk@v2
      with: # running setup-jdk again overwrites the settings.xml
        java-version: \'8\'
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>github</id>
      <username>${env.GITHUB_ACTOR}</username>
      <password>${env.GITHUB_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
  <servers>
    <server>
      <id>maven</id>
      <username>${env.MAVEN_USERNAME}</username>
      <password>${env.MAVEN_CENTRAL_TOKEN}</password>
    </server>
    <server>
      <id>gpg.passphrase</id>
      <passphrase>${env.MAVEN_GPG_PASSPHRASE}</passphrase>
    </server>
  </servers>
</settings>

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: joschi/setup-jdk@v2

    - name: Build with Gradle
      run: gradle build

    - name: Publish to GitHub Packages
      run: gradle publish
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 for Shared Runner
      uses: joschi/setup-jdk@v2
      with:
        java-version: \'8\'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
205,"on:
  issues:
    types: [opened]
name: Issue opened
jobs:
  assign:
    name: Assign issues to project
    runs-on: ubuntu-latest
    steps:
      - name: Assign issues to project
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: Backlog
          COLUMN: To do

on:
  pull_request:
    types: [opened]
name: Pull Request opened
jobs:
  assignToProject:
    name: Assign PullRequest to Project
    runs-on: ubuntu-latest
    steps:
      - name: Assign PullRequest to Project
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: Backlog
          COLUMN: To do
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
206,"on:
  push:
    branches:
      - master
jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: mschilde/auto-label-merge-conflicts@master
        with:
          CONFLICT_LABEL_NAME: ""has conflicts""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAX_RETRIES: 5
          WAIT_MS: 5000
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
207,"      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 # More information on this action can be found below in the \'AWS Credentials\' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Package and push helm chart to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
        run: |
          helm package $REPOSITORY
          helm push $REPOSITORY-0.1.0.tgz oci://$REGISTRY

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Package and push helm chart to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
        run: |
          helm package $REPOSITORY
          helm push $REPOSITORY-0.1.0.tgz oci://$REGISTRY/$REGISTRY_ALIAS

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ""123456789012,998877665544""

jobs:
  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: us-east-1
          mask-aws-account-id: \'false\'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_123456789012_dkr_ecr_us_east_1_amazonaws_com }} # More information on these outputs can be found below in the \'Docker Credentials\' section
      docker_password: ${{ steps.login-ecr.outputs.docker_password_123456789012_dkr_ecr_us_east_1_amazonaws_com }}

  run-with-internal-service:
    name: Run something with an internal image as a service
    needs: login-to-amazon-ecr
    runs-on: ubuntu-latest
    services:
      internal-service:
        image: ${{ needs.login-to-amazon-ecr.outputs.registry }}/my-ecr-repo:latest
        credentials:
          username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
          password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
        ports:
          - \'80:80\'
    steps:
      - name: Run steps in container
        run: echo ""run steps in container""

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

uses: aws-actions/amazon-ecr-login@v1.6.0
with:
  http-proxy: ""http://companydomain.com:3128""

HTTP_PROXY=""http://companydomain.com:3128""

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""GetAuthorizationToken"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:GetAuthorizationToken""
      ],
      ""Resource"": ""*""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPull"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:BatchGetImage"",
        ""ecr:GetDownloadUrlForLayer""
      ],
      ""Resource"": ""arn:aws:ecr:us-east-1:123456789012:repository/my-ecr-repo""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPushPull"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr:BatchGetImage"",
        ""ecr:BatchCheckLayerAvailability"",
        ""ecr:CompleteLayerUpload"",
        ""ecr:GetDownloadUrlForLayer"",
        ""ecr:InitiateLayerUpload"",
        ""ecr:PutImage"",
        ""ecr:UploadLayerPart""
      ],
      ""Resource"": ""arn:aws:ecr:us-east-1:123456789012:repository/my-ecr-repo""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""GetAuthorizationToken"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr-public:GetAuthorizationToken"",
        ""sts:GetServiceBearerToken""
      ],
      ""Resource"": ""*""
    }
  ]
}

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Sid"": ""AllowPush"",
      ""Effect"": ""Allow"",
      ""Action"": [
        ""ecr-public:BatchCheckLayerAvailability"",
        ""ecr-public:CompleteLayerUpload"",
        ""ecr-public:InitiateLayerUpload"",
        ""ecr-public:PutImage"",
        ""ecr-public:UploadLayerPart""
      ],
      ""Resource"": ""arn:aws:ecr-public::123456789012:repository/my-ecr-public-repo""
    }
  ]
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
208,"    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: web
        image: amazon/amazon-ecs-sample:latest
        environment-variables: ""LOG_LEVEL=info""

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: my-service
        cluster: my-cluster

    - name: Render Amazon ECS task definition for first container
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: web
        image: amazon/amazon-ecs-sample-1:latest
        environment-variables: |
            LOG_LEVEL=info
            ENVIRONMENT=prod

    - name: Modify Amazon ECS task definition with second container
      id: render-app-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        container-name: app
        image: amazon/amazon-ecs-sample-2:latest

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-app-container.outputs.task-definition }}
        service: my-service
        cluster: my-cluster
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
209,"    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true

aws ecs describe-task-definition \\
   --task-definition my-task-definition-family \\
   --query taskDefinition > task-definition.json

aws ecs register-task-definition \\
   --generate-cli-skeleton > task-definition.json

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition my-task-definition-family --query taskDefinition > task-definition.json

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo ""image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: my-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true

{
   ""Version"":""2012-10-17"",
   ""Statement"":[
      {
         ""Sid"":""RegisterTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:RegisterTaskDefinition""
         ],
         ""Resource"":""*""
      },
      {
         ""Sid"":""PassRolesInTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""iam:PassRole""
         ],
         ""Resource"":[
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_role_name>"",
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_execution_role_name>""
         ]
      },
      {
         ""Sid"":""DeployService"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:UpdateService"",
            ""ecs:DescribeServices""
         ],
         ""Resource"":[
            ""arn:aws:ecs:<region>:<aws_account_id>:service/<cluster_name>/<service_name>""
         ]
      }
   ]
}

    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: my-service
        cluster: my-cluster
        wait-for-service-stability: true
        codedeploy-appspec: appspec.json
        codedeploy-application: my-codedeploy-application
        codedeploy-deployment-group: my-codedeploy-deployment-group

{
   ""Version"":""2012-10-17"",
   ""Statement"":[
      {
         ""Sid"":""RegisterTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:RegisterTaskDefinition""
         ],
         ""Resource"":""*""
      },
      {
         ""Sid"":""PassRolesInTaskDefinition"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""iam:PassRole""
         ],
         ""Resource"":[
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_role_name>"",
            ""arn:aws:iam::<aws_account_id>:role/<task_definition_task_execution_role_name>""
         ]
      },
      {
         ""Sid"":""DeployService"",
         ""Effect"":""Allow"",
         ""Action"":[
            ""ecs:DescribeServices"",
            ""codedeploy:GetDeploymentGroup"",
            ""codedeploy:CreateDeployment"",
            ""codedeploy:GetDeployment"",
            ""codedeploy:GetDeploymentConfig"",
            ""codedeploy:RegisterApplicationRevision""
         ],
         ""Resource"":[
            ""arn:aws:ecs:<region>:<aws_account_id>:service/<cluster_name>/<service_name>"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:deploymentgroup:<application_name>/<deployment_group_name>"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:deploymentconfig:*"",
            ""arn:aws:codedeploy:<region>:<aws_account_id>:application:<application_name>""
         ]
      }
   ]
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
210,"on:
  push:
    branches:
      - master

name: Push image to ECR and force new ECS deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and redeploy
        uses: jaroldwong/ecr-push-and-ecs-deploy@v1.1
        with:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
          ecr-repository: 'Repository name'
          ecs-cluster: 'ECS Cluster name'
          ecs-service: 'Service name'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
211,"on:
  push:
    branches:
      - master

name: Push image to ECR and force new ECS deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and redeploy
        uses: jaroldwong/ecr-push-and-ecs-deploy@v1.1
        with:
          ecr-registry: ${{ steps.login-ecr.outputs.registry }}
          ecr-repository: 'Repository name'
          ecs-cluster: 'ECS Cluster name'
          ecs-service: 'Service name'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
212,"jobs:
  build:
    - uses: actions/checkout@master
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=cl.exe ..
    - run: cmake --build build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
213,"steps:
- uses: actions/checkout@v2
- uses: actions/setup-python@v1
- uses: BSFishy/meson-build@v1.0.3
  with:
    action: test

- uses: BSFishy/meson-build@v1.0.3
  with:
    action: test
    directory: build
    setup-options: -Db_coverage=true
    options: --verbose
    meson-version: 0.53.2
    ninja-version: 1.9.0.post1
    gcovr-version: 4.2
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
214,"  - uses: msys2/setup-msys2@v2

  - shell: msys2 {0}
    run: |
      uname -a

  - shell: powershell
    run: msys2 -c \'uname -a\'

  - shell: cmd
    run: msys2 -c \'uname -a\'

  defaults:
    run:
      shell: msys2 {0}
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        curl
        git
  - uses: actions/checkout@v3

  strategy:
    matrix:
      include:
        - { sys: mingw64, env: x86_64 }
        - { sys: mingw32, env: i686 }
        - { sys: ucrt64,  env: ucrt-x86_64 }
        - { sys: clang64, env: clang-x86_64 }
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: mingw-w64-${{matrix.env}}-openssl

  strategy:
    matrix:
      sys:
        - mingw64
        - mingw32
        - ucrt64
        - clang64
  steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        pacboy: openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      msystem: UCRT64

  - uses: msys2/setup-msys2@v2
    with:
      msystem: MSYS
  - shell: msys2 {0}
    run: |
      makepkg-mingw -sCLfc --noconfirm --noprogressbar
      pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
  - run: |
      set MSYSTEM=UCRT64
      msys2 -c \'<command to test the package>\'

  - uses: msys2/setup-msys2@v2
    with:
      update: true

  - uses: msys2/setup-msys2@v2
    with:
      update: true
      install: >-
        git
        curl

  strategy:
    fail-fast: false
    matrix:
      sys: [ MINGW64, MINGW32, UCRT64, CLANG64 ]
  steps:
  - uses: msys2/setup-msys2@v2
    with:
      msystem: ${{matrix.sys}}
      install: >-
        git
        curl
      pacboy: >-
        openssl:p

  - uses: msys2/setup-msys2@v2
    with:
      platform-check-severity: warn

  - uses: msys2/setup-msys2@v2
    with:
      path-type: minimal

  - uses: msys2/setup-msys2@v2
    with:
      cache: false

  - uses: msys2/setup-msys2@v2
    with:
      location: D:\\

  - uses: msys2/setup-msys2@v2
    with:
      release: false

  steps:
  - run: git config --global core.autocrlf input
  - uses: actions/checkout@v3
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
215,"name: Notify
on:
  push:
  release:
    types: [published]

jobs:
  notify:
    name: Notify via Telegram
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Telegram
        uses: Lukasss93/telegram-action@v2
        env:
          TELEGRAM_TOKEN: ${{ secrets.telegram_token }}
          TELEGRAM_CHAT: ${{ secrets.telegram_chat }}


// ./templates/commit.mustache

{{#commits}}
<a href=""{{{repo_url}}}"">{{repo_name}}</a> \xe2\x80\xa2 <a href=""https://github.com/{{actor}}"">{{actor}}</a> \xe2\x80\xa2 <a href=""{{commit_url}}"">{{commit_sha}}</a>
{{commit_message}}

{{/commits}}

{{status}}

// ./templates/release.mustache

<a href=""{{{tag_url}}}"">New {{repo_name}} release</a>: <code>{{tag_name}}</code> ({{tag_type}})
{{{body}}}
","[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
216,"steps:
- uses: actions/checkout@v3
- uses: nanasess/setup-php@v4
  with:
    php-version: \'8.2\'
- run: php my_script.php

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest ]
        php: [ \'5.4\', \'5.5\', \'5.6\', \'7.1\', \'7.2\', \'7.3\', \'7.4\', \'7.3.3\' ]
    name: PHP ${{ matrix.php }} sample
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: nanasess/setup-php@v4
        with:
          php-version: ${{ matrix.php }}
      - run: php my_script.php
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
217,"steps:
- uses: harmon758/postgresql-action@v1
  with:
    postgresql version: '11'  # See https://hub.docker.com/_/postgres for available versions
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
218,"steps:
- uses: actions/checkout@v2
- uses: nanasess/setup-chromedriver@v2
  with:
    chromedriver-version: '88.0.4324.96'
- run: |
    export DISPLAY=:99
    chromedriver --url-base=/wd/hub &
    sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

steps:
- uses: actions/checkout@v2
- uses: nanasess/setup-chromedriver@v2
  with:
    chromedriver-version: '88.0.4324.96'
- run: chromedriver --url-base=/wd/hub &
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
219,"steps:
- uses: actions/checkout@master
- uses: nanasess/composer-installer-action@master
- run: composer install
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
220,"steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
    with:
      poetry-version: ""1.2.2""
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
    with:
      poetry-preview: true
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - uses: actions/cache@v2
    with:
      path: ~/.cache/pypoetry/virtualenvs
      key: ${{ runner.os }}-poetry-${{ hashFiles(\'poetry.lock\') }}
  - run: poetry --version

steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: ""3.11""
  - uses: Gr1N/setup-poetry@v8
  - run: poetry --version
    env:
      POETRY_VIRTUALENVS_PATH: /path/to/virtualenvs/directory
      POETRY_HTTP_BASIC_MY_REPOSITORY_PASSWORD: secret
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
221,"name: Publish docs via GitHub Pages
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_DOMAIN: optionaldomain.com
          CONFIG_FILE: folder/mkdocs.yml
          EXTRA_PACKAGES: build-base
          REQUIREMENTS: folder/requirements.txt
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
222,"name: Auto Label
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-label:
    name: Auto Label
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: banyan/auto-label@1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

{ [key: string]: string | string[] }

{
  ""rules"": {
    ""frontend"": [""*.js"", ""*.css"", ""*.html""],
    ""backend"": [""app/"", ""*.rb""],
    ""ci"": "".circleci""
  }
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
223,"use: mstksg/get-package@v1
with:
  brew: brewdep1 brewdep2
  apt-get: aptdep1 aptdep2
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
224,"$ npm install

$ npm run build && npm run pack

$ npm test

 PASS  ./index.test.js
  \xe2\x9c\x93 throws invalid number (3ms)
  \xe2\x9c\x93 wait 500 ms (504ms)
  \xe2\x9c\x93 test runs (95ms)

...

import * as core from \'@actions/core\';
...

async function run() {
  try { 
      ...
  } 
  catch (error) {
    core.setFailed(error.message);
  }
}

run()

$ npm run pack
$ git add dist
$ git commit -a -m ""prod dependencies""
$ git push origin releases/v1

uses: ./
with:
  milliseconds: 1000
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
225,"name: Codacy Coverage Reporter
on: [""push""]
jobs:
  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@v2
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: <PATH_TO_REPORT>
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
226,"- uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
  with:
    add: \'src\'

    author_name: Author Name

    author_email: mail@example.com

    commit: --signoff

    committer_name: Committer Name

    committer_email: mail@example.com

    cwd: \'./path/to/the/repo\'

    default_author: github_actor

    fetch: false

    message: \'Your commit message\'

    new_branch: custom-new-branch

    pathspec_error_handling: ignore

    pull: \'--rebase --autostash ...\'

    push: false

    remove: \'./dir/old_file.js\'

    tag: \'v1.0.0 --force\'

    tag_push: \'--force\'

- uses: actions/checkout@v3
  with:
    repository: ${{ github.event.pull_request.head.repo.full_name }}
    ref: ${{ github.event.pull_request.head.ref }}

> fatal: could not read Username for \'https://github.com\': No such device or address

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions

- uses: EndBug/add-and-commit@v9
  with:
    message: Show GitHub Actions logo
    committer_name: GitHub Actions
    committer_email: actions@github.com

- uses: EndBug/add-and-commit@v9
  with:
    message: Show GitHub logo
    committer_name: GitHub Actions
    committer_email: 41898282+github-actions[bot]@users.noreply.github.com

name: Lint source code
on: push

jobs:
  run:
    name: Lint with ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Update source code
        run: eslint ""src/**"" --fix

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Your Name
          author_email: mail@example.com
          message: \'Your commit message\'
          add: \'*.js\'

name: Use a different repository directory
on: push

jobs:
  run:
    name: Add a text file
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: \'./pathToRepo/\'

      - run: echo ""123"" > ./pathToRepo/file.txt

      - uses: EndBug/add-and-commit@v9
        with:
          message: \'Add the very useful text file\'
          add: \'*.txt --force\'
          cwd: \'./pathToRepo/\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
227,"name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build and publish gem
      uses: jstastny/publish-gem-to-github@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        owner: jstastny

continue-on-error: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
