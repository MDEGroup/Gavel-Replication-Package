,text,label,Dependency management_prediction,Dependency management_label,Support_prediction,Support_label,Testing_prediction,Testing_label,Reporting_prediction,Reporting_label,Mobile CI_prediction,Mobile CI_label,Community_prediction,Community_label,Security_prediction,Security_label,Chat_prediction,Chat_label,IDEs_prediction,IDEs_label,Monitoring_prediction,Monitoring_label,Code review_prediction,Code review_label,Code quality_prediction,Code quality_label,Publishing_prediction,Publishing_label,Project management_prediction,Project management_label,API management_prediction,API management_label,Open Source management_prediction,Open Source management_label,Mobile_prediction,Mobile_label,Code search_prediction,Code search_label,GitHub Sponsors_prediction,GitHub Sponsors_label,Continuous integration_prediction,Continuous integration_label,Deployment_prediction,Deployment_label,Container CI_prediction,Container CI_label,Localization_prediction,Localization_label,Utilities_prediction,Utilities_label,Desktop tools_prediction,Desktop tools_label,AI Assisted_prediction,AI Assisted_label,Time tracking_prediction,Time tracking_label,Code Scanning Ready_prediction,Code Scanning Ready_label,Backup Utilities_prediction,Backup Utilities_label,Learning_prediction,Learning_label
912,"...
      - name: Check HTML
        uses: chabad360/htmlproofer@master
        with:
          directory: ""./public""

...
      - name: Check HTML
        uses: chabad360/htmlproofer@master
        with:
          directory: ""./public""
          # The directory to scan
          arguments: --allow-missing-href
          # The arguments to pass to HTMLProofer
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
913,"- name: breaking-change \xf0\x9f\x92\xa5
  color: \'#D93F0B\'
  description:
    A change that changes the API or breaks backward compatibility for
    users.
  aliases: [breaking]

- name: bug \xf0\x9f\x90\x9e
  color: d73a4a
  description:
    Inconsistencies or issues which will cause a problem for users or implementors.

- name: documentation \xf0\x9f\x93\x9d
  color: 0075ca
  description: Solely about the documentation of the project.

[
  // Support comments
  {
    // My label
    ""name"": ""breaking-change \xf0\x9f\x92\xa5"",
    ""color"": ""#D93F0B"",
    ""description"":
      ""A change that changes the API or breaks backward compatibility for users."",
    ""aliases"": [
      ""breaking""
    ]
  },
  {
    ""name"": ""bug \xf0\x9f\x90\x9e"",
    ""color"": ""d73a4a"",
    ""description"":
      ""Inconsistencies or issues which will cause a problem for users or implementors.""
  },
  {
    ""name"": ""documentation \xf0\x9f\x93\x9d"",
    ""color"": ""0075ca"",
    ""description"": ""Solely about the documentation of the project.""
  }
]

name: \xe2\x99\xbb\xef\xb8\x8f Sync Labels

on:
  workflow_dispatch:

jobs:
  labels:
    name: \xe2\x99\xbb\xef\xb8\x8f Sync labels
    runs-on: ubuntu-20.04
    steps:
      - name: \xe2\xa4\xb5\xef\xb8\x8f Check out code from GitHub
        uses: actions/checkout@v3

      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          # Optional:
          repositories: |
            owner/repository-1
            owner/repository-2

          # Optional:
          config-file: |
            .github/labels-1.yml
            .github/labels-2.yml
            https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

          # Optional:
          # Clean other labels not defined in the config file(s)
          clean-labels: false

...
    steps:
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          config-file: https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          auto-discover-repos: true

          # Optional:
          exclude-repos: repo-1
          # You can specify a array of the repositories to be excluded
          exclude-repos: |
            repository-1
            repository-2
          # You can specify regex to exclude repositories
          exclude-repos: /^repository-1$/u

          # Optional:
          account-type: org | user

          # Optional:
          owner: owner

          # Optional:
          exclude-forked-repos: true

          # Optional:
          exclude-archived-repos: true

          # Optional:
          exclude-private-repos: true

          # Optional:
          exclude-disabled-repos: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
914,"// workaround for https://github.com/ory/kratos/issues/364
dsn = `${dsn}&multiStatements=true`

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

// This prevents regression of github.com/testUser/testRepo/pull/420!!
t.Skip()

on:
  schedule:
    - cron: ""0 7 * * *""

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore: .git
          issueLabels: closed reference
          issueLimit: 5

$ npx https://github.com/ory/closed-reference-notifier.git local/path/to/repo ignore,list

on:
  workflow_dispatch:
    inputs:
      issueLimit:
        description: maximum number of issues to create
        required: true
        default: ""5""

jobs:
  find_closed_references:
    runs-on: ubuntu-latest
    name: Find closed references
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ""14""
      - uses: ory/closed-reference-notifier@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # fall back to 5 when the issueLimit is not available (e.g. with a scheduled event)
          issueLimit: ${{ github.event.inputs.issueLimit || \'5\' }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
915,"name: Issues Similarity Analysis

on:
  issues:
    types: [opened, edited]

jobs:
  similarity-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: analysis
        uses: actions-cool/issues-similarity-analysis@v1
        with:
          filter-threshold: 0.5
          title-excludes: \'bug, not, 1234\'
          comment-title: \'### See\'
          comment-body: \'${index}. ${similarity} #${number}\'

  ""similar-issues"": [
    { ""number"": 6, ""title"": ""bug 2"", ""similarity"": 1 },
    { ""number"": 10, ""title"": ""bug"", ""similarity"": 0.85 },
    { ""number"": 8, ""title"": ""bug"", ""similarity"": 0.85 }
  ],
  ""similar-issues-found"": ""true"",
  ""similar-issues-number"": ""6,10,8""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
916,"jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      # Use token in next steps
      - uses: \'any other action\'
        with:
          # Use app token in outpus of the \'generate_token\' step
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.BOT_TOKEN }}
        env:
          # Use app name in outpus of the \'generate_token\' step
          GIT_AUTHOR_NAME: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ steps.generate_token.outputs.BOT_NAME }}[bot]@users.noreply.github.com

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      # Use token in next steps
      - uses: \'any other action\'
        with:
          # Use app token in the environment variable named ""BOT_TOKEN""
          GITHUB_TOKEN: ${{ env.BOT_TOKEN }}
        env:
          # Use app name in the environment variable named ""BOT_NAME""
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com



jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          # Specify true to save app token and app slug into the secrets of current repository
          secret: true
          # Specify true to clean saved secrets when workflow run completed
          clean: true
      - uses: \'any other action\'
        with:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        env:
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}[bot]
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_NAME }}[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}[bot]
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_NAME }}[bot]@users.noreply.github.com
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
917,"name: Update Dockerfiles

on:
  schedule:
    - cron:  \'40 16 * * *\'
jobs:
  deploy:
    name: Update Dockerfiles
    runs-on: ubuntu-latest
    steps:
      - name: \xf0\x9f\x93\xa5 Checkout the repository
        uses: actions/checkout@v2

      - name: \xf0\x9f\x93\xa4 Update Dockerfiles
        uses: ludeeus/dockerfile-updater@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
918,"<!--START_SECTION:buy-me-a-coffee-->
<!--END_SECTION:buy-me-a-coffe-->

name: Buy Me A Coffee Readme
on:
  workflow_dispatch:
  schedule:
    # Runs at every 12AM UTC
    - cron: ""0 0 * * *""
jobs:
  bmac-readme:
    name: Update Buy Me A Coffee section in this repo\'s README
    runs-on: ubuntu-latest
    steps:
      - uses: akosbalasko/coffee-readme@main
        with:
          BUY_ME_A_COFFEE_TOKEN: ${{ secrets.BUY_ME_A_COFFEE_TOKEN }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN }}
","[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
919,"name: NPM Lockfile Changes
on: [pull_request]

jobs:
  lockfile_changes:
    runs-on: ubuntu-latest
    # Permission overwrite is required for Dependabot PRs, see ""Common issues"" below.
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NPM Lockfile Changes
        uses: codepunkt/npm-lockfile-changes@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Optional inputs, can be deleted safely if you are happy with default values.
          collapsibleThreshold: 25
          failOnDowngrade: false
          path: package-lock.json
          updateComment: true

jobs:
  ...:
    runs-on: ...
    #####
    permissions:
      pull-requests: write
    #####
    steps: ...
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
920,"name: Generate action docs
on:
  - pull_request
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Update README.md from action.yml
      uses: Dirrk/action-docs@v1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
921,"- name: Install cargo-hack from crates.io
  uses: baptiste0928/cargo-install@v2
  with:
    crate: cargo-hack
    version: ""^0.5""  # You can specify any semver range

- name: Install cargo-sort from git
  uses: baptiste0928/cargo-install@v2
  with:
    crate: cargo-sort
    git: https://github.com/devinr528/cargo-sort
    tag: v1.0.9  # `branch` and `commit` are also supported

- name: Run cargo hack
  run: cargo hack --version

cargo-install-<crate>-<version or commit>-<hash>
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
922,"- name: S3 Sync
  uses: giboow/action-aws-cli@v1
  with:
    args: s3 sync --delete --acl public-read localdir/ s3://remote-bucket/
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ""eu-west-3""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
923,"- name: Run utilities
  id: utils
  uses: SchoofsKelvin/event-utilities@v1
  with:
    artifact_prefix: ""my-extension""
    artifact_extension: ""vsix""
    append_sha: true
- name: Build extension
  run: vsce package -o ${{ steps.utils.outputs.artifact_name }}
- name: Upload a Build Artifact
  uses: actions/upload-artifact@v2.2.1
  with:
    name: ${{ steps.utils.outputs.artifact_name }}
    path: ${{ steps.utils.outputs.artifact_name }}
    if-no-files-found: error
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
924,"jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        id: generate_token
        uses: jarylc/github-app-token@v3.0.1
        with:
          app: ${{ secrets.GH_APP_NAME }}
          key: ${{ secrets.GH_APP_KEY }}
          # Optional (defaults to the current owner)
          # owner: jarylc
      - name: Use Token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo ""The generated token is masked: ${TOKEN}""
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
925,"  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: [ 14, 16, 18 ]
      fail-fast: false
    steps:

  test:
    needs: get-lts
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: ${{ fromJson(needs.get-lts.outputs.lts) }}
      fail-fast: false
    steps:
  get-lts:
    runs-on: ubuntu-latest
    steps:
      - id: get
        uses: msimerson/node-lts-versions@v1
    outputs:
      active: ${{ steps.get.outputs.active }}
      lts: ${{ steps.get.outputs.lts }}
      min: ${{ steps.get.outputs.min }}

\xe2\x9c\x97 node main.js
::setOutput name=active::[""14"",""16"",""18""]
::setOutput name=lts::[""16"",""18""]
::setOutput name=min::""16""

const ltsv = require(\'node-lts-versions\')
ltsv.fetch().then(() => {
    console.log(ltsv.json())
    console.log(ltsv.yaml())
    ltsv.print()
})

[""14"",""16"",""18""]

[ \'14\', \'16\', \'18\' ]

> Ver Codename  Latest Release      LTS Period
14  Fermium   v14.19.3  2022-05-17  2020-10-27 to 2023-04-26
16  Gallium   v16.15.0  2022-04-26  2021-10-26 to 2024-04-25
18  Hydrogen  v18.12.0  2022-10-25  2022-04-18 to 2024-10-17
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
926,"name: auto-merge

on:
  pull_request:

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          target: minor
          github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      target: patch
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      target: minor
      github-token: ${{ secrets.mytoken }}

steps:
  - uses: actions/checkout@v2
  - uses: ahmadnassri/action-dependabot-auto-merge@v2
    with:
      github-token: ${{ secrets.mytoken }}

- match:
    dependency_type: all
    update_type: ""semver:minor"" # includes patch updates!

- match:
    dependency_name: aws-sdk
    update_type: semver:minor

- match:
    dependency_type: development
    update_type: semver:minor # includes patch updates!

- match:
    dependency_type: production
    update_type: security:minor # includes patch updates!

- match:
    dependency_type: production
    update_type: semver:patch

- match:
    dependency_type: all
    update_type: semver:${TARGET}
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
927,"- uses: jetli/wasm-pack-action@v0.4.0
  with:
    # Optional version of wasm-pack to install(eg. \'v0.9.1\', \'latest\')
    version: \'latest\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
928,"name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://example.com/
            https://example.com/blog
          budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

[
  {
    ""path"": ""/*"",
    ""resourceSizes"": [
      {
        ""resourceType"": ""document"",
        ""budget"": 18
      },
      {
        ""resourceType"": ""total"",
        ""budget"": 200
      }
    ]
  }
]

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://exterkamp.codes/\'
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""assert"": {
      ""assertions"": {
        ""first-contentful-paint"": [""error"", { ""minScore"": 0.6 }]
      }
    }
  }
}

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls and upload data to private lhci server
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://example.com/\'
          serverBaseUrl: ${{ secrets.LHCI_SERVER_URL }}
          serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}

name: Lighthouse
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse on urls with lighthouserc
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: \'https://example.com/\'
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""collect"": {
      ""numberOfRuns"": 1,
      ""settings"": {
        ""chromeFlags"": ""--disable-gpu --no-sandbox --no-zygote""
      }
    }
  }
}

{
  ""ci"": {
    ""collect"": {
      ""numberOfRuns"": 1,
      ""settings"": {
        ""configPath"": ""./lighthouse-config.js""
      }
    }
  }
}

module.exports = {
  extends: \'lighthouse:default\',
  settings: {
    emulatedFormFactor: \'desktop\',
    audits: [{ path: \'metrics/first-contentful-paint\', options: { scorePODR: 800, scoreMedian: 1600 } }],
  },
}

name: Lighthouse
on: push
jobs:
  static-dist-dir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse against a static dist dir
        uses: treosh/lighthouse-ci-action@v10
        with:
          # no urls needed, since it uses local folder to scan .html files
          configPath: \'./lighthouserc.json\'

{
  ""ci"": {
    ""collect"": {
      ""staticDistDir"": ""./dist""
    }
  }
}

name: Lighthouse CI for Netlify sites
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Wait for the Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1.4
        id: netlify
        with:
          site_name: \'gallant-panini-bc8593\'
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.netlify.outputs.url }}
            ${{ steps.netlify.outputs.url }}/products/
          budgetPath: ./budget.json
          uploadArtifacts: true

name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Lighthouse and test budgets
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://pr-$PR_NUMBER.staging-example.com/
            https://pr-$PR_NUMBER.staging-example.com/blog
          budgetPath: ./budgets.json
          temporaryPublicStorage: true
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

name: Lighthouse CI with a plugin
on: push
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install # install dependencies, that includes Lighthouse plugins
      - name: Audit URLs with Field Performance Plugin
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://www.example.com/
          configPath: \'.lighthouserc.json\'
          temporaryPublicStorage: true

{
  ""ci"": {
    ""collect"": {
      ""settings"": {
        ""plugins"": [""lighthouse-plugin-field-performance""]
      }
    }
  }
}

{
  ""devDependencies"": {
    ""lighthouse-plugin-field-performance"": ""^2.0.1""
  }
}

# Example of output usage
name: LHCI-output-webhook
on: push
jobs:
  output-webhook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use output for sending data to API.
        id: LHCIAction
        uses: ./
        with:
          urls: |
            https://treo.sh/
      - name: Webhook
          uses: denar90/webhook-action@0.1.1
          with:
            webhookUrl: ${{secrets.ACTION_WEBHOOK_URL}}
            data: \'{ ""links"": ${{steps.LHCIAction.outputs.links}}, ""manifest"": ${{steps.LHCIAction.outputs.manifest}} }\'

name: Lighthouse CI
on: push
jobs:
  lighthouse:
    runs-on: [self-hosted, your-custom-label]
    steps:
      - uses: actions/checkout@v3
      - name: install Node.js

      - uses: browser-actions/setup-chrome@latest

      - run: chrome --version
        uses: actions/setup-node@v3
        with:
          node-version: ${{YOUR_REQUIRED_NODE_JS_VERSION}}

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://example.com/
            https://example.com/blog
        [...]


jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate URLs
        id: urls
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const globber = await glob.create(\'elements/*/demo/*.html\');
            const files = await globber.glob();
            const urls = files
              .map(x => x.match(/([\\w-]+)/)[1])
              .map(x => `${${{ env.DOMAIN }}}/components/${x}/demo/`)
              .join(\'\
\');
            core.setOutput(\'urls\', urls);

      - name: Lighthouse CI Action
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v8
        with:
          urls: |
            ${{ steps.urls.outputs.urls }}


urls: |
  https://example.com/
  https://example.com/blog
  https://example.com/pricing

uploadArtifacts: true

temporaryPublicStorage: true

budgetPath: ./budget.json

runs: 3

configPath: ./lighthouserc.json

serverBaseUrl: ${{ secrets.LHCI_SERVER_BASE_URL }}
serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}

basicAuthUsername: ${{ secrets.LHCI_SERVER_BASIC_AUTH_USERNAME }}
basicAuthPassword: ${{ secrets.LHCI_SERVER_BASIC_AUTH_PASSWORD }}

/Users/lighthouse-ci-action/.lighthouseci

{
  \'https://treo.sh/\': \'https://storage.googleapis.com/lighthouse-infrastructure.appspot.com/reports/1593981455963-59854.report.html\'
  ...
}

[
  {
    name: \'maxNumericValue\',
    expected: 61440,
    actual: 508455,
    values: [508455],
    operator: \'<=\',
    passed: false,
    auditProperty: \'total.size\',
    auditId: \'resource-summary\',
    level: \'error\',
    url: \'https://treo.sh/\',
    auditTitle: \'Keep request counts low and transfer sizes small\',
    auditDocumentationLink: \'https://developers.google.com/web/tools/lighthouse/audits/budgets\',
  },
  ...
]

[
  {
    ""url"": ""https://treo.sh/"",
    ""isRepresentativeRun"": true,
    ""htmlPath"": ""/Users/lighthouse-ci-action/.lighthouseci/treo_sh-_-2020_07_05_20_37_18.report.html"",
    ""jsonPath"": ""/Users/lighthouse-ci-action/.lighthouseci/treo_sh-_-2020_07_05_20_37_18.report.json"",
    ""summary"": { ""performance"": 0.99, ""accessibility"": 0.98, ""best-practices"": 1, ""seo"": 0.96, ""pwa"": 0.71 }
  }
]
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
929,"name: Changeset
on:
  pull_request:
    types: [labeled]
jobs:
  changeset:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changeset
        uses: generates/changeset-action@v3.0.0
      - name: Commit Changes
        uses: generates/commit-action@v1.0.1
        with:
          token: ${{ secrets.GH_PAT }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
930,"npx is-website-vulnerable https://example.com [--json] [--js-lib] [--mobile|--desktop] [--chromePath] [--cookie] [--token]

$ npx is-website-vulnerable
Woops! You forgot to provide a URL of a website to scan.
? Please provide a URL to scan: \xe2\x80\xba https://example.com
...

# Clone Repo:
git clone https://github.com/lirantal/is-website-vulnerable.git

# Change to repo\'s cloned directory:
cd is-website-vulnerable

# Build Image locally:
docker build --no-cache -t lirantal/is-website-vulnerable:latest .

# Run container:
docker run --rm -e SCAN_URL=""https://www.google.com/"" lirantal/is-website-vulnerable:latest

docker run --rm lirantal/is-website-vulnerable:latest https://www.google.com --json

name: Test site for publicly known js vulnerabilities

on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Test for public javascript library vulnerabilities 
        uses: lirantal/is-website-vulnerable@main
        with:
          scan-url: ""https://yoursite.com""

npm install -g is-website-vulnerable
","[0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
931,"#
# Cleans up a GitHub PR
#
name: \xf0\x9f\xa7\xbc Clean up environment
on:
pull_request:
  types:
    - closed
jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      # Points to a recent commit instead of `main` to avoid supply chain attacks. (The latest tag is very old.)
      - name: \xf0\x9f\x8e\x9f Get GitHub App token
        uses: navikt/github-app-token-generator@a3831f44404199df32d8f39f7c0ad9bb8fa18b1c
        id: get-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: \xf0\x9f\x97\x91 Delete deployment environment
        uses: strumwolf/delete-deployment-environment@v2.2.3
        with:
          # Use a JWT created with your GitHub App\'s private key
          token: ${{ steps.get-token.outputs.token }}
          environment: pr-${{ github.event.number }}
          ref: ${{ github.ref_name }}

name: Delete Environment (default settings)

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          # \xe2\x9a\xa0\xef\xb8\x8f The provided token needs permission for admin write:org
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name

name: Delete Deployments

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          onlyRemoveDeployments: true

name: Delete Deployments Ref

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          ref: my-branch
          onlyRemoveDeployments: true

name: Set deployements to inactive

on:
  delete:
    branches-ignore:
      - main

jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: my-environment-name
          onlyDeactivateDeployments: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
932,"
name: Has label

on:
 pull_request:
  types:
    - opened
    - synchronize
    - labeled
    - unlabeled
  branches:
    - main

jobs:
 haslabel:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2
    - name: Labeled to preview
      id: haslabel
      uses: DanielTamkin/HasLabel@v1.0.4
      with:
        contains: \'preview\'
    - name: Test action
      if: steps.haslabel.outputs.labeled-preview
      run: echo \'This pull_request has this label.\'
    - name: Test action ""no match""
      if: steps.haslabel.outputs.labeled-preview != \'true\'
      run: echo \'This pull_request does not have this label.\'
    - name: Test action ""unlabeled""
      if: steps.haslabel.outputs.unlabeled
      run: echo \'This pull_request had this label removed.\'




with:
  contains: \'label\' # a label contains this string
  exact: \'label\'    # a label contains exactly this string.


  - name: Test action ""no match""
    if: steps.haslabel.outputs.labeled-preview
    run: echo \'Handle a unlabeled event\'

  - name: Test action ""no match""
    if: steps.haslabel.outputs.unlabeled-preview
    run: echo \'Handle a unlabeled event\'

name: Preview

on:
 pull_request:
  types:
    - opened
    - synchronize
    - labeled
    - unlabeled
  branches:
    - master

jobs:
  haslabel:
    name: analyse labels
    runs-on: ubuntu-latest
    outputs:
      preview: ${{ steps.haslabel.outputs.labeled-preview }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Labeled to preview
        id: haslabel
        uses: DanielTamkin/HasLabel@v1.0.4
        with:
          contains: \'preview\'
  deploy:
    name: deploy
    needs: haslabel
    if: needs.haslabel.outputs.preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
933,"name: Add Label
on:
  pull_request:
    branches:
      - master
    types:
      - opened

jobs:
  add-label:
    name: Add Label
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: christianvuerings/add-labels@v1
        with:
          labels: |
            minor release
            bug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

npm i
npm i -g @zeit/ncc
ncc build index.js
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
934,"name: Release

on:
  push:
    tags:
      - ""*""

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: match-tag-to-package-version
        id: match-tag-to-package-version
        uses: geritol/match-tag-to-package-version@0.2.0
        with:
          TAG_PREFIX: v # Optional, default prefix is """"
          # TAG_PREFIX may also be defined under the \'env\' key.
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
935,"name: Deploy the static file to GitHub Page
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: deploy docs
      uses: ./
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        remote_url: https://github.com/appleboy/gh-pages-action.git

 D Dockerfile
 D LICENSE
 D README.md
 D action.yml
 D docs/index.html
 D entrypoint.sh
?? index.html
+ git add .
+ git commit -m commit 6b0497a3b6f0f975c605c28950dbe15dedf4e8f0
Author: Bo-Yi Wu <***.tw@gmail.com>
Date:   Sat Mar 7 20:25:50 2020 +0800

    chore: update

[gh-pages f156e8c] commit 6b0497a3b6f0f975c605c28950dbe15dedf4e8f0 Author: Bo-Yi Wu <***.tw@gmail.com> Date:   Sat Mar 7 20:25:50 2020 +0800
 7 files changed, 94 deletions(-)
 delete mode 100644 .github/workflows/ci.yml
 delete mode 100644 Dockerfile
 delete mode 100644 LICENSE
 delete mode 100644 README.md
 delete mode 100644 action.yml
 delete mode 100755 entrypoint.sh
 rename docs/index.html => index.html (100%)
+ git push origin HEAD:gh-pages
To https://github.com/***/gh-pages-action.git
   bd265c2..f156e8c  HEAD -> gh-pages

- name: deploy to target directory
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    target_directory: 2020

- name: exclude list
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    target_directory: ignore
    exclude: ignore.html

- name: deploy to target directory
  uses: ./
  with:
    username: ${{ secrets.USERNAME }}
    password: ${{ secrets.PASSWORD }}
    remote_url: https://github.com/appleboy/gh-pages-action.git
    commit_author: foo
    commit_author_email: bar@foobar.com
    target_directory: 2020
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
936,"name: Release Scheduler
on:
  schedule:
    - cron: ""0 0 * * 1""
jobs:
  releaseScheduler:
    runs-on: ubuntu-latest
    steps:
      - name: Run release-scheduler
        uses: koj-co/release-scheduler@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
937,"- name: Download an image
  uses: ishworkh/container-image-artifact-download@v1.0.0
  with:
    image: ""test_image:latest""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""


...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
        workflow_run_id: ""234343434234234""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
        workflow_event: ""dispatch_workflow""
        branch: ""main""
        commit_sha: ""8471d40bfc4d0abc8409ba9391bb592bd0f1deb4""
        workflow_conclusion: ""success""

...
jobs:
  download_image:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v2.0.1
      with:
        image: ""test_image:latest""
        repository: ""owner/my-repo""
        workflow: ""Some Another Workflow""
        token: ""secrettoken""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
938,"- uses: lra/setup-kubeval@v1
- run: kubeval some.yaml

- uses: lra/setup-kubeval@v1
  with:
    version: 0.15.0
- run: cat some.yaml | kubeval
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
939,"name: PR Welcome

on:
  pull_request_target:
    types: [opened, edited, reopened]

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions-cool/pr-welcome@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          refuse-issue-label: 'xxx'
          need-creator-authority: 'write'
          comment: |
            HI ~

            \xe4\xbd\xa0\xe5\xa5\xbd~
          emoji: '+1, -1, heart'
          reviewers: 'user1, user2'
          review-creator: false
          close: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
940,"name: CI Notice

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@main

      - uses: actions-cool/ci-notice@v1
        with:
          ci: |
            npm install
            npm run build
          notice-types: 'dingding, issue'
          dingding-token: ${{ secrets.DINGDING_TOKEN }}
          issue-labels: 'x1, x2'
          issue-assignees: 'people1, people2'
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
941,"- name: \xf0\x9f\x91\xb7 Setup Home Assistant
  id: homeassistant
  uses: ludeeus/setup-homeassistant@main

name: home-assistant-check

on:
  pull_request:
    branches: 
    - main
  push:
    branches: 
    - main

jobs:
  check:
    name: With config-dir
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - stable
          - beta
          - dev
    steps:
      - name: \xf0\x9f\x93\xa5 Check out the repository
        uses: actions/checkout@v2

      - name: \xf0\x9f\x91\xb7 Setup Home Assistant
        id: homeassistant
        uses: ludeeus/setup-homeassistant@main
        with:
          tag: ${{ matrix.channel }}
          config-dir: test_configuration

      - name: \xe2\x9c\x85 Verify API Access
        run: | 
          curl -sSL -f -X GET \\
            -H ""Authorization: Bearer ${{ steps.homeassistant.outputs.token }}"" \\
            -H ""Content-Type: application/json"" \\
            ${{ steps.homeassistant.outputs.url }}/api/states

      - name: \xf0\x9f\x93\x9c Get logs
        run: docker logs ${{ steps.homeassistant.outputs.containername }}

uses: ludeeus/setup-homeassistant@xx.xx.x
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
942,"name: Triage
on: 
  issues:
    types: [opened, closed, milestoned, demilestoned]
  project_card:
    types: [created, deleted]
    
jobs:
  build:
    name: Triage
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/triage-action@0.0.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

name: Triage
on: 
  issues: 
    types: [opened, closed, milestoned, demilestoned] # The last two are not needed if milestone is set to false
  project_card: # Not needed if project is set to false
    types: [created, deleted]
    
jobs:
  build:
    name: Triage
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/triage-action@0.0.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # The `GITHUB_TOKEN` secret.
        label: triage # The triage label of your repository.
        project: true # Enable or disable the idea that adding an issue to a project drops its triage state.
        milestone: true # Enable or disable the idea that setting a milestone to an issue drops its triage state.
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
943,"name: Close
on: 
  pull_request:
    types: [closed]
    
jobs:
  build:
    name: Close
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/close-action@0.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

name: Close
on: 
  pull_request:
    types: [closed]
    
jobs:
  build:
    name: Close
    runs-on: ubuntu-16.04
    steps:
    - uses: Logerfo/close-action@0.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # The `GITHUB_TOKEN` secret.
        comment: true # If `true`, will comment on the closing issue(s).
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
944,"name: Issue Autoresponse

on:
  issues:
    types: [opened]

jobs:
  auto-response:
    runs-on: ubuntu-latest

    steps:
    - uses: derekprior/add-autoresponse@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        respondableId: ${{ github.event.issue.node_id }}
        response: ""Maintenance Mode!""
        author: ${{ github.event.issue.user.login }}
        exemptedAuthors: ""johnsmith, janedoe""

  
name: Auto message on pr merge

on:
  pull_request_target:
    types: [closed]

jobs:
  auto-response:
    runs-on: ubuntu-latest

    steps:
    - uses: derekprior/add-autoresponse@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        respondableId: ${{ github.event.pull_request.node_id }}
        response: ""Well Done !! Thank you @${{ github.event.pull_request.user.login }} for your contribution :)""
        author: ${{ github.event.pull_request.user.login }}
        exemptedAuthors: ""johnsmith, janedoe""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
945,"- uses: undergroundwires/bump-everywhere@master
  with:
    # Repository name with owner to bump & release. For example, undergroundwires/bump-everywhere
    # (Optional) Default: ${{ github.repository  }}
    repository: \'\'

    # Name of the user who will do the bump commit
    # (Optional) Default: ${{ github.actor }}
    user: \'\'

    # Commit message that will be used in the bump commit
    # (Optional) Default: \xe2\xac\x86\xef\xb8\x8f bump everywhere to {{version}}
    commit-message: \'\'

    # Personal access token (PAT) used to clone & push to the repository.
    # If you use default, it\'ll not trigger other actions, but your own PAT then it triggers new actions
    # (Optional) Default: ${{ github.token }}
    git-token: \'\'

    # The type of the GitHub release
    # Options: \'release\' | \'prerelease\' | \'draft\' | \'none\' (does not release)
    # (Optional) Default: \'release\'
    release-type: \'\'

    # Personal access token (PAT) used to release to GitHub.
    # Used only if release-type is not ""none""
    # If you use default, it\'ll not trigger other actions, but your own PAT then it triggers new actions
    # (Optional) Default: ${{ github.token }}
    release-token: \'\'

    # Git branch to push the changes such as version tags, CHANGELOG file, version changes...
    # Configuring this should not be needed for most use-cases.
    # Use this only if you DO NOT use a single main default branch (e.g. `master` or `main`).
    # (Optional) Default: Default ""git clone"" behavior. Checks out to default branch of remote.
    branch: \'\'

  args=(
    # Required:
    --repository ""undergroundwires/privacy.sexy""
    --user ""bot-user""
    --git-token ""GitHub PAT for pushes""
    --release-type ""prerelease""
    --release-token ""GitHub PAT for releases""
    --commit-message ""\xe2\xac\x86\xef\xb8\x8f bump to {{version}}""
    # Optional:
    --branch \'custom branch name\'
  )
  docker run undergroundwires/bump-everywhere ""${args[@]}""

  git commit -m ""bumped version to 1.4.0"" --allow-empty
  git tag 1.4.0
  git push && git push origin 1.4.0

[![Auto-versioned by bump-everywhere](https://github.com/undergroundwires/bump-everywhere/blob/master/badge.svg?raw=true)](https://github.com/undergroundwires/bump-everywhere)
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
946,"name: Mirror to Gitopia

on:
  push:
    branches:
      - \'**\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Push to Gitopia mirror
        uses: gitopia/gitopia-mirror-action@v0.5.0
        with:
          gitopiaWallet: ""${{ secrets.GITOPIA_WALLET }}""
          remoteUrl: ""gitopia://gitopia10j4ryjjna69hvsrahgvhwjv3dd46tt6xuprguq/gitopia-mirror-action""

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
947,"name: Deploy
on: push
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: discord
      uses: sebastianpopp/discord-action@releases/v2
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: ${{ github.repository }} has been successfullly deployed.
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
948,"name: Update Browserslist database

on:
  schedule:
    - cron: \'0 2 1,15 * *\'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-browserslist-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure git
        run: |
          git config --global user.email ""action@github.com""
          git config --global user.name ""GitHub Action""
      - name: Update Browserslist database and create PR if applies
        uses: c2corg/browserslist-update-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: browserslist-update
          base_branch: main
          commit_message: \'build: update Browserslist db\'
          title: \'build: update Browserslist db\'
          body: Auto-generated by [browserslist-update-action](https://github.com/c2corg/browserslist-update-action/)
          labels: \'chores, github action\'

npm run lint
npm run build
npm run pack

npm run all
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
949,"$ mobsfscan
usage: mobsfscan [-h] [--json] [--sarif] [--sonarqube] [--html] [--type {android,ios,auto}] [-o OUTPUT] [-c CONFIG] [-w] [--no-fail] [-v] [path ...]

positional arguments:
  path                  Path can be file(s) or directories with source code

optional arguments:
  -h, --help            show this help message and exit
  --json                set output format as JSON
  --sarif               set output format as SARIF 2.1.0
  --sonarqube           set output format compatible with SonarQube
  --html                set output format as HTML
  --type {android,ios,auto}
                        optional: force android or ios rules explicitly
  -o OUTPUT, --output OUTPUT
                        output filename to save the result
  -c CONFIG, --config CONFIG
                        location to .mobsf config file
  -w, --exit-warning    non zero exit code on warning
  --no-fail             force zero exit code, takes precedence over --exit-warning
  -v, --version         show mobsfscan version

$ mobsfscan tests/assets/src/
- Pattern Match \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 3
- Semantic Grep \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88 37

mobsfscan: v0.3.0 | Ajin Abraham | opensecurity.in
\xe2\x95\x92\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa4\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x95
\xe2\x94\x82 RULE ID      \xe2\x94\x82 android_webview_ignore_ssl                                                                                                                             \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 DESCRIPTION  \xe2\x94\x82 Insecure WebView Implementation. WebView ignores SSL Certificate errors and accept any SSL Certificate. This application is vulnerable to MITM attacks \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 TYPE         \xe2\x94\x82 RegexAnd                                                                                                                                               \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 PATTERN      \xe2\x94\x82 [\'onReceivedSslError\\\\(WebView\', \'\\\\.proceed\\\\(\\\\);\']                                                                                                  \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 SEVERITY     \xe2\x94\x82 ERROR                                                                                                                                                   \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 INPUTCASE    \xe2\x94\x82 exact                                                                                                                                                  \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 CVSS         \xe2\x94\x82 7.4                                                                                                                                                    \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 CWE          \xe2\x94\x82 CWE-295 Improper Certificate Validation                                                                                                                \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 OWASP-MOBILE \xe2\x94\x82 M3: Insecure Communication                                                                                                                             \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 MASVS        \xe2\x94\x82 MSTG-NETWORK-3                                                                                                                                         \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 REF          \xe2\x94\x82 https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#webview-server-certificate-verification                \xe2\x94\x82
\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4
\xe2\x94\x82 FILES        \xe2\x94\x82 \xe2\x95\x92\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa4\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x95                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 File           \xe2\x94\x82 ../test_files/android_src/app/src/main/java/opensecurity/webviewignoressl/MainActivity.java \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match Position \xe2\x94\x82 1480 - 1491                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Line Number(s) \xe2\x94\x82 50                                                                                          \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match String   \xe2\x94\x82 .proceed();                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 File           \xe2\x94\x82 ../test_files/android_src/app/src/main/java/opensecurity/webviewignoressl/MainActivity.java \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match Position \xe2\x94\x82 1331 - 1357                                                                                 \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Line Number(s) \xe2\x94\x82 46                                                                                          \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xbc\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\xa4                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x94\x82 Match String   \xe2\x94\x82 onReceivedSslError(WebView                                                                  \xe2\x94\x82                                       \xe2\x94\x82
\xe2\x94\x82              \xe2\x94\x82 \xe2\x95\x98\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa7\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9b                                       \xe2\x94\x82
\xe2\x95\x98\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\xa7\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9b

>>> from mobsfscan.mobsfscan import MobSFScan
>>> src = \'tests/assets/src/java/java_vuln.java\'
>>> scanner = MobSFScan([src], json=True)
>>> scanner.scan()
{
    \'results\': {
        \'android_logging\': {
            \'files\': [{
                \'file_path\': \'tests/assets/src/java/java_vuln.java\',
                \'match_position\': (13, 73),
                \'match_lines\': (19, 19),
                \'match_string\': \'            Log.d(""htbridge"", ""getAllRecords(): "" + records.toString());\'
            }],
            \'metadata\': {
                \'cwe\': \'CWE-532 Insertion of Sensitive Information into Log File\',
                \'owasp-mobile\': \'M1: Improper Platform Usage\',
                \'masvs\': \'MSTG-STORAGE-3\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#logs\',
                \'description\': \'The App logs information. Please ensure that sensitive information is never logged.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_certificate_pinning\': {
            \'metadata\': {
                \'cwe\': \'CWE-295 Improper Certificate Validation\',
                \'owasp-mobile\': \'M3: Insecure Communication\',
                \'masvs\': \'MSTG-NETWORK-4\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05g-Testing-Network-Communication.md#testing-custom-certificate-stores-and-certificate-pinning-mstg-network-4\',
                \'description\': \'This App does not use TLS/SSL certificate or public key pinning to detect or prevent MITM attacks in secure communication channel.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_root_detection\': {
            \'metadata\': {
                \'cwe\': \'CWE-919 - Weaknesses in Mobile Applications\',
                \'owasp-mobile\': \'M8: Code Tampering\',
                \'masvs\': \'MSTG-RESILIENCE-1\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1\',
                \'description\': \'This App does not have root detection capabilities. Running a sensitive application on a rooted device questions the device integrity and affects users data.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_prevent_screenshot\': {
            \'metadata\': {
                \'cwe\': \'CWE-200 Information Exposure\',
                \'owasp-mobile\': \'M2: Insecure Data Storage\',
                \'masvs\': \'MSTG-STORAGE-9\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9\',
                \'description\': \'This App does not have capabilities to prevent against Screenshots from Recent Task History/ Now On Tap etc.\',
                \'severity\': \'INFO\'
            }
        },
        \'android_safetynet_api\': {
            \'metadata\': {
                \'cwe\': \'CWE-353 Missing Support for Integrity Check\',
                \'owasp-mobile\': \'M8: Code Tampering\',
                \'masvs\': \'MSTG-RESILIENCE-1\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-root-detection-mstg-resilience-1\',
                \'description\': ""This App does not uses SafetyNet Attestation API that provides cryptographically-signed attestation, assessing the device\'s integrity. This check helps to ensure that the servers are interacting with the genuine app running on a genuine Android device. "",
                \'severity\': \'INFO\'
            }
        },
        \'android_detect_tapjacking\': {
            \'metadata\': {
                \'cwe\': \'CWE-200 Information Exposure\',
                \'owasp-mobile\': \'M1: Improper Platform Usage\',
                \'masvs\': \'MSTG-PLATFORM-9\',
                \'reference\': \'https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05h-Testing-Platform-Interaction.md#testing-for-overlay-attacks-mstg-platform-9\',
                \'description\': ""This app does not has capabilities to prevent tapjacking attacks. An attacker can hijack the user\'s taps and tricks him into performing some critical operations that he did not intend to."",
                \'severity\': \'INFO\'
            }
        }
    },
    \'errors\': []
}

---
- ignore-filenames:
  - skip.java

  ignore-paths:
  - __MACOSX
  - skip_dir

  ignore-rules:
  - android_kotlin_logging
  - android_safetynet_api
  - android_prevent_screenshot
  - android_detect_tapjacking
  - android_certificate_pinning
  - android_root_detection
  - android_certificate_transparency

  severity-filter:
  - WARNING
  - ERROR

String password = ""strong password""; // mobsf-ignore: hardcoded_password

name: mobsfscan

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: mobsfscan
      uses: MobSF/mobsfscan@main
      with:
        args: \'. --json\'

name: mobsfscan sarif
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  mobsfscan:
    runs-on: ubuntu-latest
    name: mobsfscan code scanning
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: mobsfscan
      uses: MobSF/mobsfscan@main
      with:
        args: \'. --sarif --output results.sarif || true\'
    - name: Upload mobsfscan report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif

stages:
    - test
mobsfscan:
    image: python
    before_script:
        - pip3 install --upgrade mobsfscan
    script:
        - mobsfscan .

language: python
install:
    - pip3 install --upgrade mobsfscan
script:
    - mobsfscan .

version: 2.1
jobs:
  mobsfscan:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - run:
          name: Install mobsfscan
          command: pip install --upgrade mobsfscan
      - run:
           name: mobsfscan check
           command: mobsfscan .

docker pull opensecurity/mobsfscan
docker run -v /path-to-source-dir:/src opensecurity/mobsfscan /src

docker build -t mobsfscan .
docker run -v /path-to-source-dir:/src mobsfscan /src
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0)
950,"name: notify-release
on:
  workflow_dispatch:
  release:
    types: [published]
  issues:
    types: [closed]
  schedule:
    - cron: '30 8 * * *'
jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Notify release
        uses: nearform-actions/github-action-notify-release@v1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
951,"name: 'Gitbook Action Build'
on:
  push:
    branches:
      - master  # trigger branch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout action
      uses: actions/checkout@v2
    - name: Gitbook Action           # https://github.com/ZanderZhao/gitbook-action/releases
      uses: ZanderZhao/gitbook-action@v1.2.4  # -> or ZanderZhao/gitbook-action@master.  If not use master click above, use latest please 
      with:                                   #    or fork this repo and use YourName/gitbook-action@master
        token: ${{ secrets.PERSONAL_TOKEN }}  # -> remember add this in settings/secrets as following

# for global
time_zone
git_name
git_email

# for source
source_repo
source_branch
source_dir
source_edit_time
source_token
source_git_name
source_hub

# for publish
publish_repo
publish_commit_message
publish_hub
publish_branch
publish_dir
publish_commit_history
publish_cname
publish_push_force
publish_token
publish_git_name
publish_git_email
publish_remove_last_build

# for gitbook
gitbook_cli_version
gitbook_version
gitbook_pdf
gitbook_pdf_dir
gitbook_pdf_name
gitbook_epub
gitbook_epub_dir
gitbook_epub_name
gitbook_mobi
gitbook_mobi_dir
gitbook_mobi_name
font_install
not_clean
prepare_install

# for source2
source2_repo
source2_git_name
source2_token
source2_hub
source2_branch
source2_dir
source2_edit_time

# for publish2
publish2_repo
publish2_git_name
publish2_token
publish2_git_email
publish2_commit_message
publish2_hub
publish2_branch
publish2_commit_history
publish2_dir
publish2_cname
publish2_push_force
publish2_remove_last_build

# for publish3
publish3_repo
publish3_git_name
publish3_token
publish3_git_email
publish3_commit_message
publish3_hub
publish3_branch
publish3_commit_history
publish3_dir
publish3_cname
publish3_push_force
publish3_remove_last_build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
952,"    \xe2\x94\x8c\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90      \xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97
    \xe2\x94\x82 v1 \xe2\x94\x82      \xe2\x95\x91 v2 \xe2\x95\x91           # Release Notes
    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98      \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d
       \xe2\x94\x82           \xe2\x94\x82     \xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x96\xb6   - D
       \xe2\x96\xbc           \xe2\x96\xbc             - C
 A \xe2\x94\x80 \xe2\x94\x80 B \xe2\x94\x80 \xe2\x94\x80 C \xe2\x94\x80 \xe2\x94\x80 D

                \xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x97           # Release Notes
                \xe2\x95\x91 v1 \xe2\x95\x91
                \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d           - D
                   \xe2\x94\x82     \xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x94\x81\xe2\x96\xb6   - C
                   \xe2\x96\xbc             - B
 A \xe2\x94\x80 \xe2\x94\x80 B \xe2\x94\x80 \xe2\x94\x80 C \xe2\x94\x80 \xe2\x94\x80 D             - A

name: Test
on:
  create:
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create a release draft for a version tag
        id: create-release-draft
        uses: ecampidoglio/auto-release-draft@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print the URL of the release draft
        if: steps.create-release-draft.outputs.release-url != ''
        run: echo ${{ steps.create-release-draft.outputs.release-url }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
953,"
  \xe2\x94\x8c\xe2\x94\x80\xe2\x97\x8b\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
  \xe2\x94\x82 \xe2\x94\x82\xe2\x95\xb2  \xe2\x94\x82
  \xe2\x94\x82 \xe2\x94\x82 \xe2\x97\x8b \xe2\x94\x82
  \xe2\x94\x82 \xe2\x97\x8b \xe2\x94\x8c\xe2\x94\x80\xe2\x94\xb4\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x90
  \xe2\x94\x94\xe2\x94\x80\xe2\x96\x91\xe2\x94\x80\xe2\x94\xa4  4 github actions   \xe2\x94\x82
      \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98


name: gitleaks
on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: ""0 4 * * *"" # run once a day at 4 AM
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
954,"      - uses: snow-actions/git-config-user@v1.0.0

      - uses: snow-actions/git-config-user@v1.0.0
        with:
          name: SnowCait
          email: SnowCait@example.com
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
955,"- uses: mansona/npm-lockfile-version@v1

on: push
jobs:
  test-app:
    name: Test app
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v2

      - uses: mansona/npm-lockfile-version@v1

      - name: Test
        run: npm test
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
956,"      - name: Create zip
        uses: ihiroky/archive-action@v1
        with:
          root_dir: path_to_arhive_root_directory
          file_path: path_to_archive.zip
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
957,"name: Validate YAML Schema

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Important: This sets up your GITHUB_WORKSPACE environment variable
    - uses: actions/checkout@v2

    - name: Validate YAML Schema
      uses: ansible/ansible-lint-action@master
      with:
        files-to-validate: [
          {
            path: path/to/yaml/file/or/directory
            schema: path/to/yaml/schema
          }
        ]
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
958,"on:
  project_card:
    types: [moved]
name: Project Card Event
jobs:
  triage:
    name: Auto card labeler
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/auto-card-labeler@v2

Project name1:
  Column name1:
    - 'Status: test1'
  Column name2:
    - 'Status: test2-1'
    - 'Status: test2-2'
Project name2:
  Column name3:
    - 'Status: test1'

Project name1:
  Column name1:
    - 'Status: test1'
  Column name2:
    - 'Status: test2-1'
    - 'Status: test2-2'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
959,"steps:
  - name: Waiting for 200 from the Vercel Preview
    uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
    id: waitFor200
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
      max_timeout: 60
  # access preview url
  - run: echo ${{steps.waitFor200.outputs.url}}

npm run build
# outputs the build to dist/index.js

npm test
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
960,"- uses: actions/checkout@v2
- uses: actions/setup-node@v1

name: Publish Package

on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: flood-io/is-published-on-npm@v1
        id: is-published
      - run: npm publish
        if: ${{ steps.is-published.outputs.published == 'false' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

name: Release Package

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: flood-io/is-published-on-npm@v1
        id: is-published
      - name: Release
        if: ${{ steps.is-published.outputs.published == 'false' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.is-published.outputs.version }}
          release_name: Release ${{ steps.is-published.outputs.version }}
          draft: false
          prerelease: false
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
961,"name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ""10.x""

      - name: Build project
        run: yarn && yarn build

      - name: Upload COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: delete -r -f / && upload -r ./dist/ /
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          region: ap-shanghai
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
962,"- name: \'Generate Dashboard\'
  uses: ethomson/issue-dashboard@v1
  with:
    config: |
      title: \'Dashboard\'
      output:
        format: html
        filename: \'dashboard.html\'
      sections:
      - title: \'Pull Requests\'
        widgets:
        - type: \'table\'
          title: \'New Pull Requests (This Week)\'
          issue_query: \'repo:libgit2/libgit2 is:open is:issue created:>{{ date(""-7 days"") }} sort:created-asc\'
    token: ${{ github.token }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
963,"- uses: edgarrc/action-7z@v1
  with:
    args: 7z a -t7z -mx=9 build.7z ./build/
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
964,"jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      deployments: write

    # ...

name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    permissions:
      deployments: write

    steps:
      - uses: actions/checkout@v3

      - uses: bloodf/github-deploy-action@v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: \'${{ github.token }}\'
          environment-url: http://my-app-url.com
          environment: production # or ${{env.ENVIRONMENT}}
        # more steps below where you run your deployment scripts inside the same action

name: Deploy

on: [push]

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: bloodf/github-deploy-action@v1
        name: Create GitHub deployment
        id: deployment
        with:
          environment-url: http://my-app-url.com
          environment: production # or ${{env.ENVIRONMENT}}

      - name: Deploy my app
        run: |
          # add your deployment code here

      - name: Update deployment status (success)
        if: success()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'success\'

      - name: Update deployment status (failure)
        if: failure()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: \'failure\'
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
965,"name: Check User Permission

on:
  issues:
    types: [opened, edited]
  release:
    types: [published]


jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: skjnldsv/check-actor-permission@v2
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
966,"    steps:
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest


- uses: medyagh/setup-minikube@latest
  with:
    cache: false

name: CI
on:
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: job1
    steps:
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
      # now you can run kubectl to see the pods in the cluster
      - name: kubectl
        run: kubectl get pods -A

name: CI
on:
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: job1
    steps:
      - name: start minikube
        uses: medyagh/setup-minikube@latest
        id: minikube
        with:
          cache: false
          minikube-version: 1.24.0
          driver: docker
          container-runtime: containerd
          kubernetes-version: v1.22.3
          cpus: 4
          memory: 4000m
          cni: bridge
          addons: registry,ingress
          extra-config: \'kubelet.max-pods=10\'
          feature-gates: \'DownwardAPIHugePages=true\'
          mount-path: \'/Users/user1/test-files:/testdata\'
          wait: false
          insecure-registry: \'localhost:5000,10.0.0.0/24\'
          start-args: \'--delete-on-failure --subnet 192.168.50.0\'
      # now you can run kubectl to see the pods in the cluster
      - name: kubectl
        run: kubectl get pods -A

name: CI
on:
  - push
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: build discover and deploy
    steps:
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster!
        run: kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make build-image
          echo -n ""verifying images:""
          docker images
      - name: Deploy to minikube
        run: |
          kubectl apply -f deploy/deploy-minikube.yaml
      - name: Test service URLs
        run: |
          minikube service list
          minikube service discover --url
          echo -n ""------------------opening the service------------------""
          curl $(minikube service discover --url)/version
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
967,"name: Send a hello world to matrix every 5 minutes
on:
  schedule:
    - cron: \'*/5 * * * *\'
jobs:
  ping_matrix:
   runs-on: ubuntu-latest
   steps:
     - name: send message
       uses: s3krit/matrix-message-action@v0.0.3
       with:
         room_id: ${{ secrets.MATRIX_ROOM_ID }}
         access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
         message: ""Hello, world""
         server: ""matrix.org""
","[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
968,"- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    tags: latest,newest,master

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    auto_tag: true

- id: build
  uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    auto_tag: true

- id: deploy
  env:
    NEW_VERSION: ${{ steps.build.outputs.tag }}
  run: |
    docker pull $NEW_VERSION

- uses: jerray/publish-docker-action@master
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}
    registry: docker.pkg.github.com
    repository: jerray/publish-docker-action
    build_args: HTTP_PROXY=http://127.0.0.1,USER=nginx
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
969,"- name: FTP Deployer
  uses: sand4rt/ftp-deployer@v1.7
  with:
    sftp: false # optional
    host: ${{ secrets.FTP_HOST }} # e.g. ftp.host.com or sftp.host.com (without ftp:// or ftps://)
    port: 21 # optional, default is: 21
    username: ${{ secrets.FTP_USERNAME }} # FTP username
    password: ${{ secrets.FTP_PASSWORD }} # FTP password
    remote_folder: ${{ secrets.FTP_REMOTE_FOLDER }} # optional, remote path of your FTP server
    local_folder: dist # optional, local path, default is: dist
    cleanup: false # optional, remove existing files inside FTP remote folder
    include: '[]' # optional, e.g. '['dist']'
    exclude: '[]' # optional, e.g. '['node_modules/**', '.git/**', '*.env']'
    passive: true # optional
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
970,"uses: oplik0/openpgp-action@v3
with:
    text: example
    key: ${{ secrets.PUBLIC_KEY }}
    privateKey: ${{ secrets.PRIVATE_KEY }}
    passphrase: ${{ secrets.PASSPHRASE }}
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
971,"- name: Notify WeChat Work
  env:
    BOT_KEY: ${{ secrets.BOT_KEY }}
    POST_MESSAGE: 'Markdown Message'
  uses: chhpt/wechat-work-messenger@v1.0.0
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
972,"name: release
on:
  push:
    branches:
      - main

#
# Required to be able to call the REST API to create both the
# new tag and release.
#
permissions:
  contents: write

jobs:
  release:
    name: Perform a semantic release
    runs-on: ubuntu-latest
    steps:
      - name: action-release
        uses: mateothegreat/action-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: youreawesome
          repo: nuts-and-bolts
          increment: patch
          committer_name: Matthew Davis
          committer_email: matthew@matthewdavis.io

name: release
on:
  push:
    branches:
      - main

#
# Required to be able to call the REST API to create both the
# new tag and release.
#
permissions:
  contents: write

jobs:
  release:
    name: Perform a semantic release
    runs-on: ubuntu-latest
    steps:
      - name: action-release
        uses: mateothegreat/action-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: youreawesome
          repo: nuts-and-bolts
          increment: patch
          default: v0.0.0
          prefix: v
          branch: main
          release_name: MVP release \xf0\x9f\x8e\x89
          release_body: |
            This is the body of the release.
            Line 2 on and one \xf0\x9f\x91\x8f..
          release_notes: true
          committer_name: Matthew Davis
          committer_email: matthew@matthewdavis.io
      - name: Print the current and next version using outputs
        uses: actions/checkout@v2
        with:
          owner: mateothegreat
          repo: action-release
          current_version: ${{ steps.release.outputs.current_version }}
          next_version: ${{ steps.release.outputs.next_version }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
973,"npm i -g chalogen

chalogen

name: Generate Changelog

on:
  push:
    branches: [ main, master]

jobs:
  changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Update Changelog
        uses: AlexxNB/chalogen@master
        with:
          title: My project changelog 
      - name: Commit Changelog to repository
        uses: stefanzweifel/git-auto-commit-action@v4.13.0
        with:
          commit_message: 'docs(Changelog): Update Changelog'
          file_pattern: CHANGELOG.md
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
974,"
name: ""GreetContributor""
on:
  pull_request:
    types: [opened,synchronize]
    
jobs:
  GreetCommitter: 
    runs-on: ubuntu-latest
    steps:
    - name: ""Greet contributor""
      uses: ibakshay/greet-contributors-action@v3
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



name: ""GreetContributor""
on:
  pull_request:
    types: [opened,synchronize]
    
jobs:
  GreetCommitter:    
    runs-on: ubuntu-latest
    steps:
    - name: ""Greet contributor""
      uses: ibakshay/greet-contributors-action@v3
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        content: ""<Add your custom content here>""
       #default content is ""Thank you for taking your time and effort for your contribution, we truly value it. :tada:"" 
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
975,"name: Export SVG from Figma
on: [push]
jobs:
  all:
    name: Figma Export
    runs-on: ubuntu-latest
    steps:
      - uses: primer/figma-action@v1.0.0-alpha.3
        with:
          args: ""format=svg outputDir=./build/""
        env:
          FIGMA_FILE_URL: ""https://www.figma.com/file/ZFjrph2HUwFK8Q3uEtJIu1PT/yourfilename""
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}

./outputDir/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 format/
  |     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 componentName.format
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 data.json

{
  ""0:639"": {
    ""name"": ""plus"", // component name
    ""id"": ""0:639"", // component figma id
    ""key"": ""89696b0b52493acc8692546ac829bd4e334c63a2"", // component global figma id
    ""file"": ""FP7lqd1V00LUaT5zvdklkkZr"", // figma file key
    ""description"": ""keywords: add, new, more"", // figma component description
    ""width"": 12, // width of the component frame
    ""height"": 16, // height of the component frame
    ""image"": ""https://s3-us-west-2.amazonaws.com/figma-alpha-api/img/1/6d/1234"" // aws URL for the exported file
  }
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
976,"name: Yarn Lock Changes
on: [pull_request]

jobs:
  yarn_lock_changes:
    runs-on: ubuntu-latest
    # Permission overwrite is required for Dependabot PRs, see ""Common issues"" below.
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Yarn Lock Changes
        # Please use `main` as version before the stable release will be published as `v1`.
        uses: Simek/yarn-lock-changes@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Optional inputs, can be deleted safely if you are happy with default values.
          collapsibleThreshold: 25
          failOnDowngrade: false
          path: yarn.lock
          updateComment: true
          groupByType: false

jobs:
  ...:
    runs-on: ...
    #####
    permissions:
      pull-requests: write
    #####
    steps:
      ...

remote: Repository not found.
Error: fatal: repository \'https://github.com/<your_user>/<your_repo>/\' not found
Error: The process \'/usr/bin/git\' failed with exit code 128

jobs:
  ...:
    runs-on: ...
    #####
    permissions:
      contents: read
    #####
    steps:
      ...
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
977,"{
  ""appcache"": ""text/cache-manifest"",
  ""css"": ""text/css"",
  ""gif"": ""image/gif"",
  ""html"": ""text/html"",
  ""ico"": ""image/x-icon"",
  ""jpeg"": ""image/jpeg"",
  ""jpg"": ""image/jpeg"",
  ""js"": ""text/javascript"",
  ""json"": ""application/json"",
  ""png"": ""image/png"",
  ""txt"": ""text/plain"",
  ""xml"": ""text/xml""
}

steps:
  -
    name: Checkout code
    uses: actions/checkout@v4
  -
    name: Serve Files
    uses: Eun/http-server-action@v1
    with:
      directory: ${{ github.workspace }}
      port: 8080
      no-cache: false
      index-files: |
        [""index.html"", ""index.htm""]
      allowed-methods: |
        [""GET"", ""HEAD""]
      content-types: |
        {
          ""appcache"": ""text/cache-manifest"",
          ""css"": ""text/css"",
          ""gif"": ""image/gif"",
          ""html"": ""text/html"",
          ""ico"": ""image/x-icon"",
          ""jpeg"": ""image/jpeg"",
          ""jpg"": ""image/jpeg"",
          ""js"": ""text/javascript"",
          ""json"": ""application/json"",
          ""png"": ""image/png"",
          ""txt"": ""text/plain"",
          ""xml"": ""text/xml""
        }
      log: ""log.txt""
      logTime: ""false""
  -
    run: |
      curl -vvvv http://localhost:8080/index.html
      cat log.txt
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
978,"- name: Mutation Annotation Report
  uses: johanholmerin/mutation-report-action@0.2.0
  if: ${{ always() }} # Upload even if tests don\'t pass testing threshold
  with:
    repo-token: \'${{ secrets.GITHUB_TOKEN }}\'
    report-json: \'./reports/mutation/mutation.json\' # Optional, default

""reporters"": [...other reporters, ""json""]
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
979,"name: npm audit

on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
# on:
#   schedule:
#     - cron: '0 10 * * *'

jobs:
  scan:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: npm ci
      - uses: oke-py/npm-audit-action@v2
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: oke-py
          issue_labels: vulnerability,test
          dedupe_issues: true
","[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
980,"on:
  push:
    branches:
      - master
  schedule:
    # Run at 12:00 in working days
    - cron: 0 12 * * 0-5

jobs:
  build:
    name: Validate links
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Validate links
      uses: ad-m/report-link-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
981,"    - uses: korelstar/phplint-problem-matcher@v1
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
982,"name: Verify Files modify

on:
  pull_request_target:
    types: [opened, edited, reopened, synchronize, ready_for_review]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: verify-version
        uses: actions-cool/verify-files-modify@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          forbid-files: 'action.yml, LICENSE'
          forbid-paths: '.github/, dist/'
          assignees: 'xxx1, xxx2'
          comment: |
            Please don't modify this.
          close: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
983,"{
  ""baseBranches"": [
    ""chore/renovateBaseBranch""
  ],
}

# With Github Action
jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Renovate Automatic Branch
        uses: bodinsamuel/renovate-automatic-branch@v1
        with:
          github-token: YOUR_GITHUB_TOKEN
          repo-owner: YOUR_ORG
          repo-name: YOUR_REPO

# With Docker image
jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          docker run --rm -i \\
            -e RAB_GH_TOKEN=\'${{ secrets.PERSONAL_GITHUB_TOKEN }}\' \\
            -e RAB_OWNER=\'${{ github.repository_owner }}\' \\
            -e RAB_REPO=\'renovate-automatic-branch\' \\
            ghcr.io/bodinsamuel/renovate-automatic-branch:latest

# To automate
name: Renovate
on:
  schedule:
    - cron: \'0 14 * * 5\' # e.g: Every friday afternoon

docker run --rm -i \\
  -e RAB_GH_TOKEN=\'${{ secrets.PERSONAL_GITHUB_TOKEN }}\' \\
  -e RAB_OWNER=\'${{ github.repository_owner }}\' \\
  -e RAB_REPO=\'renovate-automatic-branch\' \\
  ghcr.io/bodinsamuel/renovate-automatic-branch:latest

npm install -ED renovate-automatic-branch

import { run } from \'renovate-automatic-branch/run\';

run({
  ghToken: process.env.TOKEN,
  // [...]
})
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
984,"name: ""fetch-access-token""
on:
  schedule:
    - cron:  \'0 3 2 * *\' # At 03:00 on day-of-month 2

jobs:
  fetchToken:
    runs-on: ubuntu-latest
    steps:
      - uses: cardinalby/google-api-fetch-token-action@v1
        with:
          clientId: ${{ secrets.G_API_CLIENT_ID }}
          clientSecret: ${{ secrets.G_API_CLIENT_SECRET }}
          refreshToken: ${{ secrets.G_API_REFRESH_TOKEN }}
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
985,"name: \'Amplify PR Preview\'
on:
  pull_request_target:
    types: [review_requested]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: set branchname env
      id: setenvname
      run: |
        # use GITHUB_HEAD_REF that is set to PR source branch
        echo ""##[set-output name=setbranchname;]$(echo ${GITHUB_HEAD_REF})""

    - name: deploy PR preview
      uses: yinlinchen/amplify-preview-actions@master
      with:
        branch_name: ${{ steps.setenvname.outputs.setbranchname }}
        amplify_command: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AmplifyAppId: ${{ secrets.AMPLIFYAPPID }}
        BackendEnvARN: ${{ secrets.BACKENDENVARN }}
        EnvironmentVariables: \'key1=value,key2=value\'
        AWS_REGION: \'us-east-1\'

aws amplify list-backend-environments --app-id=[app_id]

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor1"",
            ""Effect"": ""Allow"",
            ""Action"": ""amplify:StartJob"",
            ""Resource"": ""arn:aws:amplify:${Region}:${Account}:apps/{AppId}/branches/*/jobs/*""
        },
        {
            ""Sid"": ""VisualEditor2"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""amplify:DeleteBranch"",
                ""amplify:CreateBranch""
            ],
            ""Resource"": ""arn:aws:amplify:${Region}:${Account}:apps/{AppId}/branches/*""
        }
    ]
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
986,"---
title: My great article
author: octocat
---

name: PR Helper

on: [pull_request, pull_request_review, issue_comment]

jobs:
  prhelper_job:
    runs-on: ubuntu-latest
    steps:
    - name: Run PR Helper
      id: runprhelper
      uses: Matticusau/pr-helper@v1.2.4
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

name: PR Helper

on:
  pull_request:
    branches:
      - master
  pull_request_review:
    branches:
      - master
  issue_comment:
    branches:
      - master
jobs:
  ...

with:
  repo-token: ${{ secrets.GITHUB_TOKEN }}
  enable-prmerge-automation: true
  enable-prcomment-automation: true
  enable-prlabel-automation: true
  enable-prreviewer-frontmatter: false
  enable-welcomemessage: true
  welcome-message: ""Thanks for opening an issue! Make sure you\'ve followed CONTRIBUTING.md.""
  prmerge-requireallchecks: true
  prmerge-requirereviewcount: 1
  prmerge-method: \'merge\'
  prlabel-default: \'pr-onhold\'
  prlabel-ready: \'pr-ready\'
  prlabel-onhold: \'pr-onhold\'
  prlabel-reviewrequired: \'review-required\'
  prlabel-automerge: \'auto-merge\'

name: PR Merge on Schedule

on:
  schedule:
    - cron: \'* 1 * * *\'

jobs:
  prhelper_schedule:
    runs-on: ubuntu-latest
    steps:
    - name: Run PR Helper on Schedule
      id: runprhelperonschedule
      uses: Matticusau/pr-helper@v1.2.4
      with:
        repo-token: ${{ secrets.GHACTION_PAT }}
        enable-prmerge-automation: true
        enable-prcomment-automation: false
        enable-prlabel-automation: true
        enable-prreviewer-frontmatter: true
        enable-welcomemessage: false
        prmerge-requireallchecks: true
        prmerge-requirereviewcount: 1
        prmerge-method: \'merge\'
        prmerge-deletebranch: \'true\'
        prmerge-deletebranch-config: \'\'
        prmerge-pathcheck: true
        prmerge-allowpaths: \'{""any"":[""articles/**""]}\'
        prreviewer-authorkey: \'author\'
        prreviewer-githubuserfromauthorfile: true
        prreviewer-authorfilepath: \'_data/authors.yaml\'
        prlabel-default: \'pr-onhold\'
        prlabel-ready: \'pr-ready\'
        prlabel-onhold: \'pr-onhold\'
        prlabel-reviewrequired: \'review-required\'
        prlabel-automerge: \'auto-merge\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
987,"npm install heaviest-objects-in-the-universe

const { moduleSizeTree } = require('heaviest-objects-in-the-universe')

const tree = await moduleSizeTree('./', {
  // Include devDependencies of root module
  // Default: false
  withDev: true,
  // Set the root to resolve the base path from
  // Default: process.cwd()
  cwd: process.cwd(),
  // Ignore given filenames in size checks and recursion
  // Default: [ '.git', 'node_modules' ]
  ignore: [ '.git', 'node_modules' ]
})

npm install --global heaviest-objects-in-the-universe
hoitu ./path/to/my/module

uses: qard/heaviest-objects-in-the-universe@v1
with:
  # Required to provide issue comments
  github-token: ${{ secrets.GITHUB_TOKEN }}
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
988,"- uses: nashmaniac/create-issue-action@v1.2
  name: Create Issue Action
  with:
    title: Build Failed
    token: ${{secrets.GITHUB_TOKEN}}
    assignees: ${{github.actor}}
    labels: worflow-failed
    body: Workflow failed for commit ${{github.sha}}
","[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
989,"name: test-pull-request
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Run Jasmine tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      - name: Comment Test Coverage
        uses: AthleticNet/comment-test-coverage@1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Karma Test Coverage
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
990,"- uses: amancevice/setup-code-climate@v1
  with:
    cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}
- run: cc-test-reporter before-build
# ...
- run: cc-test-reporter after-build

- run: cc-test-reporter after-build
  if: ${{ github.event_name != 'pull_request' }}
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
991,"jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run ShellCheck
        uses: azohra/shell-linter@latest

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""setup.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""setup,deploy.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src/*.sh""

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          exclude-paths: ""src/setup.sh,tests/unit_tests"" 

      - name: Run ShellCheck
        uses: azohra/shell-linter@latest
        with:
          path: ""src/*.sh""
          severity: ""error""

      - name: Run ShellCheck
        uses: azohra/shell-linter@v0.6.0
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
992,"env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

uses: HighwayThree/jira-extract-issue-keys@master
with:
    is-pull-request: ${{ github.event_name == 'pull_request' }}
    parse-all-commits: ${{ github.event_name == 'push' }}
    commit-message: 'EXAMPLE-1 message'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
993,"env:
  GITHUB_RUN_ID: ${{secrets.GITHUB_RUN_ID}}
  GITHUB_RUN_NUMBER: ${{secrets.GITHUB_RUN_NUMBER}}

uses: HighwayThree/jira-upload-deployment-info@master
with:
  client-id: \'${{ secrets.CLIENT_ID }}\'
  client-secret: \'${{ secrets.CLIENT_SECRET }}\'
  cloud-instance-base-url: \'${{ secrets.CLOUD_INSTANCE_BASE_URL }}\'
  issue-keys: ""${{ steps.jira_keys.outputs.jira-keys }}""
  display-name: ""Deployment Number 1""
  description: ""Test Deployment""
  last-updated: \'${{github.event.head_commit.timestamp}}\'
  label: \'Test Deployment Label\'
  state: \'${{env.DEPLOY_STATE}}\'
  environment-id: \'Test\'
  environment-display-name: \'Test\'
  environment-type: \'testing\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
994,"steps:\r
- uses: actions/checkout@latest\r
- uses: geertvdc/setup-hub@master\r
\r
- run: hub --version\r

steps:\r
- uses: actions/checkout@v1\r
\r
- name: Install hub\r
    uses: geertvdc/setup-hub@master\r
    \r
- name: run hub commands\r
    env:\r
      GITHUB_USER: ${{ secrets.GITHUB_USER }}\r
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r
    run: |\r
         hub release\r
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
995,"on: pull_request
name: Pull Request
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Test
      uses: skx/github-action-tester@master

on:
  push:
    branches:
    - master
name: Push Event
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Test
      uses: skx/github-action-tester@master
      with:
        script: .github/fast-tests.sh
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
996,"name: Top issues action.
on:
  schedule:
    - cron: \'0 0 */1 * *\'

jobs:
  ShowAndLabelTopIssues:
    name: Display and label top issues.
    runs-on: ubuntu-latest
    steps:
      - name: Run top issues action
        uses: rickstaa/top-issues-action@v1
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        with:
          label: true
          dashboard: true
          dashboard_show_total_reactions: true
          top_issues: true
          top_bugs: true
          top_features: true
          top_pull_requests: true
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
997,"name: Create a release pull-request
on:
  push:
    branches:
      - pre-production
jobs:
  release_pull_request:
    runs-on: ubuntu-latest
    name: release_pull_request
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: create-release-pr
        uses: grassedge/git-pr-release-action@v1.0
        with:
          base: production
          head: pre-production
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: a,b,c
          assign: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
998,"on:
  push:

name: Delete Draft Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:

name: Delete Draft Releases older than 5 days

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        with:
          threshold: 5d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
999,"git clone git@github.com:SvanBoxel/delete-merged-branch.git

# Install dependencies
npm install

# Run the bot
npm start

exclude: 
  - development
  - qa
  - feature-*
delete_closed_pr: true

name: delete branch on close pr
on: 
  pull_request:
    types: [closed]
  
jobs:
  delete-branch:
    runs-on: ubuntu-latest
    steps:
      - name: delete branch
        uses: SvanBoxel/delete-merged-branch@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1000,"name: Update Status Badges
on:
  schedule:
    - cron: ""0 0 * * *""
  workflow_dispatch:

jobs:
  status_badges:
    runs-on: ubuntu-latest
    name: Update status badges
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check and update badges
        uses: lucasvanmol/status-badges@v1
        with:
          path: ""README.md""
          token: ${{ secrets.GITHUB_TOKEN }}

npm run test

npm run build

npm run lint
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1001,"      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: openapi.json
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui

$ npm run package
$ git commit -a -m ""distribution""
$ npm version major/minor/patch
$ git push
$ git tag -fa v1 -m ""Update v1 tag""
$ git push origin v1 --force
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1002,"name: PRcop

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
      - ready_for_review
      - review_requested
      - review_request_removed
  pull_request_review_comment:
    types:
      - created
      - deleted

jobs:
  prcop:
    runs-on: ubuntu-latest
    name: PRcop
    steps:
      - name: Linting Pull Request
        uses: makaroni4/prcop@v1.0.31
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          config-file: "".github/workflows/prcop-config.json""

{
  ""linters"": [
    {
      ""name"": ""titleRegexp"",
      ""config"": {
        ""regexp"": ""^CK-[0-9]+"",
        ""errorMessage"": ""PR title does not contain Jira ticket. Add CK-XXXX in the beginning of the PR title.""
      }
    },
    {
      ""name"": ""descriptionRegexp"",
      ""config"": {
        ""regexp"": ""CK-[0-9]+"",
        ""errorMessage"": ""PR description does not contain a link to a Jira ticket.""
      }
    },
    {
      ""name"": ""descriptionMinWords"",
      ""config"": {
        ""minWordsCount"": 20,
        ""errorMessage"": ""Please, write a meaningful PR description \xe2\x80\x93 it\'ll help your reviewer greatly.""
      }
    },
    {
      ""name"": ""minComments"",
      ""config"": {
        ""minCommentsCount"": 1,
        ""errorMessage"": ""Please, comment on your code. It\'s a great change to share your knowledge with your team.""
      }
    }
  ],
  ""disableWord"": ""prcop:disable""
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0)
1003,"- uses: jitterbit/await-check-suites@v1
  with:
    # The commit\'s repository name with owner.
    # For example, jitterbit/await-check-suites.
    # Default: ${{ github.repository }}
    repository: \'\'

    # The commit\'s ref (can be a SHA, branch name, or a tag name).
    # Default: ${{ github.sha }}
    ref: \'\'

    # GitHub token for GitHub API requests.
    # When `repository` is modified, set to a personal access token with access to `repository`.
    # Default: ${{ github.token }}
    token: \'\'

    # Wait for a check suite to be created if none exist.
    # This is important to protect against race conditions
    # if you know a check suite should exist on the `ref`\'s commit.
    # Default: true
    waitForACheckSuite: \'\'

    # Number of seconds to wait between checks.
    # Default: 15
    intervalSeconds: \'\'

    # Number of seconds to wait before timing out.
    timeoutSeconds: \'\'

    # Fail step if any of the check suites complete with a conclusion other than \'success\'.
    # Default: true
    failStepIfUnsuccessful: \'\'

    # Filter check suites for a particular app\'s slug (e.g., \'github-actions\').
    appSlugFilter: \'\'

    # Only take into account the first check suite ordered by the `created_at` timestamp.
    # If `appSlugFilter` is set, only the first check suite that matches the app\'s slug is taken into account.
    # This is important for scheduled workflows that only want to take into account pushed workflows.
    # Default: false
    onlyFirstCheckSuite: \'\'

- uses: jitterbit/await-check-suites@v1

- uses: jitterbit/await-check-suites@v1
  with:
    repository: jitterbit/git-ops
    ref: ${{ env.git_ops_commit_sha }}
    token: ${{ secrets.GITHUB_PAT }}

- uses: jitterbit/await-check-suites@v1
  with:
    appSlugFilter: github-actions
    onlyFirstCheckSuite: true

$ yarn
$ yarn all
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1004,"uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  names: |
    package-1
    package-2

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  version-pattern: ""^\\\\d+\\\\.\\\\d+\\\\.\\\\d+-RC\\\\d+$"" # The regex needs to be escaped!
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  semver-pattern: ""<2.x""
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  keep: 5
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  token: ${{ secrets.GH_ACCESS_TOKEN }}
  organization: my-organization
  type: npm
  names: |
    package

uses: smartsquaregmbh/delete-old-packages@v0.7.0
with:
  organization: my-organization
  type: npm
  rate-limit: true
  keep: 5
  names: |
    package
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1005,"- uses: snok/container-retention-policy@v2
  with:
    image-names: dev, web, test*
    cut-off: two hours ago UTC+2
    timestamp-to-use: updated_at
    account-type: org
    org-name: google
    keep-at-least: 1
    skip-tags: latest
    token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: ""0 0 1 * *""  # every day at midnight


jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete \'dev\' containers older than a week
        uses: snok/container-retention-policy@v2
        with:
          image-names: python-dev, js-dev
          cut-off: A week ago UTC
          account-type: org
          org-name: my-org
          keep-at-least: 1
          untagged-only: true
          token: ${{ secrets.PAT }}

      - name: Delete all test containers older than a month, using a wildcard
        uses: snok/container-retention-policy@v2
        with:
          image-names: python-test*, js-test*
          cut-off: One month ago UTC
          account-type: org
          org-name: my-org
          keep-at-least: 1
          skip-tags: latest
          token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: \'0 0 0 * *\'  # the first day of the month

jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete old images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One month ago UTC
          keep-at-least: 1
          account-type: personal
          token: ${{ secrets.PAT }}

name: Delete old container images

on:
  schedule:
    - cron: \'0 0 0 * *\'  # the first day of the month

jobs:
  clean-ghcr:
    name: Delete old unused container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete old released images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One month ago UTC
          keep-at-least: 5
          filter-tags: ""v*.*.*""
          account-type: personal
          token: ${{ secrets.PAT }}
      - name: Delete old pre-release images
        uses: snok/container-retention-policy@v2
        with:
          image-names: dev/*
          cut-off: One week ago UTC
          keep-at-least: 1
          filter-tags: ""rc*"", ""dev*""
          account-type: personal
          token: ${{ secrets.PAT }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1006,"name: Compare artifacts

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Generate the artifact for this build
      - name: Build artifact
        run: echo ""$GITHUB_RUN_NUMBER"" > test-artifact.txt

      # Download the base artifact using this action
      - uses: andrewiggins/download-base-artifact@v1
        with:
          artifact: ""test-artifact.txt""
          path: base

      # Compare the two artifacts as you wish
      - run: diff test-artifact.txt base/test-artifact.txt
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1007,"name: Update cms/master

on:
  push:
    branches:
      - master

jobs:
  update-cms-master:
    name: Merge master into release after a PR is merged
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: merge
        uses: mtanzi/action-automerge@v1
        id: merge
        with:
          github_token: ${{ github.token }}
          source: 'master'
          target: 'release'
          webhook_url: #if present add the Slack webhook

npm run-script build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1008,"on: [issues, issue_comment]
jobs:
  volunteer:
    runs-on: ubuntu-latest
    name: A job to get volunteers
    steps:
      - uses: actions/checkout@master
      - name: issuevolunteer
        id: issuevolunteer
        uses: JazibJafri/issue-volunteer@v1
        with:
          repo-token: ""${{ secrets.GITHUB_TOKEN }}""
          volunteer-message: ""I will work""
          label-name: ""volunteered""
          label-color: ""001FFF""
          label-desc: ""Someone is working""
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1009,"approvals:
  # check will fail if there is no approval
  minimum: 1     # optional, leave blank or a value greater than or equal to the Branch Protection Rules `Required no. of approvals`
  groups:        # optional
    - name: frontend # This would be the first team or group of reviewers
      minimum: 1 # optional, leaving this blank would make the review optional for this group. Uncommon, but possible
      from:
        - octocat1 # Ensure the username has no @ prefix
        - octocat2 # currently, only usernames are supported, no team names
    - name: backend
      minimum: 2
      from:
        - octocat4
        - octocat5

name: \'PR Gatekeeper\'

on:
  pull_request:
    types:
      [
        assigned,
        unassigned,
        opened,
        reopened,
        synchronize,
        review_requested,
        review_request_removed
      ]
  pull_request_review:

jobs:
  pr-gatekeeper:
    name: PR Gatekeeper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: octodemo/pr-gatekeeper@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1010,"steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Extract Terraform min/max versions
    id: minMax
    uses: clowdhaus/terraform-min-max@main
    with:
      # The project root directory (.) is used as the default
      directory: .
outputs:
  minVersion: ${{ steps.minMax.outputs.minVersion }}
  maxVersion: ${{ steps.minMax.outputs.maxVersion }}

jobs:
  versionExtract:
    name: Extract Min/Max Versions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@main
        with:
          directory: tests/0.13
    outputs:
      minVersion: ${{ steps.minMax.outputs.minVersion }}
      maxVersion: ${{ steps.minMax.outputs.maxVersion }}

  versionEvaluate:
    name: Evaluate Min/Max Versions
    runs-on: ubuntu-latest
    needs: versionExtract
    strategy:
      matrix:
        version:
          - ${{ needs.versionExtract.outputs.minVersion }}
          - ${{ needs.versionExtract.outputs.maxVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform v${{ matrix.version }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.version }}

      - name: Initialize and validate v${{ matrix.version }}
        run: |
          cd tests/0.13
          terraform init
          terraform validate

  $ yarn
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1011,"- name: ""Notarize Release Build""
  uses: adriweb/xcode-notarize-please@v1.1
  with:
    product-path: ""Export/Rings.app""
    appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
    appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1012,"make

make format
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1013,"name: Deploy via ftp
on: push
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo 
      uses: actions/checkout@v2
      
#   ... INSTALL / RESTORE / BUILD ...  

    - name: Clean ReactJS precache-manifest and logs
      uses: StephanThierry/ftp-delete-action@v2.1
      with:
        host: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        remoteFiles: ""precache-manifest.*.js;logs/*.log""
        remoteDirectories: ""/App_Data/TEMP""
        workingDir: ""/public_html""
        ignoreSSL: ""1""

#   ... THE REST OF YOUR DEPLOYMENT ...  

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1014,"workflow ""Main"" {
  on = ""push""
  resolves = [""Test""]
}

action ""Bootstrap"" {
  uses = ""MrBoolean/action-lerna@master""
  args = ""bootstrap""
}

action ""Test"" {
  uses = ""MrBoolean/action-lerna@master""
  needs = [""Bootstrap""]
  args = ""run test""
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1015,"  - uses: actions/checkout@v2
    with:
        # Fetch 10 commits or Scrutinizer will throw (""Failed to retrieve commit parents. If you use a shallow git checkout, please checkout at least a depth of one.""), see: RepositoryIntrospector at scrutinizer-ci/ocular GitHub repository
        # 10 commits is an arbitrary value that is more than 1 commit
        fetch-depth: 10
  - name: Upload Scrutinizer coverage
    uses: sudo-bot/action-scrutinizer@latest

  - uses: actions/checkout@v2
    with:
        # Fetch 10 commits or Scrutinizer will throw (""Failed to retrieve commit parents. If you use a shallow git checkout, please checkout at least a depth of one.""), see: RepositoryIntrospector at scrutinizer-ci/ocular GitHub repository
        # 10 commits is an arbitrary value that is more than 1 commit
        fetch-depth: 10
  - name: Upload Scrutinizer coverage
    uses: sudo-bot/action-scrutinizer@latest
    # Do not run this step on forked versions of the main repository (example: contributor forks)
    if: github.repository == \'sudo-bot/example-repo\'
    with:
        cli-args: ""--format=php-clover build/logs/clover.xml --revision=${{ github.event.pull_request.head.sha || github.sha }}""
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1016,"on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    name: Pull docker image
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build docker image
        uses: cytopia/shell-command-retry-action@v0.1.2
          with:
            retries: 10
            pause: 10
            command: |
              docker build -t test .
            # Builing docker sometimes fails on GH Action runner due to network issues.
            # We ensure that forwarding is reenabled and the daemon is restarted
            # Before retrying the docker build command
            fail_command: |
              sudo sysctl -w net.ipv4.ip_forward=1 \\
              && sudo systemctl restart docker \\

version: 2
updates:
  # Maintain dependencies for GitHub Actions
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1017,"{
    ""require"": {
        ""php"": "">=5.5.9""
    },
    ""require-dev"": {
        ""phpunit/phpunit"": ""^4 | ^5 | ^6""
    }
}

- name: Composer install
  uses: docker://composer:1.9.1
  with:
    args: install
- name: PHPUnit testing
  uses: docker://php:5.5
  with:
    args: php vendor/bin/phpunit

- uses: MilesChou/composer-action@master
  with:
    args: install

- uses: MilesChou/composer-action/install@master

- uses: MilesChou/composer-action/5.5/install@master
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1018,"phpcs PSR2:
  stage: linting
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  script:
    - phpcs -s -p --colors --extensions=php --standard=PSR2 .

php-compatibility 7.3:
  stage: test
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  variables:
    PHPVERSION: ""7.3""
  script:
    - >-
      phpcs -s -p --colors
      --standard=PHPCompatibility
      --extensions=php
      --runtime-set testVersion ${PHPVERSION} .
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1019,"$ composer normalize

name: ""Integrate""

on: ""push""

jobs:
  composer-normalize:
    name: ""composer-normalize""

    runs-on: ""ubuntu-latest""

    steps:
      - name: ""Checkout""
        uses: ""actions/checkout@v2""

      - name: ""Run composer normalize""
        uses: ""docker://ergebnis/composer-normalize-action:latest""

 name: ""Integrate""

 on: ""push""

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2.0.0""

       - name: ""Run composer normalize""
         uses: ""docker://ergebnis/composer-normalize-action:latest""
+        with:
+          args: ""--diff --dry-run --indent-size=2 --indent-style=space""

$ docker run --interactive --rm --tty --workdir=/app --volume ${PWD}:/app ergebnis/composer-normalize-action:latest

 name: Integrate

 on: push

 jobs:
   composer-normalize:
     name: ""composer-normalize""

     runs-on: ""ubuntu-latest""

     steps:
       - name: ""Checkout""
         uses: ""actions/checkout@v2""

       - name: ""Run composer normalize""
-        uses: ""docker://ergebnis/composer-normalize-action:latest""
+        uses: ""docker://ergebnis/composer-normalize-action:0.7.0""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1020,"name: ""CI""

on:
  pull_request:
    paths:
      - ""**.php""
      - ""phpcs.xml""
      - "".github/workflows/phpcs.yml""

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # important!

      # we may use whatever way to install phpcs, just specify the path on the next step
      # however, curl seems to be the fastest
      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: tinovyatkin/action-php-codesniffer@v1
        with:
          files: ""**.php"" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1021,"      - name: Checkout code
        uses: actions/checkout@v2

    <coverage cacheDirectory="".phpunit.cache/code-coverage"" processUncoveredFiles=""true"">
        <include>
            <directory suffix="".php"">src</directory>
        </include>
        <report>
            <clover outputFile=""clover.xml"" />
        </report>
    </coverage>

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: false

      - name: Git push to image-data branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./output
          publish_branch: image-data
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: \'github-actions[bot]\'
          user_email: \'github-actions[bot]@users.noreply.github.com\'

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: ""!contains(github.event.head_commit.message, \'[ci]\')""
","[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1022,"uses: frankdejonge/use-github-token
with:
  authentication: 'your_username:${{ secrets.YOUR_SECRET_TOKEN }}'

uses: frankdejonge/use-github-token
with:
  authentication: 'your_username:${{ secrets.YOUR_SECRET_TOKEN }}'
  name: 'Your Name'
  email: 'your-email@example.com'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1023,"- name: StandardRB Linter
  uses: andrewmcodes/standardrb-action@v1.0.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: StandardRB

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: StandardRB Linter
      uses: andrewmcodes/standardrb-action@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1024,"name: Rubocop

on: push

jobs:
  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - run: gem install rubocop --no-doc
      - run: rubocop --format progress --format json --out rubocop.json
        id: rubocop
      - uses: duderman/rubocop-annotate-action@v0.1.0
        with:
          path: rubocop.json
        if: ${{ failure() }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1025,"- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# .github/config/rubocop_linter_action.yml

versions:
  - rubocop-rails
  - rubocop-performance: ""1.5.1""
  - rubocop-minitest: ""latest""
  - rubocop-rspec: ""1.37.0""

# .github/config/rubocop_linter_action.yml

# Description: The name of the check that will be created.
# Valid Options: A reasonably sized string.
# Default: \'RuboCop Action\'
check_name: ""RuboCop Results""

# Description: Versions required to run your RuboCop checks.
# Valid options: RuboCop and any RuboCop extension, by default the latest gem version will be used. You can explicitly state that
# (not required) or use a version number, like \'1.5.1\'.
# Default:
#   versions:
#     - rubocop: \'latest\'
versions:
  - rubocop
  - rubocop-rails
  - rubocop-minitest
  - rubocop-performance: ""1.5.1""
  - rubocop-rspec: ""1.37.0""

# Description: RuboCop configuration file path relative to the workspace.
# Valid options: A valid file path inside of the workspace.
# Default: nil
# Note: This does not need to be filled out for RuboCop to still find your config.
# Resource: https://rubocop.readthedocs.io/en/stable/configuration/
rubocop_config_path: "".rubocop.yml""

# Run all cops enabled by configuration except this list.
# Valid options: list of valid cop(s) and/or departments.
# Default: nil
# Resource: https://rubocop.readthedocs.io/en/stable/cops/
rubocop_excluded_cops:
  - ""Style/FrozenStringLiteralComment""

# Minimum severity for exit with error code
# Valid options: \'refactor\', \'convention\', \'warning\', \'error\', or \'fatal\'.
# Default: \'warning\'
# Resource: https://rubocop.readthedocs.io/en/stable/configuration/#severity
rubocop_fail_level: ""warning""

# Whether or not to use --force-exclusion when building the rubocop command. Use this if you are only linting modified
# files and typically excluded files have been changed. For example, if you exclude db/schema.rb in your rubocop.yml
# but a change gets made, then with the check_scope config set to \'modified\' rubocop will lint db/schema.rb. If you set
# this to true, rubocop will ignore it.
# Valid options: true || false
# Default: false
rubocop_force_exclusion: true

# Instead of installing gems from rubygems, we can run `bundle install` on your project,
# you would need to do this if you are using something like \'rubocop-github\' or if you don\'t
# want to list out dependencies with the `versions` key.
# Valid options: true || false
# Default: false
bundle: false

# The scope of code that RuboCop should lint. Use this if you only want to lint changed files. If this is not set
# or not equal to \'modified\', RuboCop is run against the entire codebase. Note that this will not work on the master branch.
# Valid options: \'modified\'
# Default: nil
check_scope: ""modified""

# The base branch against which changes will be compared, if check_scope config is set to \'modified\'.
# This setting is not used if check_scope != \'modified\'.
# Valid options: \'origin/another_branch\'
# Default: \'origin/master\'
base_branch: ""origin/master""

# \xe2\x9d\x8c Bad, use at your own risk!
uses: andrewmcodes/rubocop-linter-action@master

# \xe2\x9c\x85 Good
uses: andrewmcodes/rubocop-linter-action@v2.0.0

action_config_path:
  description: ""Define a path to your optional action config file.""
  required: false
  default: "".github/config/rubocop_linter_action.yml""

with:
  action_config_path: "".github/actions/config/rubocop.yml""

name: Linters

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: RuboCop Linter
        uses: andrewmcodes/rubocop-linter-action@v3.3.0
        with:
          action_config_path: "".github/config/rubocop_linter_action.yml"" # Note: this is the default location
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

check_scope: ""modified""

versions:
  - rubocop: ""0.88.0""

- name: RuboCop Linter Action
  uses: andrewmcodes/rubocop-linter-action@v3.3.0
  with:
    exit_on_failure: true
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1026,"on:
  release:
    types: [created]
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Generate
      uses: skx/github-action-build@master
      with:
        builder: .github/build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1027,"name: \'workflow\'
on:
  push:
    branches:
      - main

jobs:
  test-update-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'file.yaml\'
          propertyPath: \'file.version\'
          value: v1.0.1
          commitChange: false

env:
  IMAGE_NAME: image

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build app image
        run: docker build . --tag image

      - name: Log into registry
        run: echo ""${{ secrets.GITHUB_TOKEN }}"" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push app image
        id: image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$FILES_IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo ""${{ github.ref }}"" | sed -e \'s,.*/\\(.*\\),\\1,\')
          # Strip ""v"" prefix from tag name
          [[ ""${{ github.ref }}"" == ""refs/tags/""* ]] && VERSION=$(echo $VERSION | sed -e \'s/^v//\')
          # Use Docker `latest` tag convention
          [ ""$VERSION"" == ""main"" ] && VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo ""::set-output name=version::$VERSION""

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          propertyPath: \'backend.version\'
          value: ${{ steps.image.outputs.version }}
          branch: deployment/${{ steps.image.outputs.version }}
          targetBranch: development
          createPR: true
          message: \'Update Image Version to ${{ steps.image.outputs.version }}\' 

jobs:
  test-multiple-value-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          branch: deployment/dev
          targetBranch: main
          createPR: \'true\'
          description: Test GitHub Action
          message: \'Update All Images\' 
          title: \'Version Updates \'
          changes: |
            {
              ""backend.version"": ""${{ steps.image.outputs.backend.version }}"",
              ""frontend.version"": ""${{ steps.image.outputs.frontend.version }}""
            }

jobs:
  test-multiple-file-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          branch: deployment/v1.0.1
          targetBranch: main
          createPR: \'true\'
          description: Test GitHub Action
          message: \'Update All Images\' 
          title: \'Version Updates \'
          changes: |
            {
              ""__tests__/fixtures/values.dev.yaml"": {
                ""backend.version"": ""v1.0.1""
              },
              ""__tests__/fixtures/values.stage.yaml"": {
                ""backend.version"": ""v1.0.1""
              },
              ""__tests__/fixtures/values.prod.yaml"": {
                ""backend.version"": ""v1.0.1""
              }
            }

env:
  IMAGE_NAME: image

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            path: main

      - name: Build app image
        run: docker build . --tag image
        working-directory: ./main

      - name: Log into registry
        run: echo ""${{ secrets.GITHUB_TOKEN }}"" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push app image
        id: image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$FILES_IMAGE_NAME
          ....
          echo ""::set-output name=version::$VERSION""

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: owner/target-repository
          path: infrastructure
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: \'deployment/helm/values.yaml\'
          propertyPath: \'backend.version\'
          value: ${{ steps.image.outputs.version }}
          repository: owner/target-repository
          branch: deployment/${{ steps.image.outputs.version }}
          targetBranch: development
          createPR: true
          message: \'Update Image Version to ${{ steps.image.outputs.version }}\'
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: infrastructure
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1028,"npm ci --ignore-scripts
npm rebuild && npm run all

name: Go Dependency Submission
on:
  push:
    branches:
      - main

# The API requires write permission on the repository to submit dependencies
permissions:
  contents: write

# Environment variables to configure Go and Go modules. Customize as necessary
env:
  GOPROXY: \'\' # A Go Proxy server to be used
  GOPRIVATE: \'\' # A list of modules are considered private and not requested from GOPROXY

jobs:
  go-action-detection:
    runs-on: ubuntu-latest
    steps:
      - name: \'Checkout Repository\'
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "">=1.18.0""

      - name: Run snapshot action
        uses: actions/go-dependency-submission@v1
        with:
            # Required: Define the repo path to the go.mod file used by the
            # build target
            go-mod-path: go-example/go.mod
            #
            # Optional: Define the path of a build target (a file with a
            # `main()` function) If not defined, this Action will collect all
            # dependencies used by all build targets for the module, which may
            # include Go dependencies used by tests and tooling.
            go-build-target: go-example/cmd/octocat.go
","[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1029,"permissions:
  contents: read
steps:
- uses: sajari/setup-cue@v1
  with:
    version: 0.4.0
    github-token: ${{ secrets.GITHUB_TOKEN }}
- run: cue version
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1030,"- name: Notify slack
  uses: baijunyao/action-slack-notify@v3.0.1
  if: always()
  with:
    slack_channel_id: your_channel_id
    slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
    github_context: ${{ toJson(github) }}
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1031,"# .github/workflows/go-mod-tidy-pr.yml
name: go-mod-tidy-pr

on:
  schedule:
    - cron: ""0 0 * * 1"" # Weekly build
  workflow_dispatch:

jobs:
  go-mod-tidy-pr:
    name: go-mod-tidy-pr

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run go-mod-tidy-pr
        uses: sue445/go-mod-tidy-pr@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_user_name: GitHub Actions
          git_user_email: github-actions@example.cpm
          # reviewer: foo
          # assign: foo
          # milestone: some_milestone
          # labels: go-mod-tidy
          # draft: ""true""
          # go_mod_directory: ""/dir/to/go-mod""
          # go_version: 1.14.2
          # debug: ""true""
          # duplicate: ""true""
          # timezone: Asia/Tokyo
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1032,"name: Rust
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: ${{secrets.GIT_CREDENTIALS}}
    - uses: actions/checkout@v1
    - name: Build
      run: cargo +stable build --color=always
    - name: Run tests
      run: cargo +stable test --color=always

https://$username:$token@github.com/
","[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1033,"- name: Check out code into the Go module directory
  uses: actions/checkout@v2

- name: Run Revive Action by pulling pre-built image
  uses: docker://morphy/revive-action:v2

- name: Run Revive Action by building from repository
  uses: morphy2k/revive-action@v2

  with:
    # Path to your Revive config within the repo (optional)
    config: revive/config.toml
    # Exclude patterns, separated by semicolons (optional)
    exclude: ""file.go;foo/bar.go;./foo/bar/...""
    # Path pattern (default: ./...)
    path: ""./foo/...""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1034,"# workflow name
name: Generate release-artifacts

# on events
on:
  release:
    types: 
        - created

# workflow tasks
jobs:
  generate:
    name: Generate cross-platform builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Generate build files
        uses: thatisuday/go-cross-build@v1
        with:
            platforms: 'linux/amd64, darwin/amd64, windows/amd64'
            package: 'demo'
            name: 'program'
            compress: 'true'
            dest: 'dist'

./<dest>/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-darwin-amd64
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-linux-amd64
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 ...
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 <name>-windows-amd64.exe

./<dest>/
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-darwin-amd64.tar.gz
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>-linux-amd64.tar.gz
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>
  |  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
  |  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
  \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 ...
  \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 <name>-windows-amd64.tar.gz
     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 <name>.exe
     \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 LICENSE
     \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 README.md
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1035,"name: Keeping Go up to date
on:
  schedule:
    - cron: 47 4 * * *
  push:
    branches:
      - master
jobs:
  fresh_go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: master
      - uses: jmhodges/ensure-latest-go@v1.0.2
        id: ensure_go
      - run: echo ""##[set-output name=pr_title;]update to latest Go release ${{ steps.ensure_go.outputs.go_version}}""
        id: pr_title_maker
      - name: Create pull request
        uses: peter-evans/create-pull-request@v2
        with:
          title: ${{ steps.pr_title_maker.outputs.pr_title }}
          body: Auto-generated pull request created by the GitHub Actions [create-pull-request](https://github.com/peter-evans/create-pull-request) and [ensure-latest-go](https://github.com/jmhodges/ensure-latest-go).
          commit-message: ${{ steps.pr_title_maker.outputs.pr_title }}
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ensure-latest-go/patch-${{ steps.ensure_go.outputs.go_version }}

    steps:
    - name: Check out the code
      uses: actions/checkout@v1
    - name: Read Go versions
      run: echo ""##[set-output name=go_version;]$(cat .github/versions/go)""
      id: go_versions
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ steps.go_versions.outputs.go_version }}
      id: go

","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1036,"- uses: extractions/setup-just@v1

- uses: extractions/setup-just@v1
  with:
    just-version: '1.4.0'

- uses: extractions/setup-just@v1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

- uses: extractions/setup-just@v1
  with:
    github-token: ${{ secrets.MY_GITHUB_TOKEN }}
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1037,"on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)

on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
        with:
          agents: 3
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)

on: push
jobs:
  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: rinx/setup-k3d@v0.0.2
        with:
          ingressPort: 8081
      - name: Get cluster info
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo ""current-context:"" $(kubectl config current-context)
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1038,"inputs:
  summary:
    description: \'Package summary.\'
    required: true
  package:
    description: \'Package name of debian package.\'
    required: true
  package_root:
    description: \'Directory of release files.\'
    required: true
  maintainer:
    description: \'Package maintainer name.\'
    required: true
  vendor:
    description: \'Package vendor.\'
    default: \'\'
  version:
    description: \'Package version.\'
    required: true
  arch:
    description: \'Package architecture.\'
    default: \'x86_64\'
  desc:
    description: \'Package description.\'
    default: \'\'
  license:
    description: \'Package LICENSE.\'
  post:
    description: \'Package post.\'
    default: \'\'
 

name: build

on:
  push:
    tags:
      - \'v*.*.*\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: create sample script
        run: |
          mkdir -p .rpmpkg/usr/bin
          mkdir -p .rpmpkg/usr/lib/testbin
          echo -e ""echo hello"" > .rpmpkg/usr/bin/testbin
          echo -e ""echo hello2"" > .rpmpkg/usr/bin/testbin2
          echo -e ""a=1"" > .rpmpkg/usr/lib/testbin/testbin.conf
          chmod +x .rpmpkg/usr/bin/*

      - uses: jiro4989/build-rpm-action@v2
        with:
          summary: \'testbin is a test script\'
          package: testbin
          package_root: .rpmpkg
          maintainer: jiro4989
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: \'x86_64\'
          desc: \'test package\'
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1039,"name: Release
on:
  push:
    tags:
      - v*
jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release Notary Action
        uses: docker://aevea/release-notary:0.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    tags:
      - ""v*""

- name: Check out code into the Go module directory
  uses: actions/checkout@v1

- name: Release Notary Action
  uses: aevea/release-notary@v0.2.0 (substitute for current version)
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

release:
  stage: release
  variables:
    GITLAB_TOKEN: $RELEASE_TOKEN
  image:
    name: aevea/release-notary:latest
    entrypoint: [""""]
  script:
    - release-notary publish
  only:
    - tags

- curl -L -O https://github.com/aevea/release-notary/releases/download/v0.0.2/release-notary_v0.0.2_Linux_x86_64.tar.gz
- tar -xzf release-notary_v0.0.2_Linux_x86_64.tar.gz
# Set up any required variables
- export GITHUB_TOKEN=yourtoken
- export GITHUB_REPOSITORY=owner/repo
- ./release-notary publish
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1040,"    - name: Install Azurite
      id: azuright
      uses: potatoqualitee/azuright@v1.1

on: [push]
jobs:
  test-everywhere:
    name: Test Action on all platforms
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install and cache PowerShell Modules
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Az.Storage

      - name: Install Azurite
        id: azuright
        uses: potatoqualitee/azuright@v1.1
        with:
          self-signed-cert: true

      - name: Test
        shell: pwsh
        run: |
          Import-Module Az.Storage
          $connstring = ""${{ steps.azuright.outputs.connstring }}""
          $blob = New-Object Azure.Storage.Blobs.BlobContainerClient($connstring, ""sample-container"")
          $blob.CreateIfNotExists()
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1041,"name: Example installing Terraform

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
          version: 0.13.4
    - name: Terraform apply
      run: |
        terraform init
        terraform plan
        terraform apply -auto-approve

# Basic dependabot.yml file with
# minimum configuration for two package managers

version: 2
updates:
  # Enable updates to github actions
  - package-ecosystem: ""github-actions""
    directory: ""/""
    schedule:
      interval: ""daily""

","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1042,"- name: Start SSH session
  uses: luchihoratiu/debug-via-ssh@main
  with:
    NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    SSH_PASS: ${{ secrets.SSH_PASS }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1043,"steps:
- uses: virgilio21/openldap-action@v1
  with:
    adminPassword: 'supersecret'
    domain: 'spaghetti.com'  
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1044,"- name: S3 Sync
  uses: ItsKarma/aws-cli@v1.70.0
  with:
    args: s3 sync --delete --acl public-read localdir/ s3://remote-bucket/
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ""us-east-1""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1045,"# .github/workflows/release.yml
# Start Homebrew Releaser when a new GitHub release is created
on:
  release:
    types: [published]

jobs:
  homebrew-releaser:
    runs-on: ubuntu-latest
    name: homebrew-releaser
    steps:
      - name: Release my project to my Homebrew tap
        uses: Justintime50/homebrew-releaser@v1
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          # Required - strings
          homebrew_owner: Justintime50
          homebrew_tap: homebrew-formulas

          # The name of the folder in your homebrew tap where formula will be committed to.
          # Default is shown - string
          formula_folder: formula

          # The Personal Access Token (saved as a repo secret) that has `repo` permissions for the repo running the action AND Homebrew tap you want to release to.
          # Required - string
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          # Defaults are shown - strings
          commit_owner: homebrew-releaser
          commit_email: homebrew-releaser@example.com

          # Custom dependencies in case other formulas are needed to build the current one.
          # Optional - multiline string
          depends_on: |
            ""bash"" => :build
            ""gcc""

          # Custom install command for your formula.
          # Required - string
          install: \'bin.install ""src/my-script.sh"" => ""my-script""\'

          # Custom test command for your formula so you can run `brew test`.
          # Optional - string
          test: \'assert_match(""my script output"", shell_output(""my-script-command""))\'

          # Allows you to set a custom download strategy. Note that you\'ll need
          # to implement the strategy and add it to your tap repository.
          # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
          # Optional - string
          download_strategy: CurlDownloadStrategy

          # Allows you to add a custom require_relative at the top of the formula template.
          # Optional - string
          custom_require: custom_download_strategy

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes 
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz\'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional - booleans
          target_darwin_amd64: true
          target_darwin_arm64: false
          target_linux_amd64: true
          target_linux_arm64: false

          # Update your homebrew tap\'s README with a table of all projects in the tap.
          # This is done by pulling the information from all your formula.rb files - eg:
          #
          # | Project                                    | Description  | Install                  |
          # | ------------------------------------------ | ------------ | ------------------------ |
          # | [formula_1](https://github.com/user/repo1) | helpful text | `brew install formula_1` |
          # | [formula_2](https://github.com/user/repo2) | helpful text | `brew install formula_2` |
          # | [formula_3](https://github.com/user/repo3) | helpful text | `brew install formula_3` |
          #
          # Place the following in your README or wrap your project\'s table in these comment tags:
          # <!-- project_table_start -->
          # TABLE HERE
          # <!-- project_table_end -->
          #
          # Finally, mark `update_readme_table` as `true` in your GitHub Action config and we\'ll do the work of building a custom table for you.
          # Default is `false` - boolean
          update_readme_table: true

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          # Default is shown - boolean
          skip_commit: false

          # Logs debugging info to console.
          # Default is shown - boolean
          debug: false

# Get a comprehensive list of development tools
just --list

docker compose up -d --build
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1046,"- uses: debianmaster/actions-k3s@master
  id: k3s
  with:
    version: 'latest'
- run: |
    kubectl get nodes
    kubectl get pods -A
    sleep 20
    kubectl get pods -A

name: k3s Testing
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: 'v1.21.2-k3s1'
    - run: |
        kubectl get nodes

name: Matrix Testing
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [latest,v1.21.2-k3s1,v1.20.8-k3s1,v1.19.12-k3s1]
    steps:
    - uses: debianmaster/actions-k3s@master
      id: k3s
      with:
        version: ${{ matrix.k8s_version }}
    - name: Test on k3s
      run: |
        kubectl get nodes
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1047,"- ./
  - charts/
    - myapp/
      - values.yaml
      - Chart.yaml
      - ...
  - Dockerfile
  - ...

- ./
  - myapp/
    - values.yaml
    - Chart.yaml
    - ...

name: Create and upload chart
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: unwrittenmedia/helm3-push-action@v1.0.2
      env:
        SOURCE_DIR: 'charts'
        CHART_FOLDER: 'myapp'
        CHARTMUSEUM_URL: 'https://chartmuseum.url'
        CHARTMUSEUM_USER: 'myuser'
        CHARTMUSEUM_PASSWORD: 'mypassword'

name: Create and upload chart
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: unwrittenmedia/helm3-push-action@v1.0.2
      env:
        SOURCE_DIR: 'charts'
        CHART_FOLDER: 'myapp'
        FORCE: 'True'
        CHARTMUSEUM_URL: 'https://chartmuseum.url'
        CHARTMUSEUM_USER: '${{ secrets.CHARTMUSEUM_USER }}'
        CHARTMUSEUM_PASSWORD: '${{ secrets.CHARTMUSEUM_PASSWORD }}'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1048,"name: CI
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
      - run: kotlinc myProgram.kt -include-runtime -d /tmp/hello.jar; java -jar /tmp/hello.jar
      - run: kotlin myScript.main.kts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@main
        with:
          install-native: true
      - run: kotlinc-native foo.kt
      - run: ./program.exe
        if: ${{ matrix.os == \'windows-latest\' }}
      - run: ./program.kexe
        if: ${{ matrix.os != \'windows-latest\' }}

    - uses: fwilhe2/setup-kotlin@main
      with:
        script: |
            #!/usr/bin/env kotlin
            //more kotlin script code here

      - uses: fwilhe2/setup-kotlin@main
        with:
          version: 1.8.10

      - run: |
            java.io.File(""."").listFiles().forEach {it -> println(it.getName().toString())}
        shell: kotlin -howtorun .main.kts {0}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1049,"    steps:
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.6

    steps:
      - name: Deploy devstack
        uses: EmilienM/devstack-action@v0.6
        with:
          branch: stable/xena
          conf_overrides:
            CINDER_ISCSI_HELPER=tgtadm
          enabled_services: 's-account,s-container,s-object,s-proxy'
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1050,"- uses: repolinter-action@v1
  with:
    # The directory Repolinter should run against. Accepts an absolute path
    # or a path relative to $GITHUB_WORKSPACE.
    #
    # Defaults to $GITHUB_WORKSPACE.
    directory: \'\'

    # A path to the JSON/YAML Repolinter ruleset to use, relative to the workflow
    # working directory (i.e. under `$GITHUB_WORKSPACE`).
    #
    # This option is mutually exclusive with config_url. If this option and
    # config_url are not specified, Repolinter\'s default ruleset will be used.
    config_file: \'\'

    # A URL to pull the JSON/YAML Repolinter ruleset from. This URL must be accessible
    # by the actions runner and return raw JSON file on GET.
    #
    # This option can be used to pull a ruleset from GitHub using the
    # raw.githubusercontent.com URL (ex. https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json).
    #
    # This option is mutually exclusive with config_file. If this option and
    # config_file are not specified, Repolinter\'s default ruleset will be used.
    config_url: \'\'

    # Where repolinter-action should put the linting results. There are two
    # options available:
    # * ""exit-code"": repolinter-action will print the lint output to the console
    #   and set the exit code to result.passed. This output type is most useful for
    #   PR status checks.
    # * ""issue"": repolinter-action will create a GitHub issue on the current
    #   repository with the repolinter output and always exit 0. See the README for
    #   more details on issue outputting behavior. This output type is ideal for
    #   non-intrusive notification.
    #
    # Default: ""exit-code""
    output_type: \'\'

    # The title to use for the issue created by repolinter-action. This title
    # should indicate the purpose of the issue, as well as that it was created by
    # a bot.
    #
    # This option will be ignored if output_type != ""issue"".
    #
    # Default: ""[Repolinter] Open Source Policy Issues""
    output_name: \'\'

    # The name to use for the issue label created by repolinter-action. This name
    # should be unique to repolinter-action (i.e. not used by any other issue) to
    # prevent repolinter-action from getting confused.
    #
    # This option will be ignored if output_type != ""issue"".
    #
    # Default: ""repolinter""
    label_name: \'\'

    # The color to use for the issue label created by repolinter-action. The value
    # for this option should be an unprefixed RRGGBB hex string (ex. ff568a).
    # The default value is a shade of yellow.
    #
    # This option will be ignored if output_type != ""issue"".
    #
    # Default: ""fbca04""
    label_color: \'\'

    # Personal access token (PAT) used to create an issue on this repository.
    # This token is optional and only required if this actions is configured to
    # output an issue (see `output_type`). This token must have the `public_repo`
    # scope for the current repository in order to work properly.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: \'\'

    # The username associated with the `token` field. Repolinter-action uses
    # this value to determine which issues have been created by itself. Prefix
    # this value with `app/` if `token` is generated from a GitHub app instead
    # of a normal user (see https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-by-author).
    #
    # Defaults to the username associated with the `GITHUB_TOKEN` provided by Github
    # Actions.
    #
    # Default: app/github-actions
    username: \'\'

    # The repository name and owner, formatted like so: `owner/repository`.
    # This input determines which repository repolinter-action will create
    # an issue on, if that functionality is enabled.
    #
    # It is recommended that this option is left as the default value.
    #
    # Default: ${{ github.repository }}
    repository: \'\'


name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1



name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1
        with:
          config_url: https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json


name: \'Validate master branch with Repolinter\'

on:
  push:
    branches:
      - master

jobs:
  # Because the output-type is set to \'issue\', this job will always succeed.
  repolinter-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: \'Run Repolinter\'
        uses: newrelic/repolinter-action@v1
        with:
          config_url: https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json
          output_type: issue
          # Optionally you can customize the issue and label repolinter-action will create
          output_name: \'[Bot] My Issue Title\'
          label_name: \'my-repolinter-label\'
          label_color: \'ffffff\'

name: Apply Repolinter
on:
  push:
    branches:
      - master

jobs:
  apply-repolinter:
    name: Apply Repolinter Somewhere Else
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: aperture-science-incorporated/companion-cube

      - name: Run Repolinter
        uses: newrelic/repolinter-action@develop
        with:
          output_type: issue
          repository: aperture-science-incorporated/companion-cube
          username: my-token-username
          token: ${{ secrets.MY_TOKEN }}

type:issue repo:<the current repo> creator:<username> label:<label-name> state:open sort:author-date-desc

<!-- repolinter-action-workflow-number:<GITHUB_RUN_NUMBER> -->
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1051,"name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: r7kamura/redocly-problem-matchers@v1
      - uses: mhiew/redoc-lint-github-action@v2
        with:
          args: schema.oas.yml --format stylish
        env:
          NO_COLOR: '1'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1052,"jobs:
  test_job:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: openapi-lint 
        uses: mhiew/redoc-lint-github-action@v3
        with:
          args: 'test/petstore.yml'
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1053,"name: pr

on:
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:
    branches: [ '**' ]

jobs:
  full_ci:
    strategy:
      matrix:
        go_version: [ 1.18.x ]

    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
        
      - name: run tests
        run: go test -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
          package-name: foobar # optional, if using custom package name, github.com/owner/repo stripped from the pathname by default
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1054,"- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: postman_collection.json
    environment: postman_environment.json

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: https://example.com/postman/collection.json
    environment: https://example.com/postman/environment.json

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    apiKey: ${{ secrets.postmanApiKey }}
    collection: 5922408-c22ef764-b464-424c-8702-750343478723
    environment: 5922408-228c7edd-fc15-4f68-9665-a35d7df6945b

name: Newman Run

on:
  pull_request:
    branches:
    - master

jobs:
  newman:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: matt-ball/newman-action@master
        with:
          apiKey: ${{ secrets.postmanApiKey }}
          collection: postman_collection.json
          environment: 5922408-228c7edd-fc15-4f68-9665-a35d7df6945b

- uses: actions/checkout@master
- uses: matt-ball/newman-action@master
  with:
    collection: postman_collection.json
    environment: postman_environment.json
    reporters: \'[""emojitrain""]\'
    delayRequest: 5000
    envVar: \'[{ ""key"": ""url"", ""value"": ""http://localhost:3000"" }]\'
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1055,"inputs:
  summary:
    description: \'Package summary.\'
    required: true
  package:
    description: \'Package name of debian package.\'
    required: true
  package_root:
    description: \'Directory of release files.\'
    required: true
  maintainer:
    description: \'Package maintainer name.\'
    required: true
  vendor:
    description: \'Package vendor.\'
    default: \'\'
  version:
    description: \'Package version.\'
    required: true
  arch:
    description: \'Package architecture.\'
    default: \'x86_64\'
  desc:
    description: \'Package description.\'
    default: \'\'
  license:
    description: \'Package LICENSE.\'
  post:
    description: \'Package post.\'
    default: \'\'
 

name: build

on:
  push:
    tags:
      - \'v*.*.*\'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: create sample script
        run: |
          mkdir -p .rpmpkg/usr/bin
          mkdir -p .rpmpkg/usr/lib/testbin
          echo -e ""echo hello"" > .rpmpkg/usr/bin/testbin
          echo -e ""echo hello2"" > .rpmpkg/usr/bin/testbin2
          echo -e ""a=1"" > .rpmpkg/usr/lib/testbin/testbin.conf
          chmod +x .rpmpkg/usr/bin/*

      - uses: jiro4989/build-rpm-action@v2
        with:
          summary: \'testbin is a test script\'
          package: testbin
          package_root: .rpmpkg
          maintainer: jiro4989
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: \'x86_64\'
          desc: \'test package\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1056,"on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHANNELS: ${{ secrets.TELEGRAM_CHANNELS }}
          TELEGRAM_TITLE: \'Reference: ${{ github.ref }}\'
          TELEGRAM_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          # Chose the messaging platform. 
          # slack / telegram / rocketchat / teams / pushover / discord / email / pushbullet / twillio
          service: telegram

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TITLE: \'Reference: ${{ github.ref }}\'
          PUSHOVER_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: pushover

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          PUSHBULLET_TOKEN: ${{ secrets.PUSHBULLET_TOKEN }}
          PUSHBULLET_DEVICE: ${{ secrets.PUSHBULLET_DEVICE }}
          PUSHBULLET_TITLE: \'Reference: ${{ github.ref }}\'
          PUSHBULLET_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: pushbullet

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNELS: ${{ secrets.SLACK_CHANNELS }}
          SLACK_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          SLACK_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: slack

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          ROCKETCHAT_USERID: ${{ secrets.ROCKETCHAT_USERID }}
          ROCKETCHAT_TOKEN: ${{ secrets.ROCKETCHAT_TOKEN }}
          ROCKETCHAT_SERVER_URL: ${{ secrets.ROCKETCHAT_SERVER_URL }}
          ROCKETCHAT_CHANNELS: ${{ secrets.ROCKETCHAT_CHANNELS }}
          ROCKETCHAT_TITLE: \'Reference: ${{ github.ref }}\'
          ROCKETCHAT_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: rocketchat

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_CHANNELS: ${{ secrets.DISCORD_CHANNELS }}
          DISCORD_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          DISCORD_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: discord

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
          EMAIL_HOST: \'smtp.gmail.com\'
          EMAIL_PORT: \'587\'
          EMAIL_SUBJECT: \'Reference: ${{ github.ref }}\'
          EMAIL_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: email

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TEAMS_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK }}
          TEAMS_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          TEAMS_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'   
        with:
          service: teams

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MATTERMOST_TOKEN: ${{ secrets.MATTERMOST_TOKEN }}
          MATTERMOST_SERVER_URL: ${{ secrets.MATTERMOST_SERVER_URL }}
          MATTERMOST_CHANNELS: ${{ secrets.MATTERMOST_CHANNELS }}
          MATTERMOST_TITLE: \'Reference: ${{ github.ref }}\'
          MATTERMOST_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: mattermost

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TWILLIO_TOKEN: ${{ secrets.TWILLIO_TOKEN }}
          TWILLIO_ACCOUNT_SID: ${{ secrets.TWILLIO_ACCOUNT_SID }}
          TWILLIO_SENDER: ${{ secrets.TWILLIO_SENDER }}
          TWILLIO_RECEIVER: ${{ secrets.TWILLIO_RECEIVER }}
          TWILLIO_TITLE: \'Reference: ${{ github.ref }}\'
          TWILLIO_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: twillio

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          GOTIFY_TOKEN: ${{ secrets.GOTIFY_TOKEN }}
          GOTIFY_URL: \'example.com\'
          GOTIFY_TITLE: \'Reference: ${{ github.ref }}\'
          GOTIFY_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          # Chose the messaging platform. 
          # slack / telegram / rocketchat / teams / pushover / discord / email
          service: gotify

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          LINE_SECRET: ${{ secrets.LINE_SECRET }}
          LINE_TOKEN: ${{ secrets.LINE_TOKEN }}
          LINE_RECEIVER_IDS: \'ab1235xxx8\'
          LINE_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          LINE_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: line

on:
  release:
    types: [published]
jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MATTERMOST_TOKEN: ${{ secrets.MATTERMOST_TOKEN }}
          MATTERMOST_SERVER_URL: ${{ secrets.MATTERMOST_SERVER_URL }}
          MATTERMOST_CHANNELS: ${{ secrets.MATTERMOST_CHANNELS }}
          MATTERMOST_TITLE: \'Reference: ${{ github.ref }}\'
          MATTERMOST_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: mattermost

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          MASTODON_TOKEN: ${{ secrets.MASTODON_TOKEN }}
          MASTODON_SERVER: \'mastodon.social\'
          MASTODON_TITLE: \'Reference: ${{ github.ref }}\'
          MASTODON_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: mastodon

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          TEXTMAGIC_USER: ${{ secrets.TEXTMAGIC_USER }}
          TEXTMAGIC_TOKEN: ${{ secrets.TEXTMAGIC_TOKEN }}
          TEXTMAGIC_TITLE: \'Reference: ${{ github.ref }}\'
          TEXTMAGIC_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
          TEXTMAGIC_RECEIVER:  ${{ secrets.TEXTMAGIC_RECEIVER }}
        with:
          service: textmagic

on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          WECHAT_APPID: ${{ secrets.WECHAT_APPID }}
          WECHAT_APPSECRET: ${{ secrets.WECHAT_APPSECRET }}
          WECHAT_TOKEN: ${{ secrets.WECHAT_TOKEN }}
          WECHAT_ENCODINGAESKEY: ${{ secrets.WECHAT_ENCODINGAESKEY }}
          WECHAT_RECEIVER_IDS: ${{ secrets.WECHAT_RECEIVER_IDS }}
          WECHAT_MSG_TITLE: \'Reference: ${{ github.ref }}\'
          WECHAT_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        
        with:
          service: wechat


on: [push]

jobs:
  pingme-job:
    runs-on: ubuntu-latest
    name: PingMe
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ping me On
        uses: kha7iq/pingme-action@v1
        env:
          ZULIP_DOMAIN: ${{ secrets.ZULIP_DOMAIN }}
          ZULIP_BOT_EMAIL_ADDRESS: ${{ secrets.ZULIP_BOT_EMAIL_ADDRESS }}
          ZULIP_BOT_API_KEY: ${{ secrets.ZULIP_BOT_API_KEY }}
          ZULIP_MSG_TYPE: \'stream\'
          ZULIP_STREAM_NAME: \'general\'
          ZULIP_TOPIC: \'Reference: ${{ github.ref }}\'
          ZULIP_MESSAGE: \'Event is triggered by ${{ github.event_name }}\'
        with:
          service: zulip
","[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1057,"- name: Invoke foobarFunction Lambda
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'

- name: Invoke foobarFunction Lambda
  id: foobar
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'
- name: Store response payload to file
  run: echo \'${{ fromJSON(steps.foobar.outputs.response).Payload }}\' > invocation-response.json

- name: Invoke foobarFunction Lambda
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    Payload: \'{ ""myParameter"": false }\'
    Qualifier: someAlias

...
  with:
    ...
    Qualifier: 53

- name: Invoke foobarFunction Lambda
  id: foobar
  uses: gagoar/invoke-aws-lambda@master
  with:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    FunctionName: foobarFunction
    LogType: Tail
    Payload: \'{ ""myParameter"": false }\'
- name: Store tail logs to file
  run: echo ""${{ fromJSON(steps.foobar.outputs.response).LogResult }}"" > invocation-logs.json
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1058,"name: Lint
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  tflint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      name: Checkout source code

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles(\'.tflint.hcl\') }}

    - uses: terraform-linters/setup-tflint@v3
      name: Setup TFLint
      with:
        tflint_version: v0.44.1

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact

- uses: terraform-linters/setup-tflint@v3

- uses: terraform-linters/setup-tflint@v3
  with:
    tflint_version: latest

- uses: terraform-linters/setup-tflint@v3
  with:
    github_token: ${{ secrets.MY_CUSTOM_GITHUB_TOKEN }}

- uses: terraform-linters/setup-tflint@v3
- uses: terraform-linters/tflint-load-config-action@v1
  with:
    source-repo: me/tflint-config
- run: tflint -f compact

- uses: terraform-linters/setup-tflint@v3
  with:
    tflint_wrapper: true

- id: tflint
  run: tflint -f compact

- run: echo ${{ steps.tflint.outputs.stdout }}
- run: echo ${{ steps.tflint.outputs.stderr }}
- run: echo ${{ steps.tflint.outputs.exitcode }}

npm version $inc && git push --follow-tags
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1059,"name: PHP Linting
on: pull_request
jobs:
  phplint:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v1
        - uses: michaelw90/PHP-Lint@master
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1060,"steps:
  - uses: lee-dohm/close-matching-issues@v2
    with:
      query: 'label:weekly-issue'
      token: ${{ secrets.GITHUB_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1061,"name: ""CI""

on:
  pull_request:
    paths:
      - ""**.php""
      - ""phpcs.xml""
      - "".github/workflows/phpcs.yml""

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # important!

      # we may use whatever way to install phpcs, just specify the path on the next step
      # however, curl seems to be the fastest
      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: thenabeel/action-phpcs@v8
        with:
          files: ""**.php"" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1062,"uses: skymatic/semver-validation-action@v1
with:
  version: ${{ github.event.release.tag_name }}

uses: skymatic/semver-validation-action@v1
with:
  version: 'v0.7.9'

uses: skymatic/semver-validation-action@v1
with:
  version: '0.7.9-beta.1'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1063,"name: CI
on:
  push:
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: mavenBuild
        uses: SAP/project-piper-action@master
        with:
          command: mavenBuild
      - name: mavenExecuteStaticCodeChecks
        uses: SAP/project-piper-action@master
        with:
          command: mavenExecuteStaticCodeChecks

steps:
  karmaExecuteTests:
    installCommand: npm install --quiet --no-audit
    runCommand: npm test

@sap:registry=https://npm.pkg.github.com

npm install
npm run prepare

docker build . -f DevEnv.Dockerfile -t project-piper-action
docker run -it --rm project-piper-action bash
$ node index.js

INPUT_COMMAND=version INPUT_FLAGS=\'-v\' node index.js
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1064,"name: go-apidiff
on: [ pull_request ]
jobs:
  go-apidiff:
    if: github.event_name == \'pull_request\'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - uses: joelanford/go-apidiff@main

$ go install github.com/joelanford/go-apidiff@latest

$ go-apidiff --help
go-apidiff compares API compatibility of different commits of a Go repository.

By default, it compares just the module itself and prints only incompatible
changes. However it can be configured to print compatible changes and to search
for API incompatibilities in the dependency changes of the repository.

When used with just one argument, the passed argument is used for oldCommit,
and HEAD is used for newCommit.""

Usage:
  go-apidiff <oldCommit> [newCommit] [flags]

Flags:
      --compare-imports    Compare exported API differences of the imports in the repo.
  -h, --help               help for go-apidiff
      --print-compatible   Print compatible API changes
      --repo-path string   Path to root of git repository to compare (default ""/home/myuser/myproject"")

$ GO111MODULE=off go get golang.org/x/exp
$ cd $GOPATH/src/golang.org/x/exp/apidiff
$ go-apidiff --repo-path=../ 81c71964d733d2e3e2375a315c0e2fd4d162adc4 --print-compatible

golang.org/x/exp/apidiff
  Incompatible changes:
  - Report.Compatible: removed
  - Report.Incompatible: removed
  Compatible changes:
  - Change: added
  - Report.Changes: added
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1065,"on:
  issue_comment:
    types: [created]

jobs:
  rerun_pr_tests:
    name: rerun_pr_tests
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-20.04
    steps:
    - uses: estroz/rerun-actions@main
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        comment_id: ${{ github.event.comment.id }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1066,"name: Quality control pull requests

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: 0.32.0
      - run: buf check lint

  breaking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: 0.32.0
      - run: buf check breaking --against-input "".git#ref=${{ github.base_ref }}""

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1067,"- name: Update DNSLink
  env:
    CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
    RECORD_DOMAIN: ""textile.io""
    RECORD_NAME: ""_dnslink.subdomainname""
    CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
  id: dnslink
  uses: textileio/cloudflare-update-dnslink@master
  with:
    cid: ${{ steps.push.outputs.cid }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1068,"steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          path: './packages'
          args: --no-verify
          dry-run: true

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          dry-run: ${{ github.event_name != 'push' }}

steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: katyo/publish-crates@v2
      with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1069,"- name: Download artifact
  uses: aochmann/actions-download-artifact@1.0.0
  with:
    # Optional, GitHub token
    github_token: ${{secrets.GITHUB_TOKEN}}

    # Optional, uploaded artifact name,
    # will download all artifacts if not specified
    # and extract them in respective subdirectories
    # https://github.com/actions/download-artifact#download-all-artifacts
    name: artifact_name

    # Optional, download latest artifact
    latest: true

    # Optional, directory where to extract artifact
    path: extract_here

    # Optional, defaults to current repo
    repo: ${{github.repository}}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1070,"- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    BRAKEMAN_ARGS: --force-scan

- name: Install gems
  run: |
    gem install brakeman -v 4.5.0
- name: brakeman report
  run: |
    brakeman -f json > tmp/brakeman.json
- name: Brakeman
  uses: GaboFDC/brakeman-linter-action@v1.1.0
  env:
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    REPORT_PATH: tmp/brakeman.json

name: Brakeman

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Brakeman
      uses: GaboFDC/brakeman-linter-action@v1.1.0
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1071,"    - name: Send Results and Generate Allure Report
      uses: Xotabu4/send-to-allure-server-action@1
      # always() needed because we want report for failed tests as well
      if: ${{ always() }}
      with:
        allure-server-url: 'http://my-allure-server.com:5001/'
","[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1072,"# Blog posts
<!-- BLOG-POST-LIST:START -->
<!-- BLOG-POST-LIST:END -->

name: Latest blog post workflow
on:
  schedule: # Run workflow automatically
    - cron: \'0 * * * *\' # Runs every hour, on the hour
  workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the GitHub Actions Workflow page directly
permissions:
  contents: write # To write the generated contents to the readme

jobs:
  update-readme-with-blog:
    name: Update this repo\'s README with latest blog posts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Pull in dev.to posts
        uses: gautamkrishnar/blog-post-workflow@v1
        with:
          feed_list: ""https://dev.to/feed/gautamkrishnar,https://www.gautamkrishnar.com/feed/""

# StackOverflow Activity
<!-- STACKOVERFLOW:START -->
<!-- STACKOVERFLOW:END -->

name: Latest stack overflow activity
on:
  schedule:
    # Runs every 5 minutes
    - cron: \'*/5 * * * *\'
  workflow_dispatch:
permissions:
  contents: write
  
jobs:
  update-readme-with-stack-overflow:
    name: Update this repo\'s README with latest activity from StackOverflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@v1
        with:
          comment_tag_name: ""STACKOVERFLOW""
          commit_message: ""Updated readme with the latest stackOverflow data""
          feed_list: ""https://stackoverflow.com/feeds/user/4214976""

name: Latest stack oveflow activity
on:
  workflow_dispatch:
  schedule:
    - cron:  \'0 * * * *\'
permissions:
      contents: write
jobs:
  update-readme-with-blog:
    name: Update this repo\'s README with latest activity from StackOverflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@v1
        with:
          comment_tag_name: ""STACKOVERFLOW""
          feed_list: ""https://stackoverflow.com/feeds/user/4214976""
          template: ""<tr><td>$title</td><td>$url</td></tr>""

### Latest StackOveflow activity of [@gautamkrishnar](https://github.com/gautamkrishnar)
<table>
  <tr><th>Title</th><th>Link</th></tr>
  <!-- STACKOVERFLOW:START --><!-- STACKOVERFLOW:END -->
</table>

name: Latest YouTube Videos
on:
  schedule:
    # Runs every hour, on the hour
    - cron: ""0 * * * *""
  workflow_dispatch:
permissions:
      contents: write

jobs:
  update-readme-with-youtube:
    name: Update this repo\'s README with latest videos from YouTube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/blog-post-workflow@master
        with:
          feed_list: ""https://www.youtube.com/feeds/videos.xml?channel_id=UCtvnB6R__6vdyjUEbDgAWHw""
          custom_tags: ""channelId/yt:channelId/,videoId/yt:videoId/""
          date_format: ""mmm d, yyyy""
          template: \'<table><tr><td><a href=""$url""><img width=""140px"" src=""http://img.youtube.com/vi/$videoId/maxresdefault.jpg""></a></td>$newline<td><a href=""$url"">$title</a><br/>$date</td></tr></table>$newline\'
          committer_email: ""alwinjohn231@gmail.com""

name: Latest RadioGeek (Anchor)
on:
  schedule:
    # Runs \xe2\x80\x9cAt 00:00 on Friday.\xe2\x80\x9d
    - cron: \'0 0 * * FRI\'
  workflow_dispatch:

jobs:
  update-readme-with-anchor:
    name: Update this repo\'s README with latest RadioGeek podcast feed from Anchor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gautamkrishnar/blog-post-workflow@master
        with:
          comment_tag_name: ""RadioGeek-Anchor-feed""
          feed_list: ""https://anchor.fm/s/6048890/podcast/rss""
          max_post_count: 1000
          commit_message: ""\xf0\x9f\x94\xa5Update with lastest RadioGeek feed""
          committer_username: ""\xf0\x9f\xa4\x96RadioGeek-Bot""
          committer_email: ""<>""
          date_format: \'UTC: yyyy-mm-dd\'
          template: ""$newline #### - [$title]($url) $newline <details><summary>\xd8\xaa\xd9\x88\xd8\xb6\xdb\x8c\xd8\xad\xd8\xa7\xd8\xaa</summary> $description </details> $newline <hr /> $newline""
          # Regex for remove HTML TAG:    /(<([^>]+)>)/ig
          item_exec: ""post.description = post.description.replace(\'\',\'\')""
          disable_html_encoding: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1073,"name: \'Issue States\'

on:
  project_card:
    types: [created, edited, moved]

permissions:
  repository-projects: read
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/issue-states@v3

name: \'Issue States\'

on:
  project_card:
    types: [created, edited, moved]

permissions:
  repository-projects: read
  issues: write
  pull-requests: write

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: dessant/issue-states@v3
        with:
          github-token: ${{ github.token }}
          open-issue-columns: \'\'
          closed-issue-columns: \'Closed, Done\'
          log-output: false

    steps:
      - uses: dessant/issue-states@v3
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1074,"name: \'action-test\'
on:
  pull_request:
  push:

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create a file
        run: |
          echo ""GITHUB_SHA=${GITHUB_SHA}"" >> sha.txt
      - name: Commit and push the file
        uses: maxgfr/github-commit-push-file@main
        with:
          commit_name: \'fix: add new line to sha.txt\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1075,"name: Terraform Lint

on: [push, pull_request]

jobs:
  terraform-lint:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Lint
      uses: ShubhamTatvamasi/terraform-lint-action@v1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1076,"<!--START_SECTION:waka-->
<!--END_SECTION:waka-->

name: Waka Readme

on:
  schedule:
    - cron: \'15 */12 * * *\'
  workflow_dispatch:
  
jobs:
  update-readme:
    name: Update Readme with Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: miermontoto/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

- uses: miermontoto/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SHOW_OS: ""False""
          SHOW_PROJECTS: ""False""

\xf0\x9f\x8c\x9e Morning    95 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   30.55% 
\xf0\x9f\x8c\x86 Daytime    78 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   25.08% 
\xf0\x9f\x8c\x83 Evening    112 commits    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   36.01% 
\xf0\x9f\x8c\x99 Night      26 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   8.36%


Monday       50 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.19% 
Tuesday      85 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   22.43% 
Wednesday    56 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   14.78% 
Thursday     44 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   11.61% 
Friday       28 commits     \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.39% 
Saturday     30 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.92% 
Sunday       86 commits     \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   22.69%


\xf0\x9f\x92\xac Languages:
JavaScript               5 hrs 26 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   61.97%
PHP                      1 hr 35 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.07%
Markdown                 1 hr 9 mins         \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.3%
Python                   22 mins             \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   4.32%
XML                      8 mins              \xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   1.62%

\xf0\x9f\x92\xbb Operating systems:
Windows                  8 hrs 46 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   100.0%

\xf0\x9f\x93\x9a Repositories:
ctx_connector            4 hrs 3 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   46.33%
NetSuite-Connector       1 hr 31 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   17.29%
mango-web-master         1 hr 12 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   13.77%
cable                    54 mins             \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   10.41%
denAPI                   40 mins             \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   7.66%

\xe2\x8c\x9a\xef\xb8\x8e Timezone: Asia/Calcutta

\xf0\x9f\x93\x9d Editors:
WebStorm                 6 hrs 47 mins       \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   77.43%
PhpStorm                 1 hr 35 mins        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.07%
PyCharm                  23 mins             \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   4.49%

Vue          8 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   25.0% 
Java         6 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.75% 
JavaScript   6 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   18.75% 
PHP          3 repos        \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   9.38% 
Python       2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25% 
Dart         2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25% 
CSS          2 repos        \xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91\xe2\x96\x91   6.25%

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1077,"replace:
  - before: project_name
    after: gh_fsync

files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md

files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2

replace:
  - before: project_name
    after: gh_fsync
files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2

commit_message: \xf0\x9f\x94\x84 Update file via sync

commit_message: \xf0\x9f\x94\x84 Update file via sync
replace:
  - before: project_name
    after: gh_fsync
files:
  - path: CONTRIBUTING.md
    source: https://github.com/gleich/go_template/blob/master/CONTRIBUTING.md
    replace:
      - before: project_name
        after: gh_fsync2
  - path: LICENSE.md
    source: https://github.com/gleich/go_template/blob/master/LICENSE.md
    ignore_global_replace: true
    replace:
      - before: author_name
        after: Matthew Gleich

name: gh_fsync

on:
  push:
    branches:
      - master
  schedule:
    - cron: \'*/30 * * * *\' # Runs every 30 minutes

jobs:
  file_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: gh_fsync
        uses: gleich/gh_fsync@master

name: fsync

on:
  push:
    branches:
      - master
  schedule:
    - cron: \'*/30 * * * *\' # Runs every 30 minutes

jobs:
  file_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: gh_fsync
        uses: gleich/gh_fsync@master
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1078,"jobs:
  some-job:
    steps:
      - uses: nolar/setup-k3d-k3s@v1

jobs:
  some-job:
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.21  # E.g.: v1.21, v1.21.2, v1.21.2+k3s1
          github-token: ${{ secrets.GITHUB_TOKEN }}

with:
  github-token: ${{ secrets.GITHUB_TOKEN }}

steps:
  - uses: nolar/setup-k3d-k3s@v1

steps:
  - uses: nolar/setup-k3d-k3s@v1
    with:
      version: v1.21

steps:
  - uses: nolar/setup-k3d-k3s@v1
    with:
      version: v1.21.2+k3s1

jobs:
  some-job:
    strategy:
      fail-fast: false
      matrix:
        k8s: [ v1.21, v1.20, v1.19, v1.18 ]
    name: K8s ${{ matrix.k8s }}
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: ${{ matrix.k8s }}

jobs:
  some-job:
    name: Multi-cluster
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.20
          k3d-name: 1-20
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.21
          k3d-name: 1-21
      - run: kubectl version --context k3d-1-20 
      - run: kubectl version --context k3d-1-21 

jobs:
  some-job:
    name: Custom K3d version
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          k3d-tag: v4.4.8
      - run: k3d --version

jobs:
  some-job:
    name: Custom args
    runs-on: ubuntu-22.04
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          k3d-args: --servers 2 --no-lb
      - run: kubectl get nodes  # there must be two of them
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1079,"on: [push]
jobs:
  rsync:
    runs-on: ubuntu-latest
    steps:
      # Must checkout first, otherwise it would show empty folder, see https://github.com/actions/checkout
      - uses: actions/checkout@v2
      # Modify `master` to valid version, see https://github.com/marketplace/actions/action-rsync
      - uses: up9cloud/action-rsync@master
        env:
          HOST: target.example.com
          KEY: ${{secrets.DEPLOY_SSH_KEY}}
          TARGET: /app/

kind: pipeline
type: docker
name: default

steps:
  - name: deploy
    when:
      branch:
        - master
      event: [push]
    image: sstc/action-rsync
    settings:
      # lowercase attributes, see https://readme.drone.io/plugins/overview/#plugin-inputs
      key:
        from_secret: deploy_ssh_key
      host: target.example.com
      target: /app/

docker run -it --rm \\
  -v $(pwd):/app \\
  -w /app \\
  -e HOST=""target.example.com"" \\
  -e KEY=""$(cat ~/.ssh/id_rsa)""
  -e TARGET=""/app/"" \\
  sstc/action-rsync

# Or aliases with prefix PLUGIN_, based on drone ci envs
docker run -it --rm \\
  -v $(pwd):/app \\
  -w /app \\
  -e PLUGIN_HOST=""target.example.com"" \\
  -e PLUGIN_KEY=""$(cat ~/.ssh/id_rsa)""
  -e PLUGIN_TARGET=""/app/"" \\
  sstc/action-rsync

on: [push]
jobs:
  rsync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to my \xe2\x9d\xa4\xef\xb8\x8f
      uses: up9cloud/action-rsync@master
      env:
        HOST: example.com
        KEY: ${{secrets.DEPLOY_SSH_KEY}}
        # PASSWORD: ${{secrets.DEPLOY_SSH_PASSWORD}} # it\'s less secure, using KEY instead
        TARGET: /app/hello-service/

        VERBOSE: true
        USER: ubuntu
        # PORT: 2222 # no need to set this, because of $SSH_ARGS
        ARGS: -az --exclude=/.git/
        SSH_ARGS: \'-p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\'
        SOURCE: ./public/

        PRE_SCRIPT: |
          echo start at:
          date -u
        POST_SCRIPT: ""echo done at: && date -u""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1080,"uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  url: \'https://jsonplaceholder.typicode.com/todos?id=1\'

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  url: \'https://jsonplaceholder.typicode.com/todos\'
  method: post
  data: \'{ ""title"": ""dummy-todo"", ""userId"": 1, ""completed"": false }\'

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
url: \'https://countries.trevorblades.com/\'
  graphql: |
    {
      country(code: ""CO"") {
        name
        emoji
      }
    }

uses: CamiloGarciaLaRotta/watermelon-http-client@v1
with:
  headers: \'{""Authorization"": ""bearer ${{ secrets.TOKEN }}"", ""Content-Type"": ""application/json"" }\'
  graphql: |
    mutation addRocketEmoji($reaction:AddReactionInput!) {
      addReaction(input:$reaction) {
        reaction {
          content
        }
        subject {
          id
        }
      }
    }
  variables: |
    {
      ""reaction"": {
        ""subjectId"":""${{ secrets.ISSUE_ID }}"",
        ""content"":""ROCKET""
      }
    }
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1081,"name: Publish page

on:
  push:
    # It deploys when the main branch changes only.
    branches: [main]
    # It deploys when the following files/directories are changed only.
    paths:
      - packages/pages/**
      - .github/workflows/publish-page.yml

jobs:
  publish:
    name: Publish to Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: Deploy pages
        uses: SeokminHong/pages-action@v0.5
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: {{ page_name }}
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1082,"name: Deploy mdBook
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: XAMPPRocky/deploy-mdbook@v1.1
        with:
            token: ${{ secrets.GITHUB_TOKEN }}

npm install

npm start

npm run build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1083,"name: PR Auto Label

on:
  pull_request_target:
    types: [opened, edited]

jobs:
  set-labels:
    runs-on: ubuntu-latest
    steps:
      - name: pr-auto-label
        uses: actions-cool/pr-auto-label@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enum: 'fix, feat, docs'
          format: 'pr-${type}'
          extra: 'feat/feature, docs/doc'
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1084,"name: \xf0\x9f\xa4\x96 Auto Make Release

on:
  create

jobs:
  release-helper:
    runs-on: ubuntu-latest
    steps:
      - name: make release
        if: github.event.ref_type == 'tag'
        uses: actions-cool/release-helper@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          trigger: 'tag'
          changelogs: 'CHANGELOG.en-US.md, CHANGELOG.zh-CN.md'
          branch: 'master'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1085,"jobs:
  purge-jsdelivr-cache:
    runs-on: ubuntu-20.04
    steps:
      - uses: gacts/purge-jsdelivr-cache@v1
        with:
          url: |
            https://cdn.jsdelivr.net/npm/jquery@3.2.0/dist/jquery.js
            https://cdn.jsdelivr.net/npm/jquery@3.3.0/dist/jquery.min.js
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1086,"uses: jcs090218/setup-emacs@master
with:
  version: 24.5

steps:
  - uses: actions/checkout@v3

  - uses: purcell/setup-emacs@master
    if: matrix.os == \'ubuntu-latest\' || matrix.os == \'macos-latest\'
    with:
      version: ${{ matrix.emacs-version }}

  - uses: jcs090218/setup-emacs-windows@master
    if: matrix.os == \'windows-latest\'
    with:
      version: ${{ matrix.emacs-version }}

steps:
  - uses: actions/checkout@v3

  - uses: jcs090218/setup-emacs@master
    with:
      version: ${{ matrix.emacs-version }}

 steps:
   - uses: actions/checkout@v3

-  - uses: purcell/setup-emacs@master
-    if: matrix.os == \'ubuntu-latest\' || matrix.os == \'macos-latest\'
-    with:
-      version: ${{ matrix.emacs-version }}

-  - uses: jcs090218/setup-emacs-windows@master
-    if: matrix.os == \'windows-latest\'
+  - uses: jcs090218/setup-emacs@master
     with:
       version: ${{ matrix.emacs-version }}
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1087,"name: autoupdate
on:
  # This will trigger on all pushes to all branches.
  push: {}
  # Alternatively, you can only trigger if commits are pushed to certain branches, e.g.:
  # push:
  #   branches:
  #     - master
  #     - unstable
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-22.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        env:
          GITHUB_TOKEN: \'${{ secrets.GITHUB_TOKEN }}\'

name: autoupdate
on:
  push: {}
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-22.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          DRY_RUN: ""false""
          PR_FILTER: ""labelled""
          PR_LABELS: ""autoupdate,keep up-to-date,integration""
          EXCLUDED_LABELS: ""dependencies,wontfix""
          MERGE_MSG: ""Branch was auto-updated.""
          RETRY_COUNT: ""5""
          RETRY_SLEEP: ""300""
          MERGE_CONFLICT_ACTION: ""fail""

name: autoupdate
on:
  push: {}
jobs:
  autoupdate:
    name: autoupdate
    runs-on: ubuntu-18.04
    steps:
      - uses: docker://chinthakagodawita/autoupdate-action:v1
        id: autoupdate
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          MERGE_CONFLICT_ACTION: ""ignore""

      - run: echo \'Merge conflicts found!\'
        if: ${{ steps.autoupdate.outputs.conflicted }}

      - run: echo \'No merge conflicts\'
        if: ${{ !steps.autoupdate.outputs.conflicted }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1088,"name: example

on:
  push:
    paths:
    - '**.sch'
    - '**.kicad_pcb'
  pull_request:
    paths:
      - '**.sch'
      - '**.kicad_pcb'

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: nerdyscout/kicad-exports@v2.3.1
      with:
      # Required - kibot config file
        config: any.kibot.yaml
      # optional - prefix to output defined in config
        dir: docs
      # optional - schematic file
        schema: '*.sch'
      # optional - PCB design file
        board: '*.kicad_pcb'
      # optional - verbose output info
        verbose: 0
    - name: upload results
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs

git clone --recursive https://github.com/nerdyscout/kicad-exports /some/where/kicad-exports
cd /some/where/kicad-exports
make && make install

cd /my/kicad/example-project
kicad-exports -d $DIR_OUT -e $SCHEMA -b $BOARD -c $CONFIG 

kicad-exports -c any.kibot.yaml 

kicad-exports -c myconfig.kibot.yaml -v -s all

kicad-exports -c config/*.kibot.yaml -b myproject.kicad_pcb -e myproject.sch

kicad-exports -c config/bundle/documentation.default.kibot.lst

kicad-exports -x $COMMIT_HASH -b myproject.kicad_pcb
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1089,"on:
  push:
    branches:
      - master

name: ""Trigger: Push action""
permissions: {}

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      env:
        SHELLCHECK_OPTS: -e SC2059 -e SC2034 -e SC1090

sample structure:
sample/directory/with/files/ignoreme/test.sh
sample/directory/with/files/ignoremetoo/test.sh
sample/directory/with/files/test.sh
sample/directory/with/files/ignorable.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        ignore_paths: >-
          ignoreme
          ignoremetoo
        ignore_names: ignorable.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        ignore_paths: ./sample/directory/with/files/ignorable.sh **/ignoreme/test.sh

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        severity: error

    ...
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        check_together: \'yes\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       scandir: \'./scripts\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       additional_files: \'run finish\'

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       format: tty

   ...
   - name: Run ShellCheck
     uses: ludeeus/action-shellcheck@master
     with:
       version: v0.9.0
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1090,"# File .github/workflows/sync-ssh.yml

steps:
  -
    name: Checkout
    uses: actions/checkout@v3
    with:
      # Must be specified as 0, otherwise git does not allow push because of shallow updates.
      fetch-depth: 0
  -
    name: Sync
    uses: ttionya/Repository-Sync-Hub@v1
    with:
      # Sync to target repository full clone URL.
      target_repository: 'git@github.com:ttionya/Repository-Sync-Hub-Test.git'
      # SSH key used to authenticate with git operations.
      ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

# File .github/workflows/sync-http.yml

steps:
  -
    name: Checkout
    uses: actions/checkout@v3
    with:
      # Must be specified as 0, otherwise git does not allow push because of shallow updates.
      fetch-depth: 0
      # Be sure use your own access token when you want to sync to GitHub repository,
      # only HTTP URL need this.
      token: ${{ secrets.HTTP_ACCESS_TOKEN }}
  -
    name: Sync
    uses: ttionya/Repository-Sync-Hub@v1
    with:
      # Sync to target repository full clone URL.
      target_repository: 'https://github.com/ttionya/Repository-Sync-Hub-Test.git'
      # Login name used to authenticate with git operations.
      http_access_name: 'ttionya'
      # Personal Access Token (PAT) used to authenticate with git operations.
      http_access_token: ${{ secrets.HTTP_ACCESS_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1091,"name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1092,"name: GitHub Actions Version Updater

# Controls when the action will run.
on:
  schedule:
    # Automatically run on every Sunday
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}

name: GitHub Actions Version Updater

# Controls when the action will run.
on:
  # can be used to run workflow manually
  workflow_dispatch:
  schedule:
    # Automatically run on every Sunday
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}
          committer_username: \'Test\'
          committer_email: \'test@test.com\'
          commit_message: \'Commit Message\'
          pull_request_title: \'Pull Request Title\'
          ignore: \'actions/checkout@v2, actions/cache@v2\'
          skip_pull_request: \'false\'
          update_version_with: \'release-tag\'
          release_types: ""minor, patch""
          pull_request_user_reviewers: ""octocat, hubot, other_user""
          pull_request_team_reviewers: ""justice-league, other_team""
          pull_request_labels: ""dependencies, automated""
          extra_workflow_locations: ""path/to/directory, path/to/workflow.yaml""
          # [Experimental]
          pull_request_branch: ""actions-update""

# ...
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_SECRET }}
          lfs: false

      - name: Remove LFS hooks
        # This repository uses Git LFS, but it not being
        # in the container causes the action to fail to create a new branch.
        # Removing the hooks manually is harmless and works around this issue.
        run: |
          rm .git/hooks/post-checkout
          rm .git/hooks/pre-push

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        with:
          # ...

name: GitHub Actions Version Updater

# Controls when the action will run.
on:
  # can be used to run workflow manually
  workflow_dispatch:
  schedule:
    # Automatically run on every Sunday
    - cron:  \'0 0 * * 0\'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}

      - name: Run GitHub Actions Version Updater
        uses: saadmk11/github-actions-version-updater@v0.8.1
        # Required to get the PR number
        id: gha-update
        with:
          # [Required] Access token with `workflow` scope.
          token: ${{ secrets.WORKFLOW_SECRET }}
          skip_pull_request: \'false\'
      - name: Get PR Number
        run: echo ""The PR Number is ${{ steps.gha-update.outputs.GHA_UPDATE_PR_NUMBER }}""
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1093,"- uses: jetli/trunk-action@v0.4.0
  with:
    # Optional version of trunk to install(eg. \'v0.16.0\', \'latest\')
    version: \'latest\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1094,"name: Is Organization Member Example

on:
  issues:
    types: [opened, labeled]

jobs:
  welcome:
    name: Welcome
    runs-on: ubuntu-latest
    steps:
      - name: Check if organization member
        id: is_organization_member
        if: github.event.action == \'opened\'
        uses: jamessingleton/is-organization-member@v1
        with:
          organization: testorg
          username: ${{ github.event.issue.user.login }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Comment
        if: |
          steps.is_organization_member.outputs.result == false
        run: echo User Does Not Belong to testorg
","[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1095,"name: ""Dive CI""

on: [push]

jobs:
  dive:
    runs-on: ubuntu-latest
    name: Analyze image efficiency
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build image
        run: docker build -t sample:latest .
      - name: Dive
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: ""sample:latest""
          config-file: ${{ github.workspace }}/.dive-ci.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

rules:
  # If the efficiency is measured below X%, mark as failed.
  # Expressed as a ratio between 0-1.
  lowestEfficiency: 0.95

  # If the amount of wasted space is at least X or larger than X, mark as failed.
  # Expressed in B, KB, MB, and GB.
  highestWastedBytes: 20MB

  # If the amount of wasted space makes up for X% or more of the image, mark as failed.
  # Note: the base image layer is NOT included in the total image size.
  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.
  highestUserWastedPercent: 0.20

Unable to find image \'wagoodman/dive:v0.9\' locally
v0.9: Pulling from wagoodman/dive
89d9c30c1d48: Pulling fs layer
5ac8ae86f99b: Pulling fs layer
f10575f61141: Pulling fs layer
89d9c30c1d48: Verifying Checksum
89d9c30c1d48: Download complete
f10575f61141: Verifying Checksum
f10575f61141: Download complete
5ac8ae86f99b: Verifying Checksum
5ac8ae86f99b: Download complete
89d9c30c1d48: Pull complete
5ac8ae86f99b: Pull complete
f10575f61141: Pull complete
Digest: sha256:2d3be9e9362ecdcb04bf3afdd402a785b877e3bcca3d2fc6e10a83d99ce0955f
Status: Downloaded newer image for wagoodman/dive:v0.9
  Using CI config: /.dive-ci
Image Source: docker://sample:latest
Fetching image... (this can take a while for large images)
Analyzing image...
  efficiency: 98.8091 %
  wastedBytes: 11697960 bytes (12 MB)
  userWastedPercent: 1.6116 %
Inefficient Files:
Count  Wasted Space  File Path
    6        4.9 MB  /var/cache/debconf/templates.dat
    4        3.2 MB  /var/cache/debconf/templates.dat-old
    6        1.2 MB  /var/lib/dpkg/status
    6        1.2 MB  /var/lib/dpkg/status-old
    5        400 kB  /var/log/dpkg.log
    5        211 kB  /var/log/apt/term.log
    6        107 kB  /etc/ld.so.cache
    6         83 kB  /var/cache/debconf/config.dat
    6         71 kB  /var/lib/apt/extended_states
    6         67 kB  /var/log/apt/eipp.log.xz
    5         54 kB  /var/cache/ldconfig/aux-cache
    4         40 kB  /var/cache/debconf/config.dat-old
    5         39 kB  /var/log/apt/history.log
    4         26 kB  /var/log/alternatives.log
    2        9.1 kB  /etc/mailcap
    2         903 B  /etc/group
    2         892 B  /etc/group-
    2         756 B  /etc/gshadow
    2         727 B  /var/lib/dpkg/triggers/File
    2           0 B  /usr/src
    6           0 B  /var/lib/dpkg/lock-frontend
    6           0 B  /var/lib/dpkg/lock
    5           0 B  /var/lib/apt/lists
    3           0 B  /var/lib/dpkg/triggers/Unincorp
    6           0 B  /var/lib/dpkg/updates
    5           0 B  /var/cache/apt/archives/lock
    6           0 B  /var/cache/debconf/passwords.dat
    5           0 B  /var/cache/apt/archives/partial
    2           0 B  /etc/.pwd.lock
    6           0 B  /tmp
    6           0 B  /var/lib/dpkg/triggers/Lock
Results:
  PASS: highestUserWastedPercent
  PASS: highestWastedBytes
  FAIL: lowestEfficiency: image efficiency is too low (efficiency=0.988091457351898 < threshold=0.99)
Result:FAIL [Total:3] [Passed:2] [Failed:1] [Warn:0] [Skipped:0]

##[error]Process completed with exit code 1.
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1096,"- name: Upload to oss
  id: upload_to_oss
  uses: tvrcgo/upload-to-oss@master
  with:
    key-id: ${{ secrets.OSS_KEY_ID }}
    key-secret: ${{ secrets.OSS_KEY_SECRET }}
    region: oss-cn-shenzhen
    bucket: tvrcgo
    assets: |
      a/**:/remote-a/
      b/**:/remote-b/
      c.txt:/rc.txt
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1097,"    steps:

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@< version >

      - run: mvn -V ...

    - uses: actions/cache
      with:
        path: |
          ${{ inputs.cache-path }}
          ${{ inputs.cache-path-add }}
        key: ${{ inputs.cache-prefix }}${{ runner.os }}-jdk${{ inputs.java-version }}-${{ inputs.java-distribution }}-maven${{ inputs.maven-version }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ inputs.cache-prefix }}${{ runner.os }}-jdk${{ inputs.java-version }}-${{ inputs.java-distribution }}-maven${{ inputs.maven-version }}-


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        maven: [ '3.8.8', '3.9.4' ]

    name: Maven ${{ matrix.maven }} sample

    steps:

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@< version >
        with:
          java-version: 8
          maven-version: ${{ matrix.maven }}

      - run: mvn -V ...
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1098,"steps:
- uses: actions/checkout@v2
- uses: innovationnorway/setup-vault@v1
  with:
    version: \'~1.4\'
- run: vault version
","[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1099,"- uses: anishathalye/proof-html@v2
  with:
    directory: ./site

tokens: |
  {""https://github.com"": ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"",
   ""https://twitter.com"": ""yyyyyyyyyyyyyyyyyyyyyyy""}

swap_urls: |
  {""^https://example.com/"": ""/""}

swap_urls: |
  {""^(https://github.com/.*)#.*$"": ""\\\\1""}

name: CI
on:
  push:
  schedule:
    - cron: \'0 8 * * 6\'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles(\'**/Gemfile.lock\') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - run: bundle exec jekyll build
      - uses: anishathalye/proof-html@v2
        with:
          directory: ./_site
          enforce_https: false
          tokens: |
            {""https://github.com"": ""${{ secrets.GITHUB_TOKEN }}""}
          ignore_url: |
            http://www.example.com/
            https://en.wikipedia.org/wiki/Main_Page
          ignore_url_re: |
            ^https://twitter.com/
          swap_urls: |
            {""^https://www.anishathalye.com/"": ""/""}

docker run --rm \\
    -e INPUT_DIRECTORY=build \\
    -v ""${PWD}/build:/build"" \\
    proof-html:latest
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1100,"
name: Test

on: [push]

jobs:
  testsolaris:
    runs-on: macos-latest
    name: Test a cf tunnel
    steps:
    - uses: actions/checkout@v2
    - name: Run establish a cf tunnel
      id: test
      uses: vmactions/cf-tunnel@v0.0.1
      with:
        protocol: tcp
        port: 22



","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1101,"
name: Test

on: [push]

jobs:
  testsolaris:
    runs-on: macos-latest
    name: Test a ngrok tunnel
    env:
      NGROK_TOKEN : ${{ secrets.NGROK_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Run establish a ngrok tunnel
      id: test
      uses: vmactions/ngrok-tunnel@v0.0.1
      with:
        protocol: tcp
        port: 22



","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1102,"uses: Deep-Symmetry/github-version-action@v1
with:
  var-name: \'project_version\'
  tag-var-name: \'version_tag\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1103,"on:
  # The issues event below is only needed for the default (auto) mode,
  # you can remove it otherwise
  issues:
    types: [ assigned ]
  # The issue_comment event below is only needed for the ChatOps mode,
  # you can remove it otherwise
  issue_comment:
    types: [ created ]
  pull_request:
    types: [ closed ]

jobs:
  create_issue_branch_job:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue Branch
        uses: robvanderleek/create-issue-branch@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

mode: chatops

silent: true

branchName: tiny

branchName: short

branchName: \'${issue.number}-${issue.title}\'

branchName: \'${issue.number}-${%SOME_VAR}-${issue.title}\'

branchName: \'${issue.number}-${issue.title[0,64]}\'

branchName: \'${issue.number}-${issue.title,}\'

branchName: \'${issue.number}-${issue.title^}\'

branchName: \'issue-${issue.number%4}\'

gitSafeReplacementChar: \'-\'

gitReplaceChars: \'ab/\'

autoCloseIssue: true

defaultBranch: \'dev\'

branches:
  - label: enhancement
    name: dev
  - label: bug
    name: staging

branches:
  - label:
      - enhancement
      - docs
    name: docs
  - label: enhancement
    name: dev

branches:
  - label: enhancement
    prefix: feature/
  - label: bug
    prefix: bugfix/

branches:
  - label: enhancement
    prefix: feature/${issue.user.login}/

branches:
  - label: question
    skip: true

branches:
  - label: enhancement
    prefix: feature/
  - label: bug
    prefix: bugfix/
  - label: \'*\'
    prefix: issues/

branches:
  - label: bug
    skip: false
  - label: \'*\'
    skip: true

openDraftPR: true

openPR: true

branches:
  - label: bug
    name: development
    prTarget: hotfix

openPR: true
branches:
  - label: release
    name: develop
    prTarget: release
    skipBranch: true

copyIssueDescriptionToPR: true
copyIssueLabelsToPR: true
copyIssueAssigneeToPR: true
copyIssueProjectsToPR: true
copyIssueMilestoneToPR: true

prSkipCI: true

conventionalPrTitles: true

conventionalStyle: semver

conventionalLabels:
  fix:
    bug: \':bug:\'
    dependencies: \':arrow_up:\'
    performance: \':zap:\'
    documentation: \':memo:\'
    security: \':lock:\'
  feature:
    enhancement: \':sparkles:\'
  breaking:
    breaking-change: \':boom:\'
    breaking change: \':boom:\'

conventionalLabels:
  fix:
    bug: \':ambulance:\'

conventionalLabels:
  feature:
    new-stuff: \':rocket:\'

Branch ${branchName} created!

commentMessage: \'Branch ${branchName} created for issue: ${issue.title}\'

experimental:
  branchNameArgument: true

""coverage""
:
""jest --collect-coverage""

 - run: yarn run coverage
 - run: bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_SECRET_TOKEN }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1104,"- name: Discord Commits
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: \'avatar-with-link\'
          include-extras: true

{
    embed: false,
}

{
  embed: {
    title: ""{{ commit.title }}"",
    description: ""{{ commit.description }}"",
    author: {
      name: ""{{ commit.author.name }}""
    }
  }
}

{
  embed: {
    title: ""{{ commit.title }}"",
    description: ""{{ commit.description }}"",
    url: ""{{ commit.url }}""
  }
}

embed: {
  title: ""{{ commit.title }}"",
  description: ""{{ commit.description }}"",
  url: ""{{ commit.url }}"",
  author: {
    name: ""{{ commit.author.name }}""
  }
}

embed: {
  title: ""{{ commit.title }}"",
  description: ""{{ commit.description }}"",
  url: ""{{ commit.url }}"",
  author: {
    name: ""{{ commit.author.name }}"",
    icon_url: ""https://github.com/{{ commit.author.username }}.png""
  }
}

act -W tests/workflows -e tests/push.json
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1105,"- uses: stefanbuck/github-issue-parser@v3
  id: issue-parser
  with:
    template-path: .github/ISSUE_TEMPLATE/bug-report.yml # optional but recommended

- run: cat ${HOME}/issue-parser-result.json

- run: echo $FAVORITE_DISH
  env:
    FAVORITE_DISH: ${{ steps.issue-parser.outputs.issueparser_favorite_dish }}

body:
  - type: input
    id: favorite_dish
    attributes:
      label: What\'s your favorite dish?
    validations:
      required: true

  - type: checkboxes
    id: favorite_color
    attributes:
      label:  What\'s your preferred color?
      options:
        - label: Red
        - label: Green
        - label: Blue

### What\'s your favorite dish?

Pizza

### What\'s your preferred color?

- [x] Red
- [ ] Green
- [x] Blue

{
  ""favorite_dish"": ""Pizza"",
  ""favorite_color"": [""Red"", ""Blue""]
}

- run: echo $JSON_STRING > output.json
  env:
    JSON_STRING: ${{ steps.issue-parser.outputs.jsonString }}

- run: echo $FAV_DISH
  env:
    FAV_DISH: ${{ steps.issue-parser.outputs.issueparser_favorite_dish }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1106,"# ...

- type: dropdown
  id: severity
  attributes:
    label: Severity impact
    description: Please choose the severity of the impact of this issue.
    multiple: false
    options:
      - \'None\'
      - \'Low\'
      - \'Medium\'
      - \'High\'
      - \'Urgent\'
      - \'Other\'
  validations:
    required: true

# ...

name: Issue labeler
on:
  issues:
    types: [ opened ]

permissions:
  contents: read

jobs:
  label-component:
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      issues: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Parse issue form
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/bug.yml

      - name: Set labels based on severity field
        uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
        with:
          issue-form: ${{ steps.issue-parser.outputs.jsonString }}
          section: severity
          block-list: |
            None
            Other
          token: ${{ secrets.GITHUB_TOKEN }}

# ...

- type: dropdown
  id: animals
  attributes:
    label: Animals
    description: Please pick all animals you like.
    multiple: true
    options:
      - \'None\'
      - \'\xf0\x9f\xa6\x8d Gorilla\'
      - \'\xf0\x9f\x90\xb6 Dog\'
      - \'\xf0\x9f\x90\xba Wolf\'
      - \'\xf0\x9f\xa6\x8a Fox\'
      - \'\xf0\x9f\x90\xb4 Horse\'
      - \'\xf0\x9f\x90\x93 Rooster\'
      - \'\xf0\x9f\x90\xa6 Bird\'
      - \'\xf0\x9f\x90\xa7 Penguin\'
      - \'\xf0\x9f\x90\xb8 Frog\'
      - \'\xf0\x9f\x90\xac Dolphin\'
      - \'\xf0\x9f\x90\xa1 Blowfish\'
      - \'\xf0\x9f\x90\x9f Fish\'
      - \'\xf0\x9f\xa6\x88 Shark\'
      - \'\xf0\x9f\x90\x9b Bug\'
      - \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\'
      - \'\xf0\x9f\x90\x8a Crocodile\'
      - \'other\'
  validations:
    required: true

# ...

policy:
  - section:
      - id: [animals]
        block-list: [\'None\', \'Other\']
        label:
          - name: \'kind: amphibians\'
            keys: [\'\xf0\x9f\x90\xb8 Frog\']
          - name: \'kind: birds\'
            keys: [\'\xf0\x9f\x90\x93 Rooster\', \'\xf0\x9f\x90\xa6 Bird\', \'\xf0\x9f\x90\xa7 Penguin\']
          - name: \'kind: fish\'
            keys: [\'\xf0\x9f\x90\xa1 Blowfish\', \'\xf0\x9f\x90\x9f Fish\', \'\xf0\x9f\xa6\x88 Shark\']
          - name: \'kind: mammals\'
            keys: [\'\xf0\x9f\xa6\x8d Gorilla\', \'\xf0\x9f\x90\xb6 Dog\', \'\xf0\x9f\x90\xac Dolphin\', \'\xf0\x9f\x90\xba Wolf\', \'\xf0\x9f\xa6\x8a Fox\', \'\xf0\x9f\x90\xb4 Horse\']
          - name: \'kind: reptiles\'
            keys: [\'\xf0\x9f\x90\x8a Crocodile\']
          - name: \'invertebrates\'
            keys: [\'\xf0\x9f\x90\x9b Bug\', \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\'] 

name: Issue labeler
on:
  issues:
    types: [ opened ]

permissions:
  contents: read

jobs:
  label-component:
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      issues: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Parse issue form
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/bug.yml

      - name: Set labels based on animals field
        uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
        with:
          issue-form: ${{ steps.issue-parser.outputs.jsonString }}
          token: ${{ secrets.GITHUB_TOKEN }}

# ...

- uses: redhat-plumbers-in-action/advanced-issue-labeler@v2
  with:
    issue-form: <issue-form.json>
    template:   <template-name.yml>
    section:    <section-id>
    block-list: <block-list>
    token:      <GitHub token>

# ...

policy:
  - template: [\'bug.yml\', \'feature.yml\']
    section:
      - id: [\'severity\', \'priority\']
        block-list: []
        label:
          - name: \'Low\'
            keys: [\'Low\', \'None\']
          - name: \'Medium\'
            keys: [\'Medium\']
          - name: \'High\'
            keys: [\'High\']
          - name: \'Urgent\'
            keys: [\'Urgent\']
      - id: [animals]
        block-list: [\'None\', \'Other\']
        label:
          - name: \'amphibians\'
            keys: [\'\xf0\x9f\x90\xb8 Frog\']
          - name: \'birds\'
            keys: [\'\xf0\x9f\x90\x93 Rooster\', \'\xf0\x9f\x90\xa6 Bird\', \'\xf0\x9f\x90\xa7 Penguin\']
          - name: \'fish\'
            keys: [\'\xf0\x9f\x90\xa1 Blowfish\', \'\xf0\x9f\x90\x9f Fish\', \'\xf0\x9f\xa6\x88 Shark\']
          - name: \'mammals\'
            keys: [\'\xf0\x9f\xa6\x8d Gorilla\', \'\xf0\x9f\x90\xb6 Dog\', \'\xf0\x9f\x90\xac Dolphin\', \'\xf0\x9f\x90\xba Wolf\', \'\xf0\x9f\xa6\x8a Fox\', \'\xf0\x9f\x90\xb4 Horse\']
          - name: \'reptiles\'
            keys: [\'\xf0\x9f\x90\x8a Crocodile\']
          - name: \'invertebrates\'
            keys: [\'\xf0\x9f\x90\x9b Bug\', \'\xf0\x9f\x95\xb7\xef\xb8\x8f Spider\']
# - template: ...
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1107,"on: issue_comment
name: Issue Comments
permissions:
  issues: write
jobs:
  check_comments:
    name: Check comments for /test
    runs-on: ubuntu-latest
    steps:
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          command: test
          reaction: ""true""
          reaction-type: ""eyes""
          allow-edits: ""false""
          permission-level: admin
      - name: Act on the command
        run: echo ""The command was \'${{ steps.command.outputs.command-name }}\' with arguments \'${{ steps.command.outputs.command-arguments }}\'""
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1108,"name: Rebase Pull Requests
on:
  push:
    branches: '**'
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: linhbn123/rebase-pull-requests@v1.0.1

name: Rebase Pull Requests
on:
  push:
    branches: [main]
jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: linhbn123/rebase-pull-requests@v1.0.1
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1109,"steps:
  - uses: artis3n/setup-conftest@v0

steps:
  - uses: artis3n/setup-conftest@v0
    with:
      conftest_version: 0.21.0

steps:
  - uses: artis3n/setup-conftest@v0
    with:
      conftest_wrapper: false

steps:
  - uses: artis3n/setup-conftest@v0

  - id: verify
    run: conftest verify ./

  - run: echo ${{ steps.verify.outputs.stdout }}
  - run: echo ${{ steps.verify.outputs.stderr }}
  - run: echo ${{ steps.verify.outputs.exitcode }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1110,"name: Pull Request Workflow Cancel Example
on: [pull_request]

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-workflow-cancel@1.0.0
        with:
          workflows: ""example.yml | second.yml""
        env:
          GITHUB_TOKEN: \'${{ secrets.GITHUB_TOKEN }}\'
      # Now do whatever other stuff
      - uses: actions/checkout@v2
      - run: echo \'Running now\'
      - run: sleep 30
      - run: echo \'wasnt cancelled\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1111,"steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    version: '2021-05-28'
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
- run: yosys --version

steps:
- uses: actions/checkout@v3
- uses: YosysHQ/setup-oss-cad-suite@v2
  with:
    python-override: true
- run: yosys --version

name: CI
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: YosysHQ/setup-oss-cad-suite@v2
      - run: yosys --version
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1112,"- name: breaking-change \xf0\x9f\x92\xa5
  color: \'#D93F0B\'
  description:
    A change that changes the API or breaks backward compatibility for
    users.
  aliases: [breaking]

- name: bug \xf0\x9f\x90\x9e
  color: d73a4a
  description:
    Inconsistencies or issues which will cause a problem for users or implementors.

- name: documentation \xf0\x9f\x93\x9d
  color: 0075ca
  description: Solely about the documentation of the project.

[
  // Support comments
  {
    // My label
    ""name"": ""breaking-change \xf0\x9f\x92\xa5"",
    ""color"": ""#D93F0B"",
    ""description"":
      ""A change that changes the API or breaks backward compatibility for users."",
    ""aliases"": [
      ""breaking""
    ]
  },
  {
    ""name"": ""bug \xf0\x9f\x90\x9e"",
    ""color"": ""d73a4a"",
    ""description"":
      ""Inconsistencies or issues which will cause a problem for users or implementors.""
  },
  {
    ""name"": ""documentation \xf0\x9f\x93\x9d"",
    ""color"": ""0075ca"",
    ""description"": ""Solely about the documentation of the project.""
  }
]

name: \xe2\x99\xbb\xef\xb8\x8f Sync Labels

on:
  workflow_dispatch:

jobs:
  labels:
    name: \xe2\x99\xbb\xef\xb8\x8f Sync labels
    runs-on: ubuntu-20.04
    steps:
      - name: \xe2\xa4\xb5\xef\xb8\x8f Check out code from GitHub
        uses: actions/checkout@v3

      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

          # Optional:
          repositories: |
            owner/repository-1
            owner/repository-2

          # Optional:
          config-file: |
            .github/labels-1.yml
            .github/labels-2.yml
            https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

          # Optional:
          # Clean other labels not defined in the config file(s)
          clean-labels: false

...
    steps:
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          config-file: https://raw.githubusercontent.com/srealmoreno/label-sync-action/main/.github/labels/labels.yml

...
      - name: \xf0\x9f\x9a\x80 Run Label Sync
        uses: srealmoreno/label-sync-action@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          auto-discover-repos: true

          # Optional:
          exclude-repos: repo-1
          # You can specify a array of the repositories to be excluded
          exclude-repos: |
            repository-1
            repository-2
          # You can specify regex to exclude repositories
          exclude-repos: /^repository-1$/u

          # Optional:
          account-type: org | user

          # Optional:
          owner: owner

          # Optional:
          exclude-forked-repos: true

          # Optional:
          exclude-archived-repos: true

          # Optional:
          exclude-private-repos: true

          # Optional:
          exclude-disabled-repos: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1113,"# @format

on:
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, edited, closed, reopened, synchronize]
  project_card:
    types: [created, moved, deleted]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

[
\t{
\t\t""root"": ""."",
\t\t""versioning"": {
\t\t\t""source"": ""milestones"",
\t\t\t""type"": ""SemVer""
\t\t},
\t\t""prereleaseName"": ""alpha"",
\t\t""sharedConfig"": {
\t\t\t""labels"": {
\t\t\t\t""bug"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^bug(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/(created|new|opened|made)( an| a)? bug/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""chore"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^chore(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""optimisation"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^opt(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^optimisation(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Revert|Deprecated|Removal)*optimisation/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""style"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^style(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Refactoring|Optimisation|Revert|Deprecated|Removal)*style/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""refactor"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^ref(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^refactor(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Optimisation|Revert|Deprecated|Removal)*refactoring/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""revert"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^revert(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Deprecated|Removal)*revert/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""deprecated"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^dep(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^deprecated(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Revert|Removal)*deprecated/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""removal"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^removal(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maint(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^maintenance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^type:(,| |Style|Refactoring|Optimisation|Revert|Deprecated)*removal/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""discussion"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^discussion(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""documentation"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^docs(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^documentation(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""feature"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^feat(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^enhance(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^feature(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^enhancement(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fix"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^fix(\\\\(.*\\\\))?(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""workflow"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\(workflow\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""releaseMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?release-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?release-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""labelMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?label-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?label-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""variableMastermind"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?variable-mastermind.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\((@videndum\\\\/)?variable-mastermind\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""installer"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- package\\\\(s\\\\):.*(@videndum\\\\/)?action-masterminds.*/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^.*\\\\(installer\\\\)(!)?:/i""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityCritical"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""!:.*(critical|urgent)?|!?:.*(critical|urgent)""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""pr"": {
\t\t\t""labels"": {
\t\t\t\t""xs"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 0,
\t\t\t\t\t\t\t""max"": 10
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""s"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 10,
\t\t\t\t\t\t\t""max"": 30
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""m"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 40,
\t\t\t\t\t\t\t""max"": 100
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""l"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 100,
\t\t\t\t\t\t\t""max"": 500
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""xl"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 500,
\t\t\t\t\t\t\t""max"": 1000
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""xxl"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""changesSize"",
\t\t\t\t\t\t\t""min"": 1000
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fixConfirmed"": {
\t\t\t\t\t""requires"": 6,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a stable build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsReviewing"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""pendingReview"",
\t\t\t\t\t\t\t""value"": true
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsRejected"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""requestedChanges"",
\t\t\t\t\t\t\t""value"": true
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""issue"": {
\t\t\t""ref"": ""develop"",
\t\t\t""labels"": {
\t\t\t\t""android"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*android/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""aws"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*aws/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*amazon web service/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""google"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*google/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""ios"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*ios/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""ubuntu"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*ubuntu/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fedora"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*fedora/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""debian"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*debian/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""macos"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*macos/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""windows"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- platform:.*windows/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""bugConfirmed"": {
\t\t\t\t\t""requires"": 8,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] bug Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on my application version/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have reproduced on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have contacted support/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have asked the community/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""fixConfirmed"": {
\t\t\t\t\t""requires"": 6,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] fix Confirmed by ((@.*& .*){4,}|(@.*& )*@(tgtgamer|videndum\\\\/.*))/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a clean installation/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a stable build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have fixed on a development build/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have included logs or screenshots/im""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""descriptionMatches"",
\t\t\t\t\t\t\t""pattern"": ""/^- \\\\[x\\\\] have linked any related/im""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t},
\t\t""project"": {
\t\t\t""ref"": ""develop"",
\t\t\t""labels"": {
\t\t\t\t""available"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Requested""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""pending"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Accepted""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""progress"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""In Progress""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Testing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""review"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Reviewing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""completed"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Completed""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""doNotDevelop"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Rejected""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsAccepted"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Accepted""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsDeveloping"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""In Progress""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsTesting"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Testing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsReviewing"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Reviewing""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsStaging"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Staging""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsCompleted"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Completed""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""devOpsRejected"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Developer Operations"",
\t\t\t\t\t\t\t""column"": ""Rejected""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityLow"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""Low Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityMedium"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""Medium Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityHigh"": {
\t\t\t\t\t""requires"": 1,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""High Priority""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t},
\t\t\t\t""priorityCritical"": {
\t\t\t\t\t""requires"": 2,
\t\t\t\t\t""conditions"": [
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""onColumn"",
\t\t\t\t\t\t\t""project"": ""Issues"",
\t\t\t\t\t\t\t""column"": ""High Priority""
\t\t\t\t\t\t},
\t\t\t\t\t\t{
\t\t\t\t\t\t\t""type"": ""titleMatches"",
\t\t\t\t\t\t\t""pattern"": ""!:.*(critical|urgent)?|!?:.*(critical|urgent)""
\t\t\t\t\t\t}
\t\t\t\t\t]
\t\t\t\t}
\t\t\t}
\t\t}
\t}
]

/** @format */

import {
\tCondition,
\tIssueCondition,
\tPRCondition,
\tProjectCondition,
\tScheduleCondition
} from ""../src/conditions""
import { Repo } from ""../src/utils""

/**
 * Application interfaces
 */

export interface Options {
\tconfigPath: string
\tconfigJSON: Runners
\tshowLogs: boolean
\tdryRun: boolean
\tfillEmpty: boolean
\tskipDelete: boolean
\trepo?: Repo
}

export interface Runners {
\tlabels?: Labels
\trunners: Config[]
}

export interface Config {
\troot: string
\tversioning: {
\t\tsource: VersionSource
\t\ttype?: VersionType
\t}
\tretryLimit?: number
\tprereleaseName?: string
\tlabels?: { [key: string]: string }
\tsharedConfig?: SharedConfig
\tpr?: PullRequestConfig
\tissue?: IssueConfig
\tproject?: ProjectConfig
\tschedule?: ScheduleConfig
}

/**
 * Config types
 */

export type VersionSource = ""node"" | ""milestones"" | string
export type VersionType = ""SemVer""

export interface SharedConditions {
\trequires: number
\tconditions: Condition[]
}

export interface Label {
\tname: string
\tdescription: string
\tcolor: string
}

export interface Labels {
\t[key: string]: Label
}

export interface PRConditionConfig {
\trequires: number
\tconditions: PRCondition[]
}

export interface IssueConditionConfig {
\trequires: number
\tconditions: IssueCondition[]
}

export interface ProjectConditionConfig {
\trequires: number
\tconditions: ProjectCondition[]
}

export interface ScheduleConditionConfig {
\trequires: number
\tconditions: ScheduleCondition[]
}

export interface PullRequestConfig extends SharedConfig {
\tassignProject?: AssignProject[]
\tautomaticApprove?: AutomaticApprove
\tmanageRelease?: Release
\tduplicateHotfix?: { [title: string]: DuplicateHotfix }
\tsyncRemote?: SyncRemote[]
}

export interface IssueConfig extends SharedConfig {
\tassignProject?: AssignProject[]
\tcreateBranch?: { [label: string]: CreateBranch }
}

export interface ProjectConfig extends SharedConfig {
\tsyncRemote?: ExProjects[]
\topenBranch?: ProjectCreateBranch
\tassignMilestone?: { [milestone: string]: Milestones }
}

export interface ScheduleConfig extends SharedConfig {}

export type SharedConfigIndex =
\t| ""ref""
\t| ""enforceConventions""
\t| ""labels""
\t| ""stale""

export interface SharedConfig {
\tref?: string
\tenforceConventions?: EnforceConventions
\tstale?: Stale
\tlabels?: {
\t\t[key: string]:
\t\t\t| IssueConditionConfig
\t\t\t| ProjectConditionConfig
\t\t\t| PRConditionConfig
\t\t\t| ScheduleConditionConfig
\t\t\t| SharedConditions
\t}
}

export interface SharedConventionConditions {
\trequires: number
\tconditions: Condition[] | string
}
export interface SharedConventionsConfig extends SharedConventionConditions {
\tfailedComment: string
\tcontexts?: string[]
}

export interface CreateBranch {
\tbranchPrefix?: string
\tbranchSuffix?: string
\tbranchName: ""title"" | ""short"" | ""number""
}

export interface EnforceConventions {
\tonColumn?: Column[]
\tcommentHeader?: string
\tcommentFooter?: string
\tmoveToColumn?: string
\tconventions: SharedConventionsConfig[]
}

export interface Stale {
\tstaleLabel: string
\tstale?: StaleConfig
\tabandoned?: AbanondedConfig
\tconditions?: SharedConditions[]
}

export interface StaleConfig extends SharedConditions {
\tdays: number
\tcomment?: string
\tresolve?: string
\tcommentHeader?: string
\tcommentFooter?: string
}

export interface AbanondedConfig extends StaleConfig {
\tclose?: boolean
\tlock?: boolean
\tlabel: string
}

export interface AutomaticApprove {
\tcommentHeader?: string
\tcommentFooter?: string
\tconventions: SharedConventionsConfig[]
}

export interface Release extends PRConditionConfig {
\tlabels?: {
\t\tbuild: string
\t\tprerelease: string
\t\tpatch: string
\t\tminor: string
\t\tmajor: string
\t\tbreaking?: string
\t}
\tcreateTag?: boolean
\tcreateRelease?: CreateRelease
\tcreateMilestone?: CreateMilestone
\tcreatePackages?: string[] | string
\tcreateChangelog?: Changelog
}

export interface DuplicateHotfix {
\tprName: ""unchanged"" | ""number"" | string
\ttitlePrefix?: string
\tbranches: string[]
}
export interface SyncRemote {
\tlocalBranch: string
\tremoteBranch: string
\tlocalPath: string
\tremotePath: string
\tconditions: SharedConditions[]
}

export interface ReleaseChanges {
\tincludeIssues?: boolean
\tsections?: Sections[]
}

export interface Sections {
\ttitle: string
\tbody?: string
\tPRlabels: string[]
\tissueLabels?: string[]
\tincludeCommitter?: boolean
\tlinkPR?: boolean
}

export interface CreateRelease extends ReleaseChanges {
\ttagName?: string
\ttagPrefix?: string
\treleaseName?: string
\treleaseNamePrefix?: string
\treleaseNameSuffix?: string
\tdraft?: boolean
\tprerelease?: boolean
\tuseChangelog?: boolean
}
export interface Changelog extends ReleaseChanges {
\ttitle?: string
\tbody?: string
}

export interface CreateMilestone {
\tmilestone: ""version"" | string
\tdeadline?: string
}

export type Column = string | number

interface AssignProject extends IssueConditionConfig {
\towner?: string
\tuser?: string
\trepo?: string
\tproject: string
\tcolumn: string
}

interface ExProjects {
\tlocalProject: string
\towner?: string
\tuser?: string
\trepo?: string
\tproject: string
}
interface ProjectCreateBranch extends CreateBranch {
\tonProject?: string
\tonColumn?: string
}

interface Milestones {
\tonColumn: string
\tignoreLabels?: string[]
}

{
\t""type"": ""$and"",
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""creatorMatches"",
\t""pattern"": ""^foo""
}

{
\t""type"": ""descriptionMatches"",
\t""pattern"": ""foo.*bar""
}

{
\t""type"": ""hasLabel"",
\t""label"": ""Type - Bug"",
\t""value"": ""false""
}

{
\t""type"": ""isAbandoned"",
\t""stale"": 30
}

{
\t""type"": ""isLocked"",
\t""value"": true
}

{
\t""type"": ""isOpen"",
\t""value"": true
}

{
\t""type"": ""isStale"",
\t""stale"": 30
}

{
\t""type"": ""$only"",
\t""requires"": 1,
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""$or"",
\t""pattern"": [
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t},
\t\t{
\t\t\t""requires"": 1,
\t\t\t""conditions"": []
\t\t}
\t]
}

{
\t""type"": ""branchMatches"",
\t""pattern"": ""^bugfix\\\\/""
}

{
\t""type"": ""changesSize"",
\t""min"": 0,
\t""max"": 100
}

{
\t""type"": ""filesMatch"",
\t""glob"": ""src/foo/**/*""
}

{
\t""type"": ""isApproved"",
\t""value"": true,
\t""required"": 1
}

{
\t""type"": ""isDraft"",
\t""value"": true
}

{
\t""type"": ""pendingReview"",
\t""value"": true
}

{
\t""type"": ""requestedChanges"",
\t""value"": true
}

{
\t""type"": ""onColumn"",
\t""project"": ""Isuues"",
\t""column"": ""New""
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1114,"uses: VeryGoodOpenSource/very_good_coverage@v2
with:
  path: \'/coverage/lcov.info\'
  min_coverage: 95
  exclude: \'**/*_observer.dart **/change.dart\'

uses: VeryGoodOpenSource/very_good_coverage@v2
with:
  path: \'my_project/coverage/lcov.info\'

- name: Check for existing and non-empty coverage file
  id: test_coverage_file
  run: if [ -s ""/coverage/lcov.info"" ]; then echo ""result=true"" >> $GITHUB_OUTPUT ; else echo ""result=false"" >> $GITHUB_OUTPUT; fi
- name: Very Good Coverage
  if: steps.test_coverage_file.outputs.result == \'true\'
  uses: VeryGoodOpenSource/very_good_coverage@v2
  with:
    path: \'/coverage/lcov.info\'

jobs:
  build:
    defaults:
      run:
        working-directory: my_project/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Very Good Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: /my_project/coverage/lcov.info
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1115,"on:\r
  pull_request:\r
    # You can add specific pull request types too.\r
    # If this is omitted, the workflow will only executed on opened, synchronize, and reopened\r
    # which is enough for generic use cases.\r
    # Below is the list of supported pull request sub-events\r
    # types: [opened, reopened, ready_for_review, unlocked, synchronize]\r
\r
jobs:\r
  cpr:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Validates the pull request\r
        uses: Namchee/conventional-pr@v(version)\r
        with:\r
          access_token: YOUR_GITHUB_ACCESS_TOKEN_HERE\r

on:\r
  pull_request_target:\r
\r
jobs:\r
  cpr:\r
    runs-on: ubuntu-latest\r
    steps:\r
      - name: Validates the pull request\r
        uses: Namchee/conventional-pr@v(version)\r
        with:\r
          access_token: YOUR_GITHUB_ACCESS_TOKEN_HERE\r
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1116,"    - name: Send feishu message
      env:
        ACTIONS_FEISHU_TAG: \'v1.3.1\' # \xe6\x9b\xbf\xe6\x8d\xa2\xe6\xad\xa4\xe5\x8f\x98\xe9\x87\x8f, \xe6\x9c\x80\xe6\x96\xb0\xe8\xa7\x81 https://github.com/xiachufang/actions-feishu/releases
        INPUT_WEBHOOK: ""${{ secrets.FEISHU_ROBOT_WEBHOOK_URL }}""
        INPUT_MESSAGE_TYPE: ""post""
        INPUT_TITLE: ""I\'m title""
        INPUT_CONTENT: ""I\'m message body\
from: ${{ github.repository }}""
      run: |
        wget -q https://github.com/xiachufang/actions-feishu/releases/download/${{ env.ACTIONS_FEISHU_TAG }}/linux-amd64-actions-feishu.tar.gz
        tar zxf linux-amd64-actions-feishu.tar.gz feishu
        ./feishu
","[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1117,"name: Rust Example

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: icepuma/rust-action@master
        with:
          args: cd integration-test && cargo fmt -- --check && cargo clippy -- -Dwarnings && cargo test
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1118,"    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
    - uses: actions/checkout@v1
    - name: Run tests
      run: cargo make ci-flow

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
      with:
        version: \'0.23.0\'
    - uses: actions/checkout@v1
    - name: Run tests
      run: cargo make ci-flow
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1119,"steps:
- uses: ok-nick/setup-aftman@v0.3.0

steps:
- uses: ok-nick/setup-aftman@v0.3.0
  with:
    version: v1.0.0 # name of git tag in aftman (uses latest by default)
    path: some_directory/my_project # path to project directory containing `aftman.toml`
    token: ${{ github.token }} # GitHub token to bypass rate limit (passed by default)
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1120,"name: Sanity check
on: [pull_request]

jobs:
  commits_check_job:
    runs-on: ubuntu-latest
    name: Commits Check
    steps:
    - name: Get PR Commits
      id: 'get-pr-commits'
      uses: tim-actions/get-pr-commits@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Commit Body Check
      uses: tim-actions/commit-body-check@master
      with:
        commits: ${{ steps.get-pr-commits.outputs.commits }

","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1121,"- name: Mattermost Notification
  uses: tferreira/matterfy@releases/v1
  if: always()
  with:
    type: ${{ job.status }}
    job_name: \'*Lint Check*\'
    channel: \'random\'
    url: ${{ secrets.SLACK_WEBHOOK }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1122,"- uses: jetli/wasm-bindgen-action@v0.2.0
  with:
    # Optional version of wasm-bindgen to install(eg. \'0.2.83\', \'latest\')
    version: \'latest\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1123,"name: Non-Contributor Issue Closer
on:
  issues:
    types: [opened]
permissions:
  contents: write
  issues: write
jobs:
  autoclose:
    runs-on: ubuntu-latest
    steps:
      - name: Close Issue
        uses: jam1garner/contributors-only@v3
        with:
          comment: Auto-closing issue, user is not a contributor
","[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1124,"format:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - run: echo ""date=$(date -d \'1 month ago\' +\'%Y-%m-%d\')"" >> $GITHUB_ENV
        - uses: dtolnay/rust-toolchain@master
          with:
              toolchain: nightly-${{ env.date }}
              components: rustfmt
        - uses: LoliGothick/rustfmt-check@master
          with:
              token: ${{ secrets.GITHUB_TOKEN }}
              toolchain: nightly-${{ env.date }}
              flags: --all
              options: --manifest-path=Cargo.toml
              args: --config-path=path/to/rustfmt.toml
              working-directory: my_crate
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1125,"- uses: hasura/comment-progress@v2.3.0
  with:
    # The GitHub token to be used when creating/updating comments
    # ${{ secrets.GITHUB_TOKEN }} is provided by default by GitHub actions
    github-token: ${{ secrets.GITHUB_TOKEN }}

    # The repository to which the pull request or issue belongs to
    # ${{ github.repository }} gives the slug of the repository on which the action is running
    repository: ""my-org/my-repo""

    # The pull request or issue number on which the comment should be made
    number: ${{ github.event.number }}

    # The commit sha on which the comment should be made
    commit-sha: ${{ github.sha }}

    # Friendly identifier denoting the context of the comment
    # This id is hidden on the comment made and used for referring the same comment afterwards.
    id: deploy-progress

    # Markdown message to be used for commenting
    message: ""Thank you for opening this PR :pray:""

    # Comments on the PR/issue and fails the job
    fail: true

    # Appends the message to a comment that already exits with the given id.
    # If a comment with the given id is not found, a new comment is created
    append: true

    # Deletes all the existing comments matching the given id and
    # creates a new comment with the given message
    recreate: true

    # Deletes all the existing comments matching the given id
    delete: true

on:
  pull_request:
    types: [opened]

jobs:
  thank-user:
    runs-on: ubuntu-20.04
    name: Say thanks for the PR
    steps:
      - name: comment on the pull request
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: thank-you-comment
          message: ""Thank you for opening this PR :pray:""

on:
  push:
    branches:
      - main

jobs:
  commit-comment:
    runs-on: ubuntu-20.04
    name: Comment on commit with some info
    steps:
      - name: Comment on commit
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          commit-sha: ${{ github.sha }}
          id: commit-comment
          message: ""This is a commit comment :D.""

on:
  pull_request:
    types: [opened]

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    name: Deploy preview
    steps:
      - name: Notify about starting this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ""Starting deployment of this pull request.""

      - name: Deploy preview
        run: |
          echo ""deploy preview""
          # long running step

      - name: Notify about the result of this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ""Deployment of a preview for this pull request was successful.""
          append: true

on:
  workflow_dispatch:
    inputs:
      number:
        description: ""pull request number""
        required: true

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    name: Deploy preview
    steps:
      - name: Notify about starting this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.inputs.number }}
          id: deploy-preview
          message: ""Starting deployment of this pull request.""

      - name: Deploy preview
        run: |
          echo ""deploy preview""
          # long running step

      - name: Notify about the result of this deployment
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.inputs.number }}
          id: deploy-preview
          message: ""Deployment of a preview for this pull request was successful.""
          recreate: true

on:
  pull_request:
    types: [closed]

jobs:
  cleanup-automated-comments:
    runs-on: ubuntu-20.04
    name: Delete automated PR comments
    steps:
      - name: delete comment that contains a preview link
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ""my-org/my-repo""
          number: ${{ github.event.number }}
          id: preview-url

npm install
npm run build

git add .
git commit -m ""generates dist for updated code""
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1126,"name: panvimdoc
on: [push]
jobs:
  docs:
    runs-on: ubuntu-latest
    name: pandoc to vimdoc
    steps:
      - uses: actions/checkout@v2
      - uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${VIMDOC_PROJECT_NAME}
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ""Auto generate docs""
          branch: ${{ github.head_ref }}

touch doc/${VIMDOC_PROJECT_NAME}.txt
git commit -am ""Add empty doc""
git push

name: panvimdoc

on: [push]

jobs:
  docs:
    runs-on: ubuntu-latest
    name: pandoc to vimdoc
    steps:
      - uses: actions/checkout@v2
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${VIMDOC_PROJECT_NAME} # Output vimdoc project name (required)
          # The following are all optional
          pandoc: ""README.md"" # Input pandoc file
          version: ""NVIM v0.8.0"" # Vim version number
          toc: true # Table of contents
          description: """" # Project Description
          demojify: false # Strip emojis from the vimdoc
          dedupsubheadings: true # Add heading to subheading anchor links to ensure that subheadings are unique
          treesitter: true # Use treesitter for highlighting codeblocks
          ignorerawblocks: true # Ignore raw html blocks in markdown when converting to vimdoc
          docmapping: false # Use h4 headers as mapping docs
          docmappingprojectname: true # Use project name in tag when writing mapping docs
          shiftheadinglevelby: 0 # Shift heading levels by specified number
          incrementheadinglevelby: 0 # Increment heading levels by specified number

- name: panvimdoc
  uses: kdheepak/panvimdoc@main
  with:
    vimdoc: panvimdoc

- name: panvimdoc
  uses: kdheepak/panvimdoc@vX.X.X

name: docs

on:
  push:
    branches: main

permissions:
  contents: write

jobs:
  publish-gh-page:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: pandoc markdown to html
        uses: docker://pandoc/latex:3.1
        with:
          args: >-
            --katex
            --from markdown+tex_math_single_backslash
            --to html5+smart
            --template=""./scripts/template.html5""
            --css=""/panvimdoc/css/theme.css""
            --css=""/panvimdoc/css/skylighting-solarized-theme.css""
            --toc
            --wrap=none
            --metadata title=""panvimdoc""
            doc/panvimdoc.md
            --lua-filter=scripts/include-files.lua
            --lua-filter=scripts/skip-blocks.lua
            -t html
            -o public/index.html
      - name: deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public

$ ./panvimdoc.sh
Usage: ./panvimdoc.sh --project-name PROJECT_NAME --input-file INPUT_FILE --vim-version VIM_VERSION --toc TOC --description DESCRIPTION --dedup-subheadings DEDUP_SUBHEADINGS --treesitter TREESITTER

Arguments:
  --project-name: the name of the project
  --input-file: the input markdown file
  --vim-version: the version of Vim that the project is compatible with
  --toc: \'true\' if the output should include a table of contents, \'false\' otherwise
  --description: a description of the project
  --dedup-subheadings: \'true\' if duplicate subheadings should be removed, \'false\' otherwise
  --demojify: \'false\' if emojis should not be removed, \'true\' otherwise
  --treesitter: \'true\' if the project uses Tree-sitter syntax highlighting, \'false\' otherwise
  --ignore-rawblocks: \'true\' if the project should ignore HTML raw blocks, \'false\' otherwise
  --doc-mapping: \'true\' if the project should use h4 headers as mapping docs, \'false\' otherwise
  --doc-mapping-project-name: \'true\' if tags generated for mapping docs contain project name, \'false\' otherwise
  --shift-heading-level-by: 0 if you don\'t want to shift heading levels , n otherwise
  --increment-heading-level-by: 0 if don\'t want to increment the starting heading number, n otherwise
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1127,"name: Create Tag

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: Klemensas/action-autotag@stable
      with:
        GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

- uses: actions/checkout@v2
- uses: Klemensas/action-autotag@stable

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    package_root: ""/path/to/subdirectory""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_prefix: ""v""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_suffix: "" (beta)""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    tag_message: ""Custom message goes here.""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    changelog_structure: ""**{{messageHeadline}}** {{author}}\
""

- uses: Klemensas/action-autotag@stable
  with:
    GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
    version: ""${{ steps.previous_step.outputs.version }}""
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1128,"name: ""...""
on: ...

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    
    - name: Bump crate version
      uses: thomaseizinger/set-crate-version@master
      with:
        version: 1.0.0
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1129,"uses: RojerGS/python-black-check@master

uses: RojerGS/python-black-check@master
with:
  line-length: '81'
  path: '.'
  include: 'apps'
  exclude: '(/*.html|/*.mo|/*.po|/*.png|/*.rst)'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1130,"name: \'Verify Semantic Changelog Update\'
on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
    branches:
      - master

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      # Please look up the latest version from
      # https://github.com/GetStream/verify-semantic-changelog-update/releases
      - uses: GetStream/verify-semantic-changelog-update@X.X.X
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          # Configure which types should be verified.
          # Default: fix, feat, *! (Any breaking change type)
          types: |
            fix
            feat
          # Configure which scopes are allowed along with their path.
          # Default: Only checks for the top-level changelog entry
          scopes: |
            {
              ""ui"": ""packages/ui"",
              ""core"": ""packages/core""
            }
          # Configure the changelog file path/name.
          # Default: changelog.md
          path: |
            changelog.md
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1131,"uses: warchant/setup-mold@v1
with:
  version: 1.1.0
  make_default: true
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1132,"steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
  - run: tectonic main.tex

steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      tectonic-version: 0.12.0
  - run: tectonic main.tex

steps:
  - uses: wtfjoke/setup-tectonic@v2
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      biber-version: 2.16
  - run: biber --version

name: 'Build LaTex Document'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tectonic
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

name: 'Build LaTex Document'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Tectonic Cache
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tectonic
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

name: 'Build LaTex Document with Biber'
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Tectonic Cache
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-
      - uses: wtfjoke/setup-tectonic@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          biber-version: 'latest'
      - name: Run Tectonic + Biber
        run: tectonic main.tex
      - name: Upload pdf
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: main.pdf

run: |
  tectonic --keep-intermediates --reruns 0 main.tex
  biber main
  tectonic main.tex
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1133,"action ""build"" {
  env = {
      BUILD_TARGET = ""x86_64-unknown-linux-musl""
  }
  uses = ""juankaram/rust-musl-action@master""
  args = ""cargo build --target $BUILD_TARGET --release""
}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1134,"- name: Setup headless display
  uses: pyvista/setup-headless-display-action@v1

name: Tests that require virtual display

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - ""*""
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1

    - uses: pyvista/setup-headless-display-action@v1
      with:
        qt: true

name: Workflow that uses PyVista for plotting

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - ""*""
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install PyVista
        run: pip install pyvista

      - name: Use PyVista
        run: python -c ""import pyvista;pyvista.Sphere().plot(screenshot=\'${{ matrix.os }}-sphere.png\')""

      - uses: actions/upload-artifact@v2
        with:
          name: sphere
          path: ${{ matrix.os }}-sphere.png
","[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1135,"uses: gymshark/slack-notifier-action@v1.0.2
with:
  webhook_url: 'https://hooks.slack.com/services/ABC123/def456'

yarn build
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1136,"- name: Setup Wasmer
  uses: wasmerio/setup-wasmer@v1

- name: Publish to WAPM
  uses: wasmerio/wapm-publish@v1
  with:
    username: ${{ secrets.WAPM_USERNAME }}
    password: ${{ secrets.WAPM_PASSWORD }}
    # OR with a token that you can generate from https://wapm.io/settings/access-tokens
    token: ${{ secrets.WAPM_TOKEN }}

npm i
WAPM_USERNAME=x WAPM_PASSWORD=y WAPM_TOKEN=z npm test
","[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]",1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1137,"name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}
        if: failure()

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          user: ${{ secrets.MATRIX_USER }}
          password: ${{ secrets.MATRIX_PASSWORD }}
          status: ${{ job.status }}
          message: Integration tests failed
        if: failure()

name: verify
on: push
jobs:
  verify:
    runs-on: ubuntu-20.04
    steps:
      - uses: Numericas/matrix-action@v1
        with:
          server: ${{ secrets.MATRIX_SERVER }}
          room-id: ${{ secrets.MATRIX_ROOM_ID }}
          access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          status: ${{ job.status }}
          message: Integration tests failed
        if: failure()
","[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
1138,"uses: web3-storage/add-to-web3@v2
id: web3
with:
  web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
  path_to_add: \'dist\'

# ""bafkreicysg23kiwv34eg2d7qweipxwosdo2py4ldv42nbauguluen5v6am""
- run: echo ${{ steps.web3.outputs.cid }}

# ""https://dweb.link/ipfs/bafkreicysg23kiwv34eg2d7qweipxwosdo2py4ldv42nbauguluen5v6am""
- run: echo ${{ steps.web3.outputs.url }}
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(0),0,tensor(0)
1139,"name: Check Mirror Files
on: push
jobs:
  check-mirror-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: tianhaoz95/mirror-action@v1.0.1
        with:
          original: \'README.md\'
          mirror: \'docs/README.md\'
","[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),1,tensor(1),1,tensor(1),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0),0,tensor(0)
